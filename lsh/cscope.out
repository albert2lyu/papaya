cscope 15 $HOME/lab/yanqi/lsh -q 0000004054 0000605204
	@file.c

1 
	~"fûe.h
"

2 
	~<sys/°©.h
>

3 
	~<°dio.h
>

4 
	~<as£π.h
>

5 
	~<î∫o.h
>

6 
	~<°rög.h
>

7 
	$fdsize
(
fd
){

8 
pos
 = 
	`l£ek
(
fd
, 0, 
SEEK_CUR
);

9 
size
 = 
	`l£ek
(
fd
, 0, 
SEEK_END
);

10 
	`l£ek
(
fd
, 
pos
, 
SEEK_SET
);

11  
size
;

12 
	}
}

14 
	$fûesize
(*
«me
){

15 
fd
 = 
	`›í
(
«me
, 1+1, 0);

16 if(
fd
 == -1)  -1;

17 
size
 = 
	`fdsize
(
fd
);

18 
	`˛o£
(
fd
);

19  
size
;

20 
	}
}

22 *
	$gë_dúfûe
(*
dú
, *
fûíame
, *
fuŒ∑th
){

24 
	`°r˝y
(
fuŒ∑th
, 
dú
);

25 if(
dú
[
	`°æí
(dir) - 1] != '/'){

26 
fuŒ∑th
[
	`°æí
(
dú
)] = '/';

27 
fuŒ∑th
[
	`°æí
(
dú
) + 1] = 0;

29 
	`°rˇt
(
fuŒ∑th
, 
fûíame
);

30  
fuŒ∑th
;

31 
	}
}

	@file.h

1 #i‚de‡
FILE_H


2 
	#FILE_H


	)

4 
	#boﬁ
 

	)

5 
	#åue
 1

	)

6 
	#Ál£
 0

	)

8 
	~<sys/ty≥s.h
>

9 
	~<f˙é.h
>

10 
	~<uni°d.h
>

12 
fdsize
(
fd
);

13 
fûesize
(*
«me
);

14 *
gë_dúfûe
(*
dú
, *
fûíame
, *
fuŒ∑th
);

16 
ölöe
 
boﬁ
 
	$fûe_exi°s
(*
fûï©h
){

17 
fd
 = 
	`›í
(
fûï©h
, 0);

18 if(
fd
 != -1){

19 
	`˛o£
(
fd
);

20  
åue
;

22  
Ál£
;

23 
	}
}

	@han2pinyin.c

8 
	#_BSD_SOURCE


	)

9 
	~<°dlib.h
>

11 
	~<as£π.h
>

12 
	~"vi.h
"

13 
	~"vim.h
"

14 
	~"w‹d.h
"

15 
	~"fûe.h
"

16 
	~<limôs.h
>

17 
	~<f˙é.h
>

18 
	~<sys/°©.h
>

20 
	#boﬁ
 

	)

21 
	tu8
;

22 
	tu32
;

24 
boﬁ
 
	$is_utf8_Àadî
(
c
){

25 
boﬁ
 
is_Àadî
 = (
c
 >> 4) == 0b1110 ;

26  
is_Àadî
;

27 
	}
}

30 
ölöe
 
u32
 
	$hash_⁄e
(
u32
 
hash
, 
u8
 
c
){

31  
hash
 + 
c
;

32 
	}
}

38 
ölöe
 c⁄° 
öãΩ_ôem
 *

39 
	$föd_öãΩ_ôem
(*
w‹ds
, 
w‹dnum
, 
u32
 
hash
){ 
	`as£π
(hash < 
UTF8_HASHTBL_LEN
);

40 c⁄° 
öãΩ_ôem
 *
ôem
;

41 *
cﬁlisi⁄
 = 
utf8_hashtbl
[
hash
];

42 
i
 = 0; i < 
UTF8_HASHTBL_LEN2
; i++){

43 
ödex
 = 
cﬁlisi⁄
[
i
];

44 
ôem
 = &
öãΩ
[
ödex
];

45 if(
	`°∫cmp
(
w‹ds
, 
ôem
->
chöe£
) == 0)

46  
ôem
;

49 
	}
}

51 
	$w‹ds2unicodes
(
u32
 *
u¨øy
, *
w‹ds
, 
w‹dnum
){

52 
i
;

53  
i
 = 0; i < 
w‹dnum
; i++){

54 *
utf8
 = 
w‹ds
 + 
i
 * 3;

55 
u32
 
high
 = 
utf8
[0];

56 
u32
 
mid
 = 
utf8
[1];

57 
u32
 
low
 = 
utf8
[2]; 
	`as£π
–(
mid
 >> 6) == 0b10

58 && (
low
 >> 6) == 0b10);

60 
u32
 
unicode
 = (
low
 & 0b00111111) +

61 ((
mid
 & 0b00111111) << 6) +

62 ((
high
 & 0b00001111) << 12);

63 
u¨øy
[
i
] = 
unicode
;

65 
u¨øy
[
i
] = 0;

66 
	}
}

70 
boﬁ
 
	$mk_pöyö
(
pöyö
[], 
u32
 *
u¨øy
){

71 *
‰esh
 = 
pöyö
;

72 
u32
 
unicode
;

73 
i
 = 0; (
unicode
 = 
u¨øy
[i]); i++){

74 c⁄° *
py°r
 = 
pöyö_of
[
unicode
]; 
	`a§t
(pystr);

75 
‰esh
 = 
	`°p˝y
(‰esh, 
py°r
);

77  
åue
;

78 
	}
}

80 
	$c⁄vît_£g
(){ 
	`as£π
–
	`VI_CURR_LENR
(
vim
) >= 3 &&

81 
	`is_utf8_Àadî
(
vim
->
cuº
[0]) );

82 
boﬁ
 
ok
;

83 c⁄° 
öãΩ_ôem
 *
ôem
;

84 *
ö§ãd
;

85 
u32
 
hash
 = 0;

86 *
w‹ds
 = 
vim
->
cuº
;

87 
w‹dnum
 = 0;;

88 
boﬁ
 
mìt_èû
 = 
Ál£
;

90 
	#UARRAY_LEN
 32

91 
u32
 
u¨øy
[
UARRAY_LEN
];

	)

92 
	#PINYIN_LEN
 (
UARRAY_LEN
 * 16)

93 
pöyö
[
PINYIN_LEN
];

	)

95 
	`vim_v
();

96 
	`is_utf8_Àadî
(
vim
->
cuº
[0]Ë){ 
	`a§t
(
	`VI_CURR_LENR
(vim) >= 3);

97 
hash
 = 
	`hash_⁄e
(hash, 
vim
->
cuº
[0]);

98 
hash
 = 
	`hash_⁄e
(hash, 
vim
->
cuº
[1]);

99 
hash
 = 
	`hash_⁄e
(hash, 
vim
->
cuº
[2]);

101 
w‹dnum
++;

103 
	`vim_l
(); vim_l();

104 if(
	`VI_CURR_LENr
(
vim
) == 0){

105 
mìt_èû
 = 
åue
;

108 
	`vim_l
();

111 
hash
 %
UTF8_HASHTBL_LEN
;

113 
ôem
 = 
	`föd_öãΩ_ôem
(
w‹ds
, 
w‹dnum
, 
hash
);

114 if(
ôem
){

115 
ö§ãd
 = 
ôem
->
íglish
;

118 { 
	`a§t
(
w‹dnum
 < 
UARRAY_LEN
);

119 
	`w‹ds2unicodes
(
u¨øy
, 
w‹ds
, 
w‹dnum
);

120 
ok
 = 
	`mk_pöyö
(
pöyö
, 
u¨øy
); if(!okË
	`exô
(1);

121 
ö§ãd
 = 
pöyö
;

124 if(!
mìt_èû
Ë
	`vim_h
();

126 
	`vim_x
();

131 if(
mìt_èû
){

132 
	`vim_a
(
ö§ãd
);

135 
	`vim_i
(
ö§ãd
);

137 
	`vim_l
();

138 
	}
}

141 
	$c⁄vît_löe
(){

142 
	`vim_0
();

145 if–
	`is_utf8_Àadî
(
vim
->
cuº
[0]) ){

146 
	`c⁄vît_£g
();

149 
	`vim_l
();

150 } 
	`VI_CURR_LENr
(
vim
) != 0);

151 
	}
}

153 
öô_utf8_hashtbl
();

154 
	$maö
(
¨gc
, *
¨gv
[]){

155 
	`öô_utf8_hashtbl
();

157 
boﬁ
 
ö_commít
 = 
Ál£
;

158 
	`vi_libøry_öô
();

159 *
˙fûe
 = 
¨gv
[1];

161 
˙_∑th
[128];

162 
cc_∑th
[128];

163 
	`¥ötf
("¨gumít: %s\n", 
˙fûe
);

164 
	`as£π
–
	`ªÆ∑th
(
˙fûe
, 
˙_∑th
) );

165 
	`°∫˝y
(
cc_∑th
, 
˙_∑th
, 127);

166 
	`as£π
–
cc_∑th
[ 
	`°æí
(cc_path) - 1] == 'n');

167 
cc_∑th
[
	`°æí
(cc_path) - 1] = 'c';

170 
	`ªmove
(
cc_∑th
);

173 
	`as£π
–
	`fûesize
(
˙fûe
) > 0 );

174 
	`as£π
–
	`vim_›í
(
˙fûe
) );

176 
i
 = 0; i <
vim
->
lmax
; i++){

177 
	`vim_Gn
(
i
);

178 if(
	`vim_mìt_em±ylöe
()) ;

179 if(
	`vim_mìt_•a˚löe
()) ;

181 if(
ö_commít
){

182 
	`as£π
(
	`vim_‹x
());

183 if(
vim
->
cuº
[0] == '/' && vim->curr[-1] == '*'){

184 
ö_commít
 = 
Ál£
;

190 
	`as£π
(
	`vim_x‹
());

191 if(
vim
->
cuº
[0] == '/' && vim->curr[1] == '*'){

192 
ö_commít
 = 
åue
;

193 
	`vim_‹x
();

194 if(
vim
->
cuº
[0] ='/' && vim->cuº[-1] ='*'Ë
ö_commít
 = 
Ál£
;

197 if(
vim
->
cuº
[0] == '/' && vim->curr[1] == '/'){

201 
	`c⁄vît_löe
();

207 
	`as£π
–
	`vim_wrôe
(
cc_∑th
) );

208 
	`as£π
–
	`chmod
(
cc_∑th
, 0555) == 0);

210 
	}
}

216 
u32
 
	$hashutf8
(*
w‹ds
){ 
	`as£π
–
	`is_utf8_Àadî
( words[0]) );

217 *
w‹d
 = 
w‹ds
;

218 
u32
 
hash
 = 0;

219  
	`is_utf8_Àadî
(
w‹d
[0] ) ){

220 
hash
 = 
	`hash_⁄e
(hash, 
w‹d
[0]);

221 
hash
 = 
	`hash_⁄e
(hash, 
w‹d
[1]);

222 
hash
 = 
	`hash_⁄e
(hash, 
w‹d
[2]);

224 
w‹d
 += 3;

226  
hash
 % 
UTF8_HASHTBL_LEN
;

227 
	}
}

230 
boﬁ
 
	$utf8_hashtbl_°‹e
(
vÆue
, 
hash
){

231 *
simû¨
 = 
utf8_hashtbl
[
hash
];

232 
i
;

233 
i
 = 0; i < 
UTF8_HASHTBL_LEN2
; i++){

234 if(
simû¨
[
i
]) ;

235 
simû¨
[
i
] = 
vÆue
;

236  
åue
;

238  
Ál£
;

239 
	}
}

241 
	$öô_utf8_hashtbl
(){

242 
boﬁ
 
ok
;

243 c⁄° 
öãΩ_ôem
 *
ôem
;

244 
i
 = 0; i < 
INTERP_TBL_LEN
; i++){

245 
ôem
 = &
öãΩ
[
i
];

246 
u32
 
hash
 = 
	`hashutf8
–
ôem
->
chöe£
 );

247 
ok
 = 
	`utf8_hashtbl_°‹e
–
i
, 
hash
); 
	`a§t
(ok);

249 
	}
}

	@lfs/src/lfs.c

22 #i‚de‡
LFS_DO_NOT_USE_LARGE_FILE


23 #i‚de‡
_WIN32


24 #i‚de‡
_AIX


25 
	#_FILE_OFFSET_BITS
 64

	)

27 
	#_LARGE_FILES
 1

	)

32 #i‚de‡
LFS_DO_NOT_USE_LARGE_FILE


33 
	#_LARGEFILE64_SOURCE


	)

36 
	~<î∫o.h
>

37 
	~<°dio.h
>

38 
	~<°rög.h
>

39 
	~<°dlib.h
>

40 
	~<time.h
>

41 
	~<sys/°©.h
>

43 #ifde‡
_WIN32


44 
	~<dúe˘.h
>

45 
	~<wödows.h
>

46 
	~<io.h
>

47 
	~<sys/lockög.h
>

48 #ifde‡
__BORLANDC__


49 
	~<utime.h
>

51 
	~<sys/utime.h
>

53 
	~<f˙é.h
>

55 
	~<uni°d.h
>

56 
	~<dúít.h
>

57 
	~<f˙é.h
>

58 
	~<sys/ty≥s.h
>

59 
	~<utime.h
>

62 
	~<lua.h
>

63 
	~<œuxlib.h
>

64 
	~<luÆib.h
>

66 
	~"lfs.h
"

68 
	#LUA_VERSION_NUM
 503

	)

69 
	#LFS_VERSION
 "1.6.3"

	)

70 
	#LFS_LIBNAME
 "lfs"

	)

72 #i‡
LUA_VERSION_NUM
 >= 503

73 #i‚de‡
luaL_›é⁄g


74 
	#luaL_›é⁄g
 
luaL_›töãgî


	)

79 #i‡
LUA_VERSION_NUM
 < 502

80 
	#luaL_√wlib
(
L
,
l
Ë(
	`lua_√wèbÀ
(L), 
	`luaL_ªgi°î
(L,
NULL
,l))

	)

84 #ifde‡
NO_STRERROR


85 
	#°ªº‹
(
_
Ë"Sy°em u«bÀÅÿdes¸ibêthêîr‹"

	)

89 #ifde‡
NO_GETCWD


90 
	#gëcwd
(
p
,
s
Ë
NULL


	)

91 
	#gëcwd_îr‹
 "Fun˘i⁄ 'gëcwd'ÇŸÖrovided by sy°em"

	)

93 
	#gëcwd_îr‹
 
	`°ªº‹
(
î∫o
)

	)

94 #ifde‡
_WIN32


96 
	#LFS_MAXPATHLEN
 
MAX_PATH


	)

99 
	~<sys/∑øm.h
>

100 
	#LFS_MAXPATHLEN
 
MAXPATHLEN


	)

104 
	#DIR_METATABLE
 "dúe˘‹y më©abÀ"

	)

105 
	sdú_d©a
 {

106 
	m˛o£d
;

107 #ifde‡
_WIN32


108 
öçå_t
 
	mhFûe
;

109 
	m∑âîn
[
MAX_PATH
+1];

111 
DIR
 *
	mdú
;

113 } 
	tdú_d©a
;

115 
	#LOCK_METATABLE
 "lock më©abÀ"

	)

117 #ifde‡
_WIN32


118 #ifde‡
__BORLANDC__


119 
	#lfs_£tmode
(
fûe
, 
m
Ë(
	`£tmode
(
	`_fûío
(fûe), m))

	)

120 
	#STAT_STRUCT
 
°©i64


	)

122 
	#lfs_£tmode
(
fûe
, 
m
Ë(
	`_£tmode
(
	`_fûío
(fûe), m))

	)

123 
	#STAT_STRUCT
 
_°©i64


	)

125 
	#STAT_FUNC
 
_°©i64


	)

126 
	#LSTAT_FUNC
 
STAT_FUNC


	)

128 
	#_O_TEXT
 0

	)

129 
	#_O_BINARY
 0

	)

130 
	#lfs_£tmode
(
fûe
, 
m
Ë(()fûe, ()m, 0)

	)

131 
	#STAT_STRUCT
 
°©


	)

132 
	#STAT_FUNC
 
°©


	)

133 
	#LSTAT_FUNC
 
l°©


	)

139 
	$pushîr‹
(
lua_Sèã
 *
L
, c⁄° *
öfo
)

141 
	`lua_pushnû
(
L
);

142 i‡(
öfo
==
NULL
)

143 
	`lua_push°rög
(
L
, 
	`°ªº‹
(
î∫o
));

145 
	`lua_pushf°rög
(
L
, "%s: %s", 
öfo
, 
	`°ªº‹
(
î∫o
));

146 
	`lua_pushöãgî
(
L
, 
î∫o
);

148 
	}
}

150 
	$pushªsu…
(
lua_Sèã
 *
L
, 
i
, c⁄° *
öfo
)

152 i‡(
i
==-1)

153  
	`pushîr‹
(
L
, 
öfo
);

154 
	`lua_pushöãgî
(
L
, 
i
);

156 
	}
}

162 
	$ch™ge_dú
 (
lua_Sèã
 *
L
) {

163 c⁄° *
∑th
 = 
	`luaL_check°rög
(
L
, 1);

164 i‡(
	`chdú
(
∑th
)) {

165 
	`lua_pushnû
 (
L
);

166 
	`lua_pushf°rög
 (
L
,"UnableÅo change working directoryÅo '%s'\n%s\n",

167 
∑th
, 
chdú_îr‹
);

170 
	`lua_pushboﬁón
 (
L
, 1);

173 
	}
}

180 
	$gë_dú
 (
lua_Sèã
 *
L
) {

181 *
∑th
;

183 
buf
[
LFS_MAXPATHLEN
];

184 i‡((
∑th
 = 
	`gëcwd
(
buf
, 
LFS_MAXPATHLEN
)Ë=
NULL
) {

185 
	`lua_pushnû
(
L
);

186 
	`lua_push°rög
(
L
, 
gëcwd_îr‹
);

190 
	`lua_push°rög
(
L
, 
∑th
);

193 
	}
}

198 
FILE
 *
	$check_fûe
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
fun˙ame
) {

199 #i‡
LUA_VERSION_NUM
 == 501

200 
FILE
 **
fh
 = (FILE **)
	`luaL_checkud©a
 (
L
, 
idx
, "FILE*");

201 i‡(*
fh
 =
NULL
) {

202 
	`luaL_îr‹
 (
L
, "%s: clo£d fûe", 
fun˙ame
);

205  *
fh
;

206 #ñi‡
LUA_VERSION_NUM
 >= 502 && LUA_VERSION_NUM <= 503

207 
luaL_Såóm
 *
fh
 = (luaL_Såóm *)
	`luaL_checkud©a
 (
L
, 
idx
, "FILE*");

208 i‡(
fh
->
˛o£f
 =0 || fh->
f
 =
NULL
) {

209 
	`luaL_îr‹
 (
L
, "%s: clo£d fûe", 
fun˙ame
);

212  
fh
->
f
;

214 #îr‹ 
unsuµ‹ãd
 
Lua
 
vîsi⁄


216 
	}
}

222 
	$_fûe_lock
 (
lua_Sèã
 *
L
, 
FILE
 *
fh
, c⁄° *
mode
, c⁄° 
°¨t
, 
Àn
, c⁄° *
fun˙ame
) {

223 
code
;

224 #ifde‡
_WIN32


236 
lkmode
;

237 *
mode
) {

238 'r': 
lkmode
 = 
LK_NBLCK
; ;

239 'w': 
lkmode
 = 
LK_NBLCK
; ;

240 'u': 
lkmode
 = 
LK_UNLCK
; ;

241  :  
	`luaL_îr‹
 (
L
, "%s: invÆid mode", 
fun˙ame
);

243 i‡(!
Àn
) {

244 
	`f£ek
 (
fh
, 0L, 
SEEK_END
);

245 
Àn
 = 
	`·ñl
 (
fh
);

247 
	`f£ek
 (
fh
, 
°¨t
, 
SEEK_SET
);

248 #ifde‡
__BORLANDC__


249 
code
 = 
	`lockög
 (
	`fûío
(
fh
), 
lkmode
, 
Àn
);

251 
code
 = 
	`_lockög
 (
	`fûío
(
fh
), 
lkmode
, 
Àn
);

254 
Êock
 
f
;

255 *
mode
) {

256 'w': 
f
.
l_ty≥
 = 
F_WRLCK
; ;

257 'r': 
f
.
l_ty≥
 = 
F_RDLCK
; ;

258 'u': 
f
.
l_ty≥
 = 
F_UNLCK
; ;

259  :  
	`luaL_îr‹
 (
L
, "%s: invÆid mode", 
fun˙ame
);

261 
f
.
l_whí˚
 = 
SEEK_SET
;

262 
f
.
l_°¨t
 = (
off_t
)
°¨t
;

263 
f
.
l_Àn
 = (
off_t
)
Àn
;

264 
code
 = 
	`f˙é
 (
	`fûío
(
fh
), 
F_SETLK
, &
f
);

266  (
code
 != -1);

267 
	}
}

269 #ifde‡
_WIN32


270 
	slfs_Lock
 {

271 
HANDLE
 
	mfd
;

272 } 
	tlfs_Lock
;

273 
	$lfs_lock_dú
(
lua_Sèã
 *
L
) {

274 
size_t
 
∑thl
; 
HANDLE
 
fd
;

275 
lfs_Lock
 *
lock
;

276 *
 
;

277 c⁄° *
lockfûe
 = "/lockfile.lfs";

278 c⁄° *
∑th
 = 
	`luaL_checkl°rög
(
L
, 1, &
∑thl
);

279 
 
 = (*)
	`mÆloc
(
∑thl
 + 
	`°æí
(
lockfûe
) + 1);

280 if(!
 
) {

281 
	`lua_pushnû
(
L
); 
	`lua_push°rög
(L, 
	`°ªº‹
(
î∫o
));  2;

283 
	`°r˝y
(
 
, 
∑th
); 
	`°rˇt
÷n, 
lockfûe
);

284 if((
fd
 = 
	`Cª©eFûe
(
 
, 
GENERIC_WRITE
, 0, 
NULL
, 
CREATE_NEW
,

285 
FILE_ATTRIBUTE_NORMAL
 | 
FILE_FLAG_DELETE_ON_CLOSE
, 
NULL
)Ë=
INVALID_HANDLE_VALUE
) {

286 
í
 = 
	`GëLa°Eº‹
();

287 
	`‰ì
(
 
); 
	`lua_pushnû
(
L
);

288 if(
í
 =
ERROR_FILE_EXISTS
 ||É¿=
ERROR_SHARING_VIOLATION
)

289 
	`lua_push°rög
(
L
, "FileÉxists");

291 
	`lua_push°rög
(
L
, 
	`°ªº‹
(
í
));

294 
	`‰ì
(
 
);

295 
lock
 = (
lfs_Lock
*)
	`lua_√wu£rd©a
(
L
, (lfs_Lock));

296 
lock
->
fd
 = fd;

297 
	`luaL_gëmë©abÀ
 (
L
, 
LOCK_METATABLE
);

298 
	`lua_£tmë©abÀ
 (
L
, -2);

300 
	}
}

301 
	$lfs_u∆ock_dú
(
lua_Sèã
 *
L
) {

302 
lfs_Lock
 *
lock
 = (lfs_Lock *)
	`luaL_checkud©a
(
L
, 1, 
LOCK_METATABLE
);

303 if(
lock
->
fd
 !
INVALID_HANDLE_VALUE
) {

304 
	`Clo£H™dÀ
(
lock
->
fd
);

305 
lock
->
fd
=
INVALID_HANDLE_VALUE
;

308 
	}
}

310 
	slfs_Lock
 {

311 *
	m 
;

312 } 
	tlfs_Lock
;

313 
	$lfs_lock_dú
(
lua_Sèã
 *
L
) {

314 
lfs_Lock
 *
lock
;

315 
size_t
 
∑thl
;

316 *
 
;

317 c⁄° *
lockfûe
 = "/lockfile.lfs";

318 c⁄° *
∑th
 = 
	`luaL_checkl°rög
(
L
, 1, &
∑thl
);

319 
lock
 = (
lfs_Lock
*)
	`lua_√wu£rd©a
(
L
, (lfs_Lock));

320 
 
 = (*)
	`mÆloc
(
∑thl
 + 
	`°æí
(
lockfûe
) + 1);

321 if(!
 
) {

322 
	`lua_pushnû
(
L
); 
	`lua_push°rög
(L, 
	`°ªº‹
(
î∫o
));  2;

324 
	`°r˝y
(
 
, 
∑th
); 
	`°rˇt
÷n, 
lockfûe
);

325 if(
	`symlök
("lock", 
 
) == -1) {

326 
	`‰ì
(
 
); 
	`lua_pushnû
(
L
);

327 
	`lua_push°rög
(
L
, 
	`°ªº‹
(
î∫o
));  2;

329 
lock
->
 
 =Ün;

330 
	`luaL_gëmë©abÀ
 (
L
, 
LOCK_METATABLE
);

331 
	`lua_£tmë©abÀ
 (
L
, -2);

333 
	}
}

334 
	$lfs_u∆ock_dú
(
lua_Sèã
 *
L
) {

335 
lfs_Lock
 *
lock
 = (lfs_Lock *)
	`luaL_checkud©a
(
L
, 1, 
LOCK_METATABLE
);

336 if(
lock
->
 
) {

337 
	`u∆ök
(
lock
->
 
);

338 
	`‰ì
(
lock
->
 
);

339 
lock
->
 
 = 
NULL
;

342 
	}
}

345 
	$lfs_g_£tmode
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, 
¨g
) {

346 c⁄° 
mode
[] = {
_O_BINARY
, 
_O_TEXT
};

347 c⁄° *c⁄° 
modíames
[] = {"bö¨y", "ãxt", 
NULL
};

348 
›
 = 
	`luaL_check›ti⁄
(
L
, 
¨g
, 
NULL
, 
modíames
);

349 
ªs
 = 
	`lfs_£tmode
(
f
, 
mode
[
›
]);

350 i‡(
ªs
 != -1) {

351 
i
;

352 
	`lua_pushboﬁón
(
L
, 1);

353 
i
 = 0; 
modíames
[i] !
NULL
; i++) {

354 i‡(
mode
[
i
] =
ªs
) {

355 
	`lua_push°rög
(
L
, 
modíames
[
i
]);

359 
	`lua_pushnû
(
L
);

362  
	`pushîr‹
(
L
, 
NULL
);

364 
	}
}

366 
	$lfs_f_£tmode
(
lua_Sèã
 *
L
) {

367  
	`lfs_g_£tmode
(
L
, 
	`check_fûe
(L, 1, "setmode"), 2);

368 
	}
}

377 
	$fûe_lock
 (
lua_Sèã
 *
L
) {

378 
FILE
 *
fh
 = 
	`check_fûe
 (
L
, 1, "lock");

379 c⁄° *
mode
 = 
	`luaL_check°rög
 (
L
, 2);

380 c⁄° 
°¨t
 = (Ë
	`luaL_›töãgî
 (
L
, 3, 0);

381 
Àn
 = (Ë
	`luaL_›töãgî
 (
L
, 4, 0);

382 i‡(
	`_fûe_lock
 (
L
, 
fh
, 
mode
, 
°¨t
, 
Àn
, "lock")) {

383 
	`lua_pushboﬁón
 (
L
, 1);

386 
	`lua_pushnû
 (
L
);

387 
	`lua_pushf°rög
 (
L
, "%s", 
	`°ªº‹
(
î∫o
));

390 
	}
}

399 
	$fûe_u∆ock
 (
lua_Sèã
 *
L
) {

400 
FILE
 *
fh
 = 
	`check_fûe
 (
L
, 1, "unlock");

401 c⁄° 
°¨t
 = (Ë
	`luaL_›töãgî
 (
L
, 2, 0);

402 
Àn
 = (Ë
	`luaL_›töãgî
 (
L
, 3, 0);

403 i‡(
	`_fûe_lock
 (
L
, 
fh
, "u", 
°¨t
, 
Àn
, "unlock")) {

404 
	`lua_pushboﬁón
 (
L
, 1);

407 
	`lua_pushnû
 (
L
);

408 
	`lua_pushf°rög
 (
L
, "%s", 
	`°ªº‹
(
î∫o
));

411 
	}
}

420 
	$make_lök
(
lua_Sèã
 *
L
)

422 #i‚de‡
_WIN32


423 c⁄° *
ﬁd∑th
 = 
	`luaL_check°rög
(
L
, 1);

424 c⁄° *
√w∑th
 = 
	`luaL_check°rög
(
L
, 2);

425  
	`pushªsu…
(
L
,

426 (
	`lua_toboﬁón
(
L
,3Ë? 
symlök
 : 
lök
)(
ﬁd∑th
, 
√w∑th
), 
NULL
);

428 
î∫o
 = 
ENOSYS
;

429  
	`pushªsu…
(
L
, -1, "make_link isÇot supported on Windows");

431 
	}
}

438 
	$make_dú
 (
lua_Sèã
 *
L
) {

439 c⁄° *
∑th
 = 
	`luaL_check°rög
 (
L
, 1);

440 
Áû
;

441 #ifde‡
_WIN32


442 
Áû
 = 
	`_mkdú
 (
∑th
);

444 
Áû
 = 
	`mkdú
 (
∑th
, 
S_IRUSR
 | 
S_IWUSR
 | 
S_IXUSR
 | 
S_IRGRP
 |

445 
S_IWGRP
 | 
S_IXGRP
 | 
S_IROTH
 | 
S_IXOTH
 );

447 i‡(
Áû
) {

448 
	`lua_pushnû
 (
L
);

449 
	`lua_pushf°rög
 (
L
, "%s", 
	`°ªº‹
(
î∫o
));

452 
	`lua_pushboﬁón
 (
L
, 1);

454 
	}
}

461 
	$ªmove_dú
 (
lua_Sèã
 *
L
) {

462 c⁄° *
∑th
 = 
	`luaL_check°rög
 (
L
, 1);

463 
Áû
;

465 
Áû
 = 
	`rmdú
 (
∑th
);

467 i‡(
Áû
) {

468 
	`lua_pushnû
 (
L
);

469 
	`lua_pushf°rög
 (
L
, "%s", 
	`°ªº‹
(
î∫o
));

472 
	`lua_pushboﬁón
 (
L
, 1);

474 
	}
}

480 
	$dú_ôî
 (
lua_Sèã
 *
L
) {

481 #ifde‡
_WIN32


482 
_född©a_t
 
c_fûe
;

484 
dúít
 *
íåy
;

486 
dú_d©a
 *
d
 = (dú_d©®*)
	`luaL_checkud©a
 (
L
, 1, 
DIR_METATABLE
);

487 
	`luaL_¨gcheck
 (
L
, 
d
->
˛o£d
 == 0, 1, "closed directory");

488 #ifde‡
_WIN32


489 i‡(
d
->
hFûe
 == 0L) {

490 i‡((
d
->
hFûe
 = 
	`_födfú°
 (d->
∑âîn
, &
c_fûe
)) == -1L) {

491 
	`lua_pushnû
 (
L
);

492 
	`lua_push°rög
 (
L
, 
	`°ªº‹
 (
î∫o
));

493 
d
->
˛o£d
 = 1;

496 
	`lua_push°rög
 (
L
, 
c_fûe
.
«me
);

500 i‡(
	`_föd√xt
 (
d
->
hFûe
, &
c_fûe
) == -1L) {

502 
	`_föd˛o£
 (
d
->
hFûe
);

503 
d
->
˛o£d
 = 1;

506 
	`lua_push°rög
 (
L
, 
c_fûe
.
«me
);

511 i‡((
íåy
 = 
	`ªaddú
 (
d
->
dú
)Ë!
NULL
) {

512 
	`lua_push°rög
 (
L
, 
íåy
->
d_«me
);

516 
	`˛o£dú
 (
d
->
dú
);

517 
d
->
˛o£d
 = 1;

521 
	}
}

527 
	$dú_˛o£
 (
lua_Sèã
 *
L
) {

528 
dú_d©a
 *
d
 = (dú_d©®*)
	`lua_tou£rd©a
 (
L
, 1);

529 #ifde‡
_WIN32


530 i‡(!
d
->
˛o£d
 && d->
hFûe
) {

531 
	`_föd˛o£
 (
d
->
hFûe
);

534 i‡(!
d
->
˛o£d
 && d->
dú
) {

535 
	`˛o£dú
 (
d
->
dú
);

538 
d
->
˛o£d
 = 1;

540 
	}
}

546 
	$dú_ôî_Á˘‹y
 (
lua_Sèã
 *
L
) {

547 c⁄° *
∑th
 = 
	`luaL_check°rög
 (
L
, 1);

548 
dú_d©a
 *
d
;

549 
	`lua_pushcfun˘i⁄
 (
L
, 
dú_ôî
);

550 
d
 = (
dú_d©a
 *Ë
	`lua_√wu£rd©a
 (
L
, (dir_data));

551 
	`luaL_gëmë©abÀ
 (
L
, 
DIR_METATABLE
);

552 
	`lua_£tmë©abÀ
 (
L
, -2);

553 
d
->
˛o£d
 = 0;

554 #ifde‡
_WIN32


555 
d
->
hFûe
 = 0L;

556 i‡(
	`°æí
(
∑th
Ë> 
MAX_PATH
-2)

557 
	`luaL_îr‹
 (
L
, "∑thÅoÿl⁄g: %s", 
∑th
);

559 
	`•rötf
 (
d
->
∑âîn
, "%s/*", 
∑th
);

561 
d
->
dú
 = 
	`›ídú
 (
∑th
);

562 i‡(
d
->
dú
 =
NULL
)

563 
	`luaL_îr‹
 (
L
, "ˇ¬Ÿ o≥¿%s: %s", 
∑th
, 
	`°ªº‹
 (
î∫o
));

566 
	}
}

572 
	$dú_¸óã_mëa
 (
lua_Sèã
 *
L
) {

573 
	`luaL_√wmë©abÀ
 (
L
, 
DIR_METATABLE
);

576 
	`lua_√wèbÀ
(
L
);

577 
	`lua_pushcfun˘i⁄
 (
L
, 
dú_ôî
);

578 
	`lua_£tfõld
(
L
, -2, "next");

579 
	`lua_pushcfun˘i⁄
 (
L
, 
dú_˛o£
);

580 
	`lua_£tfõld
(
L
, -2, "close");

583 
	`lua_£tfõld
(
L
, -2, "__index");

584 
	`lua_pushcfun˘i⁄
 (
L
, 
dú_˛o£
);

585 
	`lua_£tfõld
 (
L
, -2, "__gc");

587 
	}
}

593 
	$lock_¸óã_mëa
 (
lua_Sèã
 *
L
) {

594 
	`luaL_√wmë©abÀ
 (
L
, 
LOCK_METATABLE
);

597 
	`lua_√wèbÀ
(
L
);

598 
	`lua_pushcfun˘i⁄
(
L
, 
lfs_u∆ock_dú
);

599 
	`lua_£tfõld
(
L
, -2, "free");

602 
	`lua_£tfõld
(
L
, -2, "__index");

603 
	`lua_pushcfun˘i⁄
(
L
, 
lfs_u∆ock_dú
);

604 
	`lua_£tfõld
(
L
, -2, "__gc");

606 
	}
}

609 #ifde‡
_WIN32


610 #i‚de‡
S_ISDIR


611 
	#S_ISDIR
(
mode
Ë(mode&
_S_IFDIR
)

	)

613 #i‚de‡
S_ISREG


614 
	#S_ISREG
(
mode
Ë(mode&
_S_IFREG
)

	)

616 #i‚de‡
S_ISLNK


617 
	#S_ISLNK
(
mode
Ë(0)

	)

619 #i‚de‡
S_ISSOCK


620 
	#S_ISSOCK
(
mode
Ë(0)

	)

622 #i‚de‡
S_ISFIFO


623 
	#S_ISFIFO
(
mode
Ë(0)

	)

625 #i‚de‡
S_ISCHR


626 
	#S_ISCHR
(
mode
Ë(mode&
_S_IFCHR
)

	)

628 #i‚de‡
S_ISBLK


629 
	#S_ISBLK
(
mode
Ë(0)

	)

635 #ifde‡
_WIN32


636 c⁄° *
	$mode2°rög
 (
mode
) {

638 c⁄° *
	$mode2°rög
 (
mode_t
 
mode
) {

640 i‡–
	`S_ISREG
(
mode
) )

642 i‡–
	`S_ISDIR
(
mode
) )

644 i‡–
	`S_ISLNK
(
mode
) )

646 i‡–
	`S_ISSOCK
(
mode
) )

648 i‡–
	`S_ISFIFO
(
mode
) )

650 i‡–
	`S_ISCHR
(
mode
) )

652 i‡–
	`S_ISBLK
(
mode
) )

656 
	}
}

662 
	$fûe_utime
 (
lua_Sèã
 *
L
) {

663 c⁄° *
fûe
 = 
	`luaL_check°rög
 (
L
, 1);

664 
utimbuf
 
utb
, *
buf
;

666 i‡(
	`lua_gët›
 (
L
) == 1)

667 
buf
 = 
NULL
;

669 
utb
.
a˘ime
 = (
time_t
)
	`luaL_›äumbî
 (
L
, 2, 0);

670 
utb
.
modtime
 = (
time_t
Ë
	`luaL_›töãgî
 (
L
, 3, utb.
a˘ime
);

671 
buf
 = &
utb
;

673 i‡(
	`utime
 (
fûe
, 
buf
)) {

674 
	`lua_pushnû
 (
L
);

675 
	`lua_pushf°rög
 (
L
, "%s", 
	`°ªº‹
 (
î∫o
));

678 
	`lua_pushboﬁón
 (
L
, 1);

680 
	}
}

684 
	$push_°_mode
 (
lua_Sèã
 *
L
, 
STAT_STRUCT
 *
öfo
) {

685 
	`lua_push°rög
 (
L
, 
	`mode2°rög
 (
öfo
->
°_mode
));

686 
	}
}

688 
	$push_°_dev
 (
lua_Sèã
 *
L
, 
STAT_STRUCT
 *
öfo
) {

689 
	`lua_pushöãgî
 (
L
, (
lua_I¡egî
Ë
öfo
->
°_dev
);

690 
	}
}

692 
	$push_°_öo
 (
lua_Sèã
 *
L
, 
STAT_STRUCT
 *
öfo
) {

693 
	`lua_pushöãgî
 (
L
, (
lua_I¡egî
Ë
öfo
->
°_öo
);

694 
	}
}

696 
	$push_°_∆ök
 (
lua_Sèã
 *
L
, 
STAT_STRUCT
 *
öfo
) {

697 
	`lua_pushöãgî
 (
L
, (
lua_I¡egî
)
öfo
->
°_∆ök
);

698 
	}
}

700 
	$push_°_uid
 (
lua_Sèã
 *
L
, 
STAT_STRUCT
 *
öfo
) {

701 
	`lua_pushöãgî
 (
L
, (
lua_I¡egî
)
öfo
->
°_uid
);

702 
	}
}

704 
	$push_°_gid
 (
lua_Sèã
 *
L
, 
STAT_STRUCT
 *
öfo
) {

705 
	`lua_pushöãgî
 (
L
, (
lua_I¡egî
)
öfo
->
°_gid
);

706 
	}
}

708 
	$push_°_rdev
 (
lua_Sèã
 *
L
, 
STAT_STRUCT
 *
öfo
) {

709 
	`lua_pushöãgî
 (
L
, (
lua_I¡egî
Ë
öfo
->
°_rdev
);

710 
	}
}

712 
	$push_°_©ime
 (
lua_Sèã
 *
L
, 
STAT_STRUCT
 *
öfo
) {

713 
	`lua_pushöãgî
 (
L
, (
lua_I¡egî
Ë
öfo
->
°_©ime
);

714 
	}
}

716 
	$push_°_mtime
 (
lua_Sèã
 *
L
, 
STAT_STRUCT
 *
öfo
) {

717 
	`lua_pushöãgî
 (
L
, (
lua_I¡egî
Ë
öfo
->
°_mtime
);

718 
	}
}

720 
	$push_°_˘ime
 (
lua_Sèã
 *
L
, 
STAT_STRUCT
 *
öfo
) {

721 
	`lua_pushöãgî
 (
L
, (
lua_I¡egî
Ë
öfo
->
°_˘ime
);

722 
	}
}

724 
	$push_°_size
 (
lua_Sèã
 *
L
, 
STAT_STRUCT
 *
öfo
) {

725 
	`lua_pushöãgî
 (
L
, (
lua_I¡egî
)
öfo
->
°_size
);

726 
	}
}

727 #i‚de‡
_WIN32


729 
	$push_°_blocks
 (
lua_Sèã
 *
L
, 
STAT_STRUCT
 *
öfo
) {

730 
	`lua_pushöãgî
 (
L
, (
lua_I¡egî
)
öfo
->
°_blocks
);

731 
	}
}

733 
	$push_°_blksize
 (
lua_Sèã
 *
L
, 
STAT_STRUCT
 *
öfo
) {

734 
	`lua_pushöãgî
 (
L
, (
lua_I¡egî
)
öfo
->
°_blksize
);

735 
	}
}

742 #ifde‡
_WIN32


743 c⁄° *
	$≥rm2°rög
 (
mode
) {

744 
≥rms
[10] = "---------";

745 
i
;

746 
i
=0;i<9;i++Ë
≥rms
[i]='-';

747 i‡(
mode
 & 
_S_IREAD
)

748 { 
≥rms
[0] = 'r';Öerms[3] = 'r';Öerms[6] = 'r'; }

749 i‡(
mode
 & 
_S_IWRITE
)

750 { 
≥rms
[1] = 'w';Öerms[4] = 'w';Öerms[7] = 'w'; }

751 i‡(
mode
 & 
_S_IEXEC
)

752 { 
≥rms
[2] = 'x';Öerms[5] = 'x';Öerms[8] = 'x'; }

753  
≥rms
;

754 
	}
}

756 c⁄° *
	$≥rm2°rög
 (
mode_t
 
mode
) {

757 
≥rms
[10] = "---------";

758 
i
;

759 
i
=0;i<9;i++Ë
≥rms
[i]='-';

760 i‡(
mode
 & 
S_IRUSR
Ë
≥rms
[0] = 'r';

761 i‡(
mode
 & 
S_IWUSR
Ë
≥rms
[1] = 'w';

762 i‡(
mode
 & 
S_IXUSR
Ë
≥rms
[2] = 'x';

763 i‡(
mode
 & 
S_IRGRP
Ë
≥rms
[3] = 'r';

764 i‡(
mode
 & 
S_IWGRP
Ë
≥rms
[4] = 'w';

765 i‡(
mode
 & 
S_IXGRP
Ë
≥rms
[5] = 'x';

766 i‡(
mode
 & 
S_IROTH
Ë
≥rms
[6] = 'r';

767 i‡(
mode
 & 
S_IWOTH
Ë
≥rms
[7] = 'w';

768 i‡(
mode
 & 
S_IXOTH
Ë
≥rms
[8] = 'x';

769  
≥rms
;

770 
	}
}

774 
	$push_°_≥rm
 (
lua_Sèã
 *
L
, 
STAT_STRUCT
 *
öfo
) {

775 
	`lua_push°rög
 (
L
, 
	`≥rm2°rög
 (
öfo
->
°_mode
));

776 
	}
}

778 (*
	t_push_fun˘i⁄
Ë(
	tlua_Sèã
 *
	tL
, 
	tSTAT_STRUCT
 *
	töfo
);

780 
	s_°©_membîs
 {

781 c⁄° *
«me
;

782 
_push_fun˘i⁄
 
push
;

785 
_°©_membîs
 
membîs
[] = {

786 { "mode", 
push_°_mode
 },

787 { "dev", 
push_°_dev
 },

788 { "öo", 
push_°_öo
 },

789 { "∆ök", 
push_°_∆ök
 },

790 { "uid", 
push_°_uid
 },

791 { "gid", 
push_°_gid
 },

792 { "rdev", 
push_°_rdev
 },

793 { "©ime", 
push_°_©ime
 },

794 { "mtime", 
push_°_mtime
 },

795 { "˘ime", 
push_°_˘ime
 },

796 { "size", 
push_°_size
 },

797 { "≥rmissi⁄s", 
push_°_≥rm
 },

798 #i‚de‡
_WIN32


799 { "blocks", 
push_°_blocks
 },

800 { "blksize", 
push_°_blksize
 },

802 { 
NULL
, NULL }

803 
	}
};

808 
_fûe_öfo_
 (
lua_Sèã
 *
L
, (*
°
)(c⁄° *, 
STAT_STRUCT
*)) {

809 
STAT_STRUCT
 
öfo
;

810 c⁄° *
fûe
 = 
	`luaL_check°rög
 (
L
, 1);

811 
i
;

813 i‡(
	`°
(
fûe
, &
öfo
)) {

814 
	`lua_pushnû
(
L
);

815 
	`lua_pushf°rög
(
L
, "ˇ¬Ÿ obèö inf‹m©i⁄ from fûê'%s': %s", 
fûe
, 
	`°ªº‹
(
î∫o
));

818 i‡(
	`lua_is°rög
 (
L
, 2)) {

819 c⁄° *
membî
 = 
	`lua_to°rög
 (
L
, 2);

820 
i
 = 0; 
membîs
[i].
«me
; i++) {

821 i‡(
	`°rcmp
(
membîs
[
i
].
«me
, 
membî
) == 0) {

823 
membîs
[
i
].
	`push
 (
L
, &
öfo
);

828  
	`luaL_îr‹
(
L
, "övÆidáâribuãÇamê'%s'", 
membî
);

831 i‡(!
	`lua_i°abÀ
 (
L
, 2)) {

832 
	`lua_√wèbÀ
 (
L
);

835 
i
 = 0; 
membîs
[i].
«me
; i++) {

836 
	`lua_push°rög
 (
L
, 
membîs
[
i
].
«me
);

837 
membîs
[
i
].
	`push
 (
L
, &
öfo
);

838 
	`lua_øw£t
 (
L
, -3);

841 
	}
}

847 
	$fûe_öfo
 (
lua_Sèã
 *
L
) {

848  
	`_fûe_öfo_
 (
L
, 
STAT_FUNC
);

849 
	}
}

858 
	$push_lök_èrgë
(
lua_Sèã
 *
L
) {

859 #ifde‡
_WIN32


860 
î∫o
 = 
ENOSYS
;

863 c⁄° *
fûe
 = 
	`luaL_check°rög
(
L
, 1);

864 *
èrgë
 = 
NULL
;

865 
tsize
, 
size
 = 256;

867 
èrgë
 = 
	`ªÆloc
—¨gë, 
size
);

868 i‡(!
èrgë
)

870 
tsize
 = 
	`ªadlök
(
fûe
, 
èrgë
, 
size
);

871 i‡(
tsize
 < 0) {

872 
	`‰ì
(
èrgë
);

875 i‡(
tsize
 < 
size
)

878 
size
 *= 2;

880 
èrgë
[
tsize
] = '\0';

881 
	`lua_pushl°rög
(
L
, 
èrgë
, 
tsize
);

882 
	`‰ì
(
èrgë
);

885 
	}
}

890 
	$lök_öfo
 (
lua_Sèã
 *
L
) {

891 
ªt
;

892 i‡(
	`lua_is°rög
 (
L
, 2Ë&& (
	`°rcmp
(
	`lua_to°rög
(L, 2), "target") == 0)) {

893 
ok
 = 
	`push_lök_èrgë
(
L
);

894  
ok
 ? 1 : 
	`pushîr‹
(
L
, "couldÇot obtainÜinkÅarget");

896 
ªt
 = 
	`_fûe_öfo_
 (
L
, 
LSTAT_FUNC
);

897 i‡(
ªt
 =1 && 
	`lua_ty≥
(
L
, -1Ë=
LUA_TTABLE
) {

898 
ok
 = 
	`push_lök_èrgë
(
L
);

899 i‡(
ok
) {

900 
	`lua_£tfõld
(
L
, -2, "target");

903  
ªt
;

904 
	}
}

910 
	$£t_öfo
 (
lua_Sèã
 *
L
) {

911 
	`lua_pushlôîÆ
(
L
, "Copyright (C) 2003-2016 Kepler Project");

912 
	`lua_£tfõld
(
L
, -2, "_COPYRIGHT");

913 
	`lua_pushlôîÆ
(
L
, "LuaFileSystem isá LuaÜibrary developedÅo complementÅhe set of functionsÑelatedÅo file systems offered byÅhe standard Lua distribution");

914 
	`lua_£tfõld
(
L
, -2, "_DESCRIPTION");

915 
	`lua_pushlôîÆ
(
L
, "LuaFûeSy°em " 
LFS_VERSION
);

916 
	`lua_£tfõld
(
L
, -2, "_VERSION");

917 
	}
}

920 c⁄° 
luaL_Reg
 
	gf¶ib
[] = {

921 {"©åibuãs", 
fûe_öfo
},

922 {"chdú", 
ch™ge_dú
},

923 {"cuºítdú", 
gë_dú
},

924 {"dú", 
dú_ôî_Á˘‹y
},

925 {"lök", 
make_lök
},

926 {"lock", 
fûe_lock
},

927 {"mkdú", 
make_dú
},

928 {"rmdú", 
ªmove_dú
},

929 {"symlök©åibuãs", 
lök_öfo
},

930 {"£tmode", 
lfs_f_£tmode
},

931 {"touch", 
fûe_utime
},

932 {"u∆ock", 
fûe_u∆ock
},

933 {"lock_dú", 
lfs_lock_dú
},

934 {
NULL
, NULL},

937 
LFS_EXPORT
 
	$lua›í_lfs
 (
lua_Sèã
 *
L
) {

938 
	`dú_¸óã_mëa
 (
L
);

939 
	`lock_¸óã_mëa
 (
L
);

940 
	`luaL_√wlib
 (
L
, 
f¶ib
);

941 
	`lua_pushvÆue
(
L
, -1);

942 
	`lua_£tglobÆ
(
L
, 
LFS_LIBNAME
);

943 
	`£t_öfo
 (
L
);

945 
	}
}

	@lfs/src/lfs.h

7 #ifde‡
NO_CHDIR


8 
	#chdú
(
p
Ë(-1)

	)

9 
	#chdú_îr‹
 "Fun˘i⁄ 'chdú'ÇŸÖrovided by sy°em"

	)

11 
	#chdú_îr‹
 
	`°ªº‹
(
î∫o
)

	)

14 #ifde‡
_WIN32


15 
	#chdú
(
p
Ë(
	`_chdú
’))

	)

16 
	#gëcwd
(
d
, 
s
Ë(
	`_gëcwd
(d, s))

	)

17 
	#rmdú
(
p
Ë(
	`_rmdú
’))

	)

18 
	#LFS_EXPORT
 
	`__de˛•ec
 (
dŒexp‹t
)

	)

19 #i‚de‡
fûío


20 
	#fûío
(
f
Ë(
	`_fûío
(f))

	)

23 
	#LFS_EXPORT


	)

26 #ifde‡
__˝lu•lus


30 
LFS_EXPORT
 
lua›í_lfs
 (
lua_Sèã
 *
L
);

32 #ifde‡
__˝lu•lus


	@lsh.c

13 
	#_BSD_SOURCE


	)

14 
	~<î∫o.h
>

15 
	~"lsh.h
"

16 
	~"vi.h
"

17 
	~"vim.h
"

18 
	~"fûe.h
"

19 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<as£π.h
>

24 
	~<°rög.h
>

25 
	~<uni°d.h
>

26 
	~<sys/waô.h
>

27 
	~<sys/ty≥s.h
>

28 
	~<sys/time.h
>

29 
	~<sys/ªsour˚.h
>

30 
	~<sys/waô.h
>

32 
	~<ªadlöe/ªadlöe.h
>

33 
	~<ªadlöe/hi°‹y.h
>

34 
	~<£tjmp.h
>

36 
boﬁ
 
	ma˘ive
;

37 
	mfds
[2];

38 *
	mãxt
;

39 
	mãxéí
;

40 }
	gèû_pùe
;

42 
boﬁ
 
	g__hide_¥om±
 = 
Ál£
;

44 
__ˇŒ_run_cmdlöe
(
lua_Sèã
 *
L
);

45 
¥o˚ss_if
();

46 
¥o˚ss_cﬁ⁄
();

48 c⁄° c⁄° *
	ghi°‹y_fûe
 = ".lsh.history";

49 
	g__cmdcou¡
;

50 
	g_¨gc
;

51 * 
	g_¨gv
[128];

52 
	g__lshmod
 = 
LSH_MOD_LUA
;

53 *
	g__lsh¥efixAº
[]={

54 [
LSH_MOD_LUA
] = "$ ",

55 [
LSH_MOD_CMD
] = "$` ",

56 [
LSH_MOD_VI
] = "$@ "

58 
	göput_hód
[64];

59 
vi
 
	g__luavi
;

60 
vi
 *
	gluavi
 = &
__luavi
;

61 
lua_Sèã
 *
	gL
;

62 *
	gªadlöe_buf
 = 0;

66 
sigjmp_buf
 
	g√w_¥om±
;

67 
	$sigh™dÀr_˘æ
(
x
){

68 
	`¥ötf
("\nto quitÜsh,Åype 'exit'\n");

69 
	`sig«l
(
SIGINT
, 
sigh™dÀr_˘æ
);

70 
	`sigl⁄gjmp
(
√w_¥om±
, 1);

71 
	}
}

74 
boﬁ
 
	$lsh_sync_ív
(){

75 
e•_backup
 = 
	`lua_gët›
(
L
);

76 
	`lua_gëglobÆ
(
L
, "Env");

77 
	`lua_pushnû
(
L
);

78 
	`lua_√xt
(
L
, -2)){

79 c⁄° *
«me
 = 
	`lua_to°rög
(
L
, -2);

80 c⁄° *
vÆue
 = 
	`lua_to°rög
(
L
, -1);

81 if(!
vÆue
Ë
√xt
;

86 if–
	`£ãnv
(
«me
 ,
vÆue
, 1) != 0 ) {

87 
	`lua_£â›
(
L
, 
e•_backup
);

88  
Ál£
;

90 
√xt
:

91 
	`lua_p›
(
L
, 1);

94 
	`lua_£â›
(
L
, 
e•_backup
);

95  
åue
;

96 
	}
}

98 
boﬁ
 
	$lsh_cd
(*
∑th
){

99 
îr
 = 
	`chdú
(
∑th
);

100 if(
îr
){

101 
	`Ârötf
(
°dîr
, "%s\n", 
	`°ªº‹
(
î∫o
));

103  !
îr
;

104 
	}
}

105 *
	ghomedú
;

106 
	glshdú
[128];

108 *
	$gë_dúfûe_d™gî
(*
dú
, *
fûíame
){

109 
fuŒ∑th
[128];

110  
	`gë_dúfûe
(
dú
, 
fûíame
, 
fuŒ∑th
);

111 
	}
}

113 *
	$gë_lshfûe
(*
fûíame
){

115 
	}
}

117 *
	$gë_homefûe
(){

119 
	}
}

120 
	$›í_edô‹
(
a
, 
b
){

121 
	`¥ötf
("hello world\n\n");

122 
	`sy°em
("vim");

123 
	`¥ötf
("vimÑeturn !!");

125 
	}
}

126 
boﬁ
 
	$you_throw_me_a_s¸ùt
(
¨gc
, **
¨gv
){

127 if(
¨gc
 >= 2){

128 *
fûï©h
 = 
¨gv
[1];

129 if–
	`fûe_exi°s
(
fûï©h
ËË 
åue
;

131  
Ál£
;

132 
	}
}

135 
boﬁ
 
	$is_lsh_›ti⁄
(*
«me
){

136 if(
	`°rcmp
(
«me
, "-s") == 0 ||

137 
	`°rcmp
(
«me
, "-d") == 0 )

138  
åue
;

140  
Ál£
;

142 
	}
}

146 
	$¥ï¨e_lua_¨gs
(
lua_Sèã
 *
L
, 
¨gc
, *
¨gv
[]){

147 
	`lua_pushöãgî
(
L
, 
¨gc
 - 1);

148 
	`lua_£tglobÆ
(
L
, "argc");

149 
	`lua_√wèbÀ
(
L
);

150 
i
 = 1; i < 
¨gc
; i++){

151 
	`lua_pushöãgî
(
L
, 
i
 - 1);

152 
	`lua_push°rög
(
L
, 
¨gv
[
i
]);

153 
	`lua_øw£t
(
L
, -3);

155 
	`lua_£tglobÆ
(
L
, "argv");

156 
	}
}

158 
	$maö
(
¨gc
, *
¨gv
[]){

159 
öput
[1024]={0};

160 
puªlua
[1024] = {0};

161 
homedú
 = 
	`gëív
("HOME");

162 
	`gë_dúfûe
(
homedú
, "lsh/", 
lshdú
);

163 
hi°‹yfûe
[128];

164 
	`gë_dúfûe
(
lshdú
, (*)
hi°‹y_fûe
, 
hi°‹yfûe
);

166 
	`sig«l
(
SIGINT
, 
sigh™dÀr_˘æ
);

167 
	`æ_böd_key£q
("\\C-J", 
›í_edô‹
);

168 
èû_pùe
.
a˘ive
 = 
Ál£
;

169 
	`vi_libøry_öô
();

170 
L
 = 
	`luaL_√w°©e
( );

171 
	`luaL_›ílibs
–
L
 );

172 
	`lua_pushcfun˘i⁄
(
L
, 
__ˇŒ_run_cmdlöe
);

173 
	`lua_£tglobÆ
(
L
, "run_cmdline");

174 
	`ªgi°î_vi
(
L
);

176 
öôfûe
[128];

177 
	`gë_dúfûe
(
lshdú
, "öô.lua", 
öôfûe
);

179 
îr
 = 
	`luaL_lﬂdfûe
(
L
, 
öôfûe
); 
	`as£π
(!err);

180 
îr
 = 
	`lua_pˇŒ
(
L
, 0, 
LUA_MULTRET
, 0);

181 if(
îr
){

182 
	`Ârötf
–
°dîr
, "%s\n", 
	`lua_to°rög
–
L
, -1 ) );

183 
	`as£π
(0);

185 
	`lua_gëglobÆ
(
L
, "Env");

186 
	`lua_gëfõld
(
L
, -1, "lshmod");

187 
	`lua_gëfõld
(
L
, -1, "default");

188 
__lshmod
 = 
	`lua_toöãgî
(
L
, -1);

191 
	`ªad_hi°‹y
(
hi°‹yfûe
);

194 
boﬁ
 
s¸ùt_mode
 = 
Ál£
;

195 if(
¨gc
 >= 2){

196 if(
	`is_lsh_›ti⁄
–
¨gv
[1] )) ;

197 if–
	`fûe_exi°s
–
¨gv
[1] ) =
Ál£
 ){

198 
	`Ârötf
(
°dîr
, "lsh: %s:Çÿsuch fûê‹ dúe˘‹y\n", 
¨gv
[1] );

201 
s¸ùt_mode
 = 
åue
;

204 if(
s¸ùt_mode
 ){

205 
ªadlöe_buf
 = 
	`mÆloc
(
PATH_MAX
 + 
	`°æí
("source ") );

206 
	`°r˝y
(
ªadlöe_buf
, "source ");

207 
	`°rˇt
(
ªadlöe_buf
, 
¨gv
[1]);

211 
¥om±
[64];

212 *
cuº_öput
 = 
öput
;

218 
	`sig£tjmp
(
√w_¥om±
, 1);

219 !
ªadlöe_buf
 ){

220 
em±y
[32] = {0};

221 
ªadlöe_buf
 = 
	`ªadlöe
(

222 
	`°rˇt
(
__hide_¥om±
 ? 
em±y
 : 
	`gëcwd
(
¥om±
, 64),

223 
__lsh¥efixAº
[
__lshmod
])

225 if(
ªadlöe_buf
[0] == 0){

226 
	`‰ì
(
ªadlöe_buf
);

227 
ªadlöe_buf
 = 0;

232 
	`°r˝y
(
öput
, 
ªadlöe_buf
);

233 
	`add_hi°‹y
–
ªadlöe_buf
 );

234 
	`wrôe_hi°‹y
(
hi°‹yfûe
);

235 
	`‰ì
(
ªadlöe_buf
);

236 
ªadlöe_buf
 = 0;

238 i‡(
	`°∫cmp
(
öput
, "sour˚ ", 
	`°æí
("source ")) == 0){

239 
	`vim_›í
(
öput
+
	`°æí
("source "));

240 
cuº_öput
=0;

242 i‡(
	`°∫cmp
(
öput
, "cd ", 
	`°æí
("cd ")) == 0){

243 
	`lsh_cd
(
öput
 + 
	`°æí
("cd "));

246 if(
	`°rcmp
(
öput
, "mod vi") == 0){

247 
__lshmod
 = 
LSH_MOD_VI
;

250 if(
	`°rcmp
(
öput
, "modÜua") == 0) {

251 
__lshmod
 = 
LSH_MOD_LUA
;

254 if(
	`°rcmp
(
öput
, "mod cmd") == 0){

255 
__lshmod
 = 
LSH_MOD_CMD
;

258 if(
	`°rcmp
(
öput
, "hideÖrompt") == 0){

259 
__hide_¥om±
 = !__hide_prompt;

262 if(
	`°rcmp
(
öput
, "exit") == 0)

263 
	`exô
(0);

264 if(
	`°rcmp
(
öput
 ,"silent") == 0){

265 
__sûít
 = !__silent;

270 if(
__lshmod
 =
LSH_MOD_VI
){

272 
buf
[64];

273 
	`•rötf
(
buf
, "vim:n‹mÆ(\"%s\")", 
öput
);

274 
	`°r˝y
(
öput
, 
buf
);

276 if(
__lshmod
 =
LSH_MOD_LUA
){

279 if(
__lshmod
 =
LSH_MOD_CMD
){

280 
	`memmove
(
öput
+1, i≈ut, 
	`°æí
(input) + 1);

281 
öput
[0] = '`';

283 
	`as£π
(0);

285 if–!
	`mix2lua
(
cuº_öput
, 
puªlua
) ){

286 
	`¥ötf
("\npreprocess failed\n");

287 if(
s¸ùt_mode
)  -1;

290 if(!
__sûít
Ë
	`¥ötf
("puªlua: >>>%s<<<", 
puªlua
);

292 if(
s¸ùt_mode
Ë
	`¥ï¨e_lua_¨gs
(
L
, 
¨gc
, 
¨gv
);

294 
îr‹
 = 
	`luaL_lﬂd°rög
–
L
, 
puªlua
 ) || 
	`lua_pˇŒ
( L, 0, 0, 0 );

295 if–
îr‹
 ){

296 
	`Ârötf
–
°dîr
, "%s\n", 
	`lua_to°rög
–
L
, -1 ) );

297 
	`lua_p›
–
L
, 1 );

299 if(
s¸ùt_mode
)  -1;

301 if(
s¸ùt_mode
)  0;

303 
	}
}

307 
	$__ˇŒ_vi_√w
(
lua_Sèã
 *
L
){

308 
vi
*vò
	`lua_√wu£rd©a
(
L
, (vi));

309 
	`vi_öô
(
vi
);

311 
	`lua_gëglobÆ
(
L
, "Vi");

312 
	`as£π
(!
	`lua_i¢û
(
L
, -1));

314 
	`lua_£tmë©abÀ
(
L
, -2);

317 
	}
}

319 
	$__ˇŒ_vi_sh¨e_˛ùbﬂrd
(
lua_Sèã
 *
L
){

320 
vi
*vò
	`lua_tou£rd©a
(
L
, 1);

321 
vi
 * 
vi2
 = 
	`lua_tou£rd©a
(
L
, 2);

323 
	`vi_sh¨e_˛ùbﬂrd
(
vi
, 
vi2
);

325 
	}
}

328 
	$__⁄ödex_vi_lmax
(
lua_Sèã
 *
L
){

331 
vi
 *vò
	`lua_tou£rd©a
(
L
, 1);

333 
	`lua_pushöãgî
(
L
, 
vi
->
lmax
);

335 
	}
}

336 
	$__⁄ödex_vi_î∫o
(
lua_Sèã
 *
L
){

339 
vi
 *vò
	`lua_tou£rd©a
(
L
, 1);

341 
	`lua_pushboﬁón
(
L
, 
vi
->
_î∫o
);

343 
	}
}

344 
	$__⁄ödex_vi_cuºc
(
lua_Sèã
 *
L
){

345 
vi
 *vò
	`lua_tou£rd©a
(
L
, 1);

347 
	`lua_pushöãgî
(
L
, 
vi
->
cuº
[0]);

349 
	}
}

351 
	$__⁄ödex_vi_cuºl
(
lua_Sèã
 *
L
){

354 
vi
 *vò
	`lua_tou£rd©a
(
L
, 1);

355 
	`lua_pushöãgî
(
L
, 
vi
->
cuºl
);

357 
	}
}

363 
	$__ˇŒ_vi_£t
(
lua_Sèã
 *
L
){

364 
vi
*vò
	`lua_tou£rd©a
(
L
, 1);

365 c⁄° *
°r
 = 
	`lua_to°rög
(
L
, 2);

366 
	`as£π
(
°r
);

370 
	`vi_£t
(
vi
, 
°r
);

372 
	}
}

373 
	$__ˇŒ_vi_föd
(
lua_Sèã
 *
L
){

374 
vi
 *vò
	`lua_tou£rd©a
(
L
, 1);

375 *
∑âîn
 = (*)
	`lua_to°rög
(
L
, 2);

376 
Êags
 = 
	`lua_toöãgî
(
L
, 3);

378 
boﬁ
 
ªt
 = 
	`vi_föd
(
vi
, 
∑âîn
, 
Êags
);

380 
	`lua_pushboﬁón
(
L
, 
ªt
);

382 
	}
}

384 
	$__ˇŒ_vi_Gn
(
lua_Sèã
 *
L
){

385 
vi
 *vò
	`lua_tou£rd©a
(
L
, 1);

386 
 umbî
 = 
	`lua_toöãgî
(
L
, 2);

388 
boﬁ
 
ªt
 = 
	`vi_Gn
(
vi
, 
 umbî
);

390 
	`lua_pushboﬁón
(
L
, 
ªt
);

392 
	}
}

393 
	$__ˇŒ_vi_v
(
lua_Sèã
 *
L
){

394 
vi
 *vò
	`lua_tou£rd©a
(
L
, 1);

395 
	`vi_v
(
vi
);

397 
	}
}

398 
	$__ˇŒ_vi_x
(
lua_Sèã
 *
L
){

399 
vi
 *vò
	`lua_tou£rd©a
(
L
, 1);

400 
	`vi_x
(
vi
);

402 
	}
}

404 
	$__ˇŒ_vi_ídv
(
lua_Sèã
 *
L
){

405 
vi
 *vò
	`lua_tou£rd©a
(
L
, 1);

406 
	`vi_ídv
(
vi
);

408 
	}
}

410 
	$__ˇŒ_vi_E
(
lua_Sèã
 *
L
){

411 
vi
 *vò
	`lua_tou£rd©a
(
L
, 1);

412 
ªt
 = 
	`vi_E
(
vi
);

413 
	`lua_pushboﬁón
(
L
, 
ªt
);

415 
	}
}

416 
	$__ˇŒ_vi_B
(
lua_Sèã
 *
L
){

417 
vi
 *vò
	`lua_tou£rd©a
(
L
, 1);

418 
ªt
 = 
	`vi_B
(
vi
);

419 
	`lua_pushboﬁón
(
L
, 
ªt
);

421 
	}
}

422 
	$__ˇŒ_vi_W
(
lua_Sèã
 *
L
){

423 
vi
 *vò
	`lua_tou£rd©a
(
L
, 1);

424 
ªt
 = 
	`vi_W
(
vi
);

425 
	`lua_pushboﬁón
(
L
, 
ªt
);

427 
	}
}

429 
	$__ˇŒ_vi_h
(
lua_Sèã
 *
L
){

430 
vi
 *vò
	`lua_tou£rd©a
(
L
, 1);

431 
ªt
 = 
	`vi_h
(
vi
);

432 
	`lua_pushboﬁón
(
L
, 
ªt
);

434 
	}
}

435 
	$__ˇŒ_vi_j
(
lua_Sèã
 *
L
){

436 
vi
 *vò
	`lua_tou£rd©a
(
L
, 1);

437 
ªt
 = 
	`vi_j
(
vi
);

438 
	`lua_pushboﬁón
(
L
, 
ªt
);

440 
	}
}

441 
	$__ˇŒ_vi_k
(
lua_Sèã
 *
L
){

442 
vi
 *vò
	`lua_tou£rd©a
(
L
, 1);

443 
ªt
 = 
	`vi_k
(
vi
);

444 
	`lua_pushboﬁón
(
L
, 
ªt
);

446 
	}
}

447 
	$__ˇŒ_vi_l
(
lua_Sèã
 *
L
){

448 
vi
 *vò
	`lua_tou£rd©a
(
L
, 1);

449 
ªt
 = 
	`vi_l
(
vi
);

450 
	`lua_pushboﬁón
(
L
, 
ªt
);

452 
	}
}

453 
	$__ˇŒ_vi_˛ùbﬂrd
(
lua_Sèã
 *
L
){

454 
vi
 *vò
	`lua_tou£rd©a
(
L
, 1);

455 
	`lua_push°rög
(
L
, 
	`vi_˛ùbﬂrd
(
vi
, 0));

457 
	}
}

458 
	$__ˇŒ_vi_n‹mÆ
(
lua_Sèã
 *
L
){

459 
vi
 *vò
	`lua_tou£rd©a
(
L
, 1);

460 *
°r
 = (*)
	`lua_to°rög
(
L
, 2);

462 
ªt
 = 
	`vi_n‹mÆ
(
vi
, 
°r
);

463 
	`lua_pushboﬁón
(
L
, 
ªt
);

465 
	}
}

470 
	$__⁄ödex
(
lua_Sèã
 *
L
){

472 *
key
 = (*)
	`lua_to°rög
(
L
, 2);

473 
	`lua_gëmë©abÀ
(
L
, 1);

474 
	`lua_push°rög
(
L
, "getter");

475 
	`lua_øwgë
(
L
, -2); 
	`as£π
(!
	`lua_i¢û
(L, -1));

476 
	`lua_gëfõld
(
L
, -1, 
key
);

477 if(
	`lua_i¢û
(
L
, -1)){

479 
	`lua_p›
(
L
, 2);

480 
	`lua_gëfõld
(
L
, -1, 
key
);

483 
	`lua_pushvÆue
(
L
, 1);

484 
	`lua_pushvÆue
(
L
, 2);

485 
îr
 = 
	`lua_pˇŒ
(
L
, 2, 1, 0);

486 if(
îr
){

487 
	`Ârötf
(
°dîr
, "ãºibÀ: CÜibøry o‡Vòg€†wr⁄g:%s\n",
	`lua_to°rög
(
L
, -1));

490 
	}
}

491 
	$__ˇŒ_vi_›í
(
lua_Sèã
 *
L
){

492 
vi
 *vò
	`lua_tou£rd©a
(
L
, 1);

493 *
fûï©h
 = (*)
	`lua_to°rög
(
L
, 2);

494 
boﬁ
 
ªt
 = 
	`vi_›í
(
vi
, 
fûï©h
);

495 
	`lua_pushboﬁón
(
L
, 
ªt
);

497 
	}
}

499 
	$__ˇŒ_vi_out
(
lua_Sèã
 *
L
){

500 
buf
[1024];

501 
vi
 *vò
	`lua_tou£rd©a
(
L
, 1);

503 *
b
 = 
	`vi_out
(
vi
, 
buf
); 
	`as£π
(b);

504 
	`lua_push°rög
(
L
, 
buf
);

506 
	}
}

508 
	$__ˇŒ_vi_wrôe
(
lua_Sèã
 *
L
){

509 
vi
 *vò
	`lua_tou£rd©a
(
L
, 1);

510 *
fûï©h
 = (*)
	`lua_to°rög
(
L
, 2);

511 
boﬁ
 
ªt
 = 
	`vi_wrôe
(
vi
, 
fûï©h
);

512 
	`lua_pushboﬁón
(
L
, 
ªt
);

514 
	}
}

515 
	$__ˇŒ_vi_è°e_digô
(
lua_Sèã
 *
L
){

516 
vi
 *vò
	`lua_tou£rd©a
(
L
, 1);

517 
	`lua_pushöãgî
(
L
, 
	`vi_è°e_digô
(
vi
));

519 
	}
}

520 
	$__ˇŒ_vi_¥öt
(
lua_Sèã
 *
L
){

521 
vi
 *vò
	`lua_tou£rd©a
(
L
, 1);

522 
i
 = 0; i <
vi
->
lmax
; i++){

523 
	`¥ötf
("%.*s", 
vi
->
Àn_of_löe
[
i
], vi->
löes
[i]);

524 
	`putch¨
('\n');

527 
	}
}

528 
	$__ˇŒ_run_cmdlöe
(
lua_Sèã
 *
L
){

529 *
cmdlöe
 = (*)
	`lua_to°rög
(
L
, -1);

530 
ªt
 = 
	`run_cmdlöe
(
cmdlöe
);

531 
ƒ_ªt
 = 0;

532 if(
èû_pùe
.
a˘ive
){

533 
ƒ_ªt
++;

534 
	`lua_pushl°rög
(
L
, 
èû_pùe
.
ãxt
,Åaû_pùe.
ãxéí
-1);

542 
èû_pùe
.
a˘ive
 = 
Ál£
;

543 
	`˛o£
(
èû_pùe
.
fds
[0]);

544 
	`‰ì
(
èû_pùe
.
ãxt
);

547 
	`lua_pushöãgî
(
L
, 
ªt
);

548 
	`lua_£tglobÆ
(
L
, "errno");

551  
ƒ_ªt
;

552 
	}
}

554 
	$ªgi°î_vi
(
lua_Sèã
 *
L
){

555 
	`luaL_√wmë©abÀ
(
L
, "Vi");

556 
	`luaL_√wmë©abÀ
(
L
, "Vi");

557 
	`lua_pushcfun˘i⁄
(
L
, 
__⁄ödex
);

558 
	`lua_£tfõld
(
L
, -2, "__index");

560 
	`lua_£tglobÆ
(
L
, "Vi");

561 
	`lua_√wèbÀ
(
L
);

562 
	`lua_pushvÆue
(
L
, -1);

563 
	`lua_£tfõld
(
L
, -3, "getter");

565 
	`lua_pushcfun˘i⁄
(
L
, 
__⁄ödex_vi_lmax
);

566 
	`lua_£tfõld
(
L
, -2, "lmax");

568 
	`lua_pushcfun˘i⁄
(
L
, 
__⁄ödex_vi_î∫o
);

569 
	`lua_£tfõld
(
L
, -2, "errno");

571 
	`lua_pushcfun˘i⁄
(
L
, 
__⁄ödex_vi_cuºc
);

572 
	`lua_£tfõld
(
L
, -2, "currc");

574 
	`lua_pushcfun˘i⁄
(
L
, 
__⁄ödex_vi_cuºl
);

575 
	`lua_£tfõld
(
L
, -2, "currl");

577 
	`lua_p›
(
L
, 1);

578 
	`lua_pushcfun˘i⁄
(
L
, 
__ˇŒ_vi_√w
);

579 
	`lua_£tfõld
(
L
, -2, "new");

581 
	`lua_pushcfun˘i⁄
(
L
, 
__ˇŒ_vi_£t
);

582 
	`lua_£tfõld
(
L
, -2, "set");

584 
	`lua_pushcfun˘i⁄
(
L
, 
__ˇŒ_vi_£t
);

585 
	`lua_£tfõld
(
L
, -2, "load");

587 
	`lua_pushcfun˘i⁄
(
L
, 
__ˇŒ_vi_n‹mÆ
);

588 
	`lua_£tfõld
(
L
, -2, "normal");

590 
	`lua_pushcfun˘i⁄
(
L
, 
__ˇŒ_vi_›í
);

591 
	`lua_£tfõld
(
L
, -2, "open");

593 
	`lua_pushcfun˘i⁄
(
L
, 
__ˇŒ_vi_out
);

594 
	`lua_£tfõld
(
L
, -2, "out");

596 
	`lua_pushcfun˘i⁄
(
L
, 
__ˇŒ_vi_wrôe
);

597 
	`lua_£tfõld
(
L
, -2, "write");

599 
	`lua_pushcfun˘i⁄
(
L
, 
__ˇŒ_vi_è°e_digô
);

600 
	`lua_£tfõld
(
L
, -2, "atoi");

602 
	`lua_pushcfun˘i⁄
(
L
, 
__ˇŒ_vi_˛ùbﬂrd
);

603 
	`lua_£tfõld
(
L
, -2, "clipboard");

605 
	`lua_pushcfun˘i⁄
(
L
, 
__ˇŒ_vi_h
);

606 
	`lua_£tfõld
(
L
, -2, "h");

608 
	`lua_pushcfun˘i⁄
(
L
, 
__ˇŒ_vi_k
);

609 
	`lua_£tfõld
(
L
, -2, "k");

611 
	`lua_pushcfun˘i⁄
(
L
, 
__ˇŒ_vi_l
);

612 
	`lua_£tfõld
(
L
, -2, "l");

614 
	`lua_pushcfun˘i⁄
(
L
, 
__ˇŒ_vi_j
);

615 
	`lua_£tfõld
(
L
, -2, "j");

617 
	`lua_pushcfun˘i⁄
(
L
, 
__ˇŒ_vi_W
);

618 
	`lua_£tfõld
(
L
, -2, "W");

620 
	`lua_pushcfun˘i⁄
(
L
, 
__ˇŒ_vi_B
);

621 
	`lua_£tfõld
(
L
, -2, "B");

623 
	`lua_pushcfun˘i⁄
(
L
, 
__ˇŒ_vi_E
);

624 
	`lua_£tfõld
(
L
, -2, "E");

626 
	`lua_pushcfun˘i⁄
(
L
, 
__ˇŒ_vi_v
);

627 
	`lua_£tfõld
(
L
, -2, "v");

628 
	`lua_pushcfun˘i⁄
(
L
, 
__ˇŒ_vi_x
);

629 
	`lua_£tfõld
(
L
, -2, "x");

631 
	`lua_pushcfun˘i⁄
(
L
, 
__ˇŒ_vi_ídv
);

632 
	`lua_£tfõld
(
L
, -2, "endv");

634 
	`lua_pushcfun˘i⁄
(
L
, 
__ˇŒ_vi_föd
);

635 
	`lua_£tfõld
(
L
, -2, "find");

637 
	`lua_pushcfun˘i⁄
(
L
, 
__ˇŒ_vi_¥öt
);

638 
	`lua_£tfõld
(
L
, -2, "print");

640 
	`lua_pushcfun˘i⁄
(
L
, 
__ˇŒ_vi_Gn
);

641 
	`lua_£tfõld
(
L
, -2, "Gn");

643 
	`lua_pushcfun˘i⁄
(
L
, 
__ˇŒ_vi_sh¨e_˛ùbﬂrd
);

644 
	`lua_£tfõld
(
L
, -2, "share_clipboard");

645 
	}
}

647 
	$exp‹t_vi
(
lua_Sèã
 *
L
){

650 
	}
}

652 
	$¥o˚ss$
(
löeÊag
){

653 
	`as£π
(
vim
->
cuº
[0] == '$');

654 
	`vim_x
();

655 
	`vim_i
("]]..");

659 
	`vim_f
('('); 
	`vim_m
('l');

660 
	`vim_≥r˚¡
(); 
	`vim_m
('r');

661 
	`vim_a
("..[[");

663 if(
löeÊag
 == '@'){

666 
	`vim_n‹mÆ
("`llv`rhy");

667 
	`vim_a
(" == 0ánd '\\127' or ");

668 
	`vim_p
();

671 
	}
}

693 
	$åù_∑ús_c‹e
(*
ª∂a˚r
){

695 
	`vim_m
('a');

696 
	`vim_≥r˚¡
();

697 
	`vim_r
(' ');

698 
	`vim_a
(
ª∂a˚r
);

699 
	`vim_tom
('a');

700 
	`vim_r
(' ');

702 
	}
}

709 
boﬁ
 
	$gŸo_c⁄åﬁ_∑ú
(*
c⁄åﬁ
){

710 *
cuº
 = 
vim
->curr;

711 
cuºl
 = 
vim
->currl;

712 
	`vim_föd
(
c⁄åﬁ
, 
	`VI_FLAG
(
cw‹d
Ë| VI_FLAG(
noquŸe
))){

713 
	`vim_w
();

714 if(
vim
->
cuº
[0] != '(') ;

715  
åue
;

717 
vim
->
cuº
 = curr;

718 
vim
->
cuºl
 = currl;

719  
Ál£
;

720 
	}
}

725 
	$¥o˚ss_if
(){

726 
	`gŸo_c⁄åﬁ_∑ú
("if")){

728 
	`åù_∑ús_c‹e
("then ");

729 
	`vim_m
('p');

730 if(
	`gŸo_c⁄åﬁ_∑ú
("elseif")){

731 
	`åù_∑ús_c‹e
("then ");

732 
	`vim_tom
('p');

734 if(!
	`vim_föd
(";", 
	`VI_FLAG
(
noquŸe
))){

737 
	`Ârötf
(
°dîr
, "';' mis£d f‹ block:%.*s\n",
vim
->
Àn_of_löe
[vim->
cuºl
], vim->
löes
[vim->currl]);

740 
	`vim_r
(' ');

741 
	`vim_a
("end");

744 
	}
}

750 
	$¥o˚ss_cﬁ⁄
(){

751 
	`vim_gg
();

752 
i
 = 0; i <
vim
->
lmax
; i++){

753 
	`vim_Gn
(
i
);

754 
	`vim_x‹
();

755 if(
vim
->
cuº
[0] != '@') ;

758 
	`vim_x
();

759 
	`vim_i
("vim:normal(\"");

761 
íd_∑ú
 = 0;

762 
	`vim_f
(':')Ë
íd_∑ú
++;

763 if(
íd_∑ú
){

764 
	`vim_r
(' ');

765 
	`vim_h
();

768 
	`vim_$
();

770 
	`vim_a
("\")");

773 
	}
}

777 
	$do_esˇ≥
(){

778  
	`vim_f_ex
(
STR_QUOT
"\\", 0) ){

779 
	`vim_i
("\\");

780 
	`vim_l
();

781 
	`vim_l
();

783 
	}
}

791 
	$mix2lua
(*
mixbuf
, *
luabuf
){

792 if(
mixbuf
){

793 
	`vim_£t
(
mixbuf
);

795 if(
vim
->
cuº
[0] == '#' && vim->curr[1] == '!'){

796 
vim
->
cuº
[0] = vim->curr[1] = '-' ;

797 
	`vim_j
();

800 
löeÊag
 = 0;

802 
	`vim_x‹
();

803 if–(
löeÊag
 = 
vim
->
cuº
[0]) != '`' &&Üineflag != '@')

805 
	`vim_‹x
();

806 if–(
löeÊag
 = 
vim
->
cuº
[0])!= '`' &&Üineflag != '@') ;

808 if(
löeÊag
 ='`'Ë
	`vim_r
('|');

809 if(
löeÊag
 ='@'Ë
	`vi_d$
(
vim
);

810 
	`as£π
(0);

812 
	`vim_0
();

813 
boﬁ
 
ok
 = 
	`vim_f
('='); 
	`as£π
(ok);

814 
	`vim_l
(); 
	`vim_jmp•a˚
();

815 
	`as£π
(
vim
->
cuº
[0] = 
löeÊag
);

819 if(
löeÊag
 ='`'Ë
	`vim_i
("run_cmdline(");

820 if(
löeÊag
 ='@'Ë
	`vim_i
("vim:normal(");

821 
	`as£π
(0);

823 
	`vim_l
();

824 
	`vim_x
(); 
	`vim_i
("[[");

825 
	`vim_f
('$')){

826 if(
vim
->
cuº
[1] != '(') ;

827 
	`¥o˚ss$
(
löeÊag
);

829 
	`vim_$
();

830 
	`vim_a
("]]");

832 
	`vim_n‹mÆ
("$a)");

833 }
	`vim_j
());

834 
	`vim_gg
();

835 if–!
	`¥o˚ss_if
(ËË 
Ál£
;

837 
	`vim_out
(
luabuf
);

838 
tmpbuf
[128];

839 
	`gë_dúfûe
(
lshdú
, "vﬁ©ûe.lua", 
tmpbuf
);

840 
	`vim_wrôe
(
tmpbuf
);

841  
åue
;

842 
	}
}

862 
	#EMPTY_UNTIL_EOL
 -1

	)

863 
	#CMD_SYNTAX_BAD
 -2

	)

864 
	$buûd_lsh_cmd
(

865 
lsh_cmd
 *
comm™d
){

866 
comm™d
->
¨gc
 = 0;

867 
boﬁ
 
ok
;

868 
ok
 = 
	`vim_jmp•a˚
();

869 if(!
ok
 && 
vim
->
_î∫o
 =
E_mìä
Ë 
EMPTY_UNTIL_EOL
;

875 *
£ghód
;

876 *
£gèû
;

877 if–
	`°rch¨
(
STR_QUOT
, 
vim
->
cuº
[0]) ){

878 
£ghód
 = 
vim
->
cuº
+1;

879 
ok
 = 
	`vim_f
–
vim
->
cuº
[0] );

881 
	`as£π
(
ok
);ás£π–
	`°rch¨
(" \t|"
STR_EOL
, 
vim
->
cuº
[1]) );

882 
£gèû
 = 
vim
->
cuº
;

884 
vim
->
cuº
++;

887 
£ghód
 = 
vim
->
cuº
;

888 
	`vim_f_ex
("\à|"
STR_EOL
, 0);

889 
£gèû
 = 
vim
->
cuº
;

891 
comm™d
->
¨gv
[comm™d->
¨gc
++] = 
£ghód
;

895 *
vim
->
cuº
 == ' ' || *vim->curr == '\t') vim->curr++;

897 
°™d⁄
 = *
vim
->
cuº
;

898 *
£gèû
 = 0;

900 if(
°™d⁄
 ='|' || sènd⁄ =
EOL
){

901 
comm™d
->
¨gv
[comm™d->
¨gc
] = 0;

902  
°™d⁄
;

912 
	}
}

915 
	$buûd_lsh_cmds
(*
öput
, 
lsh_cmd
 *
lsh_cmds
){

916 
	`vim_£t
(
öput
);

918 
	`vim_‹x
();

919 if(
vim
->
cuº
[0] == '|'){

920 
	`as£π
(
èû_pùe
.
a˘ive
 =
Ál£
);

921 
	`pùe
(
èû_pùe
.
fds
);

922 
èû_pùe
.
a˘ive
 = 
åue
;

923 
èû_pùe
.
ãxt
 = 
	`mÆloc
(0x100000 * 10);

924 if(!
èû_pùe
.
ãxt
Ë
	`Ârötf
(
°dîr
, "mallocÅailÖipe failed\n");

925 
èû_pùe
.
ãxt
[0] = 0;

926 
vim
->
cuº
[0] = ' ';

928 
	`vim_0
();

930 
i
 = 0;

932 
boﬁ
 
ªt
 = 
	`buûd_lsh_cmd
(
lsh_cmds
 + 
i
);

933 if(
ªt
 ='|'Ë
i
++;

934 if(
ªt
 =
EOL
) {

935 
i
++;

938 if(
ªt
 =
EMPTY_UNTIL_EOL
) ;

939 
	`as£π
(0 && "what ? ");

940 
	`as£π
(
i
 !
LSH_CMD_MAX
);

941 
	`vim_l
();

943  
i
;

944 
	}
}

947 
	$run_cmdlöe
(*
öput
){

948 
f‹k_ªt
;

949 
ªt
;

950 
‰ì_pùefd
[
LSH_CMD_MAX
 * 2];

951 *
l_pùefds
 =0;

952 *
r_pùefds
 = 0;

953 
cmdƒ
 = 
	`buûd_lsh_cmds
(
öput
, 
lshcmds
);

954 if(
cmdƒ
 < 1)  1;

956 
cmd_id_max
 = 
cmdƒ
 - 1;

958 
cmd_id
 = 
cmd_id_max
; cmd_id >= 0; cmd_id--){

959 
lsh_cmd
 *
cmd
 = 
lshcmds
 + 
cmd_id
;

962 if(
cmd_id
 != 0){

963 *
pùefds
 = 
‰ì_pùefd
 + 
cmd_id
 * 2;

964 
	`pùe
(
pùefds
);

966 
l_pùefds
 = 
pùefds
;

968 if((
f‹k_ªt
 = 
	`f‹k
()) == 0){

970 if(
l_pùefds
){

971 
	`˛o£
(
l_pùefds
[1]);

972 
	`dup2
(
l_pùefds
[0], 0);

973 
	`˛o£
(
l_pùefds
[0]);

975 if(
r_pùefds
){

976 
	`˛o£
(
r_pùefds
[0]);

977 
	`dup2
(
r_pùefds
[1], 1);

978 
	`˛o£
(
r_pùefds
[1]);

981 if(
èû_pùe
.
a˘ive
){

982 
	`dup2
(
èû_pùe
.
fds
[1], 1);

988 
i
 = 0; i < 
cmd
->
¨gc
; i++){

989 if(!
__sûít
Ë
	`Ârötf
(
°dîr
, "%d:<%s> ",
i
, 
cmd
->
¨gv
[i]);

992 if(!
__sûít
Ë
	`Ârötf
(
°dîr
, "\n");

998 
	`lsh_sync_ív
();

999 
ªt
 = 
	`execvp
(
cmd
->
¨gv
[0], cmd->argv);

1000 
	`Ârötf
(
°dîr
, "%s\n", 
	`°ªº‹
(
î∫o
));

1001 
	`exô
(
ªt
);

1003 if(
l_pùefds
Ë
	`˛o£
(l_pipefds[0]);

1004 if(
r_pùefds
Ë
	`˛o£
(r_pipefds[1]);

1006 
r_pùefds
 = 
l_pùefds
;

1007 
l_pùefds
 = 0;

1009 if(
èû_pùe
.
a˘ive
){

1010 
byãs
 = 
	`ªad
(
èû_pùe
.
fds
[0],Åaû_pùe.
ãxt
, 0x100000*10);

1011 if(
byãs
 == -1){

1012 
	`Ârötf
(
°dîr
, "%s\n", 
	`°ªº‹
(
î∫o
));

1014 
èû_pùe
.
ãxéí
 = 
byãs
;

1015 
èû_pùe
.
ãxt
[
byãs
] = 0;

1017 
	`sig«l
(
SIGINT
, 
SIG_IGN
);

1018 
°©us
;

1019 
îrcode
 = 0;

1020  
	`waô4
(-1, &
°©us
, 0, 0) != -1){

1021 
exô_code
;

1022 if(
	`WIFEXITED
(
°©us
)){

1023 
exô_code
 = 
	`WEXITSTATUS
(
°©us
);

1025 
exô_code
 = -1;

1027 
îrcode
 |
exô_code
;

1029 
	`sig«l
(
SIGINT
, 
sigh™dÀr_˘æ
);

1030  
îrcode
;

1031 
	}
}

1038 
boﬁ
 
	$gë_cmd_fuŒ∑th
(*
fuŒ∑th
, *
cmd
){

1039 if(
cmd
[0] == '/'){

1040 i‡(
	`ac˚ss
(
cmd
, 
F_OK
) == 0){

1041 
	`°r˝y
(
fuŒ∑th
, 
cmd
);

1042  
åue
;

1044 
Áûed
;

1048 
e•_backup
 = 
	`lua_gët›
(
L
);

1049 
	`lua_gëglobÆ
(
L
, "Env");

1050 
	`lua_gëfõld
(
L
, -1, "Path");

1051 
	`lua_pushnû
(
L
);

1052 
	`lua_√xt
(
L
, -2) != 0){

1053 c⁄° *
∑th
 = 
	`lua_to°rög
(
L
, -1);

1054 if(!
∑th
) ;

1055 
	`°r˝y
(
fuŒ∑th
, 
∑th
);

1056 
Àn
 = 
	`°æí
(
fuŒ∑th
);

1057 if(
fuŒ∑th
[
Àn
 - 1] != '/'){

1058 
fuŒ∑th
[
Àn
] = '/';

1059 
fuŒ∑th
[
Àn
+1] = 0;

1061 
	`°rˇt
(
fuŒ∑th
, 
cmd
);

1062 if(
	`ac˚ss
(
fuŒ∑th
, 
F_OK
) == 0){

1063 
	`lua_£â›
(
L
, 
e•_backup
);

1064  
åue
;

1066 
	`lua_p›
(
L
, 1);

1069 
Áûed
:

1070 
fuŒ∑th
[0] = 0;

1071  
Ál£
;

1072 
	}
}

1073 
	$lsh_run_cmd
–
lua_Sèã
 *
L
 ){

1074 c⁄° *
cmd
 = 
	`lua_to°rög
–
L
, -1 );

1075 
	`run_cmdlöe
((*)
cmd
);

1077 
	`lua_push°rög
–
L
, "success" );

1079 
	}
}

1090 
	gcmd_id
 = 0; cmd_id <
cmd_id_max
; cmd_id++){

1091 
lsh_cmd
 *
	gcmd
 = 
lshcmds
 + 
cmd_id
;

1094 if(
	gcmd_id
 !
cmd_id_max
){

1095 *
pùefds
 = 
‰ì_pùefd
 + 
cmd_id
 * 2;

1096 
pùe
(
pùefds
);

1098 
	gr_pùefds
 = 
pùefds
;

1100 if((
	gf‹k_ªt
 = 
f‹k
()) == 0){

1102 if(
l_pùefds
){

1103 
dup2
(
l_pùefds
[0], 0);

1105 if(
	gr_pùefds
){

1106 
dup2
(
r_pùefds
[1], 1);

1109 if(
	gèû_pùe
.
	ga˘ive
){

1110 
dup2
(
èû_pùe
.
fds
[1], 1);

1115 
	gi
 = 0; i < 
	gcmd
->
	g¨gc
; i++){

1116 if(!
	g__sûít
Ë
Ârötf
(
°dîr
, "%d:<%s> ",
i
, 
cmd
->
¨gv
[i]);

1118 if(!
	g__sûít
Ë
Ârötf
(
°dîr
, "\n");

1124 
lsh_sync_ív
();

1125 
	gªt
 = 
execvp
(
cmd
->
¨gv
[0], cmd->argv);

1126 
Ârötf
(
°dîr
, "%s\n", 
°ªº‹
(
î∫o
));

1127 
exô
(
ªt
);

1129 
	gl_pùefds
 = 
r_pùefds
;

1130 
	gr_pùefds
 = 0;

	@lsh.h

1 #i‚de‡
LSH_H


2 
	#LSH_H


	)

3 
	~"utûs.h
"

4 
	~"lua.h
"

5 
	~"œuxlib.h
"

6 
	~"luÆib.h
"

9 
	mLSH_MOD_LUA
,

10 
	mLSH_MOD_CMD
,

11 
	mLSH_MOD_VI


14 #ifde‡
PATH_MAX


15 #unde‡
PATH_MAX


16 
	#PATH_MAX
 255

	)

19 
	#PATH_ITEM_MAX
 64

	)

20 
	gg∑th
[
PATH_ITEM_MAX
][
PATH_MAX
];

22 
	#ARGC_MAX
 32

	)

23 
	slsh_cmd
{

24 *
	m¨gv
[
ARGC_MAX
];

25 
	m¨gc
;

27 
	#LSH_CMD_MAX
 16

	)

28 
lsh_cmd
 
	glshcmds
[
LSH_CMD_MAX
];

30 
¥ï¨e_¨gs
–*
a·îcmd
);

31 
lsh_run_cmd
–
lua_Sèã
 *
L
 );

32 
	#__ASSIGN_FATTR
(
©å
Ë
	`lua_pushcfun˘i⁄
(
L
, 
__ˇŒ_vi_
##attr);\

33 
	`lua_£tmë©abÀ
(
L
, -2, #©å)

	)

34 
	#_ASSIGN_VATTR
(
©å
Ë
	`lua_pushcfun˘i⁄
(
L
, 
__gë_vi_
##attr);\

35 
	`lua_£tmë©abÀ
(
L
, -2, #©å)

	)

37 
ªgi°î_vi
(
lua_Sèã
 *
L
);

38 
boﬁ
 
gë_cmd_fuŒ∑th
(*
fuŒ∑th
, *
cmd
);

39 
boﬁ
 
run_cmdlöe
(*
öput
);

40 
boﬁ
 
mix2lua
(*
mixbuf
, *
luabuf
);

	@lua/src/lapi.c

7 
	#œpi_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°d¨g.h
>

14 
	~<°rög.h
>

16 
	~"lua.h
"

18 
	~"œpi.h
"

19 
	~"ldebug.h
"

20 
	~"ldo.h
"

21 
	~"lfunc.h
"

22 
	~"lgc.h
"

23 
	~"lmem.h
"

24 
	~"lobje˘.h
"

25 
	~"l°©e.h
"

26 
	~"l°rög.h
"

27 
	~"…abÀ.h
"

28 
	~"…m.h
"

29 
	~"lundump.h
"

30 
	~"lvm.h
"

34 c⁄° 
	glua_idít
[] =

35 "$LuaVîsi⁄: " 
LUA_COPYRIGHT
 " $"

36 "$LuaAuth‹s: " 
LUA_AUTHORS
 " $";

40 
	#NONVALIDVALUE
 
	`ˇ°
(
TVÆue
 *, 
luaO_nûobje˘
)

	)

43 
	#isvÆid
(
o
Ë((oË!
luaO_nûobje˘
)

	)

46 
	#i•£udo
(
i
Ë((iË<
LUA_REGISTRYINDEX
)

	)

49 
	#isupvÆue
(
i
Ë((iË< 
LUA_REGISTRYINDEX
)

	)

52 
	#is°acködex
(
i
, 
o
Ë(
	`isvÆid
(oË&& !
	`i•£udo
(i))

	)

54 
	#≠i_checkvÆidödex
(
l
,
o
Ë
	`≠i_check
÷, 
	`isvÆid
(o), "övÆid index")

	)

56 
	#≠i_check°acködex
(
l
, 
i
, 
o
) \

57 
	`≠i_check
(
l
, 
	`is°acködex
(
i
, 
o
), "ödexÇŸ i¿thê°ack")

	)

60 
TVÆue
 *
	$ödex2addr
 (
lua_Sèã
 *
L
, 
idx
) {

61 
CÆlInfo
 *
ci
 = 
L
->ci;

62 i‡(
idx
 > 0) {

63 
TVÆue
 *
o
 = 
ci
->
func
 + 
idx
;

64 
	`≠i_check
(
L
, 
idx
 <
ci
->
t›
 - (ci->
func
 + 1), "unacceptable index");

65 i‡(
o
 >
L
->
t›
Ë 
NONVALIDVALUE
;

66  
o
;

68 i‡(!
	`i•£udo
(
idx
)) {

69 
	`≠i_check
(
L
, 
idx
 !0 && -idx <L->
t›
 - (
ci
->
func
 + 1), "invalid index");

70  
L
->
t›
 + 
idx
;

72 i‡(
idx
 =
LUA_REGISTRYINDEX
)

73  &
	`G
(
L
)->
l_ªgi°ry
;

75 
idx
 = 
LUA_REGISTRYINDEX
 - idx;

76 
	`≠i_check
(
L
, 
idx
 <
MAXUPVAL
 + 1, "upvalue indexÅooÜarge");

77 i‡(
	`âi¶cf
(
ci
->
func
))

78  
NONVALIDVALUE
;

80 
CClosuª
 *
func
 = 
	`˛CvÆue
(
ci
->func);

81  (
idx
 <
func
->
nupvÆues
Ë? &func->
upvÆue
[idx-1] : 
NONVALIDVALUE
;

84 
	}
}

91 
	$grow°ack
 (
lua_Sèã
 *
L
, *
ud
) {

92 
size
 = *(*)
ud
;

93 
	`luaD_grow°ack
(
L
, 
size
);

94 
	}
}

97 
LUA_API
 
	$lua_check°ack
 (
lua_Sèã
 *
L
, 
n
) {

98 
ªs
;

99 
CÆlInfo
 *
ci
 = 
L
->ci;

100 
	`lua_lock
(
L
);

101 
	`≠i_check
(
L
, 
n
 >= 0, "negative 'n'");

102 i‡(
L
->
°ack_œ°
 - L->
t›
 > 
n
)

103 
ªs
 = 1;

105 
öu£
 = 
	`ˇ°_öt
(
L
->
t›
 - L->
°ack
Ë+ 
EXTRA_STACK
;

106 i‡(
öu£
 > 
LUAI_MAXSTACK
 - 
n
)

107 
ªs
 = 0;

109 
ªs
 = (
	`luaD_øwru≈rŸe˘ed
(
L
, &
grow°ack
, &
n
Ë=
LUA_OK
);

111 i‡(
ªs
 && 
ci
->
t›
 < 
L
->t› + 
n
)

112 
ci
->
t›
 = 
L
->t› + 
n
;

113 
	`lua_u∆ock
(
L
);

114  
ªs
;

115 
	}
}

118 
LUA_API
 
	$lua_xmove
 (
lua_Sèã
 *
‰om
,Üua_Sèã *
to
, 
n
) {

119 
i
;

120 i‡(
‰om
 =
to
) ;

121 
	`lua_lock
(
to
);

122 
	`≠i_check√Àms
(
‰om
, 
n
);

123 
	`≠i_check
(
‰om
, 
	`G
(‰omË=G(
to
), "movingámong independent states");

124 
	`≠i_check
(
‰om
, 
to
->
ci
->
t›
 -Åo->t› >
n
, "stack overflow");

125 
‰om
->
t›
 -
n
;

126 
i
 = 0; i < 
n
; i++) {

127 
	`£tobj2s
(
to
,Åo->
t›
, 
‰om
->t› + 
i
);

128 
to
->
t›
++;

130 
	`lua_u∆ock
(
to
);

131 
	}
}

134 
LUA_API
 
lua_CFun˘i⁄
 
	$lua_©∑nic
 (
lua_Sèã
 *
L
, 
lua_CFun˘i⁄
 
∑nicf
) {

135 
lua_CFun˘i⁄
 
ﬁd
;

136 
	`lua_lock
(
L
);

137 
ﬁd
 = 
	`G
(
L
)->
∑nic
;

138 
	`G
(
L
)->
∑nic
 = 
∑nicf
;

139 
	`lua_u∆ock
(
L
);

140  
ﬁd
;

141 
	}
}

144 
LUA_API
 c⁄° 
lua_Numbî
 *
	$lua_vîsi⁄
 (
lua_Sèã
 *
L
) {

145 c⁄° 
lua_Numbî
 
vîsi⁄
 = 
LUA_VERSION_NUM
;

146 i‡(
L
 =
NULL
Ë &
vîsi⁄
;

147  
	`G
(
L
)->
vîsi⁄
;

148 
	}
}

160 
LUA_API
 
	$lua_absödex
 (
lua_Sèã
 *
L
, 
idx
) {

161  (
idx
 > 0 || 
	`i•£udo
(idx))

162 ? 
idx


163 : 
	`ˇ°_öt
(
L
->
t›
 - L->
ci
->
func
Ë+ 
idx
;

164 
	}
}

167 
LUA_API
 
	$lua_gët›
 (
lua_Sèã
 *
L
) {

168  
	`ˇ°_öt
(
L
->
t›
 - (L->
ci
->
func
 + 1));

169 
	}
}

172 
LUA_API
 
	$lua_£â›
 (
lua_Sèã
 *
L
, 
idx
) {

173 
StkId
 
func
 = 
L
->
ci
->func;

174 
	`lua_lock
(
L
);

175 i‡(
idx
 >= 0) {

176 
	`≠i_check
(
L
, 
idx
 <L->
°ack_œ°
 - (
func
 + 1), "newÅopÅooÜarge");

177 
L
->
t›
 < (
func
 + 1Ë+ 
idx
)

178 
	`£äûvÆue
(
L
->
t›
++);

179 
L
->
t›
 = (
func
 + 1Ë+ 
idx
;

182 
	`≠i_check
(
L
, -(
idx
+1Ë<(L->
t›
 - (
func
 + 1)), "invalidÇewÅop");

183 
L
->
t›
 +
idx
+1;

185 
	`lua_u∆ock
(
L
);

186 
	}
}

193 
	$ªvî£
 (
lua_Sèã
 *
L
, 
StkId
 
‰om
, StkId 
to
) {

194 ; 
‰om
 < 
to
; from++,Åo--) {

195 
TVÆue
 
ãmp
;

196 
	`£tobj
(
L
, &
ãmp
, 
‰om
);

197 
	`£tobjs2s
(
L
, 
‰om
, 
to
);

198 
	`£tobj2s
(
L
, 
to
, &
ãmp
);

200 
	}
}

207 
LUA_API
 
	$lua_rŸ©e
 (
lua_Sèã
 *
L
, 
idx
, 
n
) {

208 
StkId
 
p
, 
t
, 
m
;

209 
	`lua_lock
(
L
);

210 
t
 = 
L
->
t›
 - 1;

211 
p
 = 
	`ödex2addr
(
L
, 
idx
);

212 
	`≠i_check°acködex
(
L
, 
idx
, 
p
);

213 
	`≠i_check
(
L
, (
n
 >0 ?Ç : -nË<(
t
 - 
p
 + 1), "invalid 'n'");

214 
m
 = (
n
 >0 ? 
t
 -Ç : 
p
 -Ç - 1);

215 
	`ªvî£
(
L
, 
p
, 
m
);

216 
	`ªvî£
(
L
, 
m
 + 1, 
t
);

217 
	`ªvî£
(
L
, 
p
, 
t
);

218 
	`lua_u∆ock
(
L
);

219 
	}
}

222 
LUA_API
 
	$lua_c›y
 (
lua_Sèã
 *
L
, 
‰omidx
, 
toidx
) {

223 
TVÆue
 *
‰
, *
to
;

224 
	`lua_lock
(
L
);

225 
‰
 = 
	`ödex2addr
(
L
, 
‰omidx
);

226 
to
 = 
	`ödex2addr
(
L
, 
toidx
);

227 
	`≠i_checkvÆidödex
(
L
, 
to
);

228 
	`£tobj
(
L
, 
to
, 
‰
);

229 i‡(
	`isupvÆue
(
toidx
))

230 
	`luaC_b¨rõr
(
L
, 
	`˛CvÆue
(L->
ci
->
func
), 
‰
);

233 
	`lua_u∆ock
(
L
);

234 
	}
}

237 
LUA_API
 
	$lua_pushvÆue
 (
lua_Sèã
 *
L
, 
idx
) {

238 
	`lua_lock
(
L
);

239 
	`£tobj2s
(
L
, L->
t›
, 
	`ödex2addr
(L, 
idx
));

240 
	`≠i_ö¸_t›
(
L
);

241 
	`lua_u∆ock
(
L
);

242 
	}
}

251 
LUA_API
 
	$lua_ty≥
 (
lua_Sèã
 *
L
, 
idx
) {

252 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

253  (
	`isvÆid
(
o
Ë? 
	`ânov
(oË: 
LUA_TNONE
);

254 
	}
}

257 
LUA_API
 c⁄° *
	$lua_ty≥«me
 (
lua_Sèã
 *
L
, 
t
) {

258 
	`UNUSED
(
L
);

259 
	`≠i_check
(
L
, 
LUA_TNONE
 <
t
 &&Å < 
LUA_NUMTAGS
, "invalidÅag");

260  
	`ây≥«me
(
t
);

261 
	}
}

264 
LUA_API
 
	$lua_iscfun˘i⁄
 (
lua_Sèã
 *
L
, 
idx
) {

265 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

266  (
	`âi¶cf
(
o
Ë|| (
	`âisC˛osuª
(o)));

267 
	}
}

270 
LUA_API
 
	$lua_isöãgî
 (
lua_Sèã
 *
L
, 
idx
) {

271 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

272  
	`âisöãgî
(
o
);

273 
	}
}

276 
LUA_API
 
	$lua_i¢umbî
 (
lua_Sèã
 *
L
, 
idx
) {

277 
lua_Numbî
 
n
;

278 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

279  
	`t⁄umbî
(
o
, &
n
);

280 
	}
}

283 
LUA_API
 
	$lua_is°rög
 (
lua_Sèã
 *
L
, 
idx
) {

284 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

285  (
	`âis°rög
(
o
Ë|| 
	`cvt2°r
(o));

286 
	}
}

289 
LUA_API
 
	$lua_isu£rd©a
 (
lua_Sèã
 *
L
, 
idx
) {

290 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

291  (
	`âisfuŒu£rd©a
(
o
Ë|| 
	`âi¶ightu£rd©a
(o));

292 
	}
}

295 
LUA_API
 
	$lua_øwequÆ
 (
lua_Sèã
 *
L
, 
ödex1
, 
ödex2
) {

296 
StkId
 
o1
 = 
	`ödex2addr
(
L
, 
ödex1
);

297 
StkId
 
o2
 = 
	`ödex2addr
(
L
, 
ödex2
);

298  (
	`isvÆid
(
o1
Ë&& isvÆid(
o2
)Ë? 
	`luaV_øwequÆobj
(o1, o2) : 0;

299 
	}
}

302 
LUA_API
 
	$lua_¨ôh
 (
lua_Sèã
 *
L
, 
›
) {

303 
	`lua_lock
(
L
);

304 i‡(
›
 !
LUA_OPUNM
 && o∞!
LUA_OPBNOT
)

305 
	`≠i_check√Àms
(
L
, 2);

307 
	`≠i_check√Àms
(
L
, 1);

308 
	`£tobjs2s
(
L
, L->
t›
, L->top - 1);

309 
	`≠i_ö¸_t›
(
L
);

312 
	`luaO_¨ôh
(
L
, 
›
, L->
t›
 - 2, L->top - 1, L->top - 2);

313 
L
->
t›
--;

314 
	`lua_u∆ock
(
L
);

315 
	}
}

318 
LUA_API
 
	$lua_com∑ª
 (
lua_Sèã
 *
L
, 
ödex1
, 
ödex2
, 
›
) {

319 
StkId
 
o1
, 
o2
;

320 
i
 = 0;

321 
	`lua_lock
(
L
);

322 
o1
 = 
	`ödex2addr
(
L
, 
ödex1
);

323 
o2
 = 
	`ödex2addr
(
L
, 
ödex2
);

324 i‡(
	`isvÆid
(
o1
Ë&& isvÆid(
o2
)) {

325 
›
) {

326 
LUA_OPEQ
: 
i
 = 
	`luaV_equÆobj
(
L
, 
o1
, 
o2
); ;

327 
LUA_OPLT
: 
i
 = 
	`luaV_Às°h™
(
L
, 
o1
, 
o2
); ;

328 
LUA_OPLE
: 
i
 = 
	`luaV_Às£quÆ
(
L
, 
o1
, 
o2
); ;

329 : 
	`≠i_check
(
L
, 0, "invalid option");

332 
	`lua_u∆ock
(
L
);

333  
i
;

334 
	}
}

337 
LUA_API
 
size_t
 
	$lua_°rögt⁄umbî
 (
lua_Sèã
 *
L
, c⁄° *
s
) {

338 
size_t
 
sz
 = 
	`luaO_°r2num
(
s
, 
L
->
t›
);

339 i‡(
sz
 != 0)

340 
	`≠i_ö¸_t›
(
L
);

341  
sz
;

342 
	}
}

345 
LUA_API
 
lua_Numbî
 
	$lua_t⁄umbîx
 (
lua_Sèã
 *
L
, 
idx
, *
pi¢um
) {

346 
lua_Numbî
 
n
;

347 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

348 
i¢um
 = 
	`t⁄umbî
(
o
, &
n
);

349 i‡(!
i¢um
)

350 
n
 = 0;

351 i‡(
pi¢um
Ë*pi¢um = 
i¢um
;

352  
n
;

353 
	}
}

356 
LUA_API
 
lua_I¡egî
 
	$lua_toöãgîx
 (
lua_Sèã
 *
L
, 
idx
, *
pi¢um
) {

357 
lua_I¡egî
 
ªs
;

358 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

359 
i¢um
 = 
	`toöãgî
(
o
, &
ªs
);

360 i‡(!
i¢um
)

361 
ªs
 = 0;

362 i‡(
pi¢um
Ë*pi¢um = 
i¢um
;

363  
ªs
;

364 
	}
}

367 
LUA_API
 
	$lua_toboﬁón
 (
lua_Sèã
 *
L
, 
idx
) {

368 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

369  !
	`l_isÁl£
(
o
);

370 
	}
}

373 
LUA_API
 c⁄° *
	$lua_tﬁ°rög
 (
lua_Sèã
 *
L
, 
idx
, 
size_t
 *
Àn
) {

374 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

375 i‡(!
	`âis°rög
(
o
)) {

376 i‡(!
	`cvt2°r
(
o
)) {

377 i‡(
Àn
 !
NULL
) *len = 0;

378  
NULL
;

380 
	`lua_lock
(
L
);

381 
	`luaO_to°rög
(
L
, 
o
);

382 
	`luaC_checkGC
(
L
);

383 
o
 = 
	`ödex2addr
(
L
, 
idx
);

384 
	`lua_u∆ock
(
L
);

386 i‡(
Àn
 !
NULL
)

387 *
Àn
 = 
	`v¶í
(
o
);

388  
	`svÆue
(
o
);

389 
	}
}

392 
LUA_API
 
size_t
 
	$lua_øwÀn
 (
lua_Sèã
 *
L
, 
idx
) {

393 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

394 
	`ây≥
(
o
)) {

395 
LUA_TSHRSTR
:  
	`tsvÆue
(
o
)->
shæí
;

396 
LUA_TLNGSTR
:  
	`tsvÆue
(
o
)->
u
.
 gÀn
;

397 
LUA_TUSERDATA
:  
	`uvÆue
(
o
)->
Àn
;

398 
LUA_TTABLE
:  
	`luaH_gën
(
	`hvÆue
(
o
));

401 
	}
}

404 
LUA_API
 
lua_CFun˘i⁄
 
	$lua_tocfun˘i⁄
 (
lua_Sèã
 *
L
, 
idx
) {

405 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

406 i‡(
	`âi¶cf
(
o
)Ë 
	`fvÆue
(o);

407 i‡(
	`âisC˛osuª
(
o
))

408  
	`˛CvÆue
(
o
)->
f
;

409  
NULL
;

410 
	}
}

413 
LUA_API
 *
	$lua_tou£rd©a
 (
lua_Sèã
 *
L
, 
idx
) {

414 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

415 
	`ânov
(
o
)) {

416 
LUA_TUSERDATA
:  
	`gëud©amem
(
	`uvÆue
(
o
));

417 
LUA_TLIGHTUSERDATA
:  
	`pvÆue
(
o
);

418 :  
NULL
;

420 
	}
}

423 
LUA_API
 
lua_Sèã
 *
	$lua_tŸhªad
 (
lua_Sèã
 *
L
, 
idx
) {

424 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

425  (!
	`âi°hªad
(
o
)Ë? 
NULL
 : 
	`thvÆue
(o);

426 
	}
}

429 
LUA_API
 c⁄° *
	$lua_t›oöãr
 (
lua_Sèã
 *
L
, 
idx
) {

430 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

431 
	`ây≥
(
o
)) {

432 
LUA_TTABLE
:  
	`hvÆue
(
o
);

433 
LUA_TLCL
:  
	`˛LvÆue
(
o
);

434 
LUA_TCCL
:  
	`˛CvÆue
(
o
);

435 
LUA_TLCF
:  
	`ˇ°
(*, ca°(
size_t
, 
	`fvÆue
(
o
)));

436 
LUA_TTHREAD
:  
	`thvÆue
(
o
);

437 
LUA_TUSERDATA
:  
	`gëud©amem
(
	`uvÆue
(
o
));

438 
LUA_TLIGHTUSERDATA
:  
	`pvÆue
(
o
);

439 :  
NULL
;

441 
	}
}

450 
LUA_API
 
	$lua_pushnû
 (
lua_Sèã
 *
L
) {

451 
	`lua_lock
(
L
);

452 
	`£äûvÆue
(
L
->
t›
);

453 
	`≠i_ö¸_t›
(
L
);

454 
	`lua_u∆ock
(
L
);

455 
	}
}

458 
LUA_API
 
	$lua_pushnumbî
 (
lua_Sèã
 *
L
, 
lua_Numbî
 
n
) {

459 
	`lua_lock
(
L
);

460 
	`£tÊtvÆue
(
L
->
t›
, 
n
);

461 
	`≠i_ö¸_t›
(
L
);

462 
	`lua_u∆ock
(
L
);

463 
	}
}

466 
LUA_API
 
	$lua_pushöãgî
 (
lua_Sèã
 *
L
, 
lua_I¡egî
 
n
) {

467 
	`lua_lock
(
L
);

468 
	`£tivÆue
(
L
->
t›
, 
n
);

469 
	`≠i_ö¸_t›
(
L
);

470 
	`lua_u∆ock
(
L
);

471 
	}
}

479 
LUA_API
 c⁄° *
	$lua_pushl°rög
 (
lua_Sèã
 *
L
, c⁄° *
s
, 
size_t
 
Àn
) {

480 
TSåög
 *
ts
;

481 
	`lua_lock
(
L
);

482 
ts
 = (
Àn
 =0Ë? 
	`luaS_√w
(
L
, ""Ë: 
	`luaS_√wl°r
(L, 
s
,Üen);

483 
	`£tsvÆue2s
(
L
, L->
t›
, 
ts
);

484 
	`≠i_ö¸_t›
(
L
);

485 
	`luaC_checkGC
(
L
);

486 
	`lua_u∆ock
(
L
);

487  
	`gë°r
(
ts
);

488 
	}
}

491 
LUA_API
 c⁄° *
	$lua_push°rög
 (
lua_Sèã
 *
L
, c⁄° *
s
) {

492 
	`lua_lock
(
L
);

493 i‡(
s
 =
NULL
)

494 
	`£äûvÆue
(
L
->
t›
);

496 
TSåög
 *
ts
;

497 
ts
 = 
	`luaS_√w
(
L
, 
s
);

498 
	`£tsvÆue2s
(
L
, L->
t›
, 
ts
);

499 
s
 = 
	`gë°r
(
ts
);

501 
	`≠i_ö¸_t›
(
L
);

502 
	`luaC_checkGC
(
L
);

503 
	`lua_u∆ock
(
L
);

504  
s
;

505 
	}
}

508 
LUA_API
 c⁄° *
	$lua_pushvf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
,

509 
va_li°
 
¨gp
) {

510 c⁄° *
ªt
;

511 
	`lua_lock
(
L
);

512 
ªt
 = 
	`luaO_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

513 
	`luaC_checkGC
(
L
);

514 
	`lua_u∆ock
(
L
);

515  
ªt
;

516 
	}
}

519 
LUA_API
 c⁄° *
	$lua_pushf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...) {

520 c⁄° *
ªt
;

521 
va_li°
 
¨gp
;

522 
	`lua_lock
(
L
);

523 
	`va_°¨t
(
¨gp
, 
fmt
);

524 
ªt
 = 
	`luaO_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

525 
	`va_íd
(
¨gp
);

526 
	`luaC_checkGC
(
L
);

527 
	`lua_u∆ock
(
L
);

528  
ªt
;

529 
	}
}

532 
LUA_API
 
	$lua_pushc˛osuª
 (
lua_Sèã
 *
L
, 
lua_CFun˘i⁄
 
‚
, 
n
) {

533 
	`lua_lock
(
L
);

534 i‡(
n
 == 0) {

535 
	`£tfvÆue
(
L
->
t›
, 
‚
);

538 
CClosuª
 *
˛
;

539 
	`≠i_check√Àms
(
L
, 
n
);

540 
	`≠i_check
(
L
, 
n
 <
MAXUPVAL
, "upvalue indexÅooÜarge");

541 
˛
 = 
	`luaF_√wC˛osuª
(
L
, 
n
);

542 
˛
->
f
 = 
‚
;

543 
L
->
t›
 -
n
;

544 
n
--) {

545 
	`£tobj2n
(
L
, &
˛
->
upvÆue
[
n
], L->
t›
 +Ç);

548 
	`£t˛CvÆue
(
L
, L->
t›
, 
˛
);

550 
	`≠i_ö¸_t›
(
L
);

551 
	`luaC_checkGC
(
L
);

552 
	`lua_u∆ock
(
L
);

553 
	}
}

556 
LUA_API
 
	$lua_pushboﬁón
 (
lua_Sèã
 *
L
, 
b
) {

557 
	`lua_lock
(
L
);

558 
	`£tbvÆue
(
L
->
t›
, (
b
 != 0));

559 
	`≠i_ö¸_t›
(
L
);

560 
	`lua_u∆ock
(
L
);

561 
	}
}

564 
LUA_API
 
	$lua_pushlightu£rd©a
 (
lua_Sèã
 *
L
, *
p
) {

565 
	`lua_lock
(
L
);

566 
	`£çvÆue
(
L
->
t›
, 
p
);

567 
	`≠i_ö¸_t›
(
L
);

568 
	`lua_u∆ock
(
L
);

569 
	}
}

572 
LUA_API
 
	$lua_pushthªad
 (
lua_Sèã
 *
L
) {

573 
	`lua_lock
(
L
);

574 
	`£âhvÆue
(
L
, L->
t›
, L);

575 
	`≠i_ö¸_t›
(
L
);

576 
	`lua_u∆ock
(
L
);

577  (
	`G
(
L
)->
maöthªad
 == L);

578 
	}
}

587 
	$auxgë°r
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, c⁄° *
k
) {

588 c⁄° 
TVÆue
 *
¶Ÿ
;

589 
TSåög
 *
°r
 = 
	`luaS_√w
(
L
, 
k
);

590 i‡(
	`luaV_Á°gë
(
L
, 
t
, 
°r
, 
¶Ÿ
, 
luaH_gë°r
)) {

591 
	`£tobj2s
(
L
, L->
t›
, 
¶Ÿ
);

592 
	`≠i_ö¸_t›
(
L
);

595 
	`£tsvÆue2s
(
L
, L->
t›
, 
°r
);

596 
	`≠i_ö¸_t›
(
L
);

597 
	`luaV_föishgë
(
L
, 
t
, L->
t›
 - 1, L->t› - 1, 
¶Ÿ
);

599 
	`lua_u∆ock
(
L
);

600  
	`ânov
(
L
->
t›
 - 1);

601 
	}
}

604 
LUA_API
 
	$lua_gëglobÆ
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

605 
TabÀ
 *
ªg
 = 
	`hvÆue
(&
	`G
(
L
)->
l_ªgi°ry
);

606 
	`lua_lock
(
L
);

607  
	`auxgë°r
(
L
, 
	`luaH_gëöt
(
ªg
, 
LUA_RIDX_GLOBALS
), 
«me
);

608 
	}
}

611 
LUA_API
 
	$lua_gëèbÀ
 (
lua_Sèã
 *
L
, 
idx
) {

612 
StkId
 
t
;

613 
	`lua_lock
(
L
);

614 
t
 = 
	`ödex2addr
(
L
, 
idx
);

615 
	`luaV_gëèbÀ
(
L
, 
t
, L->
t›
 - 1, L->top - 1);

616 
	`lua_u∆ock
(
L
);

617  
	`ânov
(
L
->
t›
 - 1);

618 
	}
}

621 
LUA_API
 
	$lua_gëfõld
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
k
) {

622 
	`lua_lock
(
L
);

623  
	`auxgë°r
(
L
, 
	`ödex2addr
(L, 
idx
), 
k
);

624 
	}
}

627 
LUA_API
 
	$lua_gëi
 (
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
) {

628 
StkId
 
t
;

629 c⁄° 
TVÆue
 *
¶Ÿ
;

630 
	`lua_lock
(
L
);

631 
t
 = 
	`ödex2addr
(
L
, 
idx
);

632 i‡(
	`luaV_Á°gë
(
L
, 
t
, 
n
, 
¶Ÿ
, 
luaH_gëöt
)) {

633 
	`£tobj2s
(
L
, L->
t›
, 
¶Ÿ
);

634 
	`≠i_ö¸_t›
(
L
);

637 
	`£tivÆue
(
L
->
t›
, 
n
);

638 
	`≠i_ö¸_t›
(
L
);

639 
	`luaV_föishgë
(
L
, 
t
, L->
t›
 - 1, L->t› - 1, 
¶Ÿ
);

641 
	`lua_u∆ock
(
L
);

642  
	`ânov
(
L
->
t›
 - 1);

643 
	}
}

646 
LUA_API
 
	$lua_øwgë
 (
lua_Sèã
 *
L
, 
idx
) {

647 
StkId
 
t
;

648 
	`lua_lock
(
L
);

649 
t
 = 
	`ödex2addr
(
L
, 
idx
);

650 
	`≠i_check
(
L
, 
	`âi°abÀ
(
t
), "tableÉxpected");

651 
	`£tobj2s
(
L
, L->
t›
 - 1, 
	`luaH_gë
(
	`hvÆue
(
t
), L->top - 1));

652 
	`lua_u∆ock
(
L
);

653  
	`ânov
(
L
->
t›
 - 1);

654 
	}
}

657 
LUA_API
 
	$lua_øwgëi
 (
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
) {

658 
StkId
 
t
;

659 
	`lua_lock
(
L
);

660 
t
 = 
	`ödex2addr
(
L
, 
idx
);

661 
	`≠i_check
(
L
, 
	`âi°abÀ
(
t
), "tableÉxpected");

662 
	`£tobj2s
(
L
, L->
t›
, 
	`luaH_gëöt
(
	`hvÆue
(
t
), 
n
));

663 
	`≠i_ö¸_t›
(
L
);

664 
	`lua_u∆ock
(
L
);

665  
	`ânov
(
L
->
t›
 - 1);

666 
	}
}

669 
LUA_API
 
	$lua_øwgëp
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
p
) {

670 
StkId
 
t
;

671 
TVÆue
 
k
;

672 
	`lua_lock
(
L
);

673 
t
 = 
	`ödex2addr
(
L
, 
idx
);

674 
	`≠i_check
(
L
, 
	`âi°abÀ
(
t
), "tableÉxpected");

675 
	`£çvÆue
(&
k
, 
	`ˇ°
(*, 
p
));

676 
	`£tobj2s
(
L
, L->
t›
, 
	`luaH_gë
(
	`hvÆue
(
t
), &
k
));

677 
	`≠i_ö¸_t›
(
L
);

678 
	`lua_u∆ock
(
L
);

679  
	`ânov
(
L
->
t›
 - 1);

680 
	}
}

683 
LUA_API
 
	$lua_¸óãèbÀ
 (
lua_Sèã
 *
L
, 
«ºay
, 
ƒec
) {

684 
TabÀ
 *
t
;

685 
	`lua_lock
(
L
);

686 
t
 = 
	`luaH_√w
(
L
);

687 
	`£thvÆue
(
L
, L->
t›
, 
t
);

688 
	`≠i_ö¸_t›
(
L
);

689 i‡(
«ºay
 > 0 || 
ƒec
 > 0)

690 
	`luaH_ªsize
(
L
, 
t
, 
«ºay
, 
ƒec
);

691 
	`luaC_checkGC
(
L
);

692 
	`lua_u∆ock
(
L
);

693 
	}
}

696 
LUA_API
 
	$lua_gëmë©abÀ
 (
lua_Sèã
 *
L
, 
objödex
) {

697 c⁄° 
TVÆue
 *
obj
;

698 
TabÀ
 *
mt
;

699 
ªs
 = 0;

700 
	`lua_lock
(
L
);

701 
obj
 = 
	`ödex2addr
(
L
, 
objödex
);

702 
	`ânov
(
obj
)) {

703 
LUA_TTABLE
:

704 
mt
 = 
	`hvÆue
(
obj
)->
më©abÀ
;

706 
LUA_TUSERDATA
:

707 
mt
 = 
	`uvÆue
(
obj
)->
më©abÀ
;

710 
mt
 = 
	`G
(
L
)->mt[
	`ânov
(
obj
)];

713 i‡(
mt
 !
NULL
) {

714 
	`£thvÆue
(
L
, L->
t›
, 
mt
);

715 
	`≠i_ö¸_t›
(
L
);

716 
ªs
 = 1;

718 
	`lua_u∆ock
(
L
);

719  
ªs
;

720 
	}
}

723 
LUA_API
 
	$lua_gëu£rvÆue
 (
lua_Sèã
 *
L
, 
idx
) {

724 
StkId
 
o
;

725 
	`lua_lock
(
L
);

726 
o
 = 
	`ödex2addr
(
L
, 
idx
);

727 
	`≠i_check
(
L
, 
	`âisfuŒu£rd©a
(
o
), "full userdataÉxpected");

728 
	`gëu£rvÆue
(
L
, 
	`uvÆue
(
o
), L->
t›
);

729 
	`≠i_ö¸_t›
(
L
);

730 
	`lua_u∆ock
(
L
);

731  
	`ânov
(
L
->
t›
 - 1);

732 
	}
}

742 
	$aux£t°r
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, c⁄° *
k
) {

743 c⁄° 
TVÆue
 *
¶Ÿ
;

744 
TSåög
 *
°r
 = 
	`luaS_√w
(
L
, 
k
);

745 
	`≠i_check√Àms
(
L
, 1);

746 i‡(
	`luaV_Á°£t
(
L
, 
t
, 
°r
, 
¶Ÿ
, 
luaH_gë°r
, L->
t›
 - 1))

747 
L
->
t›
--;

749 
	`£tsvÆue2s
(
L
, L->
t›
, 
°r
);

750 
	`≠i_ö¸_t›
(
L
);

751 
	`luaV_föish£t
(
L
, 
t
, L->
t›
 - 1, L->t› - 2, 
¶Ÿ
);

752 
L
->
t›
 -= 2;

754 
	`lua_u∆ock
(
L
);

755 
	}
}

758 
LUA_API
 
	$lua_£tglobÆ
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

759 
TabÀ
 *
ªg
 = 
	`hvÆue
(&
	`G
(
L
)->
l_ªgi°ry
);

760 
	`lua_lock
(
L
);

761 
	`aux£t°r
(
L
, 
	`luaH_gëöt
(
ªg
, 
LUA_RIDX_GLOBALS
), 
«me
);

762 
	}
}

765 
LUA_API
 
	$lua_£âabÀ
 (
lua_Sèã
 *
L
, 
idx
) {

766 
StkId
 
t
;

767 
	`lua_lock
(
L
);

768 
	`≠i_check√Àms
(
L
, 2);

769 
t
 = 
	`ödex2addr
(
L
, 
idx
);

770 
	`luaV_£âabÀ
(
L
, 
t
, L->
t›
 - 2, L->top - 1);

771 
L
->
t›
 -= 2;

772 
	`lua_u∆ock
(
L
);

773 
	}
}

776 
LUA_API
 
	$lua_£tfõld
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
k
) {

777 
	`lua_lock
(
L
);

778 
	`aux£t°r
(
L
, 
	`ödex2addr
(L, 
idx
), 
k
);

779 
	}
}

782 
LUA_API
 
	$lua_£ti
 (
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
) {

783 
StkId
 
t
;

784 c⁄° 
TVÆue
 *
¶Ÿ
;

785 
	`lua_lock
(
L
);

786 
	`≠i_check√Àms
(
L
, 1);

787 
t
 = 
	`ödex2addr
(
L
, 
idx
);

788 i‡(
	`luaV_Á°£t
(
L
, 
t
, 
n
, 
¶Ÿ
, 
luaH_gëöt
, L->
t›
 - 1))

789 
L
->
t›
--;

791 
	`£tivÆue
(
L
->
t›
, 
n
);

792 
	`≠i_ö¸_t›
(
L
);

793 
	`luaV_föish£t
(
L
, 
t
, L->
t›
 - 1, L->t› - 2, 
¶Ÿ
);

794 
L
->
t›
 -= 2;

796 
	`lua_u∆ock
(
L
);

797 
	}
}

800 
LUA_API
 
	$lua_øw£t
 (
lua_Sèã
 *
L
, 
idx
) {

801 
StkId
 
o
;

802 
TVÆue
 *
¶Ÿ
;

803 
	`lua_lock
(
L
);

804 
	`≠i_check√Àms
(
L
, 2);

805 
o
 = 
	`ödex2addr
(
L
, 
idx
);

806 
	`≠i_check
(
L
, 
	`âi°abÀ
(
o
), "tableÉxpected");

807 
¶Ÿ
 = 
	`luaH_£t
(
L
, 
	`hvÆue
(
o
), L->
t›
 - 2);

808 
	`£tobj2t
(
L
, 
¶Ÿ
, L->
t›
 - 1);

809 
	`övÆid©eTMˇche
(
	`hvÆue
(
o
));

810 
	`luaC_b¨rõrback
(
L
, 
	`hvÆue
(
o
), L->
t›
-1);

811 
L
->
t›
 -= 2;

812 
	`lua_u∆ock
(
L
);

813 
	}
}

816 
LUA_API
 
	$lua_øw£ti
 (
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
) {

817 
StkId
 
o
;

818 
	`lua_lock
(
L
);

819 
	`≠i_check√Àms
(
L
, 1);

820 
o
 = 
	`ödex2addr
(
L
, 
idx
);

821 
	`≠i_check
(
L
, 
	`âi°abÀ
(
o
), "tableÉxpected");

822 
	`luaH_£töt
(
L
, 
	`hvÆue
(
o
), 
n
, L->
t›
 - 1);

823 
	`luaC_b¨rõrback
(
L
, 
	`hvÆue
(
o
), L->
t›
-1);

824 
L
->
t›
--;

825 
	`lua_u∆ock
(
L
);

826 
	}
}

829 
LUA_API
 
	$lua_øw£ç
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
p
) {

830 
StkId
 
o
;

831 
TVÆue
 
k
, *
¶Ÿ
;

832 
	`lua_lock
(
L
);

833 
	`≠i_check√Àms
(
L
, 1);

834 
o
 = 
	`ödex2addr
(
L
, 
idx
);

835 
	`≠i_check
(
L
, 
	`âi°abÀ
(
o
), "tableÉxpected");

836 
	`£çvÆue
(&
k
, 
	`ˇ°
(*, 
p
));

837 
¶Ÿ
 = 
	`luaH_£t
(
L
, 
	`hvÆue
(
o
), &
k
);

838 
	`£tobj2t
(
L
, 
¶Ÿ
, L->
t›
 - 1);

839 
	`luaC_b¨rõrback
(
L
, 
	`hvÆue
(
o
), L->
t›
 - 1);

840 
L
->
t›
--;

841 
	`lua_u∆ock
(
L
);

842 
	}
}

845 
LUA_API
 
	$lua_£tmë©abÀ
 (
lua_Sèã
 *
L
, 
objödex
) {

846 
TVÆue
 *
obj
;

847 
TabÀ
 *
mt
;

848 
	`lua_lock
(
L
);

849 
	`≠i_check√Àms
(
L
, 1);

850 
obj
 = 
	`ödex2addr
(
L
, 
objödex
);

851 i‡(
	`âi¢û
(
L
->
t›
 - 1))

852 
mt
 = 
NULL
;

854 
	`≠i_check
(
L
, 
	`âi°abÀ
(L->
t›
 - 1), "tableÉxpected");

855 
mt
 = 
	`hvÆue
(
L
->
t›
 - 1);

857 
	`ânov
(
obj
)) {

858 
LUA_TTABLE
: {

859 
	`hvÆue
(
obj
)->
më©abÀ
 = 
mt
;

860 i‡(
mt
) {

861 
	`luaC_objb¨rõr
(
L
, 
	`gcvÆue
(
obj
), 
mt
);

862 
	`luaC_checkföÆizî
(
L
, 
	`gcvÆue
(
obj
), 
mt
);

866 
LUA_TUSERDATA
: {

867 
	`uvÆue
(
obj
)->
më©abÀ
 = 
mt
;

868 i‡(
mt
) {

869 
	`luaC_objb¨rõr
(
L
, 
	`uvÆue
(
obj
), 
mt
);

870 
	`luaC_checkföÆizî
(
L
, 
	`gcvÆue
(
obj
), 
mt
);

875 
	`G
(
L
)->
mt
[
	`ânov
(
obj
)] = mt;

879 
L
->
t›
--;

880 
	`lua_u∆ock
(
L
);

882 
	}
}

885 
LUA_API
 
	$lua_£tu£rvÆue
 (
lua_Sèã
 *
L
, 
idx
) {

886 
StkId
 
o
;

887 
	`lua_lock
(
L
);

888 
	`≠i_check√Àms
(
L
, 1);

889 
o
 = 
	`ödex2addr
(
L
, 
idx
);

890 
	`≠i_check
(
L
, 
	`âisfuŒu£rd©a
(
o
), "full userdataÉxpected");

891 
	`£tu£rvÆue
(
L
, 
	`uvÆue
(
o
), L->
t›
 - 1);

892 
	`luaC_b¨rõr
(
L
, 
	`gcvÆue
(
o
), L->
t›
 - 1);

893 
L
->
t›
--;

894 
	`lua_u∆ock
(
L
);

895 
	}
}

903 
	#checkªsu…s
(
L
,
«
,
ƒ
) \

904 
	`≠i_check
(
L
, (
ƒ
Ë=
LUA_MULTRET
 || (L->
ci
->
t›
 - L->t› >“rË- (
«
)), \

905 "ªsu…†‰om fun˘i⁄ ovîÊow cuºíà°ack size")

	)

908 
LUA_API
 
	$lua_ˇŒk
 (
lua_Sèã
 *
L
, 
«rgs
, 
ƒesu…s
,

909 
lua_KC⁄ãxt
 
˘x
, 
lua_KFun˘i⁄
 
k
) {

910 
StkId
 
func
;

911 
	`lua_lock
(
L
);

912 
	`≠i_check
(
L
, 
k
 =
NULL
 || !
	`isLua
(L->
ci
),

914 
	`≠i_check√Àms
(
L
, 
«rgs
+1);

915 
	`≠i_check
(
L
, L->
°©us
 =
LUA_OK
, "cannot do calls onÇon-normalÅhread");

916 
	`checkªsu…s
(
L
, 
«rgs
, 
ƒesu…s
);

917 
func
 = 
L
->
t›
 - (
«rgs
+1);

918 i‡(
k
 !
NULL
 && 
L
->
¬y
 == 0) {

919 
L
->
ci
->
u
.
c
.
k
 = k;

920 
L
->
ci
->
u
.
c
.
˘x
 = ctx;

921 
	`luaD_ˇŒ
(
L
, 
func
, 
ƒesu…s
);

924 
	`luaD_ˇŒnoyõld
(
L
, 
func
, 
ƒesu…s
);

925 
	`adju°ªsu…s
(
L
, 
ƒesu…s
);

926 
	`lua_u∆ock
(
L
);

927 
	}
}

934 
	sCÆlS
 {

935 
StkId
 
	mfunc
;

936 
	mƒesu…s
;

940 
	$f_ˇŒ
 (
lua_Sèã
 *
L
, *
ud
) {

941 
CÆlS
 *
c
 = 
	`ˇ°
(CÆlS *, 
ud
);

942 
	`luaD_ˇŒnoyõld
(
L
, 
c
->
func
, c->
ƒesu…s
);

943 
	}
}

947 
LUA_API
 
	$lua_pˇŒk
 (
lua_Sèã
 *
L
, 
«rgs
, 
ƒesu…s
, 
îrfunc
,

948 
lua_KC⁄ãxt
 
˘x
, 
lua_KFun˘i⁄
 
k
) {

949 
CÆlS
 
c
;

950 
°©us
;

951 
±rdiff_t
 
func
;

952 
	`lua_lock
(
L
);

953 
	`≠i_check
(
L
, 
k
 =
NULL
 || !
	`isLua
(L->
ci
),

955 
	`≠i_check√Àms
(
L
, 
«rgs
+1);

956 
	`≠i_check
(
L
, L->
°©us
 =
LUA_OK
, "cannot do calls onÇon-normalÅhread");

957 
	`checkªsu…s
(
L
, 
«rgs
, 
ƒesu…s
);

958 i‡(
îrfunc
 == 0)

959 
func
 = 0;

961 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
îrfunc
);

962 
	`≠i_check°acködex
(
L
, 
îrfunc
, 
o
);

963 
func
 = 
	`ßve°ack
(
L
, 
o
);

965 
c
.
func
 = 
L
->
t›
 - (
«rgs
+1);

966 i‡(
k
 =
NULL
 || 
L
->
¬y
 > 0) {

967 
c
.
ƒesu…s
 =Çresults;

968 
°©us
 = 
	`luaD_pˇŒ
(
L
, 
f_ˇŒ
, &
c
, 
	`ßve°ack
(L, c.
func
), func);

971 
CÆlInfo
 *
ci
 = 
L
->ci;

972 
ci
->
u
.
c
.
k
 = k;

973 
ci
->
u
.
c
.
˘x
 = ctx;

975 
ci
->
exåa
 = 
	`ßve°ack
(
L
, 
c
.
func
);

976 
ci
->
u
.
c
.
ﬁd_îrfunc
 = 
L
->
îrfunc
;

977 
L
->
îrfunc
 = 
func
;

978 
	`£tﬂh
(
ci
->
ˇŒ°©us
, 
L
->
Ælowhook
);

979 
ci
->
ˇŒ°©us
 |
CIST_YPCALL
;

980 
	`luaD_ˇŒ
(
L
, 
c
.
func
, 
ƒesu…s
);

981 
ci
->
ˇŒ°©us
 &~
CIST_YPCALL
;

982 
L
->
îrfunc
 = 
ci
->
u
.
c
.
ﬁd_îrfunc
;

983 
°©us
 = 
LUA_OK
;

985 
	`adju°ªsu…s
(
L
, 
ƒesu…s
);

986 
	`lua_u∆ock
(
L
);

987  
°©us
;

988 
	}
}

991 
LUA_API
 
	$lua_lﬂd
 (
lua_Sèã
 *
L
, 
lua_Ródî
 
ªadî
, *
d©a
,

992 c⁄° *
chunk«me
, c⁄° *
mode
) {

993 
ZIO
 
z
;

994 
°©us
;

995 
	`lua_lock
(
L
);

996 i‡(!
chunk«me
) chunkname = "?";

997 
	`luaZ_öô
(
L
, &
z
, 
ªadî
, 
d©a
);

998 
°©us
 = 
	`luaD_¥Ÿe˘ed∑r£r
(
L
, &
z
, 
chunk«me
, 
mode
);

999 i‡(
°©us
 =
LUA_OK
) {

1000 
LClosuª
 *
f
 = 
	`˛LvÆue
(
L
->
t›
 - 1);

1001 i‡(
f
->
nupvÆues
 >= 1) {

1003 
TabÀ
 *
ªg
 = 
	`hvÆue
(&
	`G
(
L
)->
l_ªgi°ry
);

1004 c⁄° 
TVÆue
 *
gt
 = 
	`luaH_gëöt
(
ªg
, 
LUA_RIDX_GLOBALS
);

1006 
	`£tobj
(
L
, 
f
->
upvÆs
[0]->
v
, 
gt
);

1007 
	`luaC_upvÆb¨rõr
(
L
, 
f
->
upvÆs
[0]);

1010 
	`lua_u∆ock
(
L
);

1011  
°©us
;

1012 
	}
}

1015 
LUA_API
 
	$lua_dump
 (
lua_Sèã
 *
L
, 
lua_Wrôî
 
wrôî
, *
d©a
, 
°rù
) {

1016 
°©us
;

1017 
TVÆue
 *
o
;

1018 
	`lua_lock
(
L
);

1019 
	`≠i_check√Àms
(
L
, 1);

1020 
o
 = 
L
->
t›
 - 1;

1021 i‡(
	`isLfun˘i⁄
(
o
))

1022 
°©us
 = 
	`luaU_dump
(
L
, 
	`gë¥Ÿo
(
o
), 
wrôî
, 
d©a
, 
°rù
);

1024 
°©us
 = 1;

1025 
	`lua_u∆ock
(
L
);

1026  
°©us
;

1027 
	}
}

1030 
LUA_API
 
	$lua_°©us
 (
lua_Sèã
 *
L
) {

1031  
L
->
°©us
;

1032 
	}
}

1039 
LUA_API
 
	$lua_gc
 (
lua_Sèã
 *
L
, 
wh©
, 
d©a
) {

1040 
ªs
 = 0;

1041 
globÆ_Sèã
 *
g
;

1042 
	`lua_lock
(
L
);

1043 
g
 = 
	`G
(
L
);

1044 
wh©
) {

1045 
LUA_GCSTOP
: {

1046 
g
->
g¸u¬ög
 = 0;

1049 
LUA_GCRESTART
: {

1050 
	`luaE_£tdebt
(
g
, 0);

1051 
g
->
g¸u¬ög
 = 1;

1054 
LUA_GCCOLLECT
: {

1055 
	`luaC_fuŒgc
(
L
, 0);

1058 
LUA_GCCOUNT
: {

1060 
ªs
 = 
	`ˇ°_öt
(
	`gëtŸÆbyãs
(
g
) >> 10);

1063 
LUA_GCCOUNTB
: {

1064 
ªs
 = 
	`ˇ°_öt
(
	`gëtŸÆbyãs
(
g
) & 0x3ff);

1067 
LUA_GCSTEP
: {

1068 
l_mem
 
debt
 = 1;

1069 
lu_byã
 
ﬁdru¬ög
 = 
g
->
g¸u¬ög
;

1070 
g
->
g¸u¬ög
 = 1;

1071 i‡(
d©a
 == 0) {

1072 
	`luaE_£tdebt
(
g
, -
GCSTEPSIZE
);

1073 
	`luaC_°ï
(
L
);

1076 
debt
 = 
	`ˇ°
(
l_mem
, 
d©a
Ë* 1024 + 
g
->
GCdebt
;

1077 
	`luaE_£tdebt
(
g
, 
debt
);

1078 
	`luaC_checkGC
(
L
);

1080 
g
->
g¸u¬ög
 = 
ﬁdru¬ög
;

1081 i‡(
debt
 > 0 && 
g
->
gc°©e
 =
GCS∑u£
)

1082 
ªs
 = 1;

1085 
LUA_GCSETPAUSE
: {

1086 
ªs
 = 
g
->
g˝au£
;

1087 
g
->
g˝au£
 = 
d©a
;

1090 
LUA_GCSETSTEPMUL
: {

1091 
ªs
 = 
g
->
gc°ïmul
;

1092 i‡(
d©a
 < 40) data = 40;

1093 
g
->
gc°ïmul
 = 
d©a
;

1096 
LUA_GCISRUNNING
: {

1097 
ªs
 = 
g
->
g¸u¬ög
;

1100 : 
ªs
 = -1;

1102 
	`lua_u∆ock
(
L
);

1103  
ªs
;

1104 
	}
}

1113 
LUA_API
 
	$lua_îr‹
 (
lua_Sèã
 *
L
) {

1114 
	`lua_lock
(
L
);

1115 
	`≠i_check√Àms
(
L
, 1);

1116 
	`luaG_îr‹msg
(
L
);

1119 
	}
}

1122 
LUA_API
 
	$lua_√xt
 (
lua_Sèã
 *
L
, 
idx
) {

1123 
StkId
 
t
;

1124 
m‹e
;

1125 
	`lua_lock
(
L
);

1126 
t
 = 
	`ödex2addr
(
L
, 
idx
);

1127 
	`≠i_check
(
L
, 
	`âi°abÀ
(
t
), "tableÉxpected");

1128 
m‹e
 = 
	`luaH_√xt
(
L
, 
	`hvÆue
(
t
), L->
t›
 - 1);

1129 i‡(
m‹e
) {

1130 
	`≠i_ö¸_t›
(
L
);

1133 
L
->
t›
 -= 1;

1134 
	`lua_u∆ock
(
L
);

1135  
m‹e
;

1136 
	}
}

1139 
LUA_API
 
	$lua_c⁄ˇt
 (
lua_Sèã
 *
L
, 
n
) {

1140 
	`lua_lock
(
L
);

1141 
	`≠i_check√Àms
(
L
, 
n
);

1142 i‡(
n
 >= 2) {

1143 
	`luaV_c⁄ˇt
(
L
, 
n
);

1145 i‡(
n
 == 0) {

1146 
	`£tsvÆue2s
(
L
, L->
t›
, 
	`luaS_√wl°r
(L, "", 0));

1147 
	`≠i_ö¸_t›
(
L
);

1150 
	`luaC_checkGC
(
L
);

1151 
	`lua_u∆ock
(
L
);

1152 
	}
}

1155 
LUA_API
 
	$lua_Àn
 (
lua_Sèã
 *
L
, 
idx
) {

1156 
StkId
 
t
;

1157 
	`lua_lock
(
L
);

1158 
t
 = 
	`ödex2addr
(
L
, 
idx
);

1159 
	`luaV_objÀn
(
L
, L->
t›
, 
t
);

1160 
	`≠i_ö¸_t›
(
L
);

1161 
	`lua_u∆ock
(
L
);

1162 
	}
}

1165 
LUA_API
 
lua_AŒoc
 
	$lua_gëÆlocf
 (
lua_Sèã
 *
L
, **
ud
) {

1166 
lua_AŒoc
 
f
;

1167 
	`lua_lock
(
L
);

1168 i‡(
ud
Ë*ud = 
	`G
(
L
)->ud;

1169 
f
 = 
	`G
(
L
)->
‰óŒoc
;

1170 
	`lua_u∆ock
(
L
);

1171  
f
;

1172 
	}
}

1175 
LUA_API
 
	$lua_£èŒocf
 (
lua_Sèã
 *
L
, 
lua_AŒoc
 
f
, *
ud
) {

1176 
	`lua_lock
(
L
);

1177 
	`G
(
L
)->
ud
 = ud;

1178 
	`G
(
L
)->
‰óŒoc
 = 
f
;

1179 
	`lua_u∆ock
(
L
);

1180 
	}
}

1183 
LUA_API
 *
	$lua_√wu£rd©a
 (
lua_Sèã
 *
L
, 
size_t
 
size
) {

1184 
Ud©a
 *
u
;

1185 
	`lua_lock
(
L
);

1186 
u
 = 
	`luaS_√wud©a
(
L
, 
size
);

1187 
	`£tuvÆue
(
L
, L->
t›
, 
u
);

1188 
	`≠i_ö¸_t›
(
L
);

1189 
	`luaC_checkGC
(
L
);

1190 
	`lua_u∆ock
(
L
);

1191  
	`gëud©amem
(
u
);

1192 
	}
}

1196 c⁄° *
	$aux_upvÆue
 (
StkId
 
fi
, 
n
, 
TVÆue
 **
vÆ
,

1197 
CClosuª
 **
ow√r
, 
UpVÆ
 **
uv
) {

1198 
	`ây≥
(
fi
)) {

1199 
LUA_TCCL
: {

1200 
CClosuª
 *
f
 = 
	`˛CvÆue
(
fi
);

1201 i‡(!(1 <
n
 &&Ç <
f
->
nupvÆues
)Ë 
NULL
;

1202 *
vÆ
 = &
f
->
upvÆue
[
n
-1];

1203 i‡(
ow√r
Ë*ow√∏
f
;

1206 
LUA_TLCL
: {

1207 
LClosuª
 *
f
 = 
	`˛LvÆue
(
fi
);

1208 
TSåög
 *
«me
;

1209 
PrŸo
 *
p
 = 
f
->p;

1210 i‡(!(1 <
n
 &&Ç <
p
->
sizeupvÆues
)Ë 
NULL
;

1211 *
vÆ
 = 
f
->
upvÆs
[
n
-1]->
v
;

1212 i‡(
uv
Ë*uv = 
f
->
upvÆs
[
n
 - 1];

1213 
«me
 = 
p
->
upvÆues
[
n
-1].name;

1214  (
«me
 =
NULL
Ë? "(*nÿ«me)" : 
	`gë°r
(name);

1216 :  
NULL
;

1218 
	}
}

1221 
LUA_API
 c⁄° *
	$lua_gëupvÆue
 (
lua_Sèã
 *
L
, 
funcödex
, 
n
) {

1222 c⁄° *
«me
;

1223 
TVÆue
 *
vÆ
 = 
NULL
;

1224 
	`lua_lock
(
L
);

1225 
«me
 = 
	`aux_upvÆue
(
	`ödex2addr
(
L
, 
funcödex
), 
n
, &
vÆ
, 
NULL
, NULL);

1226 i‡(
«me
) {

1227 
	`£tobj2s
(
L
, L->
t›
, 
vÆ
);

1228 
	`≠i_ö¸_t›
(
L
);

1230 
	`lua_u∆ock
(
L
);

1231  
«me
;

1232 
	}
}

1235 
LUA_API
 c⁄° *
	$lua_£tupvÆue
 (
lua_Sèã
 *
L
, 
funcödex
, 
n
) {

1236 c⁄° *
«me
;

1237 
TVÆue
 *
vÆ
 = 
NULL
;

1238 
CClosuª
 *
ow√r
 = 
NULL
;

1239 
UpVÆ
 *
uv
 = 
NULL
;

1240 
StkId
 
fi
;

1241 
	`lua_lock
(
L
);

1242 
fi
 = 
	`ödex2addr
(
L
, 
funcödex
);

1243 
	`≠i_check√Àms
(
L
, 1);

1244 
«me
 = 
	`aux_upvÆue
(
fi
, 
n
, &
vÆ
, &
ow√r
, &
uv
);

1245 i‡(
«me
) {

1246 
L
->
t›
--;

1247 
	`£tobj
(
L
, 
vÆ
, L->
t›
);

1248 i‡(
ow√r
Ë{ 
	`luaC_b¨rõr
(
L
, ow√r, L->
t›
); }

1249 i‡(
uv
Ë{ 
	`luaC_upvÆb¨rõr
(
L
, uv); }

1251 
	`lua_u∆ock
(
L
);

1252  
«me
;

1253 
	}
}

1256 
UpVÆ
 **
	$gëupvÆªf
 (
lua_Sèã
 *
L
, 
fidx
, 
n
, 
LClosuª
 **
pf
) {

1257 
LClosuª
 *
f
;

1258 
StkId
 
fi
 = 
	`ödex2addr
(
L
, 
fidx
);

1259 
	`≠i_check
(
L
, 
	`âisL˛osuª
(
fi
), "Lua functionÉxpected");

1260 
f
 = 
	`˛LvÆue
(
fi
);

1261 
	`≠i_check
(
L
, (1 <
n
 &&Ç <
f
->
p
->
sizeupvÆues
), "invalid upvalue index");

1262 i‡(
pf
Ë*p‡
f
;

1263  &
f
->
upvÆs
[
n
 - 1];

1264 
	}
}

1267 
LUA_API
 *
	$lua_upvÆueid
 (
lua_Sèã
 *
L
, 
fidx
, 
n
) {

1268 
StkId
 
fi
 = 
	`ödex2addr
(
L
, 
fidx
);

1269 
	`ây≥
(
fi
)) {

1270 
LUA_TLCL
: {

1271  *
	`gëupvÆªf
(
L
, 
fidx
, 
n
, 
NULL
);

1273 
LUA_TCCL
: {

1274 
CClosuª
 *
f
 = 
	`˛CvÆue
(
fi
);

1275 
	`≠i_check
(
L
, 1 <
n
 &&Ç <
f
->
nupvÆues
, "invalid upvalue index");

1276  &
f
->
upvÆue
[
n
 - 1];

1279 
	`≠i_check
(
L
, 0, "closureÉxpected");

1280  
NULL
;

1283 
	}
}

1286 
LUA_API
 
	$lua_upvÆuejoö
 (
lua_Sèã
 *
L
, 
fidx1
, 
n1
,

1287 
fidx2
, 
n2
) {

1288 
LClosuª
 *
f1
;

1289 
UpVÆ
 **
up1
 = 
	`gëupvÆªf
(
L
, 
fidx1
, 
n1
, &
f1
);

1290 
UpVÆ
 **
up2
 = 
	`gëupvÆªf
(
L
, 
fidx2
, 
n2
, 
NULL
);

1291 
	`luaC_upvdeccou¡
(
L
, *
up1
);

1292 *
up1
 = *
up2
;

1293 (*
up1
)->
ªfcou¡
++;

1294 i‡(
	`upis›í
(*
up1
)Ë(*up1)->
u
.
›í
.
touched
 = 1;

1295 
	`luaC_upvÆb¨rõr
(
L
, *
up1
);

1296 
	}
}

	@lua/src/lapi.h

7 #i‚de‡
œpi_h


8 
	#œpi_h


	)

11 
	~"Œimôs.h
"

12 
	~"l°©e.h
"

14 
	#≠i_ö¸_t›
(
L
Ë{L->
t›
++; 
	`≠i_check
(L, L->t› <L->
ci
->top, \

15 "°ack ovîÊow");}

	)

17 
	#adju°ªsu…s
(
L
,
ƒes
) \

18 { i‡((
ƒes
Ë=
LUA_MULTRET
 && 
L
->
ci
->
t›
 < L->t›ËL->ci->t› = L->t›; }

	)

20 
	#≠i_check√Àms
(
L
,
n
Ë
	`≠i_check
(L, (nË< (L->
t›
 - L->
ci
->
func
), \

21 "nŸÉnoughÉÀmít†öÅhê°ack")

	)

	@lua/src/lauxlib.c

7 
	#œuxlib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<î∫o.h
>

14 
	~<°d¨g.h
>

15 
	~<°dio.h
>

16 
	~<°dlib.h
>

17 
	~<°rög.h
>

25 
	~"lua.h
"

27 
	~"œuxlib.h
"

37 
	#LEVELS1
 10

	)

38 
	#LEVELS2
 11

	)

46 
	$födfõld
 (
lua_Sèã
 *
L
, 
objidx
, 
Àvñ
) {

47 i‡(
Àvñ
 =0 || !
	`lua_i°abÀ
(
L
, -1))

49 
	`lua_pushnû
(
L
);

50 
	`lua_√xt
(
L
, -2)) {

51 i‡(
	`lua_ty≥
(
L
, -2Ë=
LUA_TSTRING
) {

52 i‡(
	`lua_øwequÆ
(
L
, 
objidx
, -1)) {

53 
	`lua_p›
(
L
, 1);

56 i‡(
	`födfõld
(
L
, 
objidx
, 
Àvñ
 - 1)) {

57 
	`lua_ªmove
(
L
, -2);

58 
	`lua_pushlôîÆ
(
L
, ".");

59 
	`lua_ö£π
(
L
, -2);

60 
	`lua_c⁄ˇt
(
L
, 3);

64 
	`lua_p›
(
L
, 1);

67 
	}
}

74 
	$pushglobÆfun˙ame
 (
lua_Sèã
 *
L
, 
lua_Debug
 *
¨
) {

75 
t›
 = 
	`lua_gët›
(
L
);

76 
	`lua_gëöfo
(
L
, "f", 
¨
);

77 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, "_LOADED");

78 i‡(
	`födfõld
(
L
, 
t›
 + 1, 2)) {

79 c⁄° *
«me
 = 
	`lua_to°rög
(
L
, -1);

80 i‡(
	`°∫cmp
(
«me
, "_G.", 3) == 0) {

81 
	`lua_push°rög
(
L
, 
«me
 + 3);

82 
	`lua_ªmove
(
L
, -2);

84 
	`lua_c›y
(
L
, -1, 
t›
 + 1);

85 
	`lua_p›
(
L
, 2);

89 
	`lua_£â›
(
L
, 
t›
);

92 
	}
}

95 
	$pushfun˙ame
 (
lua_Sèã
 *
L
, 
lua_Debug
 *
¨
) {

96 i‡(
	`pushglobÆfun˙ame
(
L
, 
¨
)) {

97 
	`lua_pushf°rög
(
L
, "fun˘i⁄ '%s'", 
	`lua_to°rög
(L, -1));

98 
	`lua_ªmove
(
L
, -2);

100 i‡(*
¨
->
«mewh©
 != '\0')

101 
	`lua_pushf°rög
(
L
, "%†'%s'", 
¨
->
«mewh©
,ár->
«me
);

102 i‡(*
¨
->
wh©
 == 'm')

103 
	`lua_pushlôîÆ
(
L
, "main chunk");

104 i‡(*
¨
->
wh©
 != 'C')

105 
	`lua_pushf°rög
(
L
, "fun˘i⁄ <%s:%d>", 
¨
->
sh‹t_§c
,ár->
löedeföed
);

107 
	`lua_pushlôîÆ
(
L
, "?");

108 
	}
}

111 
	$œ°Àvñ
 (
lua_Sèã
 *
L
) {

112 
lua_Debug
 
¨
;

113 
li
 = 1, 
À
 = 1;

115 
	`lua_gë°ack
(
L
, 
À
, &
¨
)Ë{ 
li
 =Üe;Üe *= 2; }

117 
li
 < 
À
) {

118 
m
 = (
li
 + 
À
)/2;

119 i‡(
	`lua_gë°ack
(
L
, 
m
, &
¨
)Ë
li
 = m + 1;

120 
À
 = 
m
;

122  
À
 - 1;

123 
	}
}

126 
LUALIB_API
 
	$luaL_åa˚back
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
,

127 c⁄° *
msg
, 
Àvñ
) {

128 
lua_Debug
 
¨
;

129 
t›
 = 
	`lua_gët›
(
L
);

130 
œ°
 = 
	`œ°Àvñ
(
L1
);

131 
n1
 = (
œ°
 - 
Àvñ
 > 
LEVELS1
 + 
LEVELS2
) ? LEVELS1 : -1;

132 i‡(
msg
)

133 
	`lua_pushf°rög
(
L
, "%s\n", 
msg
);

134 
	`luaL_check°ack
(
L
, 10, 
NULL
);

135 
	`lua_pushlôîÆ
(
L
, "stackÅraceback:");

136 
	`lua_gë°ack
(
L1
, 
Àvñ
++, &
¨
)) {

137 i‡(
n1
-- == 0) {

138 
	`lua_pushlôîÆ
(
L
, "\n\t...");

139 
Àvñ
 = 
œ°
 - 
LEVELS2
 + 1;

142 
	`lua_gëöfo
(
L1
, "S t", &
¨
);

143 
	`lua_pushf°rög
(
L
, "\n\t%s:", 
¨
.
sh‹t_§c
);

144 i‡(
¨
.
cuºíéöe
 > 0)

145 
	`lua_pushf°rög
(
L
, "%d:", 
¨
.
cuºíéöe
);

146 
	`lua_pushlôîÆ
(
L
, " in ");

147 
	`pushfun˙ame
(
L
, &
¨
);

148 i‡(
¨
.
i°aûˇŒ
)

149 
	`lua_pushlôîÆ
(
L
, "\n\t(...tail calls...)");

150 
	`lua_c⁄ˇt
(
L
, 
	`lua_gët›
(LË- 
t›
);

153 
	`lua_c⁄ˇt
(
L
, 
	`lua_gët›
(LË- 
t›
);

154 
	}
}

165 
LUALIB_API
 
	$luaL_¨gîr‹
 (
lua_Sèã
 *
L
, 
¨g
, c⁄° *
exåamsg
) {

166 
lua_Debug
 
¨
;

167 i‡(!
	`lua_gë°ack
(
L
, 0, &
¨
))

168  
	`luaL_îr‹
(
L
, "badárgumíà#%d (%s)", 
¨g
, 
exåamsg
);

169 
	`lua_gëöfo
(
L
, "n", &
¨
);

170 i‡(
	`°rcmp
(
¨
.
«mewh©
, "method") == 0) {

171 
¨g
--;

172 i‡(
¨g
 == 0)

173  
	`luaL_îr‹
(
L
, "calling '%s' on bad self (%s)",

174 
¨
.
«me
, 
exåamsg
);

176 i‡(
¨
.
«me
 =
NULL
)

177 
¨
.
«me
 = (
	`pushglobÆfun˙ame
(
L
, &¨)Ë? 
	`lua_to°rög
(L, -1) : "?";

178  
	`luaL_îr‹
(
L
, "badárgument #%dÅo '%s' (%s)",

179 
¨g
, 
¨
.
«me
, 
exåamsg
);

180 
	}
}

183 
	$ty≥îr‹
 (
lua_Sèã
 *
L
, 
¨g
, c⁄° *
äame
) {

184 c⁄° *
msg
;

185 c⁄° *
ty≥¨g
;

186 i‡(
	`luaL_gëmëafõld
(
L
, 
¨g
, "__«me"Ë=
LUA_TSTRING
)

187 
ty≥¨g
 = 
	`lua_to°rög
(
L
, -1);

188 i‡(
	`lua_ty≥
(
L
, 
¨g
Ë=
LUA_TLIGHTUSERDATA
)

189 
ty≥¨g
 = "light userdata";

191 
ty≥¨g
 = 
	`luaL_ty≥«me
(
L
, 
¨g
);

192 
msg
 = 
	`lua_pushf°rög
(
L
, "%†ex≥˘ed, gŸ %s", 
äame
, 
ty≥¨g
);

193  
	`luaL_¨gîr‹
(
L
, 
¨g
, 
msg
);

194 
	}
}

197 
	$èg_îr‹
 (
lua_Sèã
 *
L
, 
¨g
, 
èg
) {

198 
	`ty≥îr‹
(
L
, 
¨g
, 
	`lua_ty≥«me
(L, 
èg
));

199 
	}
}

206 
LUALIB_API
 
	$luaL_whîe
 (
lua_Sèã
 *
L
, 
Àvñ
) {

207 
lua_Debug
 
¨
;

208 i‡(
	`lua_gë°ack
(
L
, 
Àvñ
, &
¨
)) {

209 
	`lua_gëöfo
(
L
, "Sl", &
¨
);

210 i‡(
¨
.
cuºíéöe
 > 0) {

211 
	`lua_pushf°rög
(
L
, "%s:%d: ", 
¨
.
sh‹t_§c
,ár.
cuºíéöe
);

215 
	`lua_pushf°rög
(
L
, "");

216 
	}
}

224 
LUALIB_API
 
	$luaL_îr‹
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...) {

225 
va_li°
 
¨gp
;

226 
	`va_°¨t
(
¨gp
, 
fmt
);

227 
	`luaL_whîe
(
L
, 1);

228 
	`lua_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

229 
	`va_íd
(
¨gp
);

230 
	`lua_c⁄ˇt
(
L
, 2);

231  
	`lua_îr‹
(
L
);

232 
	}
}

235 
LUALIB_API
 
	$luaL_fûîesu…
 (
lua_Sèã
 *
L
, 
°©
, c⁄° *
‚ame
) {

236 
í
 = 
î∫o
;

237 i‡(
°©
) {

238 
	`lua_pushboﬁón
(
L
, 1);

242 
	`lua_pushnû
(
L
);

243 i‡(
‚ame
)

244 
	`lua_pushf°rög
(
L
, "%s: %s", 
‚ame
, 
	`°ªº‹
(
í
));

246 
	`lua_push°rög
(
L
, 
	`°ªº‹
(
í
));

247 
	`lua_pushöãgî
(
L
, 
í
);

250 
	}
}

253 #i‡!
deföed
(
l_ö•e˘°©
)

255 #i‡
deföed
(
LUA_USE_POSIX
)

257 
	~<sys/waô.h
>

262 
	#l_ö•e˘°©
(
°©
,
wh©
) \

263 i‡(
	`WIFEXITED
(
°©
)Ë{ sèà
	`WEXITSTATUS
(stat); } \

264 i‡(
	`WIFSIGNALED
(
°©
)Ë{ sèà
	`WTERMSIG
(°©); 
wh©
 = "sig«l"; }

	)

268 
	#l_ö•e˘°©
(
°©
,
wh©
Ë

	)

275 
LUALIB_API
 
	$luaL_exe¸esu…
 (
lua_Sèã
 *
L
, 
°©
) {

276 c⁄° *
wh©
 = "exit";

277 i‡(
°©
 == -1)

278  
	`luaL_fûîesu…
(
L
, 0, 
NULL
);

280 
	`l_ö•e˘°©
(
°©
, 
wh©
);

281 i‡(*
wh©
 ='e' && 
°©
 == 0)

282 
	`lua_pushboﬁón
(
L
, 1);

284 
	`lua_pushnû
(
L
);

285 
	`lua_push°rög
(
L
, 
wh©
);

286 
	`lua_pushöãgî
(
L
, 
°©
);

289 
	}
}

300 
LUALIB_API
 
	$luaL_√wmë©abÀ
 (
lua_Sèã
 *
L
, c⁄° *
äame
) {

301 i‡(
	`luaL_gëmë©abÀ
(
L
, 
äame
Ë!
LUA_TNIL
)

303 
	`lua_p›
(
L
, 1);

304 
	`lua_¸óãèbÀ
(
L
, 0, 2);

305 
	`lua_push°rög
(
L
, 
äame
);

306 
	`lua_£tfõld
(
L
, -2, "__name");

307 
	`lua_pushvÆue
(
L
, -1);

308 
	`lua_£tfõld
(
L
, 
LUA_REGISTRYINDEX
, 
äame
);

310 
	}
}

313 
LUALIB_API
 
	$luaL_£tmë©abÀ
 (
lua_Sèã
 *
L
, c⁄° *
äame
) {

314 
	`luaL_gëmë©abÀ
(
L
, 
äame
);

315 
	`lua_£tmë©abÀ
(
L
, -2);

316 
	}
}

319 
LUALIB_API
 *
	$luaL_ã°ud©a
 (
lua_Sèã
 *
L
, 
ud
, c⁄° *
äame
) {

320 *
p
 = 
	`lua_tou£rd©a
(
L
, 
ud
);

321 i‡(
p
 !
NULL
) {

322 i‡(
	`lua_gëmë©abÀ
(
L
, 
ud
)) {

323 
	`luaL_gëmë©abÀ
(
L
, 
äame
);

324 i‡(!
	`lua_øwequÆ
(
L
, -1, -2))

325 
p
 = 
NULL
;

326 
	`lua_p›
(
L
, 2);

327  
p
;

330  
NULL
;

331 
	}
}

334 
LUALIB_API
 *
	$luaL_checkud©a
 (
lua_Sèã
 *
L
, 
ud
, c⁄° *
äame
) {

335 *
p
 = 
	`luaL_ã°ud©a
(
L
, 
ud
, 
äame
);

336 i‡(
p
 =
NULL
Ë
	`ty≥îr‹
(
L
, 
ud
, 
äame
);

337  
p
;

338 
	}
}

349 
LUALIB_API
 
	$luaL_check›ti⁄
 (
lua_Sèã
 *
L
, 
¨g
, c⁄° *
def
,

350 c⁄° *c⁄° 
l°
[]) {

351 c⁄° *
«me
 = (
def
Ë? 
	`luaL_›t°rög
(
L
, 
¨g
, def) :

352 
	`luaL_check°rög
(
L
, 
¨g
);

353 
i
;

354 
i
=0; 
l°
[i]; i++)

355 i‡(
	`°rcmp
(
l°
[
i
], 
«me
) == 0)

356  
i
;

357  
	`luaL_¨gîr‹
(
L
, 
¨g
,

358 
	`lua_pushf°rög
(
L
, "övÆid o±i⁄ '%s'", 
«me
));

359 
	}
}

369 
LUALIB_API
 
	$luaL_check°ack
 (
lua_Sèã
 *
L
, 
•a˚
, c⁄° *
msg
) {

370 i‡(!
	`lua_check°ack
(
L
, 
•a˚
)) {

371 i‡(
msg
)

372 
	`luaL_îr‹
(
L
, "°ack ovîÊow (%s)", 
msg
);

374 
	`luaL_îr‹
(
L
, "stack overflow");

376 
	}
}

379 
LUALIB_API
 
	$luaL_checkty≥
 (
lua_Sèã
 *
L
, 
¨g
, 
t
) {

380 i‡(
	`lua_ty≥
(
L
, 
¨g
Ë!
t
)

381 
	`èg_îr‹
(
L
, 
¨g
, 
t
);

382 
	}
}

385 
LUALIB_API
 
	$luaL_check™y
 (
lua_Sèã
 *
L
, 
¨g
) {

386 i‡(
	`lua_ty≥
(
L
, 
¨g
Ë=
LUA_TNONE
)

387 
	`luaL_¨gîr‹
(
L
, 
¨g
, "valueÉxpected");

388 
	}
}

391 
LUALIB_API
 c⁄° *
	$luaL_checkl°rög
 (
lua_Sèã
 *
L
, 
¨g
, 
size_t
 *
Àn
) {

392 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, 
¨g
, 
Àn
);

393 i‡(!
s
Ë
	`èg_îr‹
(
L
, 
¨g
, 
LUA_TSTRING
);

394  
s
;

395 
	}
}

398 
LUALIB_API
 c⁄° *
	$luaL_›é°rög
 (
lua_Sèã
 *
L
, 
¨g
,

399 c⁄° *
def
, 
size_t
 *
Àn
) {

400 i‡(
	`lua_i¢⁄e‹nû
(
L
, 
¨g
)) {

401 i‡(
Àn
)

402 *
Àn
 = (
def
 ? 
	`°æí
(def) : 0);

403  
def
;

405  
	`luaL_checkl°rög
(
L
, 
¨g
, 
Àn
);

406 
	}
}

409 
LUALIB_API
 
lua_Numbî
 
	$luaL_checknumbî
 (
lua_Sèã
 *
L
, 
¨g
) {

410 
i¢um
;

411 
lua_Numbî
 
d
 = 
	`lua_t⁄umbîx
(
L
, 
¨g
, &
i¢um
);

412 i‡(!
i¢um
)

413 
	`èg_îr‹
(
L
, 
¨g
, 
LUA_TNUMBER
);

414  
d
;

415 
	}
}

418 
LUALIB_API
 
lua_Numbî
 
	$luaL_›äumbî
 (
lua_Sèã
 *
L
, 
¨g
, 
lua_Numbî
 
def
) {

419  
	`luaL_›t
(
L
, 
luaL_checknumbî
, 
¨g
, 
def
);

420 
	}
}

423 
	$öãº‹
 (
lua_Sèã
 *
L
, 
¨g
) {

424 i‡(
	`lua_i¢umbî
(
L
, 
¨g
))

425 
	`luaL_¨gîr‹
(
L
, 
¨g
, "number hasÇo integerÑepresentation");

427 
	`èg_îr‹
(
L
, 
¨g
, 
LUA_TNUMBER
);

428 
	}
}

431 
LUALIB_API
 
lua_I¡egî
 
	$luaL_checköãgî
 (
lua_Sèã
 *
L
, 
¨g
) {

432 
i¢um
;

433 
lua_I¡egî
 
d
 = 
	`lua_toöãgîx
(
L
, 
¨g
, &
i¢um
);

434 i‡(!
i¢um
) {

435 
	`öãº‹
(
L
, 
¨g
);

437  
d
;

438 
	}
}

441 
LUALIB_API
 
lua_I¡egî
 
	$luaL_›töãgî
 (
lua_Sèã
 *
L
, 
¨g
,

442 
lua_I¡egî
 
def
) {

443  
	`luaL_›t
(
L
, 
luaL_checköãgî
, 
¨g
, 
def
);

444 
	}
}

456 
	sUBox
 {

457 *
	mbox
;

458 
size_t
 
	mbsize
;

459 } 
	tUBox
;

462 *
	$ªsizebox
 (
lua_Sèã
 *
L
, 
idx
, 
size_t
 
√wsize
) {

463 *
ud
;

464 
lua_AŒoc
 
Ælocf
 = 
	`lua_gëÆlocf
(
L
, &
ud
);

465 
UBox
 *
box
 = (UBox *)
	`lua_tou£rd©a
(
L
, 
idx
);

466 *
ãmp
 = 
	`Ælocf
(
ud
, 
box
->box, box->
bsize
, 
√wsize
);

467 i‡(
ãmp
 =
NULL
 && 
√wsize
 > 0) {

468 
	`ªsizebox
(
L
, 
idx
, 0);

469 
	`luaL_îr‹
(
L
, "notÉnough memory for bufferállocation");

471 
box
->box = 
ãmp
;

472 
box
->
bsize
 = 
√wsize
;

473  
ãmp
;

474 
	}
}

477 
	$boxgc
 (
lua_Sèã
 *
L
) {

478 
	`ªsizebox
(
L
, 1, 0);

480 
	}
}

483 *
	$√wbox
 (
lua_Sèã
 *
L
, 
size_t
 
√wsize
) {

484 
UBox
 *
box
 = (UBox *)
	`lua_√wu£rd©a
(
L
, (UBox));

485 
box
->box = 
NULL
;

486 
box
->
bsize
 = 0;

487 i‡(
	`luaL_√wmë©abÀ
(
L
, "LUABOX")) {

488 
	`lua_pushcfun˘i⁄
(
L
, 
boxgc
);

489 
	`lua_£tfõld
(
L
, -2, "__gc");

491 
	`lua_£tmë©abÀ
(
L
, -2);

492  
	`ªsizebox
(
L
, -1, 
√wsize
);

493 
	}
}

500 
	#buff⁄°ack
(
B
Ë((B)->
b
 !(B)->
öôb
)

	)

506 
LUALIB_API
 *
	$luaL_¥ïbuffsize
 (
luaL_Buf„r
 *
B
, 
size_t
 
sz
) {

507 
lua_Sèã
 *
L
 = 
B
->L;

508 i‡(
B
->
size
 - B->
n
 < 
sz
) {

509 *
√wbuff
;

510 
size_t
 
√wsize
 = 
B
->
size
 * 2;

511 i‡(
√wsize
 - 
B
->
n
 < 
sz
)

512 
√wsize
 = 
B
->
n
 + 
sz
;

513 i‡(
√wsize
 < 
B
->
n
 ||Çewsizê- B->¿< 
sz
)

514 
	`luaL_îr‹
(
L
, "bufferÅooÜarge");

516 i‡(
	`buff⁄°ack
(
B
))

517 
√wbuff
 = (*)
	`ªsizebox
(
L
, -1, 
√wsize
);

519 
√wbuff
 = (*)
	`√wbox
(
L
, 
√wsize
);

520 
	`mem˝y
(
√wbuff
, 
B
->
b
, B->
n
 * ());

522 
B
->
b
 = 
√wbuff
;

523 
B
->
size
 = 
√wsize
;

525  &
B
->
b
[B->
n
];

526 
	}
}

529 
LUALIB_API
 
	$luaL_addl°rög
 (
luaL_Buf„r
 *
B
, c⁄° *
s
, 
size_t
 
l
) {

530 i‡(
l
 > 0) {

531 *
b
 = 
	`luaL_¥ïbuffsize
(
B
, 
l
);

532 
	`mem˝y
(
b
, 
s
, 
l
 * ());

533 
	`luaL_addsize
(
B
, 
l
);

535 
	}
}

538 
LUALIB_API
 
	$luaL_add°rög
 (
luaL_Buf„r
 *
B
, c⁄° *
s
) {

539 
	`luaL_addl°rög
(
B
, 
s
, 
	`°æí
(s));

540 
	}
}

543 
LUALIB_API
 
	$luaL_pushªsu…
 (
luaL_Buf„r
 *
B
) {

544 
lua_Sèã
 *
L
 = 
B
->L;

545 
	`lua_pushl°rög
(
L
, 
B
->
b
, B->
n
);

546 i‡(
	`buff⁄°ack
(
B
)) {

547 
	`ªsizebox
(
L
, -2, 0);

548 
	`lua_ªmove
(
L
, -2);

550 
	}
}

553 
LUALIB_API
 
	$luaL_pushªsu…size
 (
luaL_Buf„r
 *
B
, 
size_t
 
sz
) {

554 
	`luaL_addsize
(
B
, 
sz
);

555 
	`luaL_pushªsu…
(
B
);

556 
	}
}

559 
LUALIB_API
 
	$luaL_addvÆue
 (
luaL_Buf„r
 *
B
) {

560 
lua_Sèã
 *
L
 = 
B
->L;

561 
size_t
 
l
;

562 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, -1, &
l
);

563 i‡(
	`buff⁄°ack
(
B
))

564 
	`lua_ö£π
(
L
, -2);

565 
	`luaL_addl°rög
(
B
, 
s
, 
l
);

566 
	`lua_ªmove
(
L
, (
	`buff⁄°ack
(
B
)) ? -2 : -1);

567 
	}
}

570 
LUALIB_API
 
	$luaL_bufföô
 (
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
B
) {

571 
B
->
L
 = L;

572 
B
->
b
 = B->
öôb
;

573 
B
->
n
 = 0;

574 
B
->
size
 = 
LUAL_BUFFERSIZE
;

575 
	}
}

578 
LUALIB_API
 *
	$luaL_bufföôsize
 (
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
B
, 
size_t
 
sz
) {

579 
	`luaL_bufföô
(
L
, 
B
);

580  
	`luaL_¥ïbuffsize
(
B
, 
sz
);

581 
	}
}

593 
	#‰ìli°
 0

	)

596 
LUALIB_API
 
	$luaL_ªf
 (
lua_Sèã
 *
L
, 
t
) {

597 
ªf
;

598 i‡(
	`lua_i¢û
(
L
, -1)) {

599 
	`lua_p›
(
L
, 1);

600  
LUA_REFNIL
;

602 
t
 = 
	`lua_absödex
(
L
,Å);

603 
	`lua_øwgëi
(
L
, 
t
, 
‰ìli°
);

604 
ªf
 = ()
	`lua_toöãgî
(
L
, -1);

605 
	`lua_p›
(
L
, 1);

606 i‡(
ªf
 != 0) {

607 
	`lua_øwgëi
(
L
, 
t
, 
ªf
);

608 
	`lua_øw£ti
(
L
, 
t
, 
‰ìli°
);

611 
ªf
 = ()
	`lua_øwÀn
(
L
, 
t
) + 1;

612 
	`lua_øw£ti
(
L
, 
t
, 
ªf
);

613  
ªf
;

614 
	}
}

617 
LUALIB_API
 
	$luaL_uƒef
 (
lua_Sèã
 *
L
, 
t
, 
ªf
) {

618 i‡(
ªf
 >= 0) {

619 
t
 = 
	`lua_absödex
(
L
,Å);

620 
	`lua_øwgëi
(
L
, 
t
, 
‰ìli°
);

621 
	`lua_øw£ti
(
L
, 
t
, 
ªf
);

622 
	`lua_pushöãgî
(
L
, 
ªf
);

623 
	`lua_øw£ti
(
L
, 
t
, 
‰ìli°
);

625 
	}
}

636 
	sLﬂdF
 {

637 
	mn
;

638 
FILE
 *
	mf
;

639 
	mbuff
[
BUFSIZ
];

640 } 
	tLﬂdF
;

643 c⁄° *
	$gëF
 (
lua_Sèã
 *
L
, *
ud
, 
size_t
 *
size
) {

644 
LﬂdF
 *
lf
 = (LﬂdF *)
ud
;

645 ()
L
;

646 i‡(
lf
->
n
 > 0) {

647 *
size
 = 
lf
->
n
;

648 
lf
->
n
 = 0;

654 i‡(
	`„of
(
lf
->
f
)Ë 
NULL
;

655 *
size
 = 
	`‰ód
(
lf
->
buff
, 1, ÷f->buff),Üf->
f
);

657  
lf
->
buff
;

658 
	}
}

661 
	$îrfûe
 (
lua_Sèã
 *
L
, c⁄° *
wh©
, 
‚ameödex
) {

662 c⁄° *
£º
 = 
	`°ªº‹
(
î∫o
);

663 c⁄° *
fûíame
 = 
	`lua_to°rög
(
L
, 
‚ameödex
) + 1;

664 
	`lua_pushf°rög
(
L
, "ˇ¬Ÿ %†%s: %s", 
wh©
, 
fûíame
, 
£º
);

665 
	`lua_ªmove
(
L
, 
‚ameödex
);

666  
LUA_ERRFILE
;

667 
	}
}

670 
	$skùBOM
 (
LﬂdF
 *
lf
) {

671 c⁄° *
p
 = "\xEF\xBB\xBF";

672 
c
;

673 
lf
->
n
 = 0;

675 
c
 = 
	`gëc
(
lf
->
f
);

676 i‡(
c
 =
EOF
 || c !*(c⁄° *)
p
++)  c;

677 
lf
->
buff
[lf->
n
++] = 
c
;

678 } *
p
 != '\0');

679 
lf
->
n
 = 0;

680  
	`gëc
(
lf
->
f
);

681 
	}
}

691 
	$skùcommít
 (
LﬂdF
 *
lf
, *
˝
) {

692 
c
 = *
˝
 = 
	`skùBOM
(
lf
);

693 i‡(
c
 == '#') {

695 
c
 = 
	`gëc
(
lf
->
f
);

696 } 
c
 !
EOF
 && c != '\n');

697 *
˝
 = 
	`gëc
(
lf
->
f
);

701 
	}
}

704 
LUALIB_API
 
	$luaL_lﬂdfûex
 (
lua_Sèã
 *
L
, c⁄° *
fûíame
,

705 c⁄° *
mode
) {

706 
LﬂdF
 
lf
;

707 
°©us
, 
ªad°©us
;

708 
c
;

709 
‚ameödex
 = 
	`lua_gët›
(
L
) + 1;

710 i‡(
fûíame
 =
NULL
) {

711 
	`lua_pushlôîÆ
(
L
, "=stdin");

712 
lf
.
f
 = 
°dö
;

715 
	`lua_pushf°rög
(
L
, "@%s", 
fûíame
);

716 
lf
.
f
 = 
	`f›í
(
fûíame
, "r");

717 i‡(
lf
.
f
 =
NULL
Ë 
	`îrfûe
(
L
, "›í", 
‚ameödex
);

719 i‡(
	`skùcommít
(&
lf
, &
c
))

720 
lf
.
buff
[lf.
n
++] = '\n';

721 i‡(
c
 =
LUA_SIGNATURE
[0] && 
fûíame
) {

722 
lf
.
f
 = 
	`‰e›í
(
fûíame
, "rb",Üf.f);

723 i‡(
lf
.
f
 =
NULL
Ë 
	`îrfûe
(
L
, "ª›í", 
‚ameödex
);

724 
	`skùcommít
(&
lf
, &
c
);

726 i‡(
c
 !
EOF
)

727 
lf
.
buff
[lf.
n
++] = 
c
;

728 
°©us
 = 
	`lua_lﬂd
(
L
, 
gëF
, &
lf
, 
	`lua_to°rög
(L, -1), 
mode
);

729 
ªad°©us
 = 
	`„º‹
(
lf
.
f
);

730 i‡(
fûíame
Ë
	`f˛o£
(
lf
.
f
);

731 i‡(
ªad°©us
) {

732 
	`lua_£â›
(
L
, 
‚ameödex
);

733  
	`îrfûe
(
L
, "ªad", 
‚ameödex
);

735 
	`lua_ªmove
(
L
, 
‚ameödex
);

736  
°©us
;

737 
	}
}

740 
	sLﬂdS
 {

741 c⁄° *
	ms
;

742 
size_t
 
	msize
;

743 } 
	tLﬂdS
;

746 c⁄° *
	$gëS
 (
lua_Sèã
 *
L
, *
ud
, 
size_t
 *
size
) {

747 
LﬂdS
 *
ls
 = (LﬂdS *)
ud
;

748 ()
L
;

749 i‡(
ls
->
size
 =0Ë 
NULL
;

750 *
size
 = 
ls
->size;

751 
ls
->
size
 = 0;

752  
ls
->
s
;

753 
	}
}

756 
LUALIB_API
 
	$luaL_lﬂdbuf„rx
 (
lua_Sèã
 *
L
, c⁄° *
buff
, 
size_t
 
size
,

757 c⁄° *
«me
, c⁄° *
mode
) {

758 
LﬂdS
 
ls
;

759 
ls
.
s
 = 
buff
;

760 
ls
.
size
 = size;

761  
	`lua_lﬂd
(
L
, 
gëS
, &
ls
, 
«me
, 
mode
);

762 
	}
}

765 
LUALIB_API
 
	$luaL_lﬂd°rög
 (
lua_Sèã
 *
L
, c⁄° *
s
) {

766  
	`luaL_lﬂdbuf„r
(
L
, 
s
, 
	`°æí
(s), s);

767 
	}
}

773 
LUALIB_API
 
	$luaL_gëmëafõld
 (
lua_Sèã
 *
L
, 
obj
, c⁄° *
evít
) {

774 i‡(!
	`lua_gëmë©abÀ
(
L
, 
obj
))

775  
LUA_TNIL
;

777 
â
;

778 
	`lua_push°rög
(
L
, 
evít
);

779 
â
 = 
	`lua_øwgë
(
L
, -2);

780 i‡(
â
 =
LUA_TNIL
)

781 
	`lua_p›
(
L
, 2);

783 
	`lua_ªmove
(
L
, -2);

784  
â
;

786 
	}
}

789 
LUALIB_API
 
	$luaL_ˇŒmëa
 (
lua_Sèã
 *
L
, 
obj
, c⁄° *
evít
) {

790 
obj
 = 
	`lua_absödex
(
L
, obj);

791 i‡(
	`luaL_gëmëafõld
(
L
, 
obj
, 
evít
Ë=
LUA_TNIL
)

793 
	`lua_pushvÆue
(
L
, 
obj
);

794 
	`lua_ˇŒ
(
L
, 1, 1);

796 
	}
}

799 
LUALIB_API
 
lua_I¡egî
 
	$luaL_Àn
 (
lua_Sèã
 *
L
, 
idx
) {

800 
lua_I¡egî
 
l
;

801 
i¢um
;

802 
	`lua_Àn
(
L
, 
idx
);

803 
l
 = 
	`lua_toöãgîx
(
L
, -1, &
i¢um
);

804 i‡(!
i¢um
)

805 
	`luaL_îr‹
(
L
, "objectÜength isÇotán integer");

806 
	`lua_p›
(
L
, 1);

807  
l
;

808 
	}
}

811 
LUALIB_API
 c⁄° *
	$luaL_tﬁ°rög
 (
lua_Sèã
 *
L
, 
idx
, 
size_t
 *
Àn
) {

812 i‡(!
	`luaL_ˇŒmëa
(
L
, 
idx
, "__tostring")) {

813 
	`lua_ty≥
(
L
, 
idx
)) {

814 
LUA_TNUMBER
: {

815 i‡(
	`lua_isöãgî
(
L
, 
idx
))

816 
	`lua_pushf°rög
(
L
, "%I", 
	`lua_toöãgî
(L, 
idx
));

818 
	`lua_pushf°rög
(
L
, "%f", 
	`lua_t⁄umbî
(L, 
idx
));

821 
LUA_TSTRING
:

822 
	`lua_pushvÆue
(
L
, 
idx
);

824 
LUA_TBOOLEAN
:

825 
	`lua_push°rög
(
L
, (
	`lua_toboﬁón
(L, 
idx
) ? "true" : "false"));

827 
LUA_TNIL
:

828 
	`lua_pushlôîÆ
(
L
, "nil");

831 
	`lua_pushf°rög
(
L
, "%s: %p", 
	`luaL_ty≥«me
(L, 
idx
),

832 
	`lua_t›oöãr
(
L
, 
idx
));

836  
	`lua_tﬁ°rög
(
L
, -1, 
Àn
);

837 
	}
}

845 #i‡
deföed
(
LUA_COMPAT_MODULE
)

847 c⁄° *
	$luaL_födèbÀ
 (
lua_Sèã
 *
L
, 
idx
,

848 c⁄° *
‚ame
, 
szhöt
) {

849 c⁄° *
e
;

850 i‡(
idx
Ë
	`lua_pushvÆue
(
L
, idx);

852 
e
 = 
	`°rchr
(
‚ame
, '.');

853 i‡(
e
 =
NULL
Ëê
‚ame
 + 
	`°æí
(fname);

854 
	`lua_pushl°rög
(
L
, 
‚ame
, 
e
 - fname);

855 i‡(
	`lua_øwgë
(
L
, -2Ë=
LUA_TNIL
) {

856 
	`lua_p›
(
L
, 1);

857 
	`lua_¸óãèbÀ
(
L
, 0, (*
e
 ='.' ? 1 : 
szhöt
));

858 
	`lua_pushl°rög
(
L
, 
‚ame
, 
e
 - fname);

859 
	`lua_pushvÆue
(
L
, -2);

860 
	`lua_£âabÀ
(
L
, -4);

862 i‡(!
	`lua_i°abÀ
(
L
, -1)) {

863 
	`lua_p›
(
L
, 2);

864  
‚ame
;

866 
	`lua_ªmove
(
L
, -2);

867 
‚ame
 = 
e
 + 1;

868 } *
e
 == '.');

869  
NULL
;

870 
	}
}

876 
	$libsize
 (c⁄° 
luaL_Reg
 *
l
) {

877 
size
 = 0;

878 ; 
l
 &&Ü->
«me
;Ü++Ë
size
++;

879  
size
;

880 
	}
}

889 
LUALIB_API
 
	$luaL_pushmoduÀ
 (
lua_Sèã
 *
L
, c⁄° *
mod«me
,

890 
sizehöt
) {

891 
	`luaL_födèbÀ
(
L
, 
LUA_REGISTRYINDEX
, "_LOADED", 1);

892 i‡(
	`lua_gëfõld
(
L
, -1, 
mod«me
Ë!
LUA_TTABLE
) {

893 
	`lua_p›
(
L
, 1);

895 
	`lua_pushglobÆèbÀ
(
L
);

896 i‡(
	`luaL_födèbÀ
(
L
, 0, 
mod«me
, 
sizehöt
Ë!
NULL
)

897 
	`luaL_îr‹
(
L
, "«mêc⁄Êi˘ f‹ moduÀ '%s'", 
mod«me
);

898 
	`lua_pushvÆue
(
L
, -1);

899 
	`lua_£tfõld
(
L
, -3, 
mod«me
);

901 
	`lua_ªmove
(
L
, -2);

902 
	}
}

905 
LUALIB_API
 
	$luaL_›ílib
 (
lua_Sèã
 *
L
, c⁄° *
lib«me
,

906 c⁄° 
luaL_Reg
 *
l
, 
nup
) {

907 
	`luaL_checkvîsi⁄
(
L
);

908 i‡(
lib«me
) {

909 
	`luaL_pushmoduÀ
(
L
, 
lib«me
, 
	`libsize
(
l
));

910 
	`lua_ö£π
(
L
, -(
nup
 + 1));

912 i‡(
l
)

913 
	`luaL_£tfuncs
(
L
, 
l
, 
nup
);

915 
	`lua_p›
(
L
, 
nup
);

916 
	}
}

926 
LUALIB_API
 
	$luaL_£tfuncs
 (
lua_Sèã
 *
L
, c⁄° 
luaL_Reg
 *
l
, 
nup
) {

927 
	`luaL_check°ack
(
L
, 
nup
, "too many upvalues");

928 ; 
l
->
«me
 !
NULL
;Ü++) {

929 
i
;

930 
i
 = 0; i < 
nup
; i++)

931 
	`lua_pushvÆue
(
L
, -
nup
);

932 
	`lua_pushc˛osuª
(
L
, 
l
->
func
, 
nup
);

933 
	`lua_£tfõld
(
L
, -(
nup
 + 2), 
l
->
«me
);

935 
	`lua_p›
(
L
, 
nup
);

936 
	}
}

943 
LUALIB_API
 
	$luaL_gësubèbÀ
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
‚ame
) {

944 i‡(
	`lua_gëfõld
(
L
, 
idx
, 
‚ame
Ë=
LUA_TTABLE
)

947 
	`lua_p›
(
L
, 1);

948 
idx
 = 
	`lua_absödex
(
L
, idx);

949 
	`lua_√wèbÀ
(
L
);

950 
	`lua_pushvÆue
(
L
, -1);

951 
	`lua_£tfõld
(
L
, 
idx
, 
‚ame
);

954 
	}
}

963 
LUALIB_API
 
	$luaL_ªquúef
 (
lua_Sèã
 *
L
, c⁄° *
mod«me
,

964 
lua_CFun˘i⁄
 
›íf
, 
glb
) {

965 
	`luaL_gësubèbÀ
(
L
, 
LUA_REGISTRYINDEX
, "_LOADED");

966 
	`lua_gëfõld
(
L
, -1, 
mod«me
);

967 i‡(!
	`lua_toboﬁón
(
L
, -1)) {

968 
	`lua_p›
(
L
, 1);

969 
	`lua_pushcfun˘i⁄
(
L
, 
›íf
);

970 
	`lua_push°rög
(
L
, 
mod«me
);

971 
	`lua_ˇŒ
(
L
, 1, 1);

972 
	`lua_pushvÆue
(
L
, -1);

973 
	`lua_£tfõld
(
L
, -3, 
mod«me
);

975 
	`lua_ªmove
(
L
, -2);

976 i‡(
glb
) {

977 
	`lua_pushvÆue
(
L
, -1);

978 
	`lua_£tglobÆ
(
L
, 
mod«me
);

980 
	}
}

983 
LUALIB_API
 c⁄° *
	$luaL_gsub
 (
lua_Sèã
 *
L
, c⁄° *
s
, c⁄° *
p
,

984 c⁄° *
r
) {

985 c⁄° *
wûd
;

986 
size_t
 
l
 = 
	`°æí
(
p
);

987 
luaL_Buf„r
 
b
;

988 
	`luaL_bufföô
(
L
, &
b
);

989 (
wûd
 = 
	`°r°r
(
s
, 
p
)Ë!
NULL
) {

990 
	`luaL_addl°rög
(&
b
, 
s
, 
wûd
 - s);

991 
	`luaL_add°rög
(&
b
, 
r
);

992 
s
 = 
wûd
 + 
l
;

994 
	`luaL_add°rög
(&
b
, 
s
);

995 
	`luaL_pushªsu…
(&
b
);

996  
	`lua_to°rög
(
L
, -1);

997 
	}
}

1000 *
	$l_Æloc
 (*
ud
, *
±r
, 
size_t
 
osize
, size_à
nsize
) {

1001 ()
ud
; ()
osize
;

1002 i‡(
nsize
 == 0) {

1003 
	`‰ì
(
±r
);

1004  
NULL
;

1007  
	`ªÆloc
(
±r
, 
nsize
);

1008 
	}
}

1011 
	$∑nic
 (
lua_Sèã
 *
L
) {

1012 
	`lua_wrôe°rögîr‹
("PANIC: unprotectedÉrror in callÅo Lua API (%s)\n",

1013 
	`lua_to°rög
(
L
, -1));

1015 
	}
}

1018 
LUALIB_API
 
lua_Sèã
 *
	$luaL_√w°©e
 () {

1019 
lua_Sèã
 *
L
 = 
	`lua_√w°©e
(
l_Æloc
, 
NULL
);

1020 i‡(
L
Ë
	`lua_©∑nic
(L, &
∑nic
);

1021  
L
;

1022 
	}
}

1025 
LUALIB_API
 
	$luaL_checkvîsi⁄_
 (
lua_Sèã
 *
L
, 
lua_Numbî
 
vî
, 
size_t
 
sz
) {

1026 c⁄° 
lua_Numbî
 *
v
 = 
	`lua_vîsi⁄
(
L
);

1027 i‡(
sz
 !
LUAL_NUMSIZES
)

1028 
	`luaL_îr‹
(
L
, "coreándÜibrary have incompatibleÇumericÅypes");

1029 i‡(
v
 !
	`lua_vîsi⁄
(
NULL
))

1030 
	`luaL_îr‹
(
L
, "multiple Lua VMs detected");

1031 i‡(*
v
 !
vî
)

1032 
	`luaL_îr‹
(
L
, "version mismatch:ápp.Çeeds %f, Lua coreÖrovides %f",

1033 
vî
, *
v
);

1034 
	}
}

	@lua/src/lauxlib.h

8 #i‚de‡
œuxlib_h


9 
	#œuxlib_h


	)

12 
	~<°ddef.h
>

13 
	~<°dio.h
>

15 
	~"lua.h
"

20 
	#LUA_ERRFILE
 (
LUA_ERRERR
+1)

	)

23 
	sluaL_Reg
 {

24 c⁄° *
	m«me
;

25 
lua_CFun˘i⁄
 
	mfunc
;

26 } 
	tluaL_Reg
;

29 
	#LUAL_NUMSIZES
 ((
lua_I¡egî
)*16 + (
lua_Numbî
))

	)

31 
LUALIB_API
 (
luaL_checkvîsi⁄_
Ë(
lua_Sèã
 *
L
, 
lua_Numbî
 
vî
, 
size_t
 
sz
);

32 
	#luaL_checkvîsi⁄
(
L
) \

33 
	`luaL_checkvîsi⁄_
(
L
, 
LUA_VERSION_NUM
, 
LUAL_NUMSIZES
)

	)

35 
LUALIB_API
 (
luaL_gëmëafõld
Ë(
lua_Sèã
 *
L
, 
obj
, c⁄° *
e
);

36 
LUALIB_API
 (
luaL_ˇŒmëa
Ë(
lua_Sèã
 *
L
, 
obj
, c⁄° *
e
);

37 
LUALIB_API
 c⁄° *(
luaL_tﬁ°rög
Ë(
lua_Sèã
 *
L
, 
idx
, 
size_t
 *
Àn
);

38 
LUALIB_API
 (
luaL_¨gîr‹
Ë(
lua_Sèã
 *
L
, 
¨g
, c⁄° *
exåamsg
);

39 
LUALIB_API
 c⁄° *(
luaL_checkl°rög
Ë(
lua_Sèã
 *
L
, 
¨g
,

40 
size_t
 *
l
);

41 
LUALIB_API
 c⁄° *(
luaL_›é°rög
Ë(
lua_Sèã
 *
L
, 
¨g
,

42 c⁄° *
def
, 
size_t
 *
l
);

43 
LUALIB_API
 
	$lua_Numbî
 (
luaL_checknumbî
Ë(
lua_Sèã
 *
L
, 
¨g
);

44 
LUALIB_API
 
	$lua_Numbî
 (
luaL_›äumbî
Ë(
lua_Sèã
 *
L
, 
¨g
, 
lua_Numbî
 
def
);

46 
LUALIB_API
 
	$lua_I¡egî
 (
luaL_checköãgî
Ë(
lua_Sèã
 *
L
, 
¨g
);

47 
LUALIB_API
 
	$lua_I¡egî
 (
luaL_›töãgî
Ë(
lua_Sèã
 *
L
, 
¨g
,

48 
lua_I¡egî
 
def
);

50 
LUALIB_API
 (
luaL_check°ack
Ë(
lua_Sèã
 *
L
, 
sz
, c⁄° *
msg
);

51 
LUALIB_API
 (
luaL_checkty≥
Ë(
lua_Sèã
 *
L
, 
¨g
, 
t
);

52 
LUALIB_API
 (
luaL_check™y
Ë(
lua_Sèã
 *
L
, 
¨g
);

54 
LUALIB_API
 (
luaL_√wmë©abÀ
Ë(
lua_Sèã
 *
L
, c⁄° *
äame
);

55 
LUALIB_API
 (
luaL_£tmë©abÀ
Ë(
lua_Sèã
 *
L
, c⁄° *
äame
);

56 
LUALIB_API
 *(
luaL_ã°ud©a
Ë(
lua_Sèã
 *
L
, 
ud
, c⁄° *
äame
);

57 
LUALIB_API
 *(
luaL_checkud©a
Ë(
lua_Sèã
 *
L
, 
ud
, c⁄° *
äame
);

59 
LUALIB_API
 (
luaL_whîe
Ë(
lua_Sèã
 *
L
, 
lvl
);

60 
LUALIB_API
 (
luaL_îr‹
Ë(
lua_Sèã
 *
L
, c⁄° *
fmt
, ...);

62 
LUALIB_API
 (
luaL_check›ti⁄
Ë(
lua_Sèã
 *
L
, 
¨g
, c⁄° *
def
,

63 c⁄° *c⁄° 
l°
[]);

65 
LUALIB_API
 (
luaL_fûîesu…
Ë(
lua_Sèã
 *
L
, 
°©
, c⁄° *
‚ame
);

66 
LUALIB_API
 (
luaL_exe¸esu…
Ë(
lua_Sèã
 *
L
, 
°©
);

69 
	#LUA_NOREF
 (-2)

	)

70 
	#LUA_REFNIL
 (-1)

	)

72 
LUALIB_API
 (
luaL_ªf
Ë(
lua_Sèã
 *
L
, 
t
);

73 
LUALIB_API
 (
luaL_uƒef
Ë(
lua_Sèã
 *
L
, 
t
, 
ªf
);

75 
LUALIB_API
 (
luaL_lﬂdfûex
Ë(
lua_Sèã
 *
L
, c⁄° *
fûíame
,

76 c⁄° *
mode
);

78 
	#luaL_lﬂdfûe
(
L
,
f
Ë
	`luaL_lﬂdfûex
(L,f,
NULL
)

	)

80 
LUALIB_API
 (
luaL_lﬂdbuf„rx
Ë(
lua_Sèã
 *
L
, c⁄° *
buff
, 
size_t
 
sz
,

81 c⁄° *
«me
, c⁄° *
mode
);

82 
LUALIB_API
 (
luaL_lﬂd°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
s
);

84 
LUALIB_API
 
lua_Sèã
 *(
luaL_√w°©e
) ();

86 
LUALIB_API
 
	$lua_I¡egî
 (
luaL_Àn
Ë(
lua_Sèã
 *
L
, 
idx
);

88 
LUALIB_API
 c⁄° *(
luaL_gsub
Ë(
lua_Sèã
 *
L
, c⁄° *
s
, c⁄° *
p
,

89 c⁄° *
r
);

91 
LUALIB_API
 (
luaL_£tfuncs
Ë(
lua_Sèã
 *
L
, c⁄° 
luaL_Reg
 *
l
, 
nup
);

93 
LUALIB_API
 (
luaL_gësubèbÀ
Ë(
lua_Sèã
 *
L
, 
idx
, c⁄° *
‚ame
);

95 
LUALIB_API
 (
luaL_åa˚back
Ë(
lua_Sèã
 *
L
,Üua_Sèã *
L1
,

96 c⁄° *
msg
, 
Àvñ
);

98 
LUALIB_API
 (
luaL_ªquúef
Ë(
lua_Sèã
 *
L
, c⁄° *
mod«me
,

99 
lua_CFun˘i⁄
 
›íf
, 
glb
);

108 
	#luaL_√wlibèbÀ
(
L
,
l
) \

109 
	`lua_¸óãèbÀ
(
L
, 0, (
l
)/(÷)[0]Ë- 1)

	)

111 
	#luaL_√wlib
(
L
,
l
) \

112 (
	`luaL_checkvîsi⁄
(
L
), 
	`luaL_√wlibèbÀ
(L,
l
), 
	`luaL_£tfuncs
(L,l,0))

	)

114 
	#luaL_¨gcheck
(
L
, 
c⁄d
,
¨g
,
exåamsg
) \

115 (()((
c⁄d
Ë|| 
	`luaL_¨gîr‹
(
L
, (
¨g
), (
exåamsg
))))

	)

116 
	#luaL_check°rög
(
L
,
n
Ë(
	`luaL_checkl°rög
(L, (n), 
NULL
))

	)

117 
	#luaL_›t°rög
(
L
,
n
,
d
Ë(
	`luaL_›é°rög
(L, (n), (d), 
NULL
))

	)

119 
	#luaL_ty≥«me
(
L
,
i
Ë
	`lua_ty≥«me
(L, 
	`lua_ty≥
(L,(i)))

	)

121 
	#luaL_dofûe
(
L
, 
‚
) \

122 (
	`luaL_lﬂdfûe
(
L
, 
‚
Ë|| 
	`lua_pˇŒ
(L, 0, 
LUA_MULTRET
, 0))

	)

124 
	#luaL_do°rög
(
L
, 
s
) \

125 (
	`luaL_lﬂd°rög
(
L
, 
s
Ë|| 
	`lua_pˇŒ
(L, 0, 
LUA_MULTRET
, 0))

	)

127 
	#luaL_gëmë©abÀ
(
L
,
n
Ë(
	`lua_gëfõld
(L, 
LUA_REGISTRYINDEX
, (n)))

	)

129 
	#luaL_›t
(
L
,
f
,
n
,
d
Ë(
	`lua_i¢⁄e‹nû
(L,“)Ë? (dË: 
	`f
(L,“)))

	)

131 
	#luaL_lﬂdbuf„r
(
L
,
s
,
sz
,
n
Ë
	`luaL_lﬂdbuf„rx
(L,s,sz,n,
NULL
)

	)

140 
	sluaL_Buf„r
 {

141 *
b
;

142 
size_t
 
size
;

143 
size_t
 
n
;

144 
lua_Sèã
 *
L
;

145 
öôb
[
LUAL_BUFFERSIZE
];

146 } 
	tluaL_Buf„r
;

149 
	#luaL_addch¨
(
B
,
c
) \

150 (()((
B
)->
n
 < (B)->
size
 || 
	`luaL_¥ïbuffsize
((B), 1)), \

151 ((
B
)->
b
[(B)->
n
++] = (
c
)))

	)

153 
	#luaL_addsize
(
B
,
s
Ë((B)->
n
 +(s))

	)

155 
LUALIB_API
 (
luaL_bufföô
Ë(
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
B
);

156 
LUALIB_API
 *(
luaL_¥ïbuffsize
Ë(
luaL_Buf„r
 *
B
, 
size_t
 
sz
);

157 
LUALIB_API
 (
luaL_addl°rög
Ë(
luaL_Buf„r
 *
B
, c⁄° *
s
, 
size_t
 
l
);

158 
LUALIB_API
 (
luaL_add°rög
Ë(
luaL_Buf„r
 *
B
, c⁄° *
s
);

159 
LUALIB_API
 (
luaL_addvÆue
Ë(
luaL_Buf„r
 *
B
);

160 
LUALIB_API
 (
luaL_pushªsu…
Ë(
luaL_Buf„r
 *
B
);

161 
LUALIB_API
 (
luaL_pushªsu…size
Ë(
luaL_Buf„r
 *
B
, 
size_t
 
sz
);

162 
LUALIB_API
 *(
luaL_bufföôsize
Ë(
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
B
, 
size_t
 
sz
);

164 
	#luaL_¥ïbuf„r
(
B
Ë
	`luaL_¥ïbuffsize
(B, 
LUAL_BUFFERSIZE
)

	)

182 
	#LUA_FILEHANDLE
 "FILE*"

	)

185 
	sluaL_Såóm
 {

186 
FILE
 *
f
;

187 
lua_CFun˘i⁄
 
˛o£f
;

188 } 
	tluaL_Såóm
;

195 #i‡
	`deföed
(
LUA_COMPAT_MODULE
)

197 
LUALIB_API
 (
luaL_pushmoduÀ
Ë(
lua_Sèã
 *
L
, c⁄° *
mod«me
,

198 
sizehöt
);

199 
LUALIB_API
 (
luaL_›ílib
Ë(
lua_Sèã
 *
L
, c⁄° *
lib«me
,

200 c⁄° 
luaL_Reg
 *
l
, 
nup
);

202 
	#luaL_ªgi°î
(
L
,
n
,
l
Ë(
	`luaL_›ílib
(L,“),÷),0))

	)

214 #i‡!
	`deföed
(
lua_wrôe°rög
)

215 
	#lua_wrôe°rög
(
s
,
l
Ë
	`fwrôe
((s), (), (l), 
°dout
)

	)

219 #i‡!
	`deföed
(
lua_wrôñöe
)

220 
	#lua_wrôñöe
(Ë(
	`lua_wrôe°rög
("\n", 1), 
	`fÊush
(
°dout
))

	)

224 #i‡!
	`deföed
(
lua_wrôe°rögîr‹
)

225 
	#lua_wrôe°rögîr‹
(
s
,
p
) \

226 (
	`Ârötf
(
°dîr
, (
s
), (
p
)), 
	`fÊush
(°dîr))

	)

237 #i‡
	`deföed
(
LUA_COMPAT_APIINTCASTS
)

239 
	#luaL_checkunsig√d
(
L
,
a
Ë((
lua_Unsig√d
)
	`luaL_checköãgî
(L,a))

	)

240 
	#luaL_›tunsig√d
(
L
,
a
,
d
) \

241 ((
lua_Unsig√d
)
	`luaL_›töãgî
(
L
,
a
,(
lua_I¡egî
)(
d
)))

	)

243 
	#luaL_checköt
(
L
,
n
Ë(()
	`luaL_checköãgî
(L, (n)))

	)

244 
	#luaL_›töt
(
L
,
n
,
d
Ë(()
	`luaL_›töãgî
(L, (n), (d)))

	)

246 
	#luaL_checkl⁄g
(
L
,
n
Ë(()
	`luaL_checköãgî
(L, (n)))

	)

247 
	#luaL_›é⁄g
(
L
,
n
,
d
Ë(()
	`luaL_›töãgî
(L, (n), (d)))

	)

	@lua/src/lbaselib.c

7 
	#lba£lib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<˘y≥.h
>

14 
	~<°dio.h
>

15 
	~<°dlib.h
>

16 
	~<°rög.h
>

18 
	~"lua.h
"

20 
	~"œuxlib.h
"

21 
	~"luÆib.h
"

24 
	$luaB_¥öt
 (
lua_Sèã
 *
L
) {

25 
n
 = 
	`lua_gët›
(
L
);

26 
i
;

27 
	`lua_gëglobÆ
(
L
, "tostring");

28 
i
=1; i<=
n
; i++) {

29 c⁄° *
s
;

30 
size_t
 
l
;

31 
	`lua_pushvÆue
(
L
, -1);

32 
	`lua_pushvÆue
(
L
, 
i
);

33 
	`lua_ˇŒ
(
L
, 1, 1);

34 
s
 = 
	`lua_tﬁ°rög
(
L
, -1, &
l
);

35 i‡(
s
 =
NULL
)

36  
	`luaL_îr‹
(
L
, "'tostring' mustÑeturná stringÅo 'print'");

37 i‡(
i
>1Ë
	`lua_wrôe°rög
("\t", 1);

38 
	`lua_wrôe°rög
(
s
, 
l
);

39 
	`lua_p›
(
L
, 1);

41 
	`lua_wrôñöe
();

43 
	}
}

46 
	#SPACECHARS
 " \f\n\r\t\v"

	)

48 c⁄° *
	$b_°r2öt
 (c⁄° *
s
, 
ba£
, 
lua_I¡egî
 *
≤
) {

49 
lua_Unsig√d
 
n
 = 0;

50 
√g
 = 0;

51 
s
 +
	`°r•n
(s, 
SPACECHARS
);

52 i‡(*
s
 ='-'Ë{ s++; 
√g
 = 1; }

53 i‡(*
s
 == '+') s++;

54 i‡(!
	`iß um
(()*
s
))

55  
NULL
;

57 
digô
 = (
	`isdigô
(()*
s
)) ? *s - '0'

58 : (
	`touµî
(()*
s
) - 'A') + 10;

59 i‡(
digô
 >
ba£
Ë 
NULL
;

60 
n
 =Ç * 
ba£
 + 
digô
;

61 
s
++;

62 } 
	`iß um
(()*
s
));

63 
s
 +
	`°r•n
(s, 
SPACECHARS
);

64 *
≤
 = (
lua_I¡egî
)((
√g
Ë? (0u - 
n
) :Ç);

65  
s
;

66 
	}
}

69 
	$luaB_t⁄umbî
 (
lua_Sèã
 *
L
) {

70 i‡(
	`lua_i¢⁄e‹nû
(
L
, 2)) {

71 
	`luaL_check™y
(
L
, 1);

72 i‡(
	`lua_ty≥
(
L
, 1Ë=
LUA_TNUMBER
) {

73 
	`lua_£â›
(
L
, 1);

77 
size_t
 
l
;

78 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, 1, &
l
);

79 i‡(
s
 !
NULL
 && 
	`lua_°rögt⁄umbî
(
L
, sË=
l
 + 1)

85 
size_t
 
l
;

86 c⁄° *
s
;

87 
lua_I¡egî
 
n
 = 0;

88 
lua_I¡egî
 
ba£
 = 
	`luaL_checköãgî
(
L
, 2);

89 
	`luaL_checkty≥
(
L
, 1, 
LUA_TSTRING
);

90 
s
 = 
	`lua_tﬁ°rög
(
L
, 1, &
l
);

91 
	`luaL_¨gcheck
(
L
, 2 <
ba£
 && base <= 36, 2, "base out ofÑange");

92 i‡(
	`b_°r2öt
(
s
, ()
ba£
, &
n
Ë=†+ 
l
) {

93 
	`lua_pushöãgî
(
L
, 
n
);

97 
	`lua_pushnû
(
L
);

99 
	}
}

102 
	$luaB_îr‹
 (
lua_Sèã
 *
L
) {

103 
Àvñ
 = ()
	`luaL_›töãgî
(
L
, 2, 1);

104 
	`lua_£â›
(
L
, 1);

105 i‡(
	`lua_ty≥
(
L
, 1Ë=
LUA_TSTRING
 && 
Àvñ
 > 0) {

106 
	`luaL_whîe
(
L
, 
Àvñ
);

107 
	`lua_pushvÆue
(
L
, 1);

108 
	`lua_c⁄ˇt
(
L
, 2);

110  
	`lua_îr‹
(
L
);

111 
	}
}

114 
	$luaB_gëmë©abÀ
 (
lua_Sèã
 *
L
) {

115 
	`luaL_check™y
(
L
, 1);

116 i‡(!
	`lua_gëmë©abÀ
(
L
, 1)) {

117 
	`lua_pushnû
(
L
);

120 
	`luaL_gëmëafõld
(
L
, 1, "__metatable");

122 
	}
}

125 
	$luaB_£tmë©abÀ
 (
lua_Sèã
 *
L
) {

126 
t
 = 
	`lua_ty≥
(
L
, 2);

127 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

128 
	`luaL_¨gcheck
(
L
, 
t
 =
LUA_TNIL
 ||Å =
LUA_TTABLE
, 2,

130 i‡(
	`luaL_gëmëafõld
(
L
, 1, "__më©abÀ"Ë!
LUA_TNIL
)

131  
	`luaL_îr‹
(
L
, "cannot changeáÖrotected metatable");

132 
	`lua_£â›
(
L
, 2);

133 
	`lua_£tmë©abÀ
(
L
, 1);

135 
	}
}

138 
	$luaB_øwequÆ
 (
lua_Sèã
 *
L
) {

139 
	`luaL_check™y
(
L
, 1);

140 
	`luaL_check™y
(
L
, 2);

141 
	`lua_pushboﬁón
(
L
, 
	`lua_øwequÆ
(L, 1, 2));

143 
	}
}

146 
	$luaB_øwÀn
 (
lua_Sèã
 *
L
) {

147 
t
 = 
	`lua_ty≥
(
L
, 1);

148 
	`luaL_¨gcheck
(
L
, 
t
 =
LUA_TTABLE
 ||Å =
LUA_TSTRING
, 1,

150 
	`lua_pushöãgî
(
L
, 
	`lua_øwÀn
(L, 1));

152 
	}
}

155 
	$luaB_øwgë
 (
lua_Sèã
 *
L
) {

156 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

157 
	`luaL_check™y
(
L
, 2);

158 
	`lua_£â›
(
L
, 2);

159 
	`lua_øwgë
(
L
, 1);

161 
	}
}

163 
	$luaB_øw£t
 (
lua_Sèã
 *
L
) {

164 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

165 
	`luaL_check™y
(
L
, 2);

166 
	`luaL_check™y
(
L
, 3);

167 
	`lua_£â›
(
L
, 3);

168 
	`lua_øw£t
(
L
, 1);

170 
	}
}

173 
	$luaB_cﬁÀ˘g¨bage
 (
lua_Sèã
 *
L
) {

174 c⁄° *c⁄° 
›ts
[] = {"stop", "restart", "collect",

176 "i§u¬ög", 
NULL
};

177 c⁄° 
›t¢um
[] = {
LUA_GCSTOP
, 
LUA_GCRESTART
, 
LUA_GCCOLLECT
,

178 
LUA_GCCOUNT
, 
LUA_GCSTEP
, 
LUA_GCSETPAUSE
, 
LUA_GCSETSTEPMUL
,

179 
LUA_GCISRUNNING
};

180 
o
 = 
›t¢um
[
	`luaL_check›ti⁄
(
L
, 1, "cﬁÀ˘", 
›ts
)];

181 
ex
 = ()
	`luaL_›töãgî
(
L
, 2, 0);

182 
ªs
 = 
	`lua_gc
(
L
, 
o
, 
ex
);

183 
o
) {

184 
LUA_GCCOUNT
: {

185 
b
 = 
	`lua_gc
(
L
, 
LUA_GCCOUNTB
, 0);

186 
	`lua_pushnumbî
(
L
, (
lua_Numbî
)
ªs
 + (÷ua_Numbî)
b
/1024));

189 
LUA_GCSTEP
: 
LUA_GCISRUNNING
: {

190 
	`lua_pushboﬁón
(
L
, 
ªs
);

194 
	`lua_pushöãgî
(
L
, 
ªs
);

198 
	}
}

201 
	$luaB_ty≥
 (
lua_Sèã
 *
L
) {

202 
t
 = 
	`lua_ty≥
(
L
, 1);

203 
	`luaL_¨gcheck
(
L
, 
t
 !
LUA_TNONE
, 1, "valueÉxpected");

204 
	`lua_push°rög
(
L
, 
	`lua_ty≥«me
(L, 
t
));

206 
	}
}

209 
	$∑úsmëa
 (
lua_Sèã
 *
L
, c⁄° *
mëhod
, 
iszîo
,

210 
lua_CFun˘i⁄
 
ôî
) {

211 i‡(
	`luaL_gëmëafõld
(
L
, 1, 
mëhod
Ë=
LUA_TNIL
) {

212 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

213 
	`lua_pushcfun˘i⁄
(
L
, 
ôî
);

214 
	`lua_pushvÆue
(
L
, 1);

215 i‡(
iszîo
Ë
	`lua_pushöãgî
(
L
, 0);

216 
	`lua_pushnû
(
L
);

219 
	`lua_pushvÆue
(
L
, 1);

220 
	`lua_ˇŒ
(
L
, 1, 3);

223 
	}
}

226 
	$luaB_√xt
 (
lua_Sèã
 *
L
) {

227 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

228 
	`lua_£â›
(
L
, 2);

229 i‡(
	`lua_√xt
(
L
, 1))

232 
	`lua_pushnû
(
L
);

235 
	}
}

238 
	$luaB_∑ús
 (
lua_Sèã
 *
L
) {

239  
	`∑úsmëa
(
L
, "__∑ús", 0, 
luaB_√xt
);

240 
	}
}

246 
	$ùaúßux
 (
lua_Sèã
 *
L
) {

247 
lua_I¡egî
 
i
 = 
	`luaL_checköãgî
(
L
, 2) + 1;

248 
	`lua_pushöãgî
(
L
, 
i
);

249  (
	`lua_gëi
(
L
, 1, 
i
Ë=
LUA_TNIL
) ? 1 : 2;

250 
	}
}

257 
	$luaB_ùaús
 (
lua_Sèã
 *
L
) {

258 #i‡
	`deföed
(
LUA_COMPAT_IPAIRS
)

259  
	`∑úsmëa
(
L
, "__ùaús", 1, 
ùaúßux
);

261 
	`luaL_check™y
(
L
, 1);

262 
	`lua_pushcfun˘i⁄
(
L
, 
ùaúßux
);

263 
	`lua_pushvÆue
(
L
, 1);

264 
	`lua_pushöãgî
(
L
, 0);

267 
	}
}

270 
	$lﬂd_aux
 (
lua_Sèã
 *
L
, 
°©us
, 
ívidx
) {

271 i‡(
°©us
 =
LUA_OK
) {

272 i‡(
ívidx
 != 0) {

273 
	`lua_pushvÆue
(
L
, 
ívidx
);

274 i‡(!
	`lua_£tupvÆue
(
L
, -2, 1))

275 
	`lua_p›
(
L
, 1);

280 
	`lua_pushnû
(
L
);

281 
	`lua_ö£π
(
L
, -2);

284 
	}
}

287 
	$luaB_lﬂdfûe
 (
lua_Sèã
 *
L
) {

288 c⁄° *
‚ame
 = 
	`luaL_›t°rög
(
L
, 1, 
NULL
);

289 c⁄° *
mode
 = 
	`luaL_›t°rög
(
L
, 2, 
NULL
);

290 
ív
 = (!
	`lua_i¢⁄e
(
L
, 3) ? 3 : 0);

291 
°©us
 = 
	`luaL_lﬂdfûex
(
L
, 
‚ame
, 
mode
);

292  
	`lﬂd_aux
(
L
, 
°©us
, 
ív
);

293 
	}
}

308 
	#RESERVEDSLOT
 5

	)

317 c⁄° *
	$gíîic_ªadî
 (
lua_Sèã
 *
L
, *
ud
, 
size_t
 *
size
) {

318 ()(
ud
);

319 
	`luaL_check°ack
(
L
, 2, "too manyÇested functions");

320 
	`lua_pushvÆue
(
L
, 1);

321 
	`lua_ˇŒ
(
L
, 0, 1);

322 i‡(
	`lua_i¢û
(
L
, -1)) {

323 
	`lua_p›
(
L
, 1);

324 *
size
 = 0;

325  
NULL
;

327 i‡(!
	`lua_is°rög
(
L
, -1))

328 
	`luaL_îr‹
(
L
, "reader function mustÑeturná string");

329 
	`lua_ª∂a˚
(
L
, 
RESERVEDSLOT
);

330  
	`lua_tﬁ°rög
(
L
, 
RESERVEDSLOT
, 
size
);

331 
	}
}

334 
	$luaB_lﬂd
 (
lua_Sèã
 *
L
) {

335 
°©us
;

336 
size_t
 
l
;

337 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, 1, &
l
);

338 c⁄° *
mode
 = 
	`luaL_›t°rög
(
L
, 3, "bt");

339 
ív
 = (!
	`lua_i¢⁄e
(
L
, 4) ? 4 : 0);

340 i‡(
s
 !
NULL
) {

341 c⁄° *
chunk«me
 = 
	`luaL_›t°rög
(
L
, 2, 
s
);

342 
°©us
 = 
	`luaL_lﬂdbuf„rx
(
L
, 
s
, 
l
, 
chunk«me
, 
mode
);

345 c⁄° *
chunk«me
 = 
	`luaL_›t°rög
(
L
, 2, "=(load)");

346 
	`luaL_checkty≥
(
L
, 1, 
LUA_TFUNCTION
);

347 
	`lua_£â›
(
L
, 
RESERVEDSLOT
);

348 
°©us
 = 
	`lua_lﬂd
(
L
, 
gíîic_ªadî
, 
NULL
, 
chunk«me
, 
mode
);

350  
	`lﬂd_aux
(
L
, 
°©us
, 
ív
);

351 
	}
}

356 
	$dofûec⁄t
 (
lua_Sèã
 *
L
, 
d1
, 
lua_KC⁄ãxt
 
d2
) {

357 ()
d1
; ()
d2
;

358  
	`lua_gët›
(
L
) - 1;

359 
	}
}

362 
	$luaB_dofûe
 (
lua_Sèã
 *
L
) {

363 c⁄° *
‚ame
 = 
	`luaL_›t°rög
(
L
, 1, 
NULL
);

364 
	`lua_£â›
(
L
, 1);

365 i‡(
	`luaL_lﬂdfûe
(
L
, 
‚ame
Ë!
LUA_OK
)

366  
	`lua_îr‹
(
L
);

367 
	`lua_ˇŒk
(
L
, 0, 
LUA_MULTRET
, 0, 
dofûec⁄t
);

368  
	`dofûec⁄t
(
L
, 0, 0);

369 
	}
}

372 
	$luaB_as£π
 (
lua_Sèã
 *
L
) {

373 i‡(
	`lua_toboﬁón
(
L
, 1))

374  
	`lua_gët›
(
L
);

376 
	`luaL_check™y
(
L
, 1);

377 
	`lua_ªmove
(
L
, 1);

378 
	`lua_pushlôîÆ
(
L
, "assertion failed!");

379 
	`lua_£â›
(
L
, 1);

380  
	`luaB_îr‹
(
L
);

382 
	}
}

385 
	$luaB_£À˘
 (
lua_Sèã
 *
L
) {

386 
n
 = 
	`lua_gët›
(
L
);

387 i‡(
	`lua_ty≥
(
L
, 1Ë=
LUA_TSTRING
 && *
	`lua_to°rög
(L, 1) == '#') {

388 
	`lua_pushöãgî
(
L
, 
n
-1);

392 
lua_I¡egî
 
i
 = 
	`luaL_checköãgî
(
L
, 1);

393 i‡(
i
 < 0Ëò
n
 + i;

394 i‡(
i
 > 
n
) i =Ç;

395 
	`luaL_¨gcheck
(
L
, 1 <
i
, 1, "index out ofÑange");

396  
n
 - ()
i
;

398 
	}
}

408 
	$föishpˇŒ
 (
lua_Sèã
 *
L
, 
°©us
, 
lua_KC⁄ãxt
 
exåa
) {

409 i‡(
°©us
 !
LUA_OK
 && sètu†!
LUA_YIELD
) {

410 
	`lua_pushboﬁón
(
L
, 0);

411 
	`lua_pushvÆue
(
L
, -2);

415  
	`lua_gët›
(
L
Ë- ()
exåa
;

416 
	}
}

419 
	$luaB_pˇŒ
 (
lua_Sèã
 *
L
) {

420 
°©us
;

421 
	`luaL_check™y
(
L
, 1);

422 
	`lua_pushboﬁón
(
L
, 1);

423 
	`lua_ö£π
(
L
, 1);

424 
°©us
 = 
	`lua_pˇŒk
(
L
, 
	`lua_gët›
(LË- 2, 
LUA_MULTRET
, 0, 0, 
föishpˇŒ
);

425  
	`föishpˇŒ
(
L
, 
°©us
, 0);

426 
	}
}

434 
	$luaB_xpˇŒ
 (
lua_Sèã
 *
L
) {

435 
°©us
;

436 
n
 = 
	`lua_gët›
(
L
);

437 
	`luaL_checkty≥
(
L
, 2, 
LUA_TFUNCTION
);

438 
	`lua_pushboﬁón
(
L
, 1);

439 
	`lua_pushvÆue
(
L
, 1);

440 
	`lua_rŸ©e
(
L
, 3, 2);

441 
°©us
 = 
	`lua_pˇŒk
(
L
, 
n
 - 2, 
LUA_MULTRET
, 2, 2, 
föishpˇŒ
);

442  
	`föishpˇŒ
(
L
, 
°©us
, 2);

443 
	}
}

446 
	$luaB_to°rög
 (
lua_Sèã
 *
L
) {

447 
	`luaL_check™y
(
L
, 1);

448 
	`luaL_tﬁ°rög
(
L
, 1, 
NULL
);

450 
	}
}

453 c⁄° 
luaL_Reg
 
	gba£_funcs
[] = {

454 {"as£π", 
luaB_as£π
},

455 {"cﬁÀ˘g¨bage", 
luaB_cﬁÀ˘g¨bage
},

456 {"dofûe", 
luaB_dofûe
},

457 {"îr‹", 
luaB_îr‹
},

458 {"gëmë©abÀ", 
luaB_gëmë©abÀ
},

459 {"ùaús", 
luaB_ùaús
},

460 {"lﬂdfûe", 
luaB_lﬂdfûe
},

461 {"lﬂd", 
luaB_lﬂd
},

462 #i‡
deföed
(
LUA_COMPAT_LOADSTRING
)

463 {"lﬂd°rög", 
luaB_lﬂd
},

465 {"√xt", 
luaB_√xt
},

466 {"∑ús", 
luaB_∑ús
},

467 {"pˇŒ", 
luaB_pˇŒ
},

468 {"¥öt", 
luaB_¥öt
},

469 {"øwequÆ", 
luaB_øwequÆ
},

470 {"øwÀn", 
luaB_øwÀn
},

471 {"øwgë", 
luaB_øwgë
},

472 {"øw£t", 
luaB_øw£t
},

473 {"£À˘", 
luaB_£À˘
},

474 {"£tmë©abÀ", 
luaB_£tmë©abÀ
},

475 {"t⁄umbî", 
luaB_t⁄umbî
},

476 {"to°rög", 
luaB_to°rög
},

477 {"ty≥", 
luaB_ty≥
},

478 {"xpˇŒ", 
luaB_xpˇŒ
},

480 {"_G", 
NULL
},

481 {"_VERSION", 
NULL
},

482 {
NULL
, NULL}

486 
LUAMOD_API
 
	$lua›í_ba£
 (
lua_Sèã
 *
L
) {

488 
	`lua_pushglobÆèbÀ
(
L
);

489 
	`luaL_£tfuncs
(
L
, 
ba£_funcs
, 0);

491 
	`lua_pushvÆue
(
L
, -1);

492 
	`lua_£tfõld
(
L
, -2, "_G");

494 
	`lua_pushlôîÆ
(
L
, 
LUA_VERSION
);

495 
	`lua_£tfõld
(
L
, -2, "_VERSION");

497 
	}
}

	@lua/src/lbitlib.c

7 
	#lbôlib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~"lua.h
"

15 
	~"œuxlib.h
"

16 
	~"luÆib.h
"

19 #i‡
deföed
(
LUA_COMPAT_BITLIB
)

22 
	#pushunsig√d
(
L
,
n
Ë
	`lua_pushöãgî
(L, (
lua_I¡egî
)“))

	)

23 
	#checkunsig√d
(
L
,
i
Ë((
lua_Unsig√d
)
	`luaL_checköãgî
(L,i))

	)

27 #i‡!
deföed
(
LUA_NBITS
)

28 
	#LUA_NBITS
 32

	)

37 
	#ALLONES
 (~(((~(
lua_Unsig√d
)0Ë<< (
LUA_NBITS
 - 1)Ë<< 1))

	)

41 
	#åim
(
x
Ë((xË& 
ALLONES
)

	)

45 
	#mask
(
n
Ë(~((
ALLONES
 << 1Ë<< (“Ë- 1)))

	)

49 
lua_Unsig√d
 
	$™daux
 (
lua_Sèã
 *
L
) {

50 
i
, 
n
 = 
	`lua_gët›
(
L
);

51 
lua_Unsig√d
 
r
 = ~(lua_Unsigned)0;

52 
i
 = 1; i <
n
; i++)

53 
r
 &
	`checkunsig√d
(
L
, 
i
);

54  
	`åim
(
r
);

55 
	}
}

58 
	$b_™d
 (
lua_Sèã
 *
L
) {

59 
lua_Unsig√d
 
r
 = 
	`™daux
(
L
);

60 
	`pushunsig√d
(
L
, 
r
);

62 
	}
}

65 
	$b_ã°
 (
lua_Sèã
 *
L
) {

66 
lua_Unsig√d
 
r
 = 
	`™daux
(
L
);

67 
	`lua_pushboﬁón
(
L
, 
r
 != 0);

69 
	}
}

72 
	$b_‹
 (
lua_Sèã
 *
L
) {

73 
i
, 
n
 = 
	`lua_gët›
(
L
);

74 
lua_Unsig√d
 
r
 = 0;

75 
i
 = 1; i <
n
; i++)

76 
r
 |
	`checkunsig√d
(
L
, 
i
);

77 
	`pushunsig√d
(
L
, 
	`åim
(
r
));

79 
	}
}

82 
	$b_x‹
 (
lua_Sèã
 *
L
) {

83 
i
, 
n
 = 
	`lua_gët›
(
L
);

84 
lua_Unsig√d
 
r
 = 0;

85 
i
 = 1; i <
n
; i++)

86 
r
 ^
	`checkunsig√d
(
L
, 
i
);

87 
	`pushunsig√d
(
L
, 
	`åim
(
r
));

89 
	}
}

92 
	$b_nŸ
 (
lua_Sèã
 *
L
) {

93 
lua_Unsig√d
 
r
 = ~
	`checkunsig√d
(
L
, 1);

94 
	`pushunsig√d
(
L
, 
	`åim
(
r
));

96 
	}
}

99 
	$b_shi·
 (
lua_Sèã
 *
L
, 
lua_Unsig√d
 
r
, 
lua_I¡egî
 
i
) {

100 i‡(
i
 < 0) {

101 
i
 = -i;

102 
r
 = 
	`åim
(r);

103 i‡(
i
 >
LUA_NBITS
Ë
r
 = 0;

104 
r
 >>
i
;

107 i‡(
i
 >
LUA_NBITS
Ë
r
 = 0;

108 
r
 <<
i
;

109 
r
 = 
	`åim
(r);

111 
	`pushunsig√d
(
L
, 
r
);

113 
	}
}

116 
	$b_lshi·
 (
lua_Sèã
 *
L
) {

117  
	`b_shi·
(
L
, 
	`checkunsig√d
(L, 1), 
	`luaL_checköãgî
(L, 2));

118 
	}
}

121 
	$b_rshi·
 (
lua_Sèã
 *
L
) {

122  
	`b_shi·
(
L
, 
	`checkunsig√d
(L, 1), -
	`luaL_checköãgî
(L, 2));

123 
	}
}

126 
	$b_¨shi·
 (
lua_Sèã
 *
L
) {

127 
lua_Unsig√d
 
r
 = 
	`checkunsig√d
(
L
, 1);

128 
lua_I¡egî
 
i
 = 
	`luaL_checköãgî
(
L
, 2);

129 i‡(
i
 < 0 || !(
r
 & ((
lua_Unsig√d
)1 << (
LUA_NBITS
 - 1))))

130  
	`b_shi·
(
L
, 
r
, -
i
);

132 i‡(
i
 >
LUA_NBITS
Ë
r
 = 
ALLONES
;

134 
r
 = 
	`åim
(‘ >> 
i
Ë| ~—rim(~(
lua_Unsig√d
)0) >> i));

135 
	`pushunsig√d
(
L
, 
r
);

138 
	}
}

141 
	$b_rŸ
 (
lua_Sèã
 *
L
, 
lua_I¡egî
 
d
) {

142 
lua_Unsig√d
 
r
 = 
	`checkunsig√d
(
L
, 1);

143 
i
 = 
d
 & (
LUA_NBITS
 - 1);

144 
r
 = 
	`åim
(r);

145 i‡(
i
 != 0)

146 
r
 = (∏<< 
i
Ë| (∏>> (
LUA_NBITS
 - i));

147 
	`pushunsig√d
(
L
, 
	`åim
(
r
));

149 
	}
}

152 
	$b_ÃŸ
 (
lua_Sèã
 *
L
) {

153  
	`b_rŸ
(
L
, 
	`luaL_checköãgî
(L, 2));

154 
	}
}

157 
	$b_ºŸ
 (
lua_Sèã
 *
L
) {

158  
	`b_rŸ
(
L
, -
	`luaL_checköãgî
(L, 2));

159 
	}
}

168 
	$fõld¨gs
 (
lua_Sèã
 *
L
, 
Árg
, *
width
) {

169 
lua_I¡egî
 
f
 = 
	`luaL_checköãgî
(
L
, 
Árg
);

170 
lua_I¡egî
 
w
 = 
	`luaL_›töãgî
(
L
, 
Árg
 + 1, 1);

171 
	`luaL_¨gcheck
(
L
, 0 <
f
, 
Árg
, "field cannot beÇegative");

172 
	`luaL_¨gcheck
(
L
, 0 < 
w
, 
Árg
 + 1, "width must beÖositive");

173 i‡(
f
 + 
w
 > 
LUA_NBITS
)

174 
	`luaL_îr‹
(
L
, "tryingÅoáccessÇon-existent bits");

175 *
width
 = ()
w
;

176  ()
f
;

177 
	}
}

180 
	$b_exåa˘
 (
lua_Sèã
 *
L
) {

181 
w
;

182 
lua_Unsig√d
 
r
 = 
	`åim
(
	`checkunsig√d
(
L
, 1));

183 
f
 = 
	`fõld¨gs
(
L
, 2, &
w
);

184 
r
 = (∏>> 
f
Ë& 
	`mask
(
w
);

185 
	`pushunsig√d
(
L
, 
r
);

187 
	}
}

190 
	$b_ª∂a˚
 (
lua_Sèã
 *
L
) {

191 
w
;

192 
lua_Unsig√d
 
r
 = 
	`åim
(
	`checkunsig√d
(
L
, 1));

193 
lua_Unsig√d
 
v
 = 
	`åim
(
	`checkunsig√d
(
L
, 2));

194 
f
 = 
	`fõld¨gs
(
L
, 3, &
w
);

195 
lua_Unsig√d
 
m
 = 
	`mask
(
w
);

196 
r
 = (∏& ~(
m
 << 
f
)Ë| ((
v
 & m) << f);

197 
	`pushunsig√d
(
L
, 
r
);

199 
	}
}

202 c⁄° 
luaL_Reg
 
	gbôlib
[] = {

203 {"¨shi·", 
b_¨shi·
},

204 {"b™d", 
b_™d
},

205 {"bnŸ", 
b_nŸ
},

206 {"b‹", 
b_‹
},

207 {"bx‹", 
b_x‹
},

208 {"bã°", 
b_ã°
},

209 {"exåa˘", 
b_exåa˘
},

210 {"ÃŸ©e", 
b_ÃŸ
},

211 {"lshi·", 
b_lshi·
},

212 {"ª∂a˚", 
b_ª∂a˚
},

213 {"ºŸ©e", 
b_ºŸ
},

214 {"rshi·", 
b_rshi·
},

215 {
NULL
, NULL}

220 
LUAMOD_API
 
	$lua›í_bô32
 (
lua_Sèã
 *
L
) {

221 
	`luaL_√wlib
(
L
, 
bôlib
);

223 
	}
}

229 
LUAMOD_API
 
	$lua›í_bô32
 (
lua_Sèã
 *
L
) {

230  
	`luaL_îr‹
(
L
, "library 'bit32' has been deprecated");

231 
	}
}

	@lua/src/lcode.c

7 
	#lcode_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<m©h.h
>

14 
	~<°dlib.h
>

16 
	~"lua.h
"

18 
	~"lcode.h
"

19 
	~"ldebug.h
"

20 
	~"ldo.h
"

21 
	~"lgc.h
"

22 
	~"Œex.h
"

23 
	~"lmem.h
"

24 
	~"lobje˘.h
"

25 
	~"l›codes.h
"

26 
	~"Õ¨£r.h
"

27 
	~"l°rög.h
"

28 
	~"…abÀ.h
"

29 
	~"lvm.h
"

33 
	#MAXREGS
 255

	)

36 
	#hasjumps
(
e
Ë(”)->
t
 !”)->
f
)

	)

43 
	$t⁄umîÆ
(
expdesc
 *
e
, 
TVÆue
 *
v
) {

44 i‡(
	`hasjumps
(
e
))

46 
e
->
k
) {

47 
VKINT
:

48 i‡(
v
Ë
	`£tivÆue
(v, 
e
->
u
.
ivÆ
);

50 
VKFLT
:

51 i‡(
v
Ë
	`£tÊtvÆue
(v, 
e
->
u
.
nvÆ
);

55 
	}
}

64 
	$luaK_nû
 (
FuncSèã
 *
fs
, 
‰om
, 
n
) {

65 
In°ru˘i⁄
 *
¥evious
;

66 
l
 = 
‰om
 + 
n
 - 1;

67 i‡(
fs
->
pc
 > fs->
œ°èrgë
) {

68 
¥evious
 = &
fs
->
f
->
code
[fs->
pc
-1];

69 i‡(
	`GET_OPCODE
(*
¥evious
Ë=
OP_LOADNIL
) {

70 
p‰om
 = 
	`GETARG_A
(*
¥evious
);

71 
∂
 = 
p‰om
 + 
	`GETARG_B
(*
¥evious
);

72 i‡((
p‰om
 <
‰om
 && from <
∂
 + 1) ||

73 (
‰om
 <
p‰om
 &&Ö‰om <
l
 + 1)) {

74 i‡(
p‰om
 < 
‰om
) from =Öfrom;

75 i‡(
∂
 > 
l
)Ü =Öl;

76 
	`SETARG_A
(*
¥evious
, 
‰om
);

77 
	`SETARG_B
(*
¥evious
, 
l
 - 
‰om
);

82 
	`luaK_codeABC
(
fs
, 
OP_LOADNIL
, 
‰om
, 
n
 - 1, 0);

83 
	}
}

90 
	$gëjump
 (
FuncSèã
 *
fs
, 
pc
) {

91 
off£t
 = 
	`GETARG_sBx
(
fs
->
f
->
code
[
pc
]);

92 i‡(
off£t
 =
NO_JUMP
)

93  
NO_JUMP
;

95  (
pc
+1)+
off£t
;

96 
	}
}

103 
	$fixjump
 (
FuncSèã
 *
fs
, 
pc
, 
de°
) {

104 
In°ru˘i⁄
 *
jmp
 = &
fs
->
f
->
code
[
pc
];

105 
off£t
 = 
de°
 - (
pc
 + 1);

106 
	`lua_as£π
(
de°
 !
NO_JUMP
);

107 i‡(
	`abs
(
off£t
Ë> 
MAXARG_sBx
)

108 
	`luaX_sy¡axîr‹
(
fs
->
ls
, "control structureÅooÜong");

109 
	`SETARG_sBx
(*
jmp
, 
off£t
);

110 
	}
}

116 
	$luaK_c⁄ˇt
 (
FuncSèã
 *
fs
, *
l1
, 
l2
) {

117 i‡(
l2
 =
NO_JUMP
) ;

118 i‡(*
l1
 =
NO_JUMP
)

119 *
l1
 = 
l2
;

121 
li°
 = *
l1
;

122 
√xt
;

123 (
√xt
 = 
	`gëjump
(
fs
, 
li°
)Ë!
NO_JUMP
)

124 
li°
 = 
√xt
;

125 
	`fixjump
(
fs
, 
li°
, 
l2
);

127 
	}
}

136 
	$luaK_jump
 (
FuncSèã
 *
fs
) {

137 
jpc
 = 
fs
->jpc;

138 
j
;

139 
fs
->
jpc
 = 
NO_JUMP
;

140 
j
 = 
	`luaK_codeAsBx
(
fs
, 
OP_JMP
, 0, 
NO_JUMP
);

141 
	`luaK_c⁄ˇt
(
fs
, &
j
, 
jpc
);

142  
j
;

143 
	}
}

149 
	$luaK_ªt
 (
FuncSèã
 *
fs
, 
fú°
, 
ƒë
) {

150 
	`luaK_codeABC
(
fs
, 
OP_RETURN
, 
fú°
, 
ƒë
+1, 0);

151 
	}
}

158 
	$c⁄djump
 (
FuncSèã
 *
fs
, 
OpCode
 
›
, 
A
, 
B
, 
C
) {

159 
	`luaK_codeABC
(
fs
, 
›
, 
A
, 
B
, 
C
);

160  
	`luaK_jump
(
fs
);

161 
	}
}

168 
	$luaK_gëœbñ
 (
FuncSèã
 *
fs
) {

169 
fs
->
œ°èrgë
 = fs->
pc
;

170  
fs
->
pc
;

171 
	}
}

179 
In°ru˘i⁄
 *
	$gëjumpc⁄åﬁ
 (
FuncSèã
 *
fs
, 
pc
) {

180 
In°ru˘i⁄
 *
pi
 = &
fs
->
f
->
code
[
pc
];

181 i‡(
pc
 >1 && 
	`ã°TMode
(
	`GET_OPCODE
(*(
pi
-1))))

182  
pi
-1;

184  
pi
;

185 
	}
}

195 
	$∑tchã°ªg
 (
FuncSèã
 *
fs
, 
node
, 
ªg
) {

196 
In°ru˘i⁄
 *
i
 = 
	`gëjumpc⁄åﬁ
(
fs
, 
node
);

197 i‡(
	`GET_OPCODE
(*
i
Ë!
OP_TESTSET
)

199 i‡(
ªg
 !
NO_REG
 &&Ñeg !
	`GETARG_B
(*
i
))

200 
	`SETARG_A
(*
i
, 
ªg
);

204 *
i
 = 
	`CREATE_ABC
(
OP_TEST
, 
	`GETARG_B
(*i), 0, 
	`GETARG_C
(*i));

207 
	}
}

213 
	$ªmovevÆues
 (
FuncSèã
 *
fs
, 
li°
) {

214 ; 
li°
 !
NO_JUMP
;Üi° = 
	`gëjump
(
fs
,Üist))

215 
	`∑tchã°ªg
(
fs
, 
li°
, 
NO_REG
);

216 
	}
}

224 
	$∑tchli°aux
 (
FuncSèã
 *
fs
, 
li°
, 
vèrgë
, 
ªg
,

225 
dèrgë
) {

226 
li°
 !
NO_JUMP
) {

227 
√xt
 = 
	`gëjump
(
fs
, 
li°
);

228 i‡(
	`∑tchã°ªg
(
fs
, 
li°
, 
ªg
))

229 
	`fixjump
(
fs
, 
li°
, 
vèrgë
);

231 
	`fixjump
(
fs
, 
li°
, 
dèrgë
);

232 
li°
 = 
√xt
;

234 
	}
}

242 
	$disch¨gejpc
 (
FuncSèã
 *
fs
) {

243 
	`∑tchli°aux
(
fs
, fs->
jpc
, fs->
pc
, 
NO_REG
, fs->pc);

244 
fs
->
jpc
 = 
NO_JUMP
;

245 
	}
}

252 
	$luaK_∑tchtohîe
 (
FuncSèã
 *
fs
, 
li°
) {

253 
	`luaK_gëœbñ
(
fs
);

254 
	`luaK_c⁄ˇt
(
fs
, &fs->
jpc
, 
li°
);

255 
	}
}

263 
	$luaK_∑tchli°
 (
FuncSèã
 *
fs
, 
li°
, 
èrgë
) {

264 i‡(
èrgë
 =
fs
->
pc
)

265 
	`luaK_∑tchtohîe
(
fs
, 
li°
);

267 
	`lua_as£π
(
èrgë
 < 
fs
->
pc
);

268 
	`∑tchli°aux
(
fs
, 
li°
, 
èrgë
, 
NO_REG
,Åarget);

270 
	}
}

278 
	$luaK_∑tch˛o£
 (
FuncSèã
 *
fs
, 
li°
, 
Àvñ
) {

279 
Àvñ
++;

280 ; 
li°
 !
NO_JUMP
;Üi° = 
	`gëjump
(
fs
,Üist)) {

281 
	`lua_as£π
(
	`GET_OPCODE
(
fs
->
f
->
code
[
li°
]Ë=
OP_JMP
 &&

282 (
	`GETARG_A
(
fs
->
f
->
code
[
li°
]) == 0 ||

283 
	`GETARG_A
(
fs
->
f
->
code
[
li°
]Ë>
Àvñ
));

284 
	`SETARG_A
(
fs
->
f
->
code
[
li°
], 
Àvñ
);

286 
	}
}

293 
	$luaK_code
 (
FuncSèã
 *
fs
, 
In°ru˘i⁄
 
i
) {

294 
PrŸo
 *
f
 = 
fs
->f;

295 
	`disch¨gejpc
(
fs
);

297 
	`luaM_growve˘‹
(
fs
->
ls
->
L
, 
f
->
code
, fs->
pc
, f->
sizecode
, 
In°ru˘i⁄
,

298 
MAX_INT
, "opcodes");

299 
f
->
code
[
fs
->
pc
] = 
i
;

301 
	`luaM_growve˘‹
(
fs
->
ls
->
L
, 
f
->
löeöfo
, fs->
pc
, f->
sizñöeöfo
, ,

302 
MAX_INT
, "opcodes");

303 
f
->
löeöfo
[
fs
->
pc
] = fs->
ls
->
œ°löe
;

304  
fs
->
pc
++;

305 
	}
}

312 
	$luaK_codeABC
 (
FuncSèã
 *
fs
, 
OpCode
 
o
, 
a
, 
b
, 
c
) {

313 
	`lua_as£π
(
	`gëOpMode
(
o
Ë=
iABC
);

314 
	`lua_as£π
(
	`gëBMode
(
o
Ë!
OpArgN
 || 
b
 == 0);

315 
	`lua_as£π
(
	`gëCMode
(
o
Ë!
OpArgN
 || 
c
 == 0);

316 
	`lua_as£π
(
a
 <
MAXARG_A
 && 
b
 <
MAXARG_B
 && 
c
 <
MAXARG_C
);

317  
	`luaK_code
(
fs
, 
	`CREATE_ABC
(
o
, 
a
, 
b
, 
c
));

318 
	}
}

324 
	$luaK_codeABx
 (
FuncSèã
 *
fs
, 
OpCode
 
o
, 
a
, 
bc
) {

325 
	`lua_as£π
(
	`gëOpMode
(
o
Ë=
iABx
 || gëOpMode(oË=
iAsBx
);

326 
	`lua_as£π
(
	`gëCMode
(
o
Ë=
OpArgN
);

327 
	`lua_as£π
(
a
 <
MAXARG_A
 && 
bc
 <
MAXARG_Bx
);

328  
	`luaK_code
(
fs
, 
	`CREATE_ABx
(
o
, 
a
, 
bc
));

329 
	}
}

335 
	$codìxåØrg
 (
FuncSèã
 *
fs
, 
a
) {

336 
	`lua_as£π
(
a
 <
MAXARG_Ax
);

337  
	`luaK_code
(
fs
, 
	`CREATE_Ax
(
OP_EXTRAARG
, 
a
));

338 
	}
}

346 
	$luaK_codek
 (
FuncSèã
 *
fs
, 
ªg
, 
k
) {

347 i‡(
k
 <
MAXARG_Bx
)

348  
	`luaK_codeABx
(
fs
, 
OP_LOADK
, 
ªg
, 
k
);

350 
p
 = 
	`luaK_codeABx
(
fs
, 
OP_LOADKX
, 
ªg
, 0);

351 
	`codìxåØrg
(
fs
, 
k
);

352  
p
;

354 
	}
}

361 
	$luaK_check°ack
 (
FuncSèã
 *
fs
, 
n
) {

362 
√w°ack
 = 
fs
->
‰ìªg
 + 
n
;

363 i‡(
√w°ack
 > 
fs
->
f
->
max°acksize
) {

364 i‡(
√w°ack
 >
MAXREGS
)

365 
	`luaX_sy¡axîr‹
(
fs
->
ls
,

367 
fs
->
f
->
max°acksize
 = 
	`ˇ°_byã
(
√w°ack
);

369 
	}
}

375 
	$luaK_ª£rvîegs
 (
FuncSèã
 *
fs
, 
n
) {

376 
	`luaK_check°ack
(
fs
, 
n
);

377 
fs
->
‰ìªg
 +
n
;

378 
	}
}

386 
	$‰ìªg
 (
FuncSèã
 *
fs
, 
ªg
) {

387 i‡(!
	`ISK
(
ªg
Ë&&Ñeg >
fs
->
«˘v¨
) {

388 
fs
->
‰ìªg
--;

389 
	`lua_as£π
(
ªg
 =
fs
->
‰ìªg
);

391 
	}
}

397 
	$‰ìexp
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

398 i‡(
e
->
k
 =
VNONRELOC
)

399 
	`‰ìªg
(
fs
, 
e
->
u
.
öfo
);

400 
	}
}

407 
	$‰ìexps
 (
FuncSèã
 *
fs
, 
expdesc
 *
e1
,Éxpdes¯*
e2
) {

408 
r1
 = (
e1
->
k
 =
VNONRELOC
Ë?É1->
u
.
öfo
 : -1;

409 
r2
 = (
e2
->
k
 =
VNONRELOC
Ë?É2->
u
.
öfo
 : -1;

410 i‡(
r1
 > 
r2
) {

411 
	`‰ìªg
(
fs
, 
r1
);

412 
	`‰ìªg
(
fs
, 
r2
);

415 
	`‰ìªg
(
fs
, 
r2
);

416 
	`‰ìªg
(
fs
, 
r1
);

418 
	}
}

428 
	$addk
 (
FuncSèã
 *
fs
, 
TVÆue
 *
key
, TVÆuê*
v
) {

429 
lua_Sèã
 *
L
 = 
fs
->
ls
->L;

430 
PrŸo
 *
f
 = 
fs
->f;

431 
TVÆue
 *
idx
 = 
	`luaH_£t
(
L
, 
fs
->
ls
->
h
, 
key
);

432 
k
, 
ﬁdsize
;

433 i‡(
	`âisöãgî
(
idx
)) {

434 
k
 = 
	`ˇ°_öt
(
	`ivÆue
(
idx
));

436 i‡(
k
 < 
fs
->
nk
 && 
	`ây≥
(&
f
->k[k]Ë=ây≥(
v
) &&

437 
	`luaV_øwequÆobj
(&
f
->
k
[k], 
v
))

438  
k
;

441 
ﬁdsize
 = 
f
->
sizek
;

442 
k
 = 
fs
->
nk
;

445 
	`£tivÆue
(
idx
, 
k
);

446 
	`luaM_growve˘‹
(
L
, 
f
->
k
, k, f->
sizek
, 
TVÆue
, 
MAXARG_Ax
, "constants");

447 
ﬁdsize
 < 
f
->
sizek
Ë
	`£äûvÆue
(&f->
k
[oldsize++]);

448 
	`£tobj
(
L
, &
f
->
k
[k], 
v
);

449 
fs
->
nk
++;

450 
	`luaC_b¨rõr
(
L
, 
f
, 
v
);

451  
k
;

452 
	}
}

458 
	$luaK_°rögK
 (
FuncSèã
 *
fs
, 
TSåög
 *
s
) {

459 
TVÆue
 
o
;

460 
	`£tsvÆue
(
fs
->
ls
->
L
, &
o
, 
s
);

461  
	`addk
(
fs
, &
o
, &o);

462 
	}
}

471 
	$luaK_ötK
 (
FuncSèã
 *
fs
, 
lua_I¡egî
 
n
) {

472 
TVÆue
 
k
, 
o
;

473 
	`£çvÆue
(&
k
, 
	`ˇ°
(*, ca°(
size_t
, 
n
)));

474 
	`£tivÆue
(&
o
, 
n
);

475  
	`addk
(
fs
, &
k
, &
o
);

476 
	}
}

481 
	$luaK_numbîK
 (
FuncSèã
 *
fs
, 
lua_Numbî
 
r
) {

482 
TVÆue
 
o
;

483 
	`£tÊtvÆue
(&
o
, 
r
);

484  
	`addk
(
fs
, &
o
, &o);

485 
	}
}

491 
	$boﬁK
 (
FuncSèã
 *
fs
, 
b
) {

492 
TVÆue
 
o
;

493 
	`£tbvÆue
(&
o
, 
b
);

494  
	`addk
(
fs
, &
o
, &o);

495 
	}
}

501 
	$nûK
 (
FuncSèã
 *
fs
) {

502 
TVÆue
 
k
, 
v
;

503 
	`£äûvÆue
(&
v
);

505 
	`£thvÆue
(
fs
->
ls
->
L
, &
k
, fs->ls->
h
);

506  
	`addk
(
fs
, &
k
, &
v
);

507 
	}
}

515 
	$luaK_£åëu∫s
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
ƒesu…s
) {

516 i‡(
e
->
k
 =
VCALL
) {

517 
	`SETARG_C
(
	`gëö°ru˘i⁄
(
fs
, 
e
), 
ƒesu…s
 + 1);

519 i‡(
e
->
k
 =
VVARARG
) {

520 
In°ru˘i⁄
 *
pc
 = &
	`gëö°ru˘i⁄
(
fs
, 
e
);

521 
	`SETARG_B
(*
pc
, 
ƒesu…s
 + 1);

522 
	`SETARG_A
(*
pc
, 
fs
->
‰ìªg
);

523 
	`luaK_ª£rvîegs
(
fs
, 1);

525 
	`lua_as£π
(
ƒesu…s
 =
LUA_MULTRET
);

526 
	}
}

539 
	$luaK_£t⁄îë
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

540 i‡(
e
->
k
 =
VCALL
) {

542 
	`lua_as£π
(
	`GETARG_C
(
	`gëö°ru˘i⁄
(
fs
, 
e
)) == 2);

543 
e
->
k
 = 
VNONRELOC
;

544 
e
->
u
.
öfo
 = 
	`GETARG_A
(
	`gëö°ru˘i⁄
(
fs
,É));

546 i‡(
e
->
k
 =
VVARARG
) {

547 
	`SETARG_B
(
	`gëö°ru˘i⁄
(
fs
, 
e
), 2);

548 
e
->
k
 = 
VRELOCABLE
;

550 
	}
}

556 
	$luaK_disch¨gev¨s
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

557 
e
->
k
) {

558 
VLOCAL
: {

559 
e
->
k
 = 
VNONRELOC
;

562 
VUPVAL
: {

563 
e
->
u
.
öfo
 = 
	`luaK_codeABC
(
fs
, 
OP_GETUPVAL
, 0,É->u.info, 0);

564 
e
->
k
 = 
VRELOCABLE
;

567 
VINDEXED
: {

568 
OpCode
 
›
;

569 
	`‰ìªg
(
fs
, 
e
->
u
.
öd
.
idx
);

570 i‡(
e
->
u
.
öd
.
vt
 =
VLOCAL
) {

571 
	`‰ìªg
(
fs
, 
e
->
u
.
öd
.
t
);

572 
›
 = 
OP_GETTABLE
;

575 
	`lua_as£π
(
e
->
u
.
öd
.
vt
 =
VUPVAL
);

576 
›
 = 
OP_GETTABUP
;

578 
e
->
u
.
öfo
 = 
	`luaK_codeABC
(
fs
, 
›
, 0,É->u.
öd
.
t
,É->u.öd.
idx
);

579 
e
->
k
 = 
VRELOCABLE
;

582 
VVARARG
: 
VCALL
: {

583 
	`luaK_£t⁄îë
(
fs
, 
e
);

588 
	}
}

595 
	$disch¨ge2ªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
ªg
) {

596 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

597 
e
->
k
) {

598 
VNIL
: {

599 
	`luaK_nû
(
fs
, 
ªg
, 1);

602 
VFALSE
: 
VTRUE
: {

603 
	`luaK_codeABC
(
fs
, 
OP_LOADBOOL
, 
ªg
, 
e
->
k
 =
VTRUE
, 0);

606 
VK
: {

607 
	`luaK_codek
(
fs
, 
ªg
, 
e
->
u
.
öfo
);

610 
VKFLT
: {

611 
	`luaK_codek
(
fs
, 
ªg
, 
	`luaK_numbîK
(fs, 
e
->
u
.
nvÆ
));

614 
VKINT
: {

615 
	`luaK_codek
(
fs
, 
ªg
, 
	`luaK_ötK
(fs, 
e
->
u
.
ivÆ
));

618 
VRELOCABLE
: {

619 
In°ru˘i⁄
 *
pc
 = &
	`gëö°ru˘i⁄
(
fs
, 
e
);

620 
	`SETARG_A
(*
pc
, 
ªg
);

623 
VNONRELOC
: {

624 i‡(
ªg
 !
e
->
u
.
öfo
)

625 
	`luaK_codeABC
(
fs
, 
OP_MOVE
, 
ªg
, 
e
->
u
.
öfo
, 0);

629 
	`lua_as£π
(
e
->
k
 =
VJMP
);

633 
e
->
u
.
öfo
 = 
ªg
;

634 
e
->
k
 = 
VNONRELOC
;

635 
	}
}

641 
	$disch¨ge2™yªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

642 i‡(
e
->
k
 !
VNONRELOC
) {

643 
	`luaK_ª£rvîegs
(
fs
, 1);

644 
	`disch¨ge2ªg
(
fs
, 
e
, fs->
‰ìªg
-1);

646 
	}
}

649 
	$code_lﬂdboﬁ
 (
FuncSèã
 *
fs
, 
A
, 
b
, 
jump
) {

650 
	`luaK_gëœbñ
(
fs
);

651  
	`luaK_codeABC
(
fs
, 
OP_LOADBOOL
, 
A
, 
b
, 
jump
);

652 
	}
}

659 
	$√ed_vÆue
 (
FuncSèã
 *
fs
, 
li°
) {

660 ; 
li°
 !
NO_JUMP
;Üi° = 
	`gëjump
(
fs
,Üist)) {

661 
In°ru˘i⁄
 
i
 = *
	`gëjumpc⁄åﬁ
(
fs
, 
li°
);

662 i‡(
	`GET_OPCODE
(
i
Ë!
OP_TESTSET
)  1;

665 
	}
}

675 
	$exp2ªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
ªg
) {

676 
	`disch¨ge2ªg
(
fs
, 
e
, 
ªg
);

677 i‡(
e
->
k
 =
VJMP
)

678 
	`luaK_c⁄ˇt
(
fs
, &
e
->
t
,É->
u
.
öfo
);

679 i‡(
	`hasjumps
(
e
)) {

680 
föÆ
;

681 
p_f
 = 
NO_JUMP
;

682 
p_t
 = 
NO_JUMP
;

683 i‡(
	`√ed_vÆue
(
fs
, 
e
->
t
Ë||Çìd_vÆue(fs,É->
f
)) {

684 
fj
 = (
e
->
k
 =
VJMP
Ë? 
NO_JUMP
 : 
	`luaK_jump
(
fs
);

685 
p_f
 = 
	`code_lﬂdboﬁ
(
fs
, 
ªg
, 0, 1);

686 
p_t
 = 
	`code_lﬂdboﬁ
(
fs
, 
ªg
, 1, 0);

687 
	`luaK_∑tchtohîe
(
fs
, 
fj
);

689 
föÆ
 = 
	`luaK_gëœbñ
(
fs
);

690 
	`∑tchli°aux
(
fs
, 
e
->
f
, 
föÆ
, 
ªg
, 
p_f
);

691 
	`∑tchli°aux
(
fs
, 
e
->
t
, 
föÆ
, 
ªg
, 
p_t
);

693 
e
->
f
 =É->
t
 = 
NO_JUMP
;

694 
e
->
u
.
öfo
 = 
ªg
;

695 
e
->
k
 = 
VNONRELOC
;

696 
	}
}

703 
	$luaK_exp2√xåeg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

704 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

705 
	`‰ìexp
(
fs
, 
e
);

706 
	`luaK_ª£rvîegs
(
fs
, 1);

707 
	`exp2ªg
(
fs
, 
e
, fs->
‰ìªg
 - 1);

708 
	}
}

715 
	$luaK_exp2™yªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

716 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

717 i‡(
e
->
k
 =
VNONRELOC
) {

718 i‡(!
	`hasjumps
(
e
))

719  
e
->
u
.
öfo
;

720 i‡(
e
->
u
.
öfo
 >
fs
->
«˘v¨
) {

721 
	`exp2ªg
(
fs
, 
e
,É->
u
.
öfo
);

722  
e
->
u
.
öfo
;

725 
	`luaK_exp2√xåeg
(
fs
, 
e
);

726  
e
->
u
.
öfo
;

727 
	}
}

734 
	$luaK_exp2™yªgup
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

735 i‡(
e
->
k
 !
VUPVAL
 || 
	`hasjumps
(e))

736 
	`luaK_exp2™yªg
(
fs
, 
e
);

737 
	}
}

744 
	$luaK_exp2vÆ
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

745 i‡(
	`hasjumps
(
e
))

746 
	`luaK_exp2™yªg
(
fs
, 
e
);

748 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

749 
	}
}

758 
	$luaK_exp2RK
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

759 
	`luaK_exp2vÆ
(
fs
, 
e
);

760 
e
->
k
) {

761 
VTRUE
: 
e
->
u
.
öfo
 = 
	`boﬁK
(
fs
, 1); 
vk
;

762 
VFALSE
: 
e
->
u
.
öfo
 = 
	`boﬁK
(
fs
, 0); 
vk
;

763 
VNIL
: 
e
->
u
.
öfo
 = 
	`nûK
(
fs
); 
vk
;

764 
VKINT
: 
e
->
u
.
öfo
 = 
	`luaK_ötK
(
fs
,É->u.
ivÆ
); 
vk
;

765 
VKFLT
: 
e
->
u
.
öfo
 = 
	`luaK_numbîK
(
fs
,É->u.
nvÆ
); 
vk
;

766 
VK
:

767 
vk
:

768 
e
->
k
 = 
VK
;

769 i‡(
e
->
u
.
öfo
 <
MAXINDEXRK
)

770  
	`RKASK
(
e
->
u
.
öfo
);

775  
	`luaK_exp2™yªg
(
fs
, 
e
);

776 
	}
}

782 
	$luaK_°‹ev¨
 (
FuncSèã
 *
fs
, 
expdesc
 *
v¨
,Éxpdes¯*
ex
) {

783 
v¨
->
k
) {

784 
VLOCAL
: {

785 
	`‰ìexp
(
fs
, 
ex
);

786 
	`exp2ªg
(
fs
, 
ex
, 
v¨
->
u
.
öfo
);

789 
VUPVAL
: {

790 
e
 = 
	`luaK_exp2™yªg
(
fs
, 
ex
);

791 
	`luaK_codeABC
(
fs
, 
OP_SETUPVAL
, 
e
, 
v¨
->
u
.
öfo
, 0);

794 
VINDEXED
: {

795 
OpCode
 
›
 = (
v¨
->
u
.
öd
.
vt
 =
VLOCAL
Ë? 
OP_SETTABLE
 : 
OP_SETTABUP
;

796 
e
 = 
	`luaK_exp2RK
(
fs
, 
ex
);

797 
	`luaK_codeABC
(
fs
, 
›
, 
v¨
->
u
.
öd
.
t
, v¨->u.öd.
idx
, 
e
);

800 : 
	`lua_as£π
(0);

802 
	`‰ìexp
(
fs
, 
ex
);

803 
	}
}

809 
	$luaK_£lf
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
,Éxpdes¯*
key
) {

810 
îeg
;

811 
	`luaK_exp2™yªg
(
fs
, 
e
);

812 
îeg
 = 
e
->
u
.
öfo
;

813 
	`‰ìexp
(
fs
, 
e
);

814 
e
->
u
.
öfo
 = 
fs
->
‰ìªg
;

815 
e
->
k
 = 
VNONRELOC
;

816 
	`luaK_ª£rvîegs
(
fs
, 2);

817 
	`luaK_codeABC
(
fs
, 
OP_SELF
, 
e
->
u
.
öfo
, 
îeg
, 
	`luaK_exp2RK
(fs, 
key
));

818 
	`‰ìexp
(
fs
, 
key
);

819 
	}
}

825 
	$√g©ec⁄dôi⁄
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

826 
In°ru˘i⁄
 *
pc
 = 
	`gëjumpc⁄åﬁ
(
fs
, 
e
->
u
.
öfo
);

827 
	`lua_as£π
(
	`ã°TMode
(
	`GET_OPCODE
(*
pc
)Ë&& GET_OPCODE(*pcË!
OP_TESTSET
 &&

828 
	`GET_OPCODE
(*
pc
Ë!
OP_TEST
);

829 
	`SETARG_A
(*
pc
, !(
	`GETARG_A
(*pc)));

830 
	}
}

839 
	$jump⁄c⁄d
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
c⁄d
) {

840 i‡(
e
->
k
 =
VRELOCABLE
) {

841 
In°ru˘i⁄
 
õ
 = 
	`gëö°ru˘i⁄
(
fs
, 
e
);

842 i‡(
	`GET_OPCODE
(
õ
Ë=
OP_NOT
) {

843 
fs
->
pc
--;

844  
	`c⁄djump
(
fs
, 
OP_TEST
, 
	`GETARG_B
(
õ
), 0, !
c⁄d
);

848 
	`disch¨ge2™yªg
(
fs
, 
e
);

849 
	`‰ìexp
(
fs
, 
e
);

850  
	`c⁄djump
(
fs
, 
OP_TESTSET
, 
NO_REG
, 
e
->
u
.
öfo
, 
c⁄d
);

851 
	}
}

857 
	$luaK_goi·rue
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

858 
pc
;

859 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

860 
e
->
k
) {

861 
VJMP
: {

862 
	`√g©ec⁄dôi⁄
(
fs
, 
e
);

863 
pc
 = 
e
->
u
.
öfo
;

866 
VK
: 
VKFLT
: 
VKINT
: 
VTRUE
: {

867 
pc
 = 
NO_JUMP
;

871 
pc
 = 
	`jump⁄c⁄d
(
fs
, 
e
, 0);

875 
	`luaK_c⁄ˇt
(
fs
, &
e
->
f
, 
pc
);

876 
	`luaK_∑tchtohîe
(
fs
, 
e
->
t
);

877 
e
->
t
 = 
NO_JUMP
;

878 
	}
}

884 
	$luaK_goifÁl£
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

885 
pc
;

886 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

887 
e
->
k
) {

888 
VJMP
: {

889 
pc
 = 
e
->
u
.
öfo
;

892 
VNIL
: 
VFALSE
: {

893 
pc
 = 
NO_JUMP
;

897 
pc
 = 
	`jump⁄c⁄d
(
fs
, 
e
, 1);

901 
	`luaK_c⁄ˇt
(
fs
, &
e
->
t
, 
pc
);

902 
	`luaK_∑tchtohîe
(
fs
, 
e
->
f
);

903 
e
->
f
 = 
NO_JUMP
;

904 
	}
}

910 
	$codíŸ
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

911 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

912 
e
->
k
) {

913 
VNIL
: 
VFALSE
: {

914 
e
->
k
 = 
VTRUE
;

917 
VK
: 
VKFLT
: 
VKINT
: 
VTRUE
: {

918 
e
->
k
 = 
VFALSE
;

921 
VJMP
: {

922 
	`√g©ec⁄dôi⁄
(
fs
, 
e
);

925 
VRELOCABLE
:

926 
VNONRELOC
: {

927 
	`disch¨ge2™yªg
(
fs
, 
e
);

928 
	`‰ìexp
(
fs
, 
e
);

929 
e
->
u
.
öfo
 = 
	`luaK_codeABC
(
fs
, 
OP_NOT
, 0,É->u.info, 0);

930 
e
->
k
 = 
VRELOCABLE
;

933 : 
	`lua_as£π
(0);

936 { 
ãmp
 = 
e
->
f
;É->‡e->
t
;É->t =Åemp; }

937 
	`ªmovevÆues
(
fs
, 
e
->
f
);

938 
	`ªmovevÆues
(
fs
, 
e
->
t
);

939 
	}
}

946 
	$luaK_ödexed
 (
FuncSèã
 *
fs
, 
expdesc
 *
t
,Éxpdes¯*
k
) {

947 
	`lua_as£π
(!
	`hasjumps
(
t
Ë&& (
	`vkisöªg
—->
k
Ë||Å->k =
VUPVAL
));

948 
t
->
u
.
öd
.àt->u.
öfo
;

949 
t
->
u
.
öd
.
idx
 = 
	`luaK_exp2RK
(
fs
, 
k
);

950 
t
->
u
.
öd
.
vt
 = (t->
k
 =
VUPVAL
Ë? VUPVAL : 
VLOCAL
;

951 
t
->
k
 = 
VINDEXED
;

952 
	}
}

960 
	$vÆid›
 (
›
, 
TVÆue
 *
v1
, TVÆuê*
v2
) {

961 
›
) {

962 
LUA_OPBAND
: 
LUA_OPBOR
: 
LUA_OPBXOR
:

963 
LUA_OPSHL
: 
LUA_OPSHR
: 
LUA_OPBNOT
: {

964 
lua_I¡egî
 
i
;

965  (
	`toöãgî
(
v1
, &
i
Ë&&Åoöãgî(
v2
, &i));

967 
LUA_OPDIV
: 
LUA_OPIDIV
: 
LUA_OPMOD
:

968  (
	`nvÆue
(
v2
) != 0);

971 
	}
}

978 
	$c⁄°fﬁdög
 (
FuncSèã
 *
fs
, 
›
, 
expdesc
 *
e1
,Éxpdes¯*
e2
) {

979 
TVÆue
 
v1
, 
v2
, 
ªs
;

980 i‡(!
	`t⁄umîÆ
(
e1
, &
v1
Ë|| !t⁄umîÆ(
e2
, &
v2
Ë|| !
	`vÆid›
(
›
, &v1, &v2))

982 
	`luaO_¨ôh
(
fs
->
ls
->
L
, 
›
, &
v1
, &
v2
, &
ªs
);

983 i‡(
	`âisöãgî
(&
ªs
)) {

984 
e1
->
k
 = 
VKINT
;

985 
e1
->
u
.
ivÆ
 = 
	`ivÆue
(&
ªs
);

988 
lua_Numbî
 
n
 = 
	`ÊtvÆue
(&
ªs
);

989 i‡(
	`luai_numi¢™
(
n
) ||Ç == 0)

991 
e1
->
k
 = 
VKFLT
;

992 
e1
->
u
.
nvÆ
 = 
n
;

995 
	}
}

1003 
	$codeu√xpvÆ
 (
FuncSèã
 *
fs
, 
OpCode
 
›
, 
expdesc
 *
e
, 
löe
) {

1004 
r
 = 
	`luaK_exp2™yªg
(
fs
, 
e
);

1005 
	`‰ìexp
(
fs
, 
e
);

1006 
e
->
u
.
öfo
 = 
	`luaK_codeABC
(
fs
, 
›
, 0, 
r
, 0);

1007 
e
->
k
 = 
VRELOCABLE
;

1008 
	`luaK_fixlöe
(
fs
, 
löe
);

1009 
	}
}

1018 
	$codeböexpvÆ
 (
FuncSèã
 *
fs
, 
OpCode
 
›
,

1019 
expdesc
 *
e1
,Éxpdes¯*
e2
, 
löe
) {

1020 
rk1
 = 
	`luaK_exp2RK
(
fs
, 
e1
);

1021 
rk2
 = 
	`luaK_exp2RK
(
fs
, 
e2
);

1022 
	`‰ìexps
(
fs
, 
e1
, 
e2
);

1023 
e1
->
u
.
öfo
 = 
	`luaK_codeABC
(
fs
, 
›
, 0, 
rk1
, 
rk2
);

1024 
e1
->
k
 = 
VRELOCABLE
;

1025 
	`luaK_fixlöe
(
fs
, 
löe
);

1026 
	}
}

1033 
	$codecomp
 (
FuncSèã
 *
fs
, 
BöO¥
 
›r
, 
expdesc
 *
e1
,Éxpdes¯*
e2
) {

1034 
rk1
 = (
e1
->
k
 =
VK
Ë? 
	`RKASK
”1->
u
.
öfo
)

1035 : 
	`check_exp
(
e1
->
k
 =
VNONRELOC
,É1->
u
.
öfo
);

1036 
rk2
 = 
	`luaK_exp2RK
(
fs
, 
e2
);

1037 
	`‰ìexps
(
fs
, 
e1
, 
e2
);

1038 
›r
) {

1039 
OPR_NE
: {

1040 
e1
->
u
.
öfo
 = 
	`c⁄djump
(
fs
, 
OP_EQ
, 0, 
rk1
, 
rk2
);

1043 
OPR_GT
: 
OPR_GE
: {

1045 
OpCode
 
›
 = 
	`ˇ°
(OpCode, (
›r
 - 
OPR_NE
Ë+ 
OP_EQ
);

1046 
e1
->
u
.
öfo
 = 
	`c⁄djump
(
fs
, 
›
, 1, 
rk2
, 
rk1
);

1050 
OpCode
 
›
 = 
	`ˇ°
(OpCode, (
›r
 - 
OPR_EQ
Ë+ 
OP_EQ
);

1051 
e1
->
u
.
öfo
 = 
	`c⁄djump
(
fs
, 
›
, 1, 
rk1
, 
rk2
);

1055 
e1
->
k
 = 
VJMP
;

1056 
	}
}

1062 
	$luaK_¥efix
 (
FuncSèã
 *
fs
, 
UnO¥
 
›
, 
expdesc
 *
e
, 
löe
) {

1063 
expdesc
 
ef
 = {
VKINT
, {0}, 
NO_JUMP
, NO_JUMP};

1064 
›
) {

1065 
OPR_MINUS
: 
OPR_BNOT
:

1066 i‡(
	`c⁄°fﬁdög
(
fs
, 
›
 + 
LUA_OPUNM
, 
e
, &
ef
))

1069 
OPR_LEN
:

1070 
	`codeu√xpvÆ
(
fs
, 
	`ˇ°
(
OpCode
, 
›
 + 
OP_UNM
), 
e
, 
löe
);

1072 
OPR_NOT
: 
	`codíŸ
(
fs
, 
e
); ;

1073 : 
	`lua_as£π
(0);

1075 
	}
}

1082 
	$luaK_öfix
 (
FuncSèã
 *
fs
, 
BöO¥
 
›
, 
expdesc
 *
v
) {

1083 
›
) {

1084 
OPR_AND
: {

1085 
	`luaK_goi·rue
(
fs
, 
v
);

1088 
OPR_OR
: {

1089 
	`luaK_goifÁl£
(
fs
, 
v
);

1092 
OPR_CONCAT
: {

1093 
	`luaK_exp2√xåeg
(
fs
, 
v
);

1096 
OPR_ADD
: 
OPR_SUB
:

1097 
OPR_MUL
: 
OPR_DIV
: 
OPR_IDIV
:

1098 
OPR_MOD
: 
OPR_POW
:

1099 
OPR_BAND
: 
OPR_BOR
: 
OPR_BXOR
:

1100 
OPR_SHL
: 
OPR_SHR
: {

1101 i‡(!
	`t⁄umîÆ
(
v
, 
NULL
))

1102 
	`luaK_exp2RK
(
fs
, 
v
);

1107 
	`luaK_exp2RK
(
fs
, 
v
);

1111 
	}
}

1120 
	$luaK_posfix
 (
FuncSèã
 *
fs
, 
BöO¥
 
›
,

1121 
expdesc
 *
e1
,Éxpdes¯*
e2
, 
löe
) {

1122 
›
) {

1123 
OPR_AND
: {

1124 
	`lua_as£π
(
e1
->
t
 =
NO_JUMP
);

1125 
	`luaK_disch¨gev¨s
(
fs
, 
e2
);

1126 
	`luaK_c⁄ˇt
(
fs
, &
e2
->
f
, 
e1
->f);

1127 *
e1
 = *
e2
;

1130 
OPR_OR
: {

1131 
	`lua_as£π
(
e1
->
f
 =
NO_JUMP
);

1132 
	`luaK_disch¨gev¨s
(
fs
, 
e2
);

1133 
	`luaK_c⁄ˇt
(
fs
, &
e2
->
t
, 
e1
->t);

1134 *
e1
 = *
e2
;

1137 
OPR_CONCAT
: {

1138 
	`luaK_exp2vÆ
(
fs
, 
e2
);

1139 i‡(
e2
->
k
 =
VRELOCABLE
 &&

1140 
	`GET_OPCODE
(
	`gëö°ru˘i⁄
(
fs
, 
e2
)Ë=
OP_CONCAT
) {

1141 
	`lua_as£π
(
e1
->
u
.
öfo
 =
	`GETARG_B
(
	`gëö°ru˘i⁄
(
fs
, 
e2
))-1);

1142 
	`‰ìexp
(
fs
, 
e1
);

1143 
	`SETARG_B
(
	`gëö°ru˘i⁄
(
fs
, 
e2
), 
e1
->
u
.
öfo
);

1144 
e1
->
k
 = 
VRELOCABLE
;É1->
u
.
öfo
 = 
e2
->u.info;

1147 
	`luaK_exp2√xåeg
(
fs
, 
e2
);

1148 
	`codeböexpvÆ
(
fs
, 
OP_CONCAT
, 
e1
, 
e2
, 
löe
);

1152 
OPR_ADD
: 
OPR_SUB
: 
OPR_MUL
: 
OPR_DIV
:

1153 
OPR_IDIV
: 
OPR_MOD
: 
OPR_POW
:

1154 
OPR_BAND
: 
OPR_BOR
: 
OPR_BXOR
:

1155 
OPR_SHL
: 
OPR_SHR
: {

1156 i‡(!
	`c⁄°fﬁdög
(
fs
, 
›
 + 
LUA_OPADD
, 
e1
, 
e2
))

1157 
	`codeböexpvÆ
(
fs
, 
	`ˇ°
(
OpCode
, 
›
 + 
OP_ADD
), 
e1
, 
e2
, 
löe
);

1160 
OPR_EQ
: 
OPR_LT
: 
OPR_LE
:

1161 
OPR_NE
: 
OPR_GT
: 
OPR_GE
: {

1162 
	`codecomp
(
fs
, 
›
, 
e1
, 
e2
);

1165 : 
	`lua_as£π
(0);

1167 
	}
}

1173 
	$luaK_fixlöe
 (
FuncSèã
 *
fs
, 
löe
) {

1174 
fs
->
f
->
löeöfo
[fs->
pc
 - 1] = 
löe
;

1175 
	}
}

1185 
	$luaK_£éi°
 (
FuncSèã
 *
fs
, 
ba£
, 
√Àms
, 
to°‹e
) {

1186 
c
 = (
√Àms
 - 1)/
LFIELDS_PER_FLUSH
 + 1;

1187 
b
 = (
to°‹e
 =
LUA_MULTRET
) ? 0 :Åostore;

1188 
	`lua_as£π
(
to°‹e
 !0 &&Åo°‹ê<
LFIELDS_PER_FLUSH
);

1189 i‡(
c
 <
MAXARG_C
)

1190 
	`luaK_codeABC
(
fs
, 
OP_SETLIST
, 
ba£
, 
b
, 
c
);

1191 i‡(
c
 <
MAXARG_Ax
) {

1192 
	`luaK_codeABC
(
fs
, 
OP_SETLIST
, 
ba£
, 
b
, 0);

1193 
	`codìxåØrg
(
fs
, 
c
);

1196 
	`luaX_sy¡axîr‹
(
fs
->
ls
, "constructorÅooÜong");

1197 
fs
->
‰ìªg
 = 
ba£
 + 1;

1198 
	}
}

	@lua/src/lcode.h

7 #i‚de‡
lcode_h


8 
	#lcode_h


	)

10 
	~"Œex.h
"

11 
	~"lobje˘.h
"

12 
	~"l›codes.h
"

13 
	~"Õ¨£r.h
"

20 
	#NO_JUMP
 (-1)

	)

26 
	eBöO¥
 {

27 
	mOPR_ADD
, 
	mOPR_SUB
, 
	mOPR_MUL
, 
	mOPR_MOD
, 
	mOPR_POW
,

28 
	mOPR_DIV
,

29 
	mOPR_IDIV
,

30 
	mOPR_BAND
, 
	mOPR_BOR
, 
	mOPR_BXOR
,

31 
	mOPR_SHL
, 
	mOPR_SHR
,

32 
	mOPR_CONCAT
,

33 
	mOPR_EQ
, 
	mOPR_LT
, 
	mOPR_LE
,

34 
	mOPR_NE
, 
	mOPR_GT
, 
	mOPR_GE
,

35 
	mOPR_AND
, 
	mOPR_OR
,

36 
	mOPR_NOBINOPR


37 } 
	tBöO¥
;

40 
	eUnO¥
 { 
	mOPR_MINUS
, 
	mOPR_BNOT
, 
	mOPR_NOT
, 
	mOPR_LEN
, 
	mOPR_NOUNOPR
 } 
	tUnO¥
;

44 
	#gëö°ru˘i⁄
(
fs
,
e
Ë((fs)->
f
->
code
[”)->
u
.
öfo
])

	)

46 
	#luaK_codeAsBx
(
fs
,
o
,
A
,
sBx
Ë
	`luaK_codeABx
(fs,o,A,(sBx)+
MAXARG_sBx
)

	)

48 
	#luaK_£tmu…ªt
(
fs
,
e
Ë
	`luaK_£åëu∫s
(fs,É, 
LUA_MULTRET
)

	)

50 
	#luaK_jum±o
(
fs
,
t
Ë
	`luaK_∑tchli°
(fs, 
	`luaK_jump
(fs),Å)

	)

52 
LUAI_FUNC
 
luaK_codeABx
 (
FuncSèã
 *
fs
, 
OpCode
 
o
, 
A
, 
Bx
);

53 
LUAI_FUNC
 
luaK_codeABC
 (
FuncSèã
 *
fs
, 
OpCode
 
o
, 
A
, 
B
, 
C
);

54 
LUAI_FUNC
 
luaK_codek
 (
FuncSèã
 *
fs
, 
ªg
, 
k
);

55 
LUAI_FUNC
 
luaK_fixlöe
 (
FuncSèã
 *
fs
, 
löe
);

56 
LUAI_FUNC
 
luaK_nû
 (
FuncSèã
 *
fs
, 
‰om
, 
n
);

57 
LUAI_FUNC
 
luaK_ª£rvîegs
 (
FuncSèã
 *
fs
, 
n
);

58 
LUAI_FUNC
 
luaK_check°ack
 (
FuncSèã
 *
fs
, 
n
);

59 
LUAI_FUNC
 
luaK_°rögK
 (
FuncSèã
 *
fs
, 
TSåög
 *
s
);

60 
LUAI_FUNC
 
luaK_ötK
 (
FuncSèã
 *
fs
, 
lua_I¡egî
 
n
);

61 
LUAI_FUNC
 
luaK_disch¨gev¨s
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

62 
LUAI_FUNC
 
luaK_exp2™yªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

63 
LUAI_FUNC
 
luaK_exp2™yªgup
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

64 
LUAI_FUNC
 
luaK_exp2√xåeg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

65 
LUAI_FUNC
 
luaK_exp2vÆ
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

66 
LUAI_FUNC
 
luaK_exp2RK
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

67 
LUAI_FUNC
 
luaK_£lf
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
,Éxpdes¯*
key
);

68 
LUAI_FUNC
 
luaK_ödexed
 (
FuncSèã
 *
fs
, 
expdesc
 *
t
,Éxpdes¯*
k
);

69 
LUAI_FUNC
 
luaK_goi·rue
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

70 
LUAI_FUNC
 
luaK_goifÁl£
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

71 
LUAI_FUNC
 
luaK_°‹ev¨
 (
FuncSèã
 *
fs
, 
expdesc
 *
v¨
,Éxpdes¯*
e
);

72 
LUAI_FUNC
 
luaK_£åëu∫s
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
ƒesu…s
);

73 
LUAI_FUNC
 
luaK_£t⁄îë
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

74 
LUAI_FUNC
 
luaK_jump
 (
FuncSèã
 *
fs
);

75 
LUAI_FUNC
 
luaK_ªt
 (
FuncSèã
 *
fs
, 
fú°
, 
ƒë
);

76 
LUAI_FUNC
 
luaK_∑tchli°
 (
FuncSèã
 *
fs
, 
li°
, 
èrgë
);

77 
LUAI_FUNC
 
luaK_∑tchtohîe
 (
FuncSèã
 *
fs
, 
li°
);

78 
LUAI_FUNC
 
luaK_∑tch˛o£
 (
FuncSèã
 *
fs
, 
li°
, 
Àvñ
);

79 
LUAI_FUNC
 
luaK_c⁄ˇt
 (
FuncSèã
 *
fs
, *
l1
, 
l2
);

80 
LUAI_FUNC
 
luaK_gëœbñ
 (
FuncSèã
 *
fs
);

81 
LUAI_FUNC
 
luaK_¥efix
 (
FuncSèã
 *
fs
, 
UnO¥
 
›
, 
expdesc
 *
v
, 
löe
);

82 
LUAI_FUNC
 
luaK_öfix
 (
FuncSèã
 *
fs
, 
BöO¥
 
›
, 
expdesc
 *
v
);

83 
LUAI_FUNC
 
luaK_posfix
 (
FuncSèã
 *
fs
, 
BöO¥
 
›
, 
expdesc
 *
v1
,

84 
expdesc
 *
v2
, 
löe
);

85 
LUAI_FUNC
 
luaK_£éi°
 (
FuncSèã
 *
fs
, 
ba£
, 
√Àms
, 
to°‹e
);

	@lua/src/lcorolib.c

7 
	#lc‹ﬁib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<°dlib.h
>

15 
	~"lua.h
"

17 
	~"œuxlib.h
"

18 
	~"luÆib.h
"

21 
lua_Sèã
 *
	$gëco
 (
lua_Sèã
 *
L
) {

22 
lua_Sèã
 *
co
 = 
	`lua_tŸhªad
(
L
, 1);

23 
	`luaL_¨gcheck
(
L
, 
co
, 1, "threadÉxpected");

24  
co
;

25 
	}
}

28 
	$auxªsume
 (
lua_Sèã
 *
L
,Üua_Sèã *
co
, 
«rg
) {

29 
°©us
;

30 i‡(!
	`lua_check°ack
(
co
, 
«rg
)) {

31 
	`lua_pushlôîÆ
(
L
, "too manyárgumentsÅoÑesume");

34 i‡(
	`lua_°©us
(
co
Ë=
LUA_OK
 && 
	`lua_gët›
(co) == 0) {

35 
	`lua_pushlôîÆ
(
L
, "cannotÑesume dead coroutine");

38 
	`lua_xmove
(
L
, 
co
, 
«rg
);

39 
°©us
 = 
	`lua_ªsume
(
co
, 
L
, 
«rg
);

40 i‡(
°©us
 =
LUA_OK
 || sètu†=
LUA_YIELD
) {

41 
ƒes
 = 
	`lua_gët›
(
co
);

42 i‡(!
	`lua_check°ack
(
L
, 
ƒes
 + 1)) {

43 
	`lua_p›
(
co
, 
ƒes
);

44 
	`lua_pushlôîÆ
(
L
, "too manyÑesultsÅoÑesume");

47 
	`lua_xmove
(
co
, 
L
, 
ƒes
);

48  
ƒes
;

51 
	`lua_xmove
(
co
, 
L
, 1);

54 
	}
}

57 
	$luaB_c‹esume
 (
lua_Sèã
 *
L
) {

58 
lua_Sèã
 *
co
 = 
	`gëco
(
L
);

59 
r
;

60 
r
 = 
	`auxªsume
(
L
, 
co
, 
	`lua_gët›
(L) - 1);

61 i‡(
r
 < 0) {

62 
	`lua_pushboﬁón
(
L
, 0);

63 
	`lua_ö£π
(
L
, -2);

67 
	`lua_pushboﬁón
(
L
, 1);

68 
	`lua_ö£π
(
L
, -(
r
 + 1));

69  
r
 + 1;

71 
	}
}

74 
	$luaB_auxwøp
 (
lua_Sèã
 *
L
) {

75 
lua_Sèã
 *
co
 = 
	`lua_tŸhªad
(
L
, 
	`lua_upvÆueödex
(1));

76 
r
 = 
	`auxªsume
(
L
, 
co
, 
	`lua_gët›
(L));

77 i‡(
r
 < 0) {

78 i‡(
	`lua_ty≥
(
L
, -1Ë=
LUA_TSTRING
) {

79 
	`luaL_whîe
(
L
, 1);

80 
	`lua_ö£π
(
L
, -2);

81 
	`lua_c⁄ˇt
(
L
, 2);

83  
	`lua_îr‹
(
L
);

85  
r
;

86 
	}
}

89 
	$luaB_co¸óã
 (
lua_Sèã
 *
L
) {

90 
lua_Sèã
 *
NL
;

91 
	`luaL_checkty≥
(
L
, 1, 
LUA_TFUNCTION
);

92 
NL
 = 
	`lua_√wthªad
(
L
);

93 
	`lua_pushvÆue
(
L
, 1);

94 
	`lua_xmove
(
L
, 
NL
, 1);

96 
	}
}

99 
	$luaB_cowøp
 (
lua_Sèã
 *
L
) {

100 
	`luaB_co¸óã
(
L
);

101 
	`lua_pushc˛osuª
(
L
, 
luaB_auxwøp
, 1);

103 
	}
}

106 
	$luaB_yõld
 (
lua_Sèã
 *
L
) {

107  
	`lua_yõld
(
L
, 
	`lua_gët›
(L));

108 
	}
}

111 
	$luaB_co°©us
 (
lua_Sèã
 *
L
) {

112 
lua_Sèã
 *
co
 = 
	`gëco
(
L
);

113 i‡(
L
 =
co
Ë
	`lua_pushlôîÆ
(L, "running");

115 
	`lua_°©us
(
co
)) {

116 
LUA_YIELD
:

117 
	`lua_pushlôîÆ
(
L
, "suspended");

119 
LUA_OK
: {

120 
lua_Debug
 
¨
;

121 i‡(
	`lua_gë°ack
(
co
, 0, &
¨
) > 0)

122 
	`lua_pushlôîÆ
(
L
, "normal");

123 i‡(
	`lua_gët›
(
co
) == 0)

124 
	`lua_pushlôîÆ
(
L
, "dead");

126 
	`lua_pushlôîÆ
(
L
, "suspended");

130 
	`lua_pushlôîÆ
(
L
, "dead");

135 
	}
}

138 
	$luaB_yõldabÀ
 (
lua_Sèã
 *
L
) {

139 
	`lua_pushboﬁón
(
L
, 
	`lua_isyõldabÀ
(L));

141 
	}
}

144 
	$luaB_c‹u¬ög
 (
lua_Sèã
 *
L
) {

145 
ismaö
 = 
	`lua_pushthªad
(
L
);

146 
	`lua_pushboﬁón
(
L
, 
ismaö
);

148 
	}
}

151 c⁄° 
luaL_Reg
 
	gco_funcs
[] = {

152 {"¸óã", 
luaB_co¸óã
},

153 {"ªsume", 
luaB_c‹esume
},

154 {"ru¬ög", 
luaB_c‹u¬ög
},

155 {"°©us", 
luaB_co°©us
},

156 {"wøp", 
luaB_cowøp
},

157 {"yõld", 
luaB_yõld
},

158 {"isyõldabÀ", 
luaB_yõldabÀ
},

159 {
NULL
, NULL}

164 
LUAMOD_API
 
	$lua›í_c‹outöe
 (
lua_Sèã
 *
L
) {

165 
	`luaL_√wlib
(
L
, 
co_funcs
);

167 
	}
}

	@lua/src/lctype.c

7 
	#l˘y≥_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~"l˘y≥.h
"

15 #i‡!
LUA_USE_CTYPE


17 
	~<limôs.h
>

19 
LUAI_DDEF
 c⁄° 
lu_byã
 
	gluai_˘y≥_
[
UCHAR_MAX
 + 2] = {

	@lua/src/lctype.h

7 #i‚de‡
l˘y≥_h


8 
	#l˘y≥_h


	)

10 
	~"lua.h
"

19 #i‡!
deföed
(
LUA_USE_CTYPE
)

23 
	#LUA_USE_CTYPE
 0

	)

26 
	#LUA_USE_CTYPE
 1

	)

32 #i‡!
LUA_USE_CTYPE


34 
	~<limôs.h
>

36 
	~"Œimôs.h
"

39 
	#ALPHABIT
 0

	)

40 
	#DIGITBIT
 1

	)

41 
	#PRINTBIT
 2

	)

42 
	#SPACEBIT
 3

	)

43 
	#XDIGITBIT
 4

	)

46 
	#MASK
(
B
Ë(1 << (B))

	)

52 
	#ã°¥›
(
c
,
p
Ë(
luai_˘y≥_
[(c)+1] & (p))

	)

57 
	#li¶Æpha
(
c
Ë
	`ã°¥›
(c, 
	`MASK
(
ALPHABIT
))

	)

58 
	#li¶Ænum
(
c
Ë
	`ã°¥›
(c, (
	`MASK
(
ALPHABIT
Ë| MASK(
DIGITBIT
)))

	)

59 
	#lisdigô
(
c
Ë
	`ã°¥›
(c, 
	`MASK
(
DIGITBIT
))

	)

60 
	#lis•a˚
(
c
Ë
	`ã°¥›
(c, 
	`MASK
(
SPACEBIT
))

	)

61 
	#li•röt
(
c
Ë
	`ã°¥›
(c, 
	`MASK
(
PRINTBIT
))

	)

62 
	#lisxdigô
(
c
Ë
	`ã°¥›
(c, 
	`MASK
(
XDIGITBIT
))

	)

67 
	#…ﬁowî
(
c
Ë((cË| ('A' ^ 'a'))

	)

71 
LUAI_DDEC
 c⁄° 
lu_byã
 
	gluai_˘y≥_
[
UCHAR_MAX
 + 2];

80 
	~<˘y≥.h
>

83 
	#li¶Æpha
(
c
Ë(
	`ißÕha
(cË|| (cË='_')

	)

84 
	#li¶Ænum
(
c
Ë(
	`iß um
(cË|| (cË='_')

	)

85 
	#lisdigô
(
c
Ë(
	`isdigô
(c))

	)

86 
	#lis•a˚
(
c
Ë(
	`is•a˚
(c))

	)

87 
	#li•röt
(
c
Ë(
	`i•röt
(c))

	)

88 
	#lisxdigô
(
c
Ë(
	`isxdigô
(c))

	)

90 
	#…ﬁowî
(
c
Ë(
	`tﬁowî
(c))

	)

	@lua/src/ldblib.c

7 
	#ldblib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<°dio.h
>

14 
	~<°dlib.h
>

15 
	~<°rög.h
>

17 
	~"lua.h
"

19 
	~"œuxlib.h
"

20 
	~"luÆib.h
"

27 c⁄° 
	gHOOKKEY
 = 0;

35 
	$check°ack
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
, 
n
) {

36 i‡(
L
 !
L1
 && !
	`lua_check°ack
(L1, 
n
))

37 
	`luaL_îr‹
(
L
, "stack overflow");

38 
	}
}

41 
	$db_gëªgi°ry
 (
lua_Sèã
 *
L
) {

42 
	`lua_pushvÆue
(
L
, 
LUA_REGISTRYINDEX
);

44 
	}
}

47 
	$db_gëmë©abÀ
 (
lua_Sèã
 *
L
) {

48 
	`luaL_check™y
(
L
, 1);

49 i‡(!
	`lua_gëmë©abÀ
(
L
, 1)) {

50 
	`lua_pushnû
(
L
);

53 
	}
}

56 
	$db_£tmë©abÀ
 (
lua_Sèã
 *
L
) {

57 
t
 = 
	`lua_ty≥
(
L
, 2);

58 
	`luaL_¨gcheck
(
L
, 
t
 =
LUA_TNIL
 ||Å =
LUA_TTABLE
, 2,

60 
	`lua_£â›
(
L
, 2);

61 
	`lua_£tmë©abÀ
(
L
, 1);

63 
	}
}

66 
	$db_gëu£rvÆue
 (
lua_Sèã
 *
L
) {

67 i‡(
	`lua_ty≥
(
L
, 1Ë!
LUA_TUSERDATA
)

68 
	`lua_pushnû
(
L
);

70 
	`lua_gëu£rvÆue
(
L
, 1);

72 
	}
}

75 
	$db_£tu£rvÆue
 (
lua_Sèã
 *
L
) {

76 
	`luaL_checkty≥
(
L
, 1, 
LUA_TUSERDATA
);

77 
	`luaL_check™y
(
L
, 2);

78 
	`lua_£â›
(
L
, 2);

79 
	`lua_£tu£rvÆue
(
L
, 1);

81 
	}
}

90 
lua_Sèã
 *
	$gëthªad
 (
lua_Sèã
 *
L
, *
¨g
) {

91 i‡(
	`lua_i°hªad
(
L
, 1)) {

92 *
¨g
 = 1;

93  
	`lua_tŸhªad
(
L
, 1);

96 *
¨g
 = 0;

97  
L
;

99 
	}
}

107 
	$£âabss
 (
lua_Sèã
 *
L
, c⁄° *
k
, c⁄° *
v
) {

108 
	`lua_push°rög
(
L
, 
v
);

109 
	`lua_£tfõld
(
L
, -2, 
k
);

110 
	}
}

112 
	$£âabsi
 (
lua_Sèã
 *
L
, c⁄° *
k
, 
v
) {

113 
	`lua_pushöãgî
(
L
, 
v
);

114 
	`lua_£tfõld
(
L
, -2, 
k
);

115 
	}
}

117 
	$£âabsb
 (
lua_Sèã
 *
L
, c⁄° *
k
, 
v
) {

118 
	`lua_pushboﬁón
(
L
, 
v
);

119 
	`lua_£tfõld
(
L
, -2, 
k
);

120 
	}
}

130 
	$åót°ack›ti⁄
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
, c⁄° *
‚ame
) {

131 i‡(
L
 =
L1
)

132 
	`lua_rŸ©e
(
L
, -2, 1);

134 
	`lua_xmove
(
L1
, 
L
, 1);

135 
	`lua_£tfõld
(
L
, -2, 
‚ame
);

136 
	}
}

145 
	$db_gëöfo
 (
lua_Sèã
 *
L
) {

146 
lua_Debug
 
¨
;

147 
¨g
;

148 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

149 c⁄° *
›ti⁄s
 = 
	`luaL_›t°rög
(
L
, 
¨g
+2, "flnStu");

150 
	`check°ack
(
L
, 
L1
, 3);

151 i‡(
	`lua_isfun˘i⁄
(
L
, 
¨g
 + 1)) {

152 
›ti⁄s
 = 
	`lua_pushf°rög
(
L
, ">%s", options);

153 
	`lua_pushvÆue
(
L
, 
¨g
 + 1);

154 
	`lua_xmove
(
L
, 
L1
, 1);

157 i‡(!
	`lua_gë°ack
(
L1
, ()
	`luaL_checköãgî
(
L
, 
¨g
 + 1), &
¨
)) {

158 
	`lua_pushnû
(
L
);

162 i‡(!
	`lua_gëöfo
(
L1
, 
›ti⁄s
, &
¨
))

163  
	`luaL_¨gîr‹
(
L
, 
¨g
+2, "invalid option");

164 
	`lua_√wèbÀ
(
L
);

165 i‡(
	`°rchr
(
›ti⁄s
, 'S')) {

166 
	`£âabss
(
L
, "sour˚", 
¨
.
sour˚
);

167 
	`£âabss
(
L
, "sh‹t_§c", 
¨
.
sh‹t_§c
);

168 
	`£âabsi
(
L
, "löedeföed", 
¨
.
löedeföed
);

169 
	`£âabsi
(
L
, "œ°löedeföed", 
¨
.
œ°löedeföed
);

170 
	`£âabss
(
L
, "wh©", 
¨
.
wh©
);

172 i‡(
	`°rchr
(
›ti⁄s
, 'l'))

173 
	`£âabsi
(
L
, "cuºíéöe", 
¨
.
cuºíéöe
);

174 i‡(
	`°rchr
(
›ti⁄s
, 'u')) {

175 
	`£âabsi
(
L
, "nups", 
¨
.
nups
);

176 
	`£âabsi
(
L
, "≈¨ams", 
¨
.
≈¨ams
);

177 
	`£âabsb
(
L
, "isv¨¨g", 
¨
.
isv¨¨g
);

179 i‡(
	`°rchr
(
›ti⁄s
, 'n')) {

180 
	`£âabss
(
L
, "«me", 
¨
.
«me
);

181 
	`£âabss
(
L
, "«mewh©", 
¨
.
«mewh©
);

183 i‡(
	`°rchr
(
›ti⁄s
, 't'))

184 
	`£âabsb
(
L
, "i°aûˇŒ", 
¨
.
i°aûˇŒ
);

185 i‡(
	`°rchr
(
›ti⁄s
, 'L'))

186 
	`åót°ack›ti⁄
(
L
, 
L1
, "activelines");

187 i‡(
	`°rchr
(
›ti⁄s
, 'f'))

188 
	`åót°ack›ti⁄
(
L
, 
L1
, "func");

190 
	}
}

193 
	$db_gëloˇl
 (
lua_Sèã
 *
L
) {

194 
¨g
;

195 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

196 
lua_Debug
 
¨
;

197 c⁄° *
«me
;

198 
nv¨
 = ()
	`luaL_checköãgî
(
L
, 
¨g
 + 2);

199 i‡(
	`lua_isfun˘i⁄
(
L
, 
¨g
 + 1)) {

200 
	`lua_pushvÆue
(
L
, 
¨g
 + 1);

201 
	`lua_push°rög
(
L
, 
	`lua_gëloˇl
(L, 
NULL
, 
nv¨
));

205 
Àvñ
 = ()
	`luaL_checköãgî
(
L
, 
¨g
 + 1);

206 i‡(!
	`lua_gë°ack
(
L1
, 
Àvñ
, &
¨
))

207  
	`luaL_¨gîr‹
(
L
, 
¨g
+1, "level out ofÑange");

208 
	`check°ack
(
L
, 
L1
, 1);

209 
«me
 = 
	`lua_gëloˇl
(
L1
, &
¨
, 
nv¨
);

210 i‡(
«me
) {

211 
	`lua_xmove
(
L1
, 
L
, 1);

212 
	`lua_push°rög
(
L
, 
«me
);

213 
	`lua_rŸ©e
(
L
, -2, 1);

217 
	`lua_pushnû
(
L
);

221 
	}
}

224 
	$db_£éoˇl
 (
lua_Sèã
 *
L
) {

225 
¨g
;

226 c⁄° *
«me
;

227 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

228 
lua_Debug
 
¨
;

229 
Àvñ
 = ()
	`luaL_checköãgî
(
L
, 
¨g
 + 1);

230 
nv¨
 = ()
	`luaL_checköãgî
(
L
, 
¨g
 + 2);

231 i‡(!
	`lua_gë°ack
(
L1
, 
Àvñ
, &
¨
))

232  
	`luaL_¨gîr‹
(
L
, 
¨g
+1, "level out ofÑange");

233 
	`luaL_check™y
(
L
, 
¨g
+3);

234 
	`lua_£â›
(
L
, 
¨g
+3);

235 
	`check°ack
(
L
, 
L1
, 1);

236 
	`lua_xmove
(
L
, 
L1
, 1);

237 
«me
 = 
	`lua_£éoˇl
(
L1
, &
¨
, 
nv¨
);

238 i‡(
«me
 =
NULL
)

239 
	`lua_p›
(
L1
, 1);

240 
	`lua_push°rög
(
L
, 
«me
);

242 
	}
}

248 
	$auxupvÆue
 (
lua_Sèã
 *
L
, 
gë
) {

249 c⁄° *
«me
;

250 
n
 = ()
	`luaL_checköãgî
(
L
, 2);

251 
	`luaL_checkty≥
(
L
, 1, 
LUA_TFUNCTION
);

252 
«me
 = 
gë
 ? 
	`lua_gëupvÆue
(
L
, 1, 
n
Ë: 
	`lua_£tupvÆue
(L, 1,Ç);

253 i‡(
«me
 =
NULL
)  0;

254 
	`lua_push°rög
(
L
, 
«me
);

255 
	`lua_ö£π
(
L
, -(
gë
+1));

256  
gë
 + 1;

257 
	}
}

260 
	$db_gëupvÆue
 (
lua_Sèã
 *
L
) {

261  
	`auxupvÆue
(
L
, 1);

262 
	}
}

265 
	$db_£tupvÆue
 (
lua_Sèã
 *
L
) {

266 
	`luaL_check™y
(
L
, 3);

267  
	`auxupvÆue
(
L
, 0);

268 
	}
}

275 
	$checkupvÆ
 (
lua_Sèã
 *
L
, 
¨gf
, 
¨gnup
) {

276 
nup
 = ()
	`luaL_checköãgî
(
L
, 
¨gnup
);

277 
	`luaL_checkty≥
(
L
, 
¨gf
, 
LUA_TFUNCTION
);

278 
	`luaL_¨gcheck
(
L
, (
	`lua_gëupvÆue
(L, 
¨gf
, 
nup
Ë!
NULL
), 
¨gnup
,

280  
nup
;

281 
	}
}

284 
	$db_upvÆueid
 (
lua_Sèã
 *
L
) {

285 
n
 = 
	`checkupvÆ
(
L
, 1, 2);

286 
	`lua_pushlightu£rd©a
(
L
, 
	`lua_upvÆueid
(L, 1, 
n
));

288 
	}
}

291 
	$db_upvÆuejoö
 (
lua_Sèã
 *
L
) {

292 
n1
 = 
	`checkupvÆ
(
L
, 1, 2);

293 
n2
 = 
	`checkupvÆ
(
L
, 3, 4);

294 
	`luaL_¨gcheck
(
L
, !
	`lua_iscfun˘i⁄
(L, 1), 1, "Lua functionÉxpected");

295 
	`luaL_¨gcheck
(
L
, !
	`lua_iscfun˘i⁄
(L, 3), 3, "Lua functionÉxpected");

296 
	`lua_upvÆuejoö
(
L
, 1, 
n1
, 3, 
n2
);

298 
	}
}

305 
	$hookf
 (
lua_Sèã
 *
L
, 
lua_Debug
 *
¨
) {

306 c⁄° *c⁄° 
hook«mes
[] =

308 
	`lua_øwgëp
(
L
, 
LUA_REGISTRYINDEX
, &
HOOKKEY
);

309 
	`lua_pushthªad
(
L
);

310 i‡(
	`lua_øwgë
(
L
, -2Ë=
LUA_TFUNCTION
) {

311 
	`lua_push°rög
(
L
, 
hook«mes
[()
¨
->
evít
]);

312 i‡(
¨
->
cuºíéöe
 >= 0)

313 
	`lua_pushöãgî
(
L
, 
¨
->
cuºíéöe
);

314 
	`lua_pushnû
(
L
);

315 
	`lua_as£π
(
	`lua_gëöfo
(
L
, "lS", 
¨
));

316 
	`lua_ˇŒ
(
L
, 2, 0);

318 
	}
}

324 
	$makemask
 (c⁄° *
smask
, 
cou¡
) {

325 
mask
 = 0;

326 i‡(
	`°rchr
(
smask
, 'c')Ë
mask
 |
LUA_MASKCALL
;

327 i‡(
	`°rchr
(
smask
, 'r')Ë
mask
 |
LUA_MASKRET
;

328 i‡(
	`°rchr
(
smask
, 'l')Ë
mask
 |
LUA_MASKLINE
;

329 i‡(
cou¡
 > 0Ë
mask
 |
LUA_MASKCOUNT
;

330  
mask
;

331 
	}
}

337 *
	$unmakemask
 (
mask
, *
smask
) {

338 
i
 = 0;

339 i‡(
mask
 & 
LUA_MASKCALL
Ë
smask
[
i
++] = 'c';

340 i‡(
mask
 & 
LUA_MASKRET
Ë
smask
[
i
++] = 'r';

341 i‡(
mask
 & 
LUA_MASKLINE
Ë
smask
[
i
++] = 'l';

342 
smask
[
i
] = '\0';

343  
smask
;

344 
	}
}

347 
	$db_£thook
 (
lua_Sèã
 *
L
) {

348 
¨g
, 
mask
, 
cou¡
;

349 
lua_Hook
 
func
;

350 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

351 i‡(
	`lua_i¢⁄e‹nû
(
L
, 
¨g
+1)) {

352 
	`lua_£â›
(
L
, 
¨g
+1);

353 
func
 = 
NULL
; 
mask
 = 0; 
cou¡
 = 0;

356 c⁄° *
smask
 = 
	`luaL_check°rög
(
L
, 
¨g
+2);

357 
	`luaL_checkty≥
(
L
, 
¨g
+1, 
LUA_TFUNCTION
);

358 
cou¡
 = ()
	`luaL_›töãgî
(
L
, 
¨g
 + 3, 0);

359 
func
 = 
hookf
; 
mask
 = 
	`makemask
(
smask
, 
cou¡
);

361 i‡(
	`lua_øwgëp
(
L
, 
LUA_REGISTRYINDEX
, &
HOOKKEY
Ë=
LUA_TNIL
) {

362 
	`lua_¸óãèbÀ
(
L
, 0, 2);

363 
	`lua_pushvÆue
(
L
, -1);

364 
	`lua_øw£ç
(
L
, 
LUA_REGISTRYINDEX
, &
HOOKKEY
);

365 
	`lua_push°rög
(
L
, "k");

366 
	`lua_£tfõld
(
L
, -2, "__mode");

367 
	`lua_pushvÆue
(
L
, -1);

368 
	`lua_£tmë©abÀ
(
L
, -2);

370 
	`check°ack
(
L
, 
L1
, 1);

371 
	`lua_pushthªad
(
L1
); 
	`lua_xmove
(L1, 
L
, 1);

372 
	`lua_pushvÆue
(
L
, 
¨g
 + 1);

373 
	`lua_øw£t
(
L
, -3);

374 
	`lua_£thook
(
L1
, 
func
, 
mask
, 
cou¡
);

376 
	}
}

379 
	$db_gëhook
 (
lua_Sèã
 *
L
) {

380 
¨g
;

381 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

382 
buff
[5];

383 
mask
 = 
	`lua_gëhookmask
(
L1
);

384 
lua_Hook
 
hook
 = 
	`lua_gëhook
(
L1
);

385 i‡(
hook
 =
NULL
)

386 
	`lua_pushnû
(
L
);

387 i‡(
hook
 !
hookf
)

388 
	`lua_pushlôîÆ
(
L
, "external hook");

390 
	`lua_øwgëp
(
L
, 
LUA_REGISTRYINDEX
, &
HOOKKEY
);

391 
	`check°ack
(
L
, 
L1
, 1);

392 
	`lua_pushthªad
(
L1
); 
	`lua_xmove
(L1, 
L
, 1);

393 
	`lua_øwgë
(
L
, -2);

394 
	`lua_ªmove
(
L
, -2);

396 
	`lua_push°rög
(
L
, 
	`unmakemask
(
mask
, 
buff
));

397 
	`lua_pushöãgî
(
L
, 
	`lua_gëhookcou¡
(
L1
));

399 
	}
}

402 
	$db_debug
 (
lua_Sèã
 *
L
) {

404 
buf„r
[250];

405 
	`lua_wrôe°rögîr‹
("%s", "lua_debug> ");

406 i‡(
	`fgës
(
buf„r
, (buf„r), 
°dö
) == 0 ||

407 
	`°rcmp
(
buf„r
, "cont\n") == 0)

409 i‡(
	`luaL_lﬂdbuf„r
(
L
, 
buf„r
, 
	`°æí
(buffer), "=(debug command)") ||

410 
	`lua_pˇŒ
(
L
, 0, 0, 0))

411 
	`lua_wrôe°rögîr‹
("%s\n", 
	`lua_to°rög
(
L
, -1));

412 
	`lua_£â›
(
L
, 0);

414 
	}
}

417 
	$db_åa˚back
 (
lua_Sèã
 *
L
) {

418 
¨g
;

419 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

420 c⁄° *
msg
 = 
	`lua_to°rög
(
L
, 
¨g
 + 1);

421 i‡(
msg
 =
NULL
 && !
	`lua_i¢⁄e‹nû
(
L
, 
¨g
 + 1))

422 
	`lua_pushvÆue
(
L
, 
¨g
 + 1);

424 
Àvñ
 = ()
	`luaL_›töãgî
(
L
, 
¨g
 + 2, (L =
L1
) ? 1 : 0);

425 
	`luaL_åa˚back
(
L
, 
L1
, 
msg
, 
Àvñ
);

428 
	}
}

431 c⁄° 
luaL_Reg
 
	gdblib
[] = {

432 {"debug", 
db_debug
},

433 {"gëu£rvÆue", 
db_gëu£rvÆue
},

434 {"gëhook", 
db_gëhook
},

435 {"gëöfo", 
db_gëöfo
},

436 {"gëloˇl", 
db_gëloˇl
},

437 {"gëªgi°ry", 
db_gëªgi°ry
},

438 {"gëmë©abÀ", 
db_gëmë©abÀ
},

439 {"gëupvÆue", 
db_gëupvÆue
},

440 {"upvÆuejoö", 
db_upvÆuejoö
},

441 {"upvÆueid", 
db_upvÆueid
},

442 {"£tu£rvÆue", 
db_£tu£rvÆue
},

443 {"£thook", 
db_£thook
},

444 {"£éoˇl", 
db_£éoˇl
},

445 {"£tmë©abÀ", 
db_£tmë©abÀ
},

446 {"£tupvÆue", 
db_£tupvÆue
},

447 {"åa˚back", 
db_åa˚back
},

448 {
NULL
, NULL}

452 
LUAMOD_API
 
	$lua›í_debug
 (
lua_Sèã
 *
L
) {

453 
	`luaL_√wlib
(
L
, 
dblib
);

455 
	}
}

	@lua/src/ldebug.c

7 
	#ldebug_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°d¨g.h
>

14 
	~<°ddef.h
>

15 
	~<°rög.h
>

17 
	~"lua.h
"

19 
	~"œpi.h
"

20 
	~"lcode.h
"

21 
	~"ldebug.h
"

22 
	~"ldo.h
"

23 
	~"lfunc.h
"

24 
	~"lobje˘.h
"

25 
	~"l›codes.h
"

26 
	~"l°©e.h
"

27 
	~"l°rög.h
"

28 
	~"…abÀ.h
"

29 
	~"…m.h
"

30 
	~"lvm.h
"

34 
	#noLuaClosuª
(
f
Ë((fË=
NULL
 || (f)->
c
.
â
 =
LUA_TCCL
)

	)

38 
	#ci_func
(
ci
Ë(
	`˛LvÆue
((ci)->
func
))

	)

41 c⁄° *
gëfun˙ame
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
, c⁄° **
«me
);

44 
	$cuºíçc
 (
CÆlInfo
 *
ci
) {

45 
	`lua_as£π
(
	`isLua
(
ci
));

46  
	`pcRñ
(
ci
->
u
.
l
.
ßvedpc
, 
	`ci_func
(ci)->
p
);

47 
	}
}

50 
	$cuºíéöe
 (
CÆlInfo
 *
ci
) {

51  
	`gëfun˛öe
(
	`ci_func
(
ci
)->
p
, 
	`cuºíçc
(ci));

52 
	}
}

61 
	$sw≠exåa
 (
lua_Sèã
 *
L
) {

62 i‡(
L
->
°©us
 =
LUA_YIELD
) {

63 
CÆlInfo
 *
ci
 = 
L
->ci;

64 
StkId
 
ãmp
 = 
ci
->
func
;

65 
ci
->
func
 = 
	`ª°‹e°ack
(
L
, ci->
exåa
);

66 
ci
->
exåa
 = 
	`ßve°ack
(
L
, 
ãmp
);

68 
	}
}

80 
LUA_API
 
	$lua_£thook
 (
lua_Sèã
 *
L
, 
lua_Hook
 
func
, 
mask
, 
cou¡
) {

81 i‡(
func
 =
NULL
 || 
mask
 == 0) {

82 
mask
 = 0;

83 
func
 = 
NULL
;

85 i‡(
	`isLua
(
L
->
ci
))

86 
L
->
ﬁdpc
 = L->
ci
->
u
.
l
.
ßvedpc
;

87 
L
->
hook
 = 
func
;

88 
L
->
ba£hookcou¡
 = 
cou¡
;

89 
	`ª£thookcou¡
(
L
);

90 
L
->
hookmask
 = 
	`ˇ°_byã
(
mask
);

91 
	}
}

94 
LUA_API
 
lua_Hook
 
	$lua_gëhook
 (
lua_Sèã
 *
L
) {

95  
L
->
hook
;

96 
	}
}

99 
LUA_API
 
	$lua_gëhookmask
 (
lua_Sèã
 *
L
) {

100  
L
->
hookmask
;

101 
	}
}

104 
LUA_API
 
	$lua_gëhookcou¡
 (
lua_Sèã
 *
L
) {

105  
L
->
ba£hookcou¡
;

106 
	}
}

109 
LUA_API
 
	$lua_gë°ack
 (
lua_Sèã
 *
L
, 
Àvñ
, 
lua_Debug
 *
¨
) {

110 
°©us
;

111 
CÆlInfo
 *
ci
;

112 i‡(
Àvñ
 < 0)  0;

113 
	`lua_lock
(
L
);

114 
ci
 = 
L
->ci; 
Àvñ
 > 0 && cò!&L->
ba£_ci
; còci->
¥evious
)

115 
Àvñ
--;

116 i‡(
Àvñ
 =0 && 
ci
 !&
L
->
ba£_ci
) {

117 
°©us
 = 1;

118 
¨
->
i_ci
 = 
ci
;

120 
°©us
 = 0;

121 
	`lua_u∆ock
(
L
);

122  
°©us
;

123 
	}
}

126 c⁄° *
	$upvÆ«me
 (
PrŸo
 *
p
, 
uv
) {

127 
TSåög
 *
s
 = 
	`check_exp
(
uv
 < 
p
->
sizeupvÆues
,Ö->
upvÆues
[uv].
«me
);

128 i‡(
s
 =
NULL
)  "?";

129  
	`gë°r
(
s
);

130 
	}
}

133 c⁄° *
	$födv¨¨g
 (
CÆlInfo
 *
ci
, 
n
, 
StkId
 *
pos
) {

134 
≈¨ams
 = 
	`˛LvÆue
(
ci
->
func
)->
p
->
num∑øms
;

135 i‡(
n
 >
	`ˇ°_öt
(
ci
->
u
.
l
.
ba£
 - ci->
func
Ë- 
≈¨ams
)

136  
NULL
;

138 *
pos
 = 
ci
->
func
 + 
≈¨ams
 + 
n
;

141 
	}
}

144 c⁄° *
	$födloˇl
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
, 
n
,

145 
StkId
 *
pos
) {

146 c⁄° *
«me
 = 
NULL
;

147 
StkId
 
ba£
;

148 i‡(
	`isLua
(
ci
)) {

149 i‡(
n
 < 0)

150  
	`födv¨¨g
(
ci
, -
n
, 
pos
);

152 
ba£
 = 
ci
->
u
.
l
.base;

153 
«me
 = 
	`luaF_gëloˇ ame
(
	`ci_func
(
ci
)->
p
, 
n
, 
	`cuºíçc
(ci));

157 
ba£
 = 
ci
->
func
 + 1;

158 i‡(
«me
 =
NULL
) {

159 
StkId
 
limô
 = (
ci
 =
L
->ciË? L->
t›
 : ci->
√xt
->
func
;

160 i‡(
limô
 - 
ba£
 >
n
 &&Ç > 0)

161 
«me
 = "(*temporary)";

163  
NULL
;

165 *
pos
 = 
ba£
 + (
n
 - 1);

166  
«me
;

167 
	}
}

170 
LUA_API
 c⁄° *
	$lua_gëloˇl
 (
lua_Sèã
 *
L
, c⁄° 
lua_Debug
 *
¨
, 
n
) {

171 c⁄° *
«me
;

172 
	`lua_lock
(
L
);

173 
	`sw≠exåa
(
L
);

174 i‡(
¨
 =
NULL
) {

175 i‡(!
	`isLfun˘i⁄
(
L
->
t›
 - 1))

176 
«me
 = 
NULL
;

178 
«me
 = 
	`luaF_gëloˇ ame
(
	`˛LvÆue
(
L
->
t›
 - 1)->
p
, 
n
, 0);

181 
StkId
 
pos
 = 
NULL
;

182 
«me
 = 
	`födloˇl
(
L
, 
¨
->
i_ci
, 
n
, &
pos
);

183 i‡(
«me
) {

184 
	`£tobj2s
(
L
, L->
t›
, 
pos
);

185 
	`≠i_ö¸_t›
(
L
);

188 
	`sw≠exåa
(
L
);

189 
	`lua_u∆ock
(
L
);

190  
«me
;

191 
	}
}

194 
LUA_API
 c⁄° *
	$lua_£éoˇl
 (
lua_Sèã
 *
L
, c⁄° 
lua_Debug
 *
¨
, 
n
) {

195 
StkId
 
pos
 = 
NULL
;

196 c⁄° *
«me
;

197 
	`lua_lock
(
L
);

198 
	`sw≠exåa
(
L
);

199 
«me
 = 
	`födloˇl
(
L
, 
¨
->
i_ci
, 
n
, &
pos
);

200 i‡(
«me
) {

201 
	`£tobjs2s
(
L
, 
pos
, L->
t›
 - 1);

202 
L
->
t›
--;

204 
	`sw≠exåa
(
L
);

205 
	`lua_u∆ock
(
L
);

206  
«me
;

207 
	}
}

210 
	$funcöfo
 (
lua_Debug
 *
¨
, 
Closuª
 *
˛
) {

211 i‡(
	`noLuaClosuª
(
˛
)) {

212 
¨
->
sour˚
 = "=[C]";

213 
¨
->
löedeföed
 = -1;

214 
¨
->
œ°löedeföed
 = -1;

215 
¨
->
wh©
 = "C";

218 
PrŸo
 *
p
 = 
˛
->
l
.p;

219 
¨
->
sour˚
 = 
p
->sour˚ ? 
	`gë°r
(p->source) : "=?";

220 
¨
->
löedeföed
 = 
p
->linedefined;

221 
¨
->
œ°löedeföed
 = 
p
->lastlinedefined;

222 
¨
->
wh©
 = (¨->
löedeföed
 == 0) ? "main" : "Lua";

224 
	`luaO_chunkid
(
¨
->
sh‹t_§c
,ár->
sour˚
, 
LUA_IDSIZE
);

225 
	}
}

228 
	$cﬁÀ˘vÆidlöes
 (
lua_Sèã
 *
L
, 
Closuª
 *
f
) {

229 i‡(
	`noLuaClosuª
(
f
)) {

230 
	`£äûvÆue
(
L
->
t›
);

231 
	`≠i_ö¸_t›
(
L
);

234 
i
;

235 
TVÆue
 
v
;

236 *
löeöfo
 = 
f
->
l
.
p
->lineinfo;

237 
TabÀ
 *
t
 = 
	`luaH_√w
(
L
);

238 
	`£thvÆue
(
L
, L->
t›
, 
t
);

239 
	`≠i_ö¸_t›
(
L
);

240 
	`£tbvÆue
(&
v
, 1);

241 
i
 = 0; i < 
f
->
l
.
p
->
sizñöeöfo
; i++)

242 
	`luaH_£töt
(
L
, 
t
, 
löeöfo
[
i
], &
v
);

244 
	}
}

247 
	$auxgëöfo
 (
lua_Sèã
 *
L
, c⁄° *
wh©
, 
lua_Debug
 *
¨
,

248 
Closuª
 *
f
, 
CÆlInfo
 *
ci
) {

249 
°©us
 = 1;

250 ; *
wh©
; what++) {

251 *
wh©
) {

253 
	`funcöfo
(
¨
, 
f
);

257 
¨
->
cuºíéöe
 = (
ci
 && 
	`isLua
(ci)Ë? 
	`cuºíéöe
(ci) : -1;

261 
¨
->
nups
 = (
f
 =
NULL
Ë? 0 : f->
c
.
nupvÆues
;

262 i‡(
	`noLuaClosuª
(
f
)) {

263 
¨
->
isv¨¨g
 = 1;

264 
¨
->
≈¨ams
 = 0;

267 
¨
->
isv¨¨g
 = 
f
->
l
.
p
->
is_v¨¨g
;

268 
¨
->
≈¨ams
 = 
f
->
l
.
p
->
num∑øms
;

273 
¨
->
i°aûˇŒ
 = (
ci
Ë? ci->
ˇŒ°©us
 & 
CIST_TAIL
 : 0;

278 i‡(
ci
 && !(ci->
ˇŒ°©us
 & 
CIST_TAIL
Ë&& 
	`isLua
(ci->
¥evious
))

279 
¨
->
«mewh©
 = 
	`gëfun˙ame
(
L
, 
ci
->
¥evious
, &¨->
«me
);

281 
¨
->
«mewh©
 = 
NULL
;

282 i‡(
¨
->
«mewh©
 =
NULL
) {

283 
¨
->
«mewh©
 = "";

284 
¨
->
«me
 = 
NULL
;

291 : 
°©us
 = 0;

294  
°©us
;

295 
	}
}

298 
LUA_API
 
	$lua_gëöfo
 (
lua_Sèã
 *
L
, c⁄° *
wh©
, 
lua_Debug
 *
¨
) {

299 
°©us
;

300 
Closuª
 *
˛
;

301 
CÆlInfo
 *
ci
;

302 
StkId
 
func
;

303 
	`lua_lock
(
L
);

304 
	`sw≠exåa
(
L
);

305 i‡(*
wh©
 == '>') {

306 
ci
 = 
NULL
;

307 
func
 = 
L
->
t›
 - 1;

308 
	`≠i_check
(
L
, 
	`âisfun˘i⁄
(
func
), "functionÉxpected");

309 
wh©
++;

310 
L
->
t›
--;

313 
ci
 = 
¨
->
i_ci
;

314 
func
 = 
ci
->func;

315 
	`lua_as£π
(
	`âisfun˘i⁄
(
ci
->
func
));

317 
˛
 = 
	`âis˛osuª
(
func
Ë? 
	`˛vÆue
(funcË: 
NULL
;

318 
°©us
 = 
	`auxgëöfo
(
L
, 
wh©
, 
¨
, 
˛
, 
ci
);

319 i‡(
	`°rchr
(
wh©
, 'f')) {

320 
	`£tobjs2s
(
L
, L->
t›
, 
func
);

321 
	`≠i_ö¸_t›
(
L
);

323 
	`sw≠exåa
(
L
);

324 i‡(
	`°rchr
(
wh©
, 'L'))

325 
	`cﬁÀ˘vÆidlöes
(
L
, 
˛
);

326 
	`lua_u∆ock
(
L
);

327  
°©us
;

328 
	}
}

337 c⁄° *
gëobj«me
 (
PrŸo
 *
p
, 
œ°pc
, 
ªg
,

338 c⁄° **
«me
);

344 
	$k«me
 (
PrŸo
 *
p
, 
pc
, 
c
, c⁄° **
«me
) {

345 i‡(
	`ISK
(
c
)) {

346 
TVÆue
 *
kvÆue
 = &
p
->
k
[
	`INDEXK
(
c
)];

347 i‡(
	`âis°rög
(
kvÆue
)) {

348 *
«me
 = 
	`svÆue
(
kvÆue
);

354 c⁄° *
wh©
 = 
	`gëobj«me
(
p
, 
pc
, 
c
, 
«me
);

355 i‡(
wh©
 && *what == 'c') {

360 *
«me
 = "?";

361 
	}
}

364 
	$fûãΩc
 (
pc
, 
jm±¨gë
) {

365 i‡(
pc
 < 
jm±¨gë
)

367  
pc
;

368 
	}
}

374 
	$föd£åeg
 (
PrŸo
 *
p
, 
œ°pc
, 
ªg
) {

375 
pc
;

376 
£åeg
 = -1;

377 
jm±¨gë
 = 0;

378 
pc
 = 0;Ö¯< 
œ°pc
;Öc++) {

379 
In°ru˘i⁄
 
i
 = 
p
->
code
[
pc
];

380 
OpCode
 
›
 = 
	`GET_OPCODE
(
i
);

381 
a
 = 
	`GETARG_A
(
i
);

382 
›
) {

383 
OP_LOADNIL
: {

384 
b
 = 
	`GETARG_B
(
i
);

385 i‡(
a
 <
ªg
 &&Ñeg <®+ 
b
)

386 
£åeg
 = 
	`fûãΩc
(
pc
, 
jm±¨gë
);

389 
OP_TFORCALL
: {

390 i‡(
ªg
 >
a
 + 2)

391 
£åeg
 = 
	`fûãΩc
(
pc
, 
jm±¨gë
);

394 
OP_CALL
:

395 
OP_TAILCALL
: {

396 i‡(
ªg
 >
a
)

397 
£åeg
 = 
	`fûãΩc
(
pc
, 
jm±¨gë
);

400 
OP_JMP
: {

401 
b
 = 
	`GETARG_sBx
(
i
);

402 
de°
 = 
pc
 + 1 + 
b
;

404 i‡(
pc
 < 
de°
 && de° <
œ°pc
) {

405 i‡(
de°
 > 
jm±¨gë
)

406 
jm±¨gë
 = 
de°
;

411 i‡(
	`ã°AMode
(
›
Ë&& 
ªg
 =
a
)

412 
£åeg
 = 
	`fûãΩc
(
pc
, 
jm±¨gë
);

416  
£åeg
;

417 
	}
}

420 c⁄° *
	$gëobj«me
 (
PrŸo
 *
p
, 
œ°pc
, 
ªg
,

421 c⁄° **
«me
) {

422 
pc
;

423 *
«me
 = 
	`luaF_gëloˇ ame
(
p
, 
ªg
 + 1, 
œ°pc
);

424 i‡(*
«me
)

427 
pc
 = 
	`föd£åeg
(
p
, 
œ°pc
, 
ªg
);

428 i‡(
pc
 != -1) {

429 
In°ru˘i⁄
 
i
 = 
p
->
code
[
pc
];

430 
OpCode
 
›
 = 
	`GET_OPCODE
(
i
);

431 
›
) {

432 
OP_MOVE
: {

433 
b
 = 
	`GETARG_B
(
i
);

434 i‡(
b
 < 
	`GETARG_A
(
i
))

435  
	`gëobj«me
(
p
, 
pc
, 
b
, 
«me
);

438 
OP_GETTABUP
:

439 
OP_GETTABLE
: {

440 
k
 = 
	`GETARG_C
(
i
);

441 
t
 = 
	`GETARG_B
(
i
);

442 c⁄° *
vn
 = (
›
 =
OP_GETTABLE
)

443 ? 
	`luaF_gëloˇ ame
(
p
, 
t
 + 1, 
pc
)

444 : 
	`upvÆ«me
(
p
, 
t
);

445 
	`k«me
(
p
, 
pc
, 
k
, 
«me
);

446  (
vn
 && 
	`°rcmp
(vn, 
LUA_ENV
) == 0) ? "global" : "field";

448 
OP_GETUPVAL
: {

449 *
«me
 = 
	`upvÆ«me
(
p
, 
	`GETARG_B
(
i
));

452 
OP_LOADK
:

453 
OP_LOADKX
: {

454 
b
 = (
›
 =
OP_LOADK
Ë? 
	`GETARG_Bx
(
i
)

455 : 
	`GETARG_Ax
(
p
->
code
[
pc
 + 1]);

456 i‡(
	`âis°rög
(&
p
->
k
[
b
])) {

457 *
«me
 = 
	`svÆue
(&
p
->
k
[
b
]);

462 
OP_SELF
: {

463 
k
 = 
	`GETARG_C
(
i
);

464 
	`k«me
(
p
, 
pc
, 
k
, 
«me
);

470  
NULL
;

471 
	}
}

474 c⁄° *
	$gëfun˙ame
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
, c⁄° **
«me
) {

475 
TMS
 
tm
 = (TMS)0;

476 
PrŸo
 *
p
 = 
	`ci_func
(
ci
)->p;

477 
pc
 = 
	`cuºíçc
(
ci
);

478 
In°ru˘i⁄
 
i
 = 
p
->
code
[
pc
];

479 i‡(
ci
->
ˇŒ°©us
 & 
CIST_HOOKED
) {

480 *
«me
 = "?";

483 
	`GET_OPCODE
(
i
)) {

484 
OP_CALL
:

485 
OP_TAILCALL
:

486  
	`gëobj«me
(
p
, 
pc
, 
	`GETARG_A
(
i
), 
«me
);

487 
OP_TFORCALL
: {

488 *
«me
 = "for iterator";

492 
OP_SELF
: 
OP_GETTABUP
: 
OP_GETTABLE
:

493 
tm
 = 
TM_INDEX
;

495 
OP_SETTABUP
: 
OP_SETTABLE
:

496 
tm
 = 
TM_NEWINDEX
;

498 
OP_ADD
: 
OP_SUB
: 
OP_MUL
: 
OP_MOD
:

499 
OP_POW
: 
OP_DIV
: 
OP_IDIV
: 
OP_BAND
:

500 
OP_BOR
: 
OP_BXOR
: 
OP_SHL
: 
OP_SHR
: {

501 
off£t
 = 
	`ˇ°_öt
(
	`GET_OPCODE
(
i
)Ë- ca°_öt(
OP_ADD
);

502 
tm
 = 
	`ˇ°
(
TMS
, 
off£t
 + 
	`ˇ°_öt
(
TM_ADD
));

505 
OP_UNM
: 
tm
 = 
TM_UNM
; ;

506 
OP_BNOT
: 
tm
 = 
TM_BNOT
; ;

507 
OP_LEN
: 
tm
 = 
TM_LEN
; ;

508 
OP_CONCAT
: 
tm
 = 
TM_CONCAT
; ;

509 
OP_EQ
: 
tm
 = 
TM_EQ
; ;

510 
OP_LT
: 
tm
 = 
TM_LT
; ;

511 
OP_LE
: 
tm
 = 
TM_LE
; ;

512 : 
	`lua_as£π
(0);

514 *
«me
 = 
	`gë°r
(
	`G
(
L
)->
tm«me
[
tm
]);

516 
	}
}

527 
	$isö°ack
 (
CÆlInfo
 *
ci
, c⁄° 
TVÆue
 *
o
) {

528 
±rdiff_t
 
i
 = 
o
 - 
ci
->
u
.
l
.
ba£
;

529  (0 <
i
 && i < (
ci
->
t›
 - ci->
u
.
l
.
ba£
Ë&& ci->u.l.ba£ + i =
o
);

530 
	}
}

538 c⁄° *
	$gëupvÆ«me
 (
CÆlInfo
 *
ci
, c⁄° 
TVÆue
 *
o
,

539 c⁄° **
«me
) {

540 
LClosuª
 *
c
 = 
	`ci_func
(
ci
);

541 
i
;

542 
i
 = 0; i < 
c
->
nupvÆues
; i++) {

543 i‡(
c
->
upvÆs
[
i
]->
v
 =
o
) {

544 *
«me
 = 
	`upvÆ«me
(
c
->
p
, 
i
);

548  
NULL
;

549 
	}
}

552 c⁄° *
	$v¨öfo
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
) {

553 c⁄° *
«me
 = 
NULL
;

554 
CÆlInfo
 *
ci
 = 
L
->ci;

555 c⁄° *
köd
 = 
NULL
;

556 i‡(
	`isLua
(
ci
)) {

557 
köd
 = 
	`gëupvÆ«me
(
ci
, 
o
, &
«me
);

558 i‡(!
köd
 && 
	`isö°ack
(
ci
, 
o
))

559 
köd
 = 
	`gëobj«me
(
	`ci_func
(
ci
)->
p
, 
	`cuºíçc
(ci),

560 
	`ˇ°_öt
(
o
 - 
ci
->
u
.
l
.
ba£
), &
«me
);

562  (
köd
Ë? 
	`luaO_pushf°rög
(
L
, " (%†'%s')", köd, 
«me
) : "";

563 
	}
}

566 
l_n‹ë
 
	$luaG_ty≥îr‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
, c⁄° *
›
) {

567 c⁄° *
t
 = 
	`luaT_objty≥«me
(
L
, 
o
);

568 
	`luaG_ru√º‹
(
L
, "©ãm±Åÿ%†®%†vÆue%s", 
›
, 
t
, 
	`v¨öfo
(L, 
o
));

569 
	}
}

572 
l_n‹ë
 
	$luaG_c⁄ˇãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
) {

573 i‡(
	`âis°rög
(
p1
Ë|| 
	`cvt2°r
’1)Ëp1 = 
p2
;

574 
	`luaG_ty≥îr‹
(
L
, 
p1
, "concatenate");

575 
	}
}

578 
l_n‹ë
 
	$luaG_›öãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

579 c⁄° 
TVÆue
 *
p2
, c⁄° *
msg
) {

580 
lua_Numbî
 
ãmp
;

581 i‡(!
	`t⁄umbî
(
p1
, &
ãmp
))

582 
p2
 = 
p1
;

583 
	`luaG_ty≥îr‹
(
L
, 
p2
, 
msg
);

584 
	}
}

590 
l_n‹ë
 
	$luaG_toöãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
) {

591 
lua_I¡egî
 
ãmp
;

592 i‡(!
	`toöãgî
(
p1
, &
ãmp
))

593 
p2
 = 
p1
;

594 
	`luaG_ru√º‹
(
L
, "numbî%†ha†nÿöãgîÑïª£¡©i⁄", 
	`v¨öfo
(L, 
p2
));

595 
	}
}

598 
l_n‹ë
 
	$luaG_‹dîîr‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
) {

599 c⁄° *
t1
 = 
	`luaT_objty≥«me
(
L
, 
p1
);

600 c⁄° *
t2
 = 
	`luaT_objty≥«me
(
L
, 
p2
);

601 i‡(
	`°rcmp
(
t1
, 
t2
) == 0)

602 
	`luaG_ru√º‹
(
L
, "©ãm±Åÿcom∑ªÅwÿ%†vÆues", 
t1
);

604 
	`luaG_ru√º‹
(
L
, "©ãm±Åÿcom∑ª %†wôh %s", 
t1
, 
t2
);

605 
	}
}

609 c⁄° *
	$luaG_addöfo
 (
lua_Sèã
 *
L
, c⁄° *
msg
, 
TSåög
 *
§c
,

610 
löe
) {

611 
buff
[
LUA_IDSIZE
];

612 i‡(
§c
)

613 
	`luaO_chunkid
(
buff
, 
	`gë°r
(
§c
), 
LUA_IDSIZE
);

615 
buff
[0] = '?'; buff[1] = '\0';

617  
	`luaO_pushf°rög
(
L
, "%s:%d: %s", 
buff
, 
löe
, 
msg
);

618 
	}
}

621 
l_n‹ë
 
	$luaG_îr‹msg
 (
lua_Sèã
 *
L
) {

622 i‡(
L
->
îrfunc
 != 0) {

623 
StkId
 
îrfunc
 = 
	`ª°‹e°ack
(
L
, L->errfunc);

624 
	`£tobjs2s
(
L
, L->
t›
, L->top - 1);

625 
	`£tobjs2s
(
L
, L->
t›
 - 1, 
îrfunc
);

626 
L
->
t›
++;

627 
	`luaD_ˇŒnoyõld
(
L
, L->
t›
 - 2, 1);

629 
	`luaD_throw
(
L
, 
LUA_ERRRUN
);

630 
	}
}

633 
l_n‹ë
 
	$luaG_ru√º‹
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...) {

634 
CÆlInfo
 *
ci
 = 
L
->ci;

635 c⁄° *
msg
;

636 
va_li°
 
¨gp
;

637 
	`va_°¨t
(
¨gp
, 
fmt
);

638 
msg
 = 
	`luaO_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

639 
	`va_íd
(
¨gp
);

640 i‡(
	`isLua
(
ci
))

641 
	`luaG_addöfo
(
L
, 
msg
, 
	`ci_func
(
ci
)->
p
->
sour˚
, 
	`cuºíéöe
(ci));

642 
	`luaG_îr‹msg
(
L
);

643 
	}
}

646 
	$luaG_åa˚exec
 (
lua_Sèã
 *
L
) {

647 
CÆlInfo
 *
ci
 = 
L
->ci;

648 
lu_byã
 
mask
 = 
L
->
hookmask
;

649 
cou¡hook
 = (--
L
->
hookcou¡
 =0 && (
mask
 & 
LUA_MASKCOUNT
));

650 i‡(
cou¡hook
)

651 
	`ª£thookcou¡
(
L
);

652 i‡(!(
mask
 & 
LUA_MASKLINE
))

654 i‡(
ci
->
ˇŒ°©us
 & 
CIST_HOOKYIELD
) {

655 
ci
->
ˇŒ°©us
 &~
CIST_HOOKYIELD
;

658 i‡(
cou¡hook
)

659 
	`luaD_hook
(
L
, 
LUA_HOOKCOUNT
, -1);

660 i‡(
mask
 & 
LUA_MASKLINE
) {

661 
PrŸo
 *
p
 = 
	`ci_func
(
ci
)->p;

662 
≈c
 = 
	`pcRñ
(
ci
->
u
.
l
.
ßvedpc
, 
p
);

663 
√wlöe
 = 
	`gëfun˛öe
(
p
, 
≈c
);

664 i‡(
≈c
 == 0 ||

665 
ci
->
u
.
l
.
ßvedpc
 <
L
->
ﬁdpc
 ||

666 
√wlöe
 !
	`gëfun˛öe
(
p
, 
	`pcRñ
(
L
->
ﬁdpc
,Ö)))

667 
	`luaD_hook
(
L
, 
LUA_HOOKLINE
, 
√wlöe
);

669 
L
->
ﬁdpc
 = 
ci
->
u
.
l
.
ßvedpc
;

670 i‡(
L
->
°©us
 =
LUA_YIELD
) {

671 i‡(
cou¡hook
)

672 
L
->
hookcou¡
 = 1;

673 
ci
->
u
.
l
.
ßvedpc
--;

674 
ci
->
ˇŒ°©us
 |
CIST_HOOKYIELD
;

675 
ci
->
func
 = 
L
->
t›
 - 1;

676 
	`luaD_throw
(
L
, 
LUA_YIELD
);

678 
	}
}

	@lua/src/ldebug.h

7 #i‚de‡
ldebug_h


8 
	#ldebug_h


	)

11 
	~"l°©e.h
"

14 
	#pcRñ
(
pc
, 
p
Ë(
	`ˇ°
(, (pcË- (p)->
code
Ë- 1)

	)

16 
	#gëfun˛öe
(
f
,
pc
Ë(((f)->
löeöfo
Ë? (f)->löeöfo[pc] : -1)

	)

18 
	#ª£thookcou¡
(
L
Ë(L->
hookcou¡
 = L->
ba£hookcou¡
)

	)

21 
LUAI_FUNC
 
l_n‹ë
 
luaG_ty≥îr‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
,

22 c⁄° *
›«me
);

23 
LUAI_FUNC
 
l_n‹ë
 
luaG_c⁄ˇãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

24 c⁄° 
TVÆue
 *
p2
);

25 
LUAI_FUNC
 
l_n‹ë
 
luaG_›öãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

26 c⁄° 
TVÆue
 *
p2
,

27 c⁄° *
msg
);

28 
LUAI_FUNC
 
l_n‹ë
 
luaG_toöãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

29 c⁄° 
TVÆue
 *
p2
);

30 
LUAI_FUNC
 
l_n‹ë
 
luaG_‹dîîr‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

31 c⁄° 
TVÆue
 *
p2
);

32 
LUAI_FUNC
 
l_n‹ë
 
luaG_ru√º‹
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...);

33 
LUAI_FUNC
 c⁄° *
luaG_addöfo
 (
lua_Sèã
 *
L
, c⁄° *
msg
,

34 
TSåög
 *
§c
, 
löe
);

35 
LUAI_FUNC
 
l_n‹ë
 
luaG_îr‹msg
 (
lua_Sèã
 *
L
);

36 
LUAI_FUNC
 
luaG_åa˚exec
 (
lua_Sèã
 *
L
);

	@lua/src/ldo.c

7 
	#ldo_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<£tjmp.h
>

14 
	~<°dlib.h
>

15 
	~<°rög.h
>

17 
	~"lua.h
"

19 
	~"œpi.h
"

20 
	~"ldebug.h
"

21 
	~"ldo.h
"

22 
	~"lfunc.h
"

23 
	~"lgc.h
"

24 
	~"lmem.h
"

25 
	~"lobje˘.h
"

26 
	~"l›codes.h
"

27 
	~"Õ¨£r.h
"

28 
	~"l°©e.h
"

29 
	~"l°rög.h
"

30 
	~"…abÀ.h
"

31 
	~"…m.h
"

32 
	~"lundump.h
"

33 
	~"lvm.h
"

34 
	~"lzio.h
"

38 
	#îr‹°©us
(
s
Ë((sË> 
LUA_YIELD
)

	)

53 #i‡!
deföed
(
LUAI_THROW
)

55 #i‡
deföed
(
__˝lu•lus
Ë&& !deföed(
LUA_USE_LONGJMP
)

58 
	#LUAI_THROW
(
L
,
c
Ë
	`throw
(c)

	)

59 
	#LUAI_TRY
(
L
,
c
,
a
) \

60 
åy
 { 
a
 } 
	`ˇtch
(...Ë{ i‡((
c
)->
°©us
 =0Ë(c)->°©u†-1; }

	)

61 
	#luai_jmpbuf
 

	)

63 #ñi‡
deföed
(
LUA_USE_POSIX
)

66 
	#LUAI_THROW
(
L
,
c
Ë
	`_l⁄gjmp
((c)->
b
, 1)

	)

67 
	#LUAI_TRY
(
L
,
c
,
a
Ëi‡(
	`_£tjmp
((c)->
b
Ë=0Ë{á }

	)

68 
	#luai_jmpbuf
 
jmp_buf


	)

73 
	#LUAI_THROW
(
L
,
c
Ë
	`l⁄gjmp
((c)->
b
, 1)

	)

74 
	#LUAI_TRY
(
L
,
c
,
a
Ëi‡(
	`£tjmp
((c)->
b
Ë=0Ë{á }

	)

75 
	#luai_jmpbuf
 
jmp_buf


	)

84 
	slua_l⁄gjmp
 {

85 
lua_l⁄gjmp
 *
	m¥evious
;

86 
luai_jmpbuf
 
	mb
;

87 vﬁ©ûê
	m°©us
;

91 
	$£ãº‹obj
 (
lua_Sèã
 *
L
, 
îrcode
, 
StkId
 
ﬁdt›
) {

92 
îrcode
) {

93 
LUA_ERRMEM
: {

94 
	`£tsvÆue2s
(
L
, 
ﬁdt›
, 
	`G
(L)->
memîrmsg
);

97 
LUA_ERRERR
: {

98 
	`£tsvÆue2s
(
L
, 
ﬁdt›
, 
	`luaS_√wlôîÆ
(L, "error inÉrror handling"));

102 
	`£tobjs2s
(
L
, 
ﬁdt›
, L->
t›
 - 1);

106 
L
->
t›
 = 
ﬁdt›
 + 1;

107 
	}
}

110 
l_n‹ë
 
	$luaD_throw
 (
lua_Sèã
 *
L
, 
îrcode
) {

111 i‡(
L
->
îr‹Jmp
) {

112 
L
->
îr‹Jmp
->
°©us
 = 
îrcode
;

113 
	`LUAI_THROW
(
L
, L->
îr‹Jmp
);

116 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

117 
L
->
°©us
 = 
	`ˇ°_byã
(
îrcode
);

118 i‡(
g
->
maöthªad
->
îr‹Jmp
) {

119 
	`£tobjs2s
(
L
, 
g
->
maöthªad
->
t›
++, L->top - 1);

120 
	`luaD_throw
(
g
->
maöthªad
, 
îrcode
);

123 i‡(
g
->
∑nic
) {

124 
	`£ãº‹obj
(
L
, 
îrcode
, L->
t›
);

125 i‡(
L
->
ci
->
t›
 < L->top)

126 
L
->
ci
->
t›
 = L->top;

127 
	`lua_u∆ock
(
L
);

128 
g
->
	`∑nic
(
L
);

130 
	`ab‹t
();

133 
	}
}

136 
	$luaD_øwru≈rŸe˘ed
 (
lua_Sèã
 *
L
, 
Pfunc
 
f
, *
ud
) {

137 
ﬁdnCˇŒs
 = 
L
->
nCˇŒs
;

138 
lua_l⁄gjmp
 
lj
;

139 
lj
.
°©us
 = 
LUA_OK
;

140 
lj
.
¥evious
 = 
L
->
îr‹Jmp
;

141 
L
->
îr‹Jmp
 = &
lj
;

142 
	`LUAI_TRY
(
L
, &
lj
,

143 (*
f
)(
L
, 
ud
);

145 
L
->
îr‹Jmp
 = 
lj
.
¥evious
;

146 
L
->
nCˇŒs
 = 
ﬁdnCˇŒs
;

147  
lj
.
°©us
;

148 
	}
}

158 
	$c‹ª˘°ack
 (
lua_Sèã
 *
L
, 
TVÆue
 *
ﬁd°ack
) {

159 
CÆlInfo
 *
ci
;

160 
UpVÆ
 *
up
;

161 
L
->
t›
 = (L->t› - 
ﬁd°ack
Ë+ L->
°ack
;

162 
up
 = 
L
->
›íupvÆ
; u∞!
NULL
; u∞up->
u
.
›í
.
√xt
)

163 
up
->
v
 = (up->v - 
ﬁd°ack
Ë+ 
L
->
°ack
;

164 
ci
 = 
L
->ci; cò!
NULL
; còci->
¥evious
) {

165 
ci
->
t›
 = (ci->t› - 
ﬁd°ack
Ë+ 
L
->
°ack
;

166 
ci
->
func
 = (ci->fun¯- 
ﬁd°ack
Ë+ 
L
->
°ack
;

167 i‡(
	`isLua
(
ci
))

168 
ci
->
u
.
l
.
ba£
 = (ci->u.l.ba£ - 
ﬁd°ack
Ë+ 
L
->
°ack
;

170 
	}
}

174 
	#ERRORSTACKSIZE
 (
LUAI_MAXSTACK
 + 200)

	)

177 
	$luaD_ªÆloc°ack
 (
lua_Sèã
 *
L
, 
√wsize
) {

178 
TVÆue
 *
ﬁd°ack
 = 
L
->
°ack
;

179 
lim
 = 
L
->
°acksize
;

180 
	`lua_as£π
(
√wsize
 <
LUAI_MAXSTACK
 ||Çewsizê=
ERRORSTACKSIZE
);

181 
	`lua_as£π
(
L
->
°ack_œ°
 - L->
°ack
 =L->
°acksize
 - 
EXTRA_STACK
);

182 
	`luaM_ªÆlocve˘‹
(
L
, L->
°ack
, L->
°acksize
, 
√wsize
, 
TVÆue
);

183 ; 
lim
 < 
√wsize
;Üim++)

184 
	`£äûvÆue
(
L
->
°ack
 + 
lim
);

185 
L
->
°acksize
 = 
√wsize
;

186 
L
->
°ack_œ°
 = L->
°ack
 + 
√wsize
 - 
EXTRA_STACK
;

187 
	`c‹ª˘°ack
(
L
, 
ﬁd°ack
);

188 
	}
}

191 
	$luaD_grow°ack
 (
lua_Sèã
 *
L
, 
n
) {

192 
size
 = 
L
->
°acksize
;

193 i‡(
size
 > 
LUAI_MAXSTACK
)

194 
	`luaD_throw
(
L
, 
LUA_ERRERR
);

196 
√eded
 = 
	`ˇ°_öt
(
L
->
t›
 - L->
°ack
Ë+ 
n
 + 
EXTRA_STACK
;

197 
√wsize
 = 2 * 
size
;

198 i‡(
√wsize
 > 
LUAI_MAXSTACK
)Çewsize = LUAI_MAXSTACK;

199 i‡(
√wsize
 < 
√eded
)Çewsize =Çeeded;

200 i‡(
√wsize
 > 
LUAI_MAXSTACK
) {

201 
	`luaD_ªÆloc°ack
(
L
, 
ERRORSTACKSIZE
);

202 
	`luaG_ru√º‹
(
L
, "stack overflow");

205 
	`luaD_ªÆloc°ack
(
L
, 
√wsize
);

207 
	}
}

210 
	$°acköu£
 (
lua_Sèã
 *
L
) {

211 
CÆlInfo
 *
ci
;

212 
StkId
 
lim
 = 
L
->
t›
;

213 
ci
 = 
L
->ci; cò!
NULL
; còci->
¥evious
) {

214 
	`lua_as£π
(
ci
->
t›
 <
L
->
°ack_œ°
);

215 i‡(
lim
 < 
ci
->
t›
)Üim = ci->top;

217  
	`ˇ°_öt
(
lim
 - 
L
->
°ack
) + 1;

218 
	}
}

221 
	$luaD_shrök°ack
 (
lua_Sèã
 *
L
) {

222 
öu£
 = 
	`°acköu£
(
L
);

223 
goodsize
 = 
öu£
 + (öu£ / 8Ë+ 2*
EXTRA_STACK
;

224 i‡(
goodsize
 > 
LUAI_MAXSTACK
) goodsize = LUAI_MAXSTACK;

225 i‡(
L
->
°acksize
 > 
LUAI_MAXSTACK
)

226 
	`luaE_‰ìCI
(
L
);

228 
	`luaE_shrökCI
(
L
);

229 i‡(
öu£
 <
LUAI_MAXSTACK
 &&

230 
goodsize
 < 
L
->
°acksize
)

231 
	`luaD_ªÆloc°ack
(
L
, 
goodsize
);

233 
	`c⁄dmove°ack
(
L
,,);

234 
	}
}

237 
	$luaD_ö˘›
 (
lua_Sèã
 *
L
) {

238 
	`luaD_check°ack
(
L
, 1);

239 
L
->
t›
++;

240 
	}
}

250 
	$luaD_hook
 (
lua_Sèã
 *
L
, 
evít
, 
löe
) {

251 
lua_Hook
 
hook
 = 
L
->hook;

252 i‡(
hook
 && 
L
->
Ælowhook
) {

253 
CÆlInfo
 *
ci
 = 
L
->ci;

254 
±rdiff_t
 
t›
 = 
	`ßve°ack
(
L
, L->top);

255 
±rdiff_t
 
ci_t›
 = 
	`ßve°ack
(
L
, 
ci
->
t›
);

256 
lua_Debug
 
¨
;

257 
¨
.
evít
 =Évent;

258 
¨
.
cuºíéöe
 = 
löe
;

259 
¨
.
i_ci
 = 
ci
;

260 
	`luaD_check°ack
(
L
, 
LUA_MINSTACK
);

261 
ci
->
t›
 = 
L
->t› + 
LUA_MINSTACK
;

262 
	`lua_as£π
(
ci
->
t›
 <
L
->
°ack_œ°
);

263 
L
->
Ælowhook
 = 0;

264 
ci
->
ˇŒ°©us
 |
CIST_HOOKED
;

265 
	`lua_u∆ock
(
L
);

266 (*
hook
)(
L
, &
¨
);

267 
	`lua_lock
(
L
);

268 
	`lua_as£π
(!
L
->
Ælowhook
);

269 
L
->
Ælowhook
 = 1;

270 
ci
->
t›
 = 
	`ª°‹e°ack
(
L
, 
ci_t›
);

271 
L
->
t›
 = 
	`ª°‹e°ack
(L,Åop);

272 
ci
->
ˇŒ°©us
 &~
CIST_HOOKED
;

274 
	}
}

277 
	$ˇŒhook
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
) {

278 
hook
 = 
LUA_HOOKCALL
;

279 
ci
->
u
.
l
.
ßvedpc
++;

280 i‡(
	`isLua
(
ci
->
¥evious
) &&

281 
	`GET_OPCODE
(*(
ci
->
¥evious
->
u
.
l
.
ßvedpc
 - 1)Ë=
OP_TAILCALL
) {

282 
ci
->
ˇŒ°©us
 |
CIST_TAIL
;

283 
hook
 = 
LUA_HOOKTAILCALL
;

285 
	`luaD_hook
(
L
, 
hook
, -1);

286 
ci
->
u
.
l
.
ßvedpc
--;

287 
	}
}

290 
StkId
 
	$adju°_v¨¨gs
 (
lua_Sèã
 *
L
, 
PrŸo
 *
p
, 
a˘uÆ
) {

291 
i
;

292 
nfix¨gs
 = 
p
->
num∑øms
;

293 
StkId
 
ba£
, 
fixed
;

295 
fixed
 = 
L
->
t›
 - 
a˘uÆ
;

296 
ba£
 = 
L
->
t›
;

297 
i
 = 0; i < 
nfix¨gs
 && i < 
a˘uÆ
; i++) {

298 
	`£tobjs2s
(
L
, L->
t›
++, 
fixed
 + 
i
);

299 
	`£äûvÆue
(
fixed
 + 
i
);

301 ; 
i
 < 
nfix¨gs
; i++)

302 
	`£äûvÆue
(
L
->
t›
++);

303  
ba£
;

304 
	}
}

312 
	$åyfuncTM
 (
lua_Sèã
 *
L
, 
StkId
 
func
) {

313 c⁄° 
TVÆue
 *
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
func
, 
TM_CALL
);

314 
StkId
 
p
;

315 i‡(!
	`âisfun˘i⁄
(
tm
))

316 
	`luaG_ty≥îr‹
(
L
, 
func
, "call");

318 
p
 = 
L
->
t›
;Ö > 
func
;Ö--)

319 
	`£tobjs2s
(
L
, 
p
,Ö-1);

320 
L
->
t›
++;

321 
	`£tobj2s
(
L
, 
func
, 
tm
);

322 
	}
}

326 
	#√xt_ci
(
L
Ë(L->
ci
 = (L->ci->
√xt
 ? L->ci->√xà: 
	`luaE_exãndCI
(L)))

	)

330 
	#check°ackp
(
L
,
n
,
p
) \

331 
	`luaD_check°ackaux
(
L
, 
n
, \

332 
±rdiff_t
 
t__
 = 
	`ßve°ack
(
L
, 
p
); \

333 
	`luaC_checkGC
(
L
), \

334 
p
 = 
	`ª°‹e°ack
(
L
, 
t__
)Ë

	)

344 
	$luaD_¥eˇŒ
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
ƒesu…s
) {

345 
lua_CFun˘i⁄
 
f
;

346 
CÆlInfo
 *
ci
;

347 
	`ây≥
(
func
)) {

348 
LUA_TCCL
:

349 
f
 = 
	`˛CvÆue
(
func
)->f;

350 
Cfunc
;

351 
LUA_TLCF
:

352 
f
 = 
	`fvÆue
(
func
);

353 
Cfunc
: {

354 
n
;

355 
	`check°ackp
(
L
, 
LUA_MINSTACK
, 
func
);

356 
ci
 = 
	`√xt_ci
(
L
);

357 
ci
->
ƒesu…s
 =Çresults;

358 
ci
->
func
 = func;

359 
ci
->
t›
 = 
L
->t› + 
LUA_MINSTACK
;

360 
	`lua_as£π
(
ci
->
t›
 <
L
->
°ack_œ°
);

361 
ci
->
ˇŒ°©us
 = 0;

362 i‡(
L
->
hookmask
 & 
LUA_MASKCALL
)

363 
	`luaD_hook
(
L
, 
LUA_HOOKCALL
, -1);

364 
	`lua_u∆ock
(
L
);

365 
n
 = (*
f
)(
L
);

366 
	`lua_lock
(
L
);

367 
	`≠i_check√Àms
(
L
, 
n
);

368 
	`luaD_posˇŒ
(
L
, 
ci
, L->
t›
 - 
n
,Ç);

371 
LUA_TLCL
: {

372 
StkId
 
ba£
;

373 
PrŸo
 *
p
 = 
	`˛LvÆue
(
func
)->p;

374 
n
 = 
	`ˇ°_öt
(
L
->
t›
 - 
func
) - 1;

375 
fsize
 = 
p
->
max°acksize
;

376 
	`check°ackp
(
L
, 
fsize
, 
func
);

377 i‡(
p
->
is_v¨¨g
 != 1) {

378 ; 
n
 < 
p
->
num∑øms
;Ç++)

379 
	`£äûvÆue
(
L
->
t›
++);

380 
ba£
 = 
func
 + 1;

383 
ba£
 = 
	`adju°_v¨¨gs
(
L
, 
p
, 
n
);

384 
ci
 = 
	`√xt_ci
(
L
);

385 
ci
->
ƒesu…s
 =Çresults;

386 
ci
->
func
 = func;

387 
ci
->
u
.
l
.
ba£
 = base;

388 
L
->
t›
 = 
ci
->t› = 
ba£
 + 
fsize
;

389 
	`lua_as£π
(
ci
->
t›
 <
L
->
°ack_œ°
);

390 
ci
->
u
.
l
.
ßvedpc
 = 
p
->
code
;

391 
ci
->
ˇŒ°©us
 = 
CIST_LUA
;

392 i‡(
L
->
hookmask
 & 
LUA_MASKCALL
)

393 
	`ˇŒhook
(
L
, 
ci
);

397 
	`check°ackp
(
L
, 1, 
func
);

398 
	`åyfuncTM
(
L
, 
func
);

399  
	`luaD_¥eˇŒ
(
L
, 
func
, 
ƒesu…s
);

402 
	}
}

411 
	$movîesu…s
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
fú°Resu…
, 
StkId
 
ªs
,

412 
ƒes
, 
w™ãd
) {

413 
w™ãd
) {

416 i‡(
ƒes
 == 0)

417 
fú°Resu…
 = 
luaO_nûobje˘
;

418 
	`£tobjs2s
(
L
, 
ªs
, 
fú°Resu…
);

421 
LUA_MULTRET
: {

422 
i
;

423 
i
 = 0; i < 
ƒes
; i++)

424 
	`£tobjs2s
(
L
, 
ªs
 + 
i
, 
fú°Resu…
 + i);

425 
L
->
t›
 = 
ªs
 + 
ƒes
;

429 
i
;

430 i‡(
w™ãd
 <
ƒes
) {

431 
i
 = 0; i < 
w™ãd
; i++)

432 
	`£tobjs2s
(
L
, 
ªs
 + 
i
, 
fú°Resu…
 + i);

435 
i
 = 0; i < 
ƒes
; i++)

436 
	`£tobjs2s
(
L
, 
ªs
 + 
i
, 
fú°Resu…
 + i);

437 ; 
i
 < 
w™ãd
; i++)

438 
	`£äûvÆue
(
ªs
 + 
i
);

443 
L
->
t›
 = 
ªs
 + 
w™ãd
;

445 
	}
}

453 
	$luaD_posˇŒ
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
, 
StkId
 
fú°Resu…
, 
ƒes
) {

454 
StkId
 
ªs
;

455 
w™ãd
 = 
ci
->
ƒesu…s
;

456 i‡(
L
->
hookmask
 & (
LUA_MASKRET
 | 
LUA_MASKLINE
)) {

457 i‡(
L
->
hookmask
 & 
LUA_MASKRET
) {

458 
±rdiff_t
 
‰
 = 
	`ßve°ack
(
L
, 
fú°Resu…
);

459 
	`luaD_hook
(
L
, 
LUA_HOOKRET
, -1);

460 
fú°Resu…
 = 
	`ª°‹e°ack
(
L
, 
‰
);

462 
L
->
ﬁdpc
 = 
ci
->
¥evious
->
u
.
l
.
ßvedpc
;

464 
ªs
 = 
ci
->
func
;

465 
L
->
ci
 = ci->
¥evious
;

467  
	`movîesu…s
(
L
, 
fú°Resu…
, 
ªs
, 
ƒes
, 
w™ãd
);

468 
	}
}

478 
	$°ackîr‹
 (
lua_Sèã
 *
L
) {

479 i‡(
L
->
nCˇŒs
 =
LUAI_MAXCCALLS
)

480 
	`luaG_ru√º‹
(
L
, "C stack overflow");

481 i‡(
L
->
nCˇŒs
 >(
LUAI_MAXCCALLS
 + (LUAI_MAXCCALLS>>3)))

482 
	`luaD_throw
(
L
, 
LUA_ERRERR
);

483 
	}
}

492 
	$luaD_ˇŒ
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
nResu…s
) {

493 i‡(++
L
->
nCˇŒs
 >
LUAI_MAXCCALLS
)

494 
	`°ackîr‹
(
L
);

495 i‡(!
	`luaD_¥eˇŒ
(
L
, 
func
, 
nResu…s
))

496 
	`luaV_execuã
(
L
);

497 
L
->
nCˇŒs
--;

498 
	}
}

504 
	$luaD_ˇŒnoyõld
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
nResu…s
) {

505 
L
->
¬y
++;

506 
	`luaD_ˇŒ
(
L
, 
func
, 
nResu…s
);

507 
L
->
¬y
--;

508 
	}
}

515 
	$föishCˇŒ
 (
lua_Sèã
 *
L
, 
°©us
) {

516 
CÆlInfo
 *
ci
 = 
L
->ci;

517 
n
;

519 
	`lua_as£π
(
ci
->
u
.
c
.
k
 !
NULL
 && 
L
->
¬y
 == 0);

521 
	`lua_as£π
((
ci
->
ˇŒ°©us
 & 
CIST_YPCALL
Ë|| 
°©us
 =
LUA_YIELD
);

522 i‡(
ci
->
ˇŒ°©us
 & 
CIST_YPCALL
) {

523 
ci
->
ˇŒ°©us
 &~
CIST_YPCALL
;

524 
L
->
îrfunc
 = 
ci
->
u
.
c
.
ﬁd_îrfunc
;

528 
	`adju°ªsu…s
(
L
, 
ci
->
ƒesu…s
);

530 
	`lua_u∆ock
(
L
);

531 
n
 = (*
ci
->
u
.
c
.
k
)(
L
, 
°©us
, ci->u.c.
˘x
);

532 
	`lua_lock
(
L
);

533 
	`≠i_check√Àms
(
L
, 
n
);

535 
	`luaD_posˇŒ
(
L
, 
ci
, L->
t›
 - 
n
,Ç);

536 
	}
}

547 
	$uƒﬁl
 (
lua_Sèã
 *
L
, *
ud
) {

548 i‡(
ud
 !
NULL
)

549 
	`föishCˇŒ
(
L
, *(*)
ud
);

550 
L
->
ci
 !&L->
ba£_ci
) {

551 i‡(!
	`isLua
(
L
->
ci
))

552 
	`föishCˇŒ
(
L
, 
LUA_YIELD
);

554 
	`luaV_föishOp
(
L
);

555 
	`luaV_execuã
(
L
);

558 
	}
}

565 
CÆlInfo
 *
	$födpˇŒ
 (
lua_Sèã
 *
L
) {

566 
CÆlInfo
 *
ci
;

567 
ci
 = 
L
->ci; cò!
NULL
; còci->
¥evious
) {

568 i‡(
ci
->
ˇŒ°©us
 & 
CIST_YPCALL
)

569  
ci
;

571  
NULL
;

572 
	}
}

580 
	$ªcovî
 (
lua_Sèã
 *
L
, 
°©us
) {

581 
StkId
 
ﬁdt›
;

582 
CÆlInfo
 *
ci
 = 
	`födpˇŒ
(
L
);

583 i‡(
ci
 =
NULL
)  0;

585 
ﬁdt›
 = 
	`ª°‹e°ack
(
L
, 
ci
->
exåa
);

586 
	`luaF_˛o£
(
L
, 
ﬁdt›
);

587 
	`£ãº‹obj
(
L
, 
°©us
, 
ﬁdt›
);

588 
L
->
ci
 = ci;

589 
L
->
Ælowhook
 = 
	`gëﬂh
(
ci
->
ˇŒ°©us
);

590 
L
->
¬y
 = 0;

591 
	`luaD_shrök°ack
(
L
);

592 
L
->
îrfunc
 = 
ci
->
u
.
c
.
ﬁd_îrfunc
;

594 
	}
}

602 
l_n‹ë
 
	$ªsume_îr‹
 (
lua_Sèã
 *
L
, c⁄° *
msg
, 
StkId
 
fú°Arg
) {

603 
L
->
t›
 = 
fú°Arg
;

604 
	`£tsvÆue2s
(
L
, L->
t›
, 
	`luaS_√w
(L, 
msg
));

605 
	`≠i_ö¸_t›
(
L
);

606 
	`luaD_throw
(
L
, -1);

607 
	}
}

617 
	$ªsume
 (
lua_Sèã
 *
L
, *
ud
) {

618 
nCˇŒs
 = 
L
->nCcalls;

619 
n
 = *(
	`ˇ°
(*, 
ud
));

620 
StkId
 
fú°Arg
 = 
L
->
t›
 - 
n
;

621 
CÆlInfo
 *
ci
 = 
L
->ci;

622 i‡(
nCˇŒs
 >
LUAI_MAXCCALLS
)

623 
	`ªsume_îr‹
(
L
, "C sèck ovîÊow", 
fú°Arg
);

624 i‡(
L
->
°©us
 =
LUA_OK
) {

625 i‡(
ci
 !&
L
->
ba£_ci
)

626 
	`ªsume_îr‹
(
L
, "ˇ¬ŸÑesumên⁄-su•íded c‹outöe", 
fú°Arg
);

628 i‡(!
	`luaD_¥eˇŒ
(
L
, 
fú°Arg
 - 1, 
LUA_MULTRET
))

629 
	`luaV_execuã
(
L
);

631 i‡(
L
->
°©us
 !
LUA_YIELD
)

632 
	`ªsume_îr‹
(
L
, "ˇ¬ŸÑesumêdód c‹outöe", 
fú°Arg
);

634 
L
->
°©us
 = 
LUA_OK
;

635 
ci
->
func
 = 
	`ª°‹e°ack
(
L
, ci->
exåa
);

636 i‡(
	`isLua
(
ci
))

637 
	`luaV_execuã
(
L
);

639 i‡(
ci
->
u
.
c
.
k
 !
NULL
) {

640 
	`lua_u∆ock
(
L
);

641 
n
 = (*
ci
->
u
.
c
.
k
)(
L
, 
LUA_YIELD
, ci->u.c.
˘x
);

642 
	`lua_lock
(
L
);

643 
	`≠i_check√Àms
(
L
, 
n
);

644 
fú°Arg
 = 
L
->
t›
 - 
n
;

646 
	`luaD_posˇŒ
(
L
, 
ci
, 
fú°Arg
, 
n
);

648 
	`uƒﬁl
(
L
, 
NULL
);

650 
	`lua_as£π
(
nCˇŒs
 =
L
->nCcalls);

651 
	}
}

654 
LUA_API
 
	$lua_ªsume
 (
lua_Sèã
 *
L
,Üua_Sèã *
‰om
, 
«rgs
) {

655 
°©us
;

656 
ﬁd¬y
 = 
L
->
¬y
;

657 
	`lua_lock
(
L
);

658 
	`luai_u£r°©îesume
(
L
, 
«rgs
);

659 
L
->
nCˇŒs
 = (
‰om
) ? from->nCcalls + 1 : 1;

660 
L
->
¬y
 = 0;

661 
	`≠i_check√Àms
(
L
, (L->
°©us
 =
LUA_OK
Ë? 
«rgs
 + 1 :Çargs);

662 
°©us
 = 
	`luaD_øwru≈rŸe˘ed
(
L
, 
ªsume
, &
«rgs
);

663 i‡(
°©us
 == -1)

664 
°©us
 = 
LUA_ERRRUN
;

666 
	`îr‹°©us
(
°©us
Ë&& 
	`ªcovî
(
L
, status)) {

668 
°©us
 = 
	`luaD_øwru≈rŸe˘ed
(
L
, 
uƒﬁl
, &status);

670 i‡(
	`îr‹°©us
(
°©us
)) {

671 
L
->
°©us
 = 
	`ˇ°_byã
(status);

672 
	`£ãº‹obj
(
L
, 
°©us
, L->
t›
);

673 
L
->
ci
->
t›
 = L->top;

675 
	`lua_as£π
(
°©us
 =
L
->status);

677 
L
->
¬y
 = 
ﬁd¬y
;

678 
L
->
nCˇŒs
--;

679 
	`lua_as£π
(
L
->
nCˇŒs
 =((
‰om
) ? from->nCcalls : 0));

680 
	`lua_u∆ock
(
L
);

681  
°©us
;

682 
	}
}

685 
LUA_API
 
	$lua_isyõldabÀ
 (
lua_Sèã
 *
L
) {

686  (
L
->
¬y
 == 0);

687 
	}
}

690 
LUA_API
 
	$lua_yõldk
 (
lua_Sèã
 *
L
, 
ƒesu…s
, 
lua_KC⁄ãxt
 
˘x
,

691 
lua_KFun˘i⁄
 
k
) {

692 
CÆlInfo
 *
ci
 = 
L
->ci;

693 
	`luai_u£r°©eyõld
(
L
, 
ƒesu…s
);

694 
	`lua_lock
(
L
);

695 
	`≠i_check√Àms
(
L
, 
ƒesu…s
);

696 i‡(
L
->
¬y
 > 0) {

697 i‡(
L
 !
	`G
(L)->
maöthªad
)

698 
	`luaG_ru√º‹
(
L
, "attemptÅo yieldácrossá C-call boundary");

700 
	`luaG_ru√º‹
(
L
, "attemptÅo yield from outsideá coroutine");

702 
L
->
°©us
 = 
LUA_YIELD
;

703 
ci
->
exåa
 = 
	`ßve°ack
(
L
, ci->
func
);

704 i‡(
	`isLua
(
ci
)) {

705 
	`≠i_check
(
L
, 
k
 =
NULL
, "hooks cannot continueáfter yielding");

708 i‡((
ci
->
u
.
c
.
k
 = kË!
NULL
)

709 
ci
->
u
.
c
.
˘x
 = ctx;

710 
ci
->
func
 = 
L
->
t›
 - 
ƒesu…s
 - 1;

711 
	`luaD_throw
(
L
, 
LUA_YIELD
);

713 
	`lua_as£π
(
ci
->
ˇŒ°©us
 & 
CIST_HOOKED
);

714 
	`lua_u∆ock
(
L
);

716 
	}
}

719 
	$luaD_pˇŒ
 (
lua_Sèã
 *
L
, 
Pfunc
 
func
, *
u
,

720 
±rdiff_t
 
ﬁd_t›
,Öådiff_à
ef
) {

721 
°©us
;

722 
CÆlInfo
 *
ﬁd_ci
 = 
L
->
ci
;

723 
lu_byã
 
ﬁd_Ælowhooks
 = 
L
->
Ælowhook
;

724 
ﬁd_¬y
 = 
L
->
¬y
;

725 
±rdiff_t
 
ﬁd_îrfunc
 = 
L
->
îrfunc
;

726 
L
->
îrfunc
 = 
ef
;

727 
°©us
 = 
	`luaD_øwru≈rŸe˘ed
(
L
, 
func
, 
u
);

728 i‡(
°©us
 !
LUA_OK
) {

729 
StkId
 
ﬁdt›
 = 
	`ª°‹e°ack
(
L
, 
ﬁd_t›
);

730 
	`luaF_˛o£
(
L
, 
ﬁdt›
);

731 
	`£ãº‹obj
(
L
, 
°©us
, 
ﬁdt›
);

732 
L
->
ci
 = 
ﬁd_ci
;

733 
L
->
Ælowhook
 = 
ﬁd_Ælowhooks
;

734 
L
->
¬y
 = 
ﬁd_¬y
;

735 
	`luaD_shrök°ack
(
L
);

737 
L
->
îrfunc
 = 
ﬁd_îrfunc
;

738  
°©us
;

739 
	}
}

746 
	sSP¨£r
 {

747 
ZIO
 *
	mz
;

748 
Mbuf„r
 
	mbuff
;

749 
Dynd©a
 
	mdyd
;

750 c⁄° *
	mmode
;

751 c⁄° *
	m«me
;

755 
	$checkmode
 (
lua_Sèã
 *
L
, c⁄° *
mode
, c⁄° *
x
) {

756 i‡(
mode
 && 
	`°rchr
(mode, 
x
[0]Ë=
NULL
) {

757 
	`luaO_pushf°rög
(
L
,

758 "©ãm±Åÿlﬂdá %†chunk (modêi†'%s')", 
x
, 
mode
);

759 
	`luaD_throw
(
L
, 
LUA_ERRSYNTAX
);

761 
	}
}

764 
	$f_∑r£r
 (
lua_Sèã
 *
L
, *
ud
) {

765 
LClosuª
 *
˛
;

766 
SP¨£r
 *
p
 = 
	`ˇ°
(SP¨£∏*, 
ud
);

767 
c
 = 
	`zgëc
(
p
->
z
);

768 i‡(
c
 =
LUA_SIGNATURE
[0]) {

769 
	`checkmode
(
L
, 
p
->
mode
, "binary");

770 
˛
 = 
	`luaU_undump
(
L
, 
p
->
z
,Ö->
«me
);

773 
	`checkmode
(
L
, 
p
->
mode
, "text");

774 
˛
 = 
	`luaY_∑r£r
(
L
, 
p
->
z
, &p->
buff
, &p->
dyd
,Ö->
«me
, 
c
);

776 
	`lua_as£π
(
˛
->
nupvÆues
 =˛->
p
->
sizeupvÆues
);

777 
	`luaF_öôupvÆs
(
L
, 
˛
);

778 
	}
}

781 
	$luaD_¥Ÿe˘ed∑r£r
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, c⁄° *
«me
,

782 c⁄° *
mode
) {

783 
SP¨£r
 
p
;

784 
°©us
;

785 
L
->
¬y
++;

786 
p
.
z
 = z;Ö.
«me
 =Çame;Ö.
mode
 = mode;

787 
p
.
dyd
.
a˘v¨
.
¨r
 = 
NULL
;Ö.dyd.a˘v¨.
size
 = 0;

788 
p
.
dyd
.
gt
.
¨r
 = 
NULL
;Ö.dyd.gt.
size
 = 0;

789 
p
.
dyd
.
œbñ
.
¨r
 = 
NULL
;Ö.dyd.œbñ.
size
 = 0;

790 
	`luaZ_öôbuf„r
(
L
, &
p
.
buff
);

791 
°©us
 = 
	`luaD_pˇŒ
(
L
, 
f_∑r£r
, &
p
, 
	`ßve°ack
(L, L->
t›
), L->
îrfunc
);

792 
	`luaZ_‰ìbuf„r
(
L
, &
p
.
buff
);

793 
	`luaM_‰ì¨øy
(
L
, 
p
.
dyd
.
a˘v¨
.
¨r
,Ö.dyd.a˘v¨.
size
);

794 
	`luaM_‰ì¨øy
(
L
, 
p
.
dyd
.
gt
.
¨r
,Ö.dyd.gt.
size
);

795 
	`luaM_‰ì¨øy
(
L
, 
p
.
dyd
.
œbñ
.
¨r
,Ö.dyd.œbñ.
size
);

796 
L
->
¬y
--;

797  
°©us
;

798 
	}
}

	@lua/src/ldo.h

7 #i‚de‡
ldo_h


8 
	#ldo_h


	)

11 
	~"lobje˘.h
"

12 
	~"l°©e.h
"

13 
	~"lzio.h
"

23 
	#luaD_check°ackaux
(
L
,
n
,
¥e
,
pos
) \

24 i‡(
L
->
°ack_œ°
 - L->
t›
 <(
n
)) \

25 { 
¥e
; 
	`luaD_grow°ack
(
L
, 
n
); 
pos
; } { 
	`c⁄dmove°ack
(L,¥e,pos); }

	)

28 
	#luaD_check°ack
(
L
,
n
Ë
	`luaD_check°ackaux
(L,n,()0,()0)

	)

32 
	#ßve°ack
(
L
,
p
Ë((*)’Ë- (*)L->
°ack
)

	)

33 
	#ª°‹e°ack
(
L
,
n
Ë((
TVÆue
 *)((*)L->
°ack
 + (n)))

	)

37 (*
	tPfunc
Ë(
	tlua_Sèã
 *
	tL
, *
	tud
);

39 
LUAI_FUNC
 
	`luaD_¥Ÿe˘ed∑r£r
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, c⁄° *
«me
,

40 c⁄° *
mode
);

41 
LUAI_FUNC
 
	`luaD_hook
 (
lua_Sèã
 *
L
, 
evít
, 
löe
);

42 
LUAI_FUNC
 
	`luaD_¥eˇŒ
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
ƒesu…s
);

43 
LUAI_FUNC
 
	`luaD_ˇŒ
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
nResu…s
);

44 
LUAI_FUNC
 
	`luaD_ˇŒnoyõld
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
nResu…s
);

45 
LUAI_FUNC
 
	`luaD_pˇŒ
 (
lua_Sèã
 *
L
, 
Pfunc
 
func
, *
u
,

46 
±rdiff_t
 
ﬁdt›
,Öådiff_à
ef
);

47 
LUAI_FUNC
 
	`luaD_posˇŒ
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
, 
StkId
 
fú°Resu…
,

48 
ƒes
);

49 
LUAI_FUNC
 
	`luaD_ªÆloc°ack
 (
lua_Sèã
 *
L
, 
√wsize
);

50 
LUAI_FUNC
 
	`luaD_grow°ack
 (
lua_Sèã
 *
L
, 
n
);

51 
LUAI_FUNC
 
	`luaD_shrök°ack
 (
lua_Sèã
 *
L
);

52 
LUAI_FUNC
 
	`luaD_ö˘›
 (
lua_Sèã
 *
L
);

54 
LUAI_FUNC
 
l_n‹ë
 
	`luaD_throw
 (
lua_Sèã
 *
L
, 
îrcode
);

55 
LUAI_FUNC
 
	`luaD_øwru≈rŸe˘ed
 (
lua_Sèã
 *
L
, 
Pfunc
 
f
, *
ud
);

	@lua/src/ldump.c

7 
	#ldump_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°ddef.h
>

15 
	~"lua.h
"

17 
	~"lobje˘.h
"

18 
	~"l°©e.h
"

19 
	~"lundump.h
"

23 
lua_Sèã
 *
	mL
;

24 
lua_Wrôî
 
	mwrôî
;

25 *
	md©a
;

26 
	m°rù
;

27 
	m°©us
;

28 } 
	tDumpSèã
;

35 
	#DumpVe˘‹
(
v
,
n
,
D
Ë
	`DumpBlock
(v,“)*((v)[0]),D)

	)

37 
	#DumpLôîÆ
(
s
,
D
Ë
	`DumpBlock
(s, (sË- (), D)

	)

40 
	$DumpBlock
 (c⁄° *
b
, 
size_t
 
size
, 
DumpSèã
 *
D
) {

41 i‡(
D
->
°©us
 =0 && 
size
 > 0) {

42 
	`lua_u∆ock
(
D
->
L
);

43 
D
->
°©us
 = (*D->
wrôî
)(D->
L
, 
b
, 
size
, D->
d©a
);

44 
	`lua_lock
(
D
->
L
);

46 
	}
}

49 
	#DumpV¨
(
x
,
D
Ë
	`DumpVe˘‹
(&x,1,D)

	)

52 
	$DumpByã
 (
y
, 
DumpSèã
 *
D
) {

53 
lu_byã
 
x
 = (lu_byã)
y
;

54 
	`DumpV¨
(
x
, 
D
);

55 
	}
}

58 
	$DumpI¡
 (
x
, 
DumpSèã
 *
D
) {

59 
	`DumpV¨
(
x
, 
D
);

60 
	}
}

63 
	$DumpNumbî
 (
lua_Numbî
 
x
, 
DumpSèã
 *
D
) {

64 
	`DumpV¨
(
x
, 
D
);

65 
	}
}

68 
	$DumpI¡egî
 (
lua_I¡egî
 
x
, 
DumpSèã
 *
D
) {

69 
	`DumpV¨
(
x
, 
D
);

70 
	}
}

73 
	$DumpSåög
 (c⁄° 
TSåög
 *
s
, 
DumpSèã
 *
D
) {

74 i‡(
s
 =
NULL
)

75 
	`DumpByã
(0, 
D
);

77 
size_t
 
size
 = 
	`ts¶í
(
s
) + 1;

78 c⁄° *
°r
 = 
	`gë°r
(
s
);

79 i‡(
size
 < 0xFF)

80 
	`DumpByã
(
	`ˇ°_öt
(
size
), 
D
);

82 
	`DumpByã
(0xFF, 
D
);

83 
	`DumpV¨
(
size
, 
D
);

85 
	`DumpVe˘‹
(
°r
, 
size
 - 1, 
D
);

87 
	}
}

90 
	$DumpCode
 (c⁄° 
PrŸo
 *
f
, 
DumpSèã
 *
D
) {

91 
	`DumpI¡
(
f
->
sizecode
, 
D
);

92 
	`DumpVe˘‹
(
f
->
code
, f->
sizecode
, 
D
);

93 
	}
}

96 
DumpFun˘i⁄
(c⁄° 
PrŸo
 *
f
, 
TSåög
 *
psour˚
, 
DumpSèã
 *
D
);

98 
	$DumpC⁄°™ts
 (c⁄° 
PrŸo
 *
f
, 
DumpSèã
 *
D
) {

99 
i
;

100 
n
 = 
f
->
sizek
;

101 
	`DumpI¡
(
n
, 
D
);

102 
i
 = 0; i < 
n
; i++) {

103 c⁄° 
TVÆue
 *
o
 = &
f
->
k
[
i
];

104 
	`DumpByã
(
	`ây≥
(
o
), 
D
);

105 
	`ây≥
(
o
)) {

106 
LUA_TNIL
:

108 
LUA_TBOOLEAN
:

109 
	`DumpByã
(
	`bvÆue
(
o
), 
D
);

111 
LUA_TNUMFLT
:

112 
	`DumpNumbî
(
	`ÊtvÆue
(
o
), 
D
);

114 
LUA_TNUMINT
:

115 
	`DumpI¡egî
(
	`ivÆue
(
o
), 
D
);

117 
LUA_TSHRSTR
:

118 
LUA_TLNGSTR
:

119 
	`DumpSåög
(
	`tsvÆue
(
o
), 
D
);

122 
	`lua_as£π
(0);

125 
	}
}

128 
	$DumpPrŸos
 (c⁄° 
PrŸo
 *
f
, 
DumpSèã
 *
D
) {

129 
i
;

130 
n
 = 
f
->
sizï
;

131 
	`DumpI¡
(
n
, 
D
);

132 
i
 = 0; i < 
n
; i++)

133 
	`DumpFun˘i⁄
(
f
->
p
[
i
], f->
sour˚
, 
D
);

134 
	}
}

137 
	$DumpUpvÆues
 (c⁄° 
PrŸo
 *
f
, 
DumpSèã
 *
D
) {

138 
i
, 
n
 = 
f
->
sizeupvÆues
;

139 
	`DumpI¡
(
n
, 
D
);

140 
i
 = 0; i < 
n
; i++) {

141 
	`DumpByã
(
f
->
upvÆues
[
i
].
ö°ack
, 
D
);

142 
	`DumpByã
(
f
->
upvÆues
[
i
].
idx
, 
D
);

144 
	}
}

147 
	$DumpDebug
 (c⁄° 
PrŸo
 *
f
, 
DumpSèã
 *
D
) {

148 
i
, 
n
;

149 
n
 = (
D
->
°rù
Ë? 0 : 
f
->
sizñöeöfo
;

150 
	`DumpI¡
(
n
, 
D
);

151 
	`DumpVe˘‹
(
f
->
löeöfo
, 
n
, 
D
);

152 
n
 = (
D
->
°rù
Ë? 0 : 
f
->
sizñocv¨s
;

153 
	`DumpI¡
(
n
, 
D
);

154 
i
 = 0; i < 
n
; i++) {

155 
	`DumpSåög
(
f
->
locv¨s
[
i
].
v¨«me
, 
D
);

156 
	`DumpI¡
(
f
->
locv¨s
[
i
].
°¨çc
, 
D
);

157 
	`DumpI¡
(
f
->
locv¨s
[
i
].
ídpc
, 
D
);

159 
n
 = (
D
->
°rù
Ë? 0 : 
f
->
sizeupvÆues
;

160 
	`DumpI¡
(
n
, 
D
);

161 
i
 = 0; i < 
n
; i++)

162 
	`DumpSåög
(
f
->
upvÆues
[
i
].
«me
, 
D
);

163 
	}
}

166 
	$DumpFun˘i⁄
 (c⁄° 
PrŸo
 *
f
, 
TSåög
 *
psour˚
, 
DumpSèã
 *
D
) {

167 i‡(
D
->
°rù
 || 
f
->
sour˚
 =
psour˚
)

168 
	`DumpSåög
(
NULL
, 
D
);

170 
	`DumpSåög
(
f
->
sour˚
, 
D
);

171 
	`DumpI¡
(
f
->
löedeföed
, 
D
);

172 
	`DumpI¡
(
f
->
œ°löedeföed
, 
D
);

173 
	`DumpByã
(
f
->
num∑øms
, 
D
);

174 
	`DumpByã
(
f
->
is_v¨¨g
, 
D
);

175 
	`DumpByã
(
f
->
max°acksize
, 
D
);

176 
	`DumpCode
(
f
, 
D
);

177 
	`DumpC⁄°™ts
(
f
, 
D
);

178 
	`DumpUpvÆues
(
f
, 
D
);

179 
	`DumpPrŸos
(
f
, 
D
);

180 
	`DumpDebug
(
f
, 
D
);

181 
	}
}

184 
	$DumpHódî
 (
DumpSèã
 *
D
) {

185 
	`DumpLôîÆ
(
LUA_SIGNATURE
, 
D
);

186 
	`DumpByã
(
LUAC_VERSION
, 
D
);

187 
	`DumpByã
(
LUAC_FORMAT
, 
D
);

188 
	`DumpLôîÆ
(
LUAC_DATA
, 
D
);

189 
	`DumpByã
((), 
D
);

190 
	`DumpByã
((
size_t
), 
D
);

191 
	`DumpByã
((
In°ru˘i⁄
), 
D
);

192 
	`DumpByã
((
lua_I¡egî
), 
D
);

193 
	`DumpByã
((
lua_Numbî
), 
D
);

194 
	`DumpI¡egî
(
LUAC_INT
, 
D
);

195 
	`DumpNumbî
(
LUAC_NUM
, 
D
);

196 
	}
}

202 
	$luaU_dump
(
lua_Sèã
 *
L
, c⁄° 
PrŸo
 *
f
, 
lua_Wrôî
 
w
, *
d©a
,

203 
°rù
) {

204 
DumpSèã
 
D
;

205 
D
.
L
 = L;

206 
D
.
wrôî
 = 
w
;

207 
D
.
d©a
 = data;

208 
D
.
°rù
 = strip;

209 
D
.
°©us
 = 0;

210 
	`DumpHódî
(&
D
);

211 
	`DumpByã
(
f
->
sizeupvÆues
, &
D
);

212 
	`DumpFun˘i⁄
(
f
, 
NULL
, &
D
);

213  
D
.
°©us
;

214 
	}
}

	@lua/src/lfunc.c

7 
	#lfunc_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°ddef.h
>

15 
	~"lua.h
"

17 
	~"lfunc.h
"

18 
	~"lgc.h
"

19 
	~"lmem.h
"

20 
	~"lobje˘.h
"

21 
	~"l°©e.h
"

25 
CClosuª
 *
	$luaF_√wC˛osuª
 (
lua_Sèã
 *
L
, 
n
) {

26 
GCObje˘
 *
o
 = 
	`luaC_√wobj
(
L
, 
LUA_TCCL
, 
	`sizeC˛osuª
(
n
));

27 
CClosuª
 *
c
 = 
	`gco2c˛
(
o
);

28 
c
->
nupvÆues
 = 
	`ˇ°_byã
(
n
);

29  
c
;

30 
	}
}

33 
LClosuª
 *
	$luaF_√wL˛osuª
 (
lua_Sèã
 *
L
, 
n
) {

34 
GCObje˘
 *
o
 = 
	`luaC_√wobj
(
L
, 
LUA_TLCL
, 
	`sizeL˛osuª
(
n
));

35 
LClosuª
 *
c
 = 
	`gco2l˛
(
o
);

36 
c
->
p
 = 
NULL
;

37 
c
->
nupvÆues
 = 
	`ˇ°_byã
(
n
);

38 
n
--Ë
c
->
upvÆs
[n] = 
NULL
;

39  
c
;

40 
	}
}

45 
	$luaF_öôupvÆs
 (
lua_Sèã
 *
L
, 
LClosuª
 *
˛
) {

46 
i
;

47 
i
 = 0; i < 
˛
->
nupvÆues
; i++) {

48 
UpVÆ
 *
uv
 = 
	`luaM_√w
(
L
, UpVal);

49 
uv
->
ªfcou¡
 = 1;

50 
uv
->
v
 = &uv->
u
.
vÆue
;

51 
	`£äûvÆue
(
uv
->
v
);

52 
˛
->
upvÆs
[
i
] = 
uv
;

54 
	}
}

57 
UpVÆ
 *
	$luaF_födupvÆ
 (
lua_Sèã
 *
L
, 
StkId
 
Àvñ
) {

58 
UpVÆ
 **
µ
 = &
L
->
›íupvÆ
;

59 
UpVÆ
 *
p
;

60 
UpVÆ
 *
uv
;

61 
	`lua_as£π
(
	`isötwups
(
L
Ë|| L->
›íupvÆ
 =
NULL
);

62 *
µ
 !
NULL
 && (
p
 = *µ)->
v
 >
Àvñ
) {

63 
	`lua_as£π
(
	`upis›í
(
p
));

64 i‡(
p
->
v
 =
Àvñ
)

65  
p
;

66 
µ
 = &
p
->
u
.
›í
.
√xt
;

69 
uv
 = 
	`luaM_√w
(
L
, 
UpVÆ
);

70 
uv
->
ªfcou¡
 = 0;

71 
uv
->
u
.
›í
.
√xt
 = *
µ
;

72 
uv
->
u
.
›í
.
touched
 = 1;

73 *
µ
 = 
uv
;

74 
uv
->
v
 = 
Àvñ
;

75 i‡(!
	`isötwups
(
L
)) {

76 
L
->
twups
 = 
	`G
(L)->twups;

77 
	`G
(
L
)->
twups
 = L;

79  
uv
;

80 
	}
}

83 
	$luaF_˛o£
 (
lua_Sèã
 *
L
, 
StkId
 
Àvñ
) {

84 
UpVÆ
 *
uv
;

85 
L
->
›íupvÆ
 !
NULL
 && (
uv
 = L->›íupvÆ)->
v
 >
Àvñ
) {

86 
	`lua_as£π
(
	`upis›í
(
uv
));

87 
L
->
›íupvÆ
 = 
uv
->
u
.
›í
.
√xt
;

88 i‡(
uv
->
ªfcou¡
 == 0)

89 
	`luaM_‰ì
(
L
, 
uv
);

91 
	`£tobj
(
L
, &
uv
->
u
.
vÆue
, uv->
v
);

92 
uv
->
v
 = &uv->
u
.
vÆue
;

93 
	`luaC_upvÆb¨rõr
(
L
, 
uv
);

96 
	}
}

99 
PrŸo
 *
	$luaF_√w¥Ÿo
 (
lua_Sèã
 *
L
) {

100 
GCObje˘
 *
o
 = 
	`luaC_√wobj
(
L
, 
LUA_TPROTO
, (
PrŸo
));

101 
PrŸo
 *
f
 = 
	`gco2p
(
o
);

102 
f
->
k
 = 
NULL
;

103 
f
->
sizek
 = 0;

104 
f
->
p
 = 
NULL
;

105 
f
->
sizï
 = 0;

106 
f
->
code
 = 
NULL
;

107 
f
->
ˇche
 = 
NULL
;

108 
f
->
sizecode
 = 0;

109 
f
->
löeöfo
 = 
NULL
;

110 
f
->
sizñöeöfo
 = 0;

111 
f
->
upvÆues
 = 
NULL
;

112 
f
->
sizeupvÆues
 = 0;

113 
f
->
num∑øms
 = 0;

114 
f
->
is_v¨¨g
 = 0;

115 
f
->
max°acksize
 = 0;

116 
f
->
locv¨s
 = 
NULL
;

117 
f
->
sizñocv¨s
 = 0;

118 
f
->
löedeföed
 = 0;

119 
f
->
œ°löedeföed
 = 0;

120 
f
->
sour˚
 = 
NULL
;

121  
f
;

122 
	}
}

125 
	$luaF_‰ì¥Ÿo
 (
lua_Sèã
 *
L
, 
PrŸo
 *
f
) {

126 
	`luaM_‰ì¨øy
(
L
, 
f
->
code
, f->
sizecode
);

127 
	`luaM_‰ì¨øy
(
L
, 
f
->
p
, f->
sizï
);

128 
	`luaM_‰ì¨øy
(
L
, 
f
->
k
, f->
sizek
);

129 
	`luaM_‰ì¨øy
(
L
, 
f
->
löeöfo
, f->
sizñöeöfo
);

130 
	`luaM_‰ì¨øy
(
L
, 
f
->
locv¨s
, f->
sizñocv¨s
);

131 
	`luaM_‰ì¨øy
(
L
, 
f
->
upvÆues
, f->
sizeupvÆues
);

132 
	`luaM_‰ì
(
L
, 
f
);

133 
	}
}

140 c⁄° *
	$luaF_gëloˇ ame
 (c⁄° 
PrŸo
 *
f
, 
loˇl_numbî
, 
pc
) {

141 
i
;

142 
i
 = 0; i<
f
->
sizñocv¨s
 && f->
locv¨s
[i].
°¨çc
 <
pc
; i++) {

143 i‡(
pc
 < 
f
->
locv¨s
[
i
].
ídpc
) {

144 
loˇl_numbî
--;

145 i‡(
loˇl_numbî
 == 0)

146  
	`gë°r
(
f
->
locv¨s
[
i
].
v¨«me
);

149  
NULL
;

150 
	}
}

	@lua/src/lfunc.h

7 #i‚de‡
lfunc_h


8 
	#lfunc_h


	)

11 
	~"lobje˘.h
"

14 
	#sizeC˛osuª
(
n
Ë(
	`ˇ°
(, (
CClosuª
)) + \

15 
	`ˇ°
(, (
TVÆue
)*((
n
)-1)))

	)

17 
	#sizeL˛osuª
(
n
Ë(
	`ˇ°
(, (
LClosuª
)) + \

18 
	`ˇ°
(, (
TVÆue
 *)*((
n
)-1)))

	)

22 
	#isötwups
(
L
Ë(L->
twups
 !L)

	)

29 
	#MAXUPVAL
 255

	)

35 
	sUpVÆ
 {

36 
TVÆue
 *
	mv
;

37 
lu_mem
 
	mªfcou¡
;

40 
UpVÆ
 *
	m√xt
;

41 
	mtouched
;

42 } 
	m›í
;

43 
TVÆue
 
	mvÆue
;

44 } 
	mu
;

47 
	#upis›í
(
up
Ë((up)->
v
 !&(up)->
u
.
vÆue
)

	)

50 
LUAI_FUNC
 
PrŸo
 *
luaF_√w¥Ÿo
 (
lua_Sèã
 *
L
);

51 
LUAI_FUNC
 
CClosuª
 *
luaF_√wC˛osuª
 (
lua_Sèã
 *
L
, 
√Àms
);

52 
LUAI_FUNC
 
LClosuª
 *
luaF_√wL˛osuª
 (
lua_Sèã
 *
L
, 
√Àms
);

53 
LUAI_FUNC
 
luaF_öôupvÆs
 (
lua_Sèã
 *
L
, 
LClosuª
 *
˛
);

54 
LUAI_FUNC
 
UpVÆ
 *
luaF_födupvÆ
 (
lua_Sèã
 *
L
, 
StkId
 
Àvñ
);

55 
LUAI_FUNC
 
luaF_˛o£
 (
lua_Sèã
 *
L
, 
StkId
 
Àvñ
);

56 
LUAI_FUNC
 
luaF_‰ì¥Ÿo
 (
lua_Sèã
 *
L
, 
PrŸo
 *
f
);

57 
LUAI_FUNC
 c⁄° *
luaF_gëloˇ ame
 (c⁄° 
PrŸo
 *
func
, 
loˇl_numbî
,

58 
pc
);

	@lua/src/lgc.c

7 
	#lgc_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"ldebug.h
"

18 
	~"ldo.h
"

19 
	~"lfunc.h
"

20 
	~"lgc.h
"

21 
	~"lmem.h
"

22 
	~"lobje˘.h
"

23 
	~"l°©e.h
"

24 
	~"l°rög.h
"

25 
	~"…abÀ.h
"

26 
	~"…m.h
"

33 
	#GCSösidótomic
 (
GCS∑u£
 + 1)

	)

39 
	#GCSWEEPCOST
 (((
TSåög
Ë+ 4Ë/ 4)

	)

42 
	#GCSWEEPMAX
 (
	`ˇ°_öt
((
GCSTEPSIZE
 / 
GCSWEEPCOST
Ë/ 4))

	)

45 
	#GCFINALIZECOST
 
GCSWEEPCOST


	)

52 
	#STEPMULADJ
 200

	)

59 
	#PAUSEADJ
 100

	)

66 
	#maskcﬁ‹s
 (~(
	`bômask
(
BLACKBIT
Ë| 
WHITEBITS
))

	)

67 
	#makewhôe
(
g
,
x
) \

68 (
x
->
m¨ked
 = 
	`ˇ°_byã
((x->m¨ked & 
maskcﬁ‹s
Ë| 
	`luaC_whôe
(
g
)))

	)

70 
	#whôe2gøy
(
x
Ë
	`ª£tbôs
(x->
m¨ked
, 
WHITEBITS
)

	)

71 
	#bœck2gøy
(
x
Ë
	`ª£tbô
(x->
m¨ked
, 
BLACKBIT
)

	)

74 
	#vÆiswhôe
(
x
Ë(
	`iscﬁÀ˘abÀ
(xË&& 
	`iswhôe
(
	`gcvÆue
(x)))

	)

76 
	#checkdódkey
(
n
Ë
	`lua_as£π
(!
	`âisdódkey
(
	`gkey
“)Ë|| 
	`âi¢û
(
	`gvÆ
“)))

	)

79 
	#checkc⁄si°ícy
(
obj
) \

80 
	`lua_l⁄gas£π
(!
	`iscﬁÀ˘abÀ
(
obj
Ë|| 
	`righât
(obj))

	)

83 
	#m¨kvÆue
(
g
,
o
Ë{ 
	`checkc⁄si°ícy
(o); \

84 i‡(
	`vÆiswhôe
(
o
)Ë
	`ªÆlym¨kobje˘
(
g
,
	`gcvÆue
(o)); }

	)

86 
	#m¨kobje˘
(
g
,
t
Ë{ i‡(
	`iswhôe
—)Ë
	`ªÆlym¨kobje˘
(g, 
	`obj2gco
—)); }

	)

92 
	#m¨kobje˘N
(
g
,
t
Ë{ i‡—Ë
	`m¨kobje˘
(g,t); }

	)

94 
ªÆlym¨kobje˘
 (
globÆ_Sèã
 *
g
, 
GCObje˘
 *
o
);

107 
	#gnodña°
(
h
Ë
	`gnode
(h, 
	`ˇ°
(
size_t
, 
	`sizíode
(h)))

	)

113 
	#lökg˛i°
(
o
,
p
Ë((o)->
g˛i°
 = (p), (pË
	`obj2gco
(o))

	)

125 
	$ªmovì¡ry
 (
Node
 *
n
) {

126 
	`lua_as£π
(
	`âi¢û
(
	`gvÆ
(
n
)));

127 i‡(
	`vÆiswhôe
(
	`gkey
(
n
)))

128 
	`£tdódvÆue
(
	`wgkey
(
n
));

129 
	}
}

139 
	$is˛óªd
 (
globÆ_Sèã
 *
g
, c⁄° 
TVÆue
 *
o
) {

140 i‡(!
	`iscﬁÀ˘abÀ
(
o
))  0;

141 i‡(
	`âis°rög
(
o
)) {

142 
	`m¨kobje˘
(
g
, 
	`tsvÆue
(
o
));

145  
	`iswhôe
(
	`gcvÆue
(
o
));

146 
	}
}

155 
	$luaC_b¨rõr_
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
, GCObje˘ *
v
) {

156 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

157 
	`lua_as£π
(
	`isbœck
(
o
Ë&& 
	`iswhôe
(
v
Ë&& !
	`isdód
(
g
, v) && !isdead(g, o));

158 i‡(
	`kìpöv¨ü¡
(
g
))

159 
	`ªÆlym¨kobje˘
(
g
, 
v
);

161 
	`lua_as£π
(
	`isswìµha£
(
g
));

162 
	`makewhôe
(
g
, 
o
);

164 
	}
}

171 
	$luaC_b¨rõrback_
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
) {

172 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

173 
	`lua_as£π
(
	`isbœck
(
t
Ë&& !
	`isdód
(
g
,Å));

174 
	`bœck2gøy
(
t
);

175 
	`lökg˛i°
(
t
, 
g
->
gøyagaö
);

176 
	}
}

185 
	$luaC_upvÆb¨rõr_
 (
lua_Sèã
 *
L
, 
UpVÆ
 *
uv
) {

186 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

187 
GCObje˘
 *
o
 = 
	`gcvÆue
(
uv
->
v
);

188 
	`lua_as£π
(!
	`upis›í
(
uv
));

189 i‡(
	`kìpöv¨ü¡
(
g
))

190 
	`m¨kobje˘
(
g
, 
o
);

191 
	}
}

194 
	$luaC_fix
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
) {

195 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

196 
	`lua_as£π
(
g
->
Ælgc
 =
o
);

197 
	`whôe2gøy
(
o
);

198 
g
->
Ælgc
 = 
o
->
√xt
;

199 
o
->
√xt
 = 
g
->
fixedgc
;

200 
g
->
fixedgc
 = 
o
;

201 
	}
}

208 
GCObje˘
 *
	$luaC_√wobj
 (
lua_Sèã
 *
L
, 
â
, 
size_t
 
sz
) {

209 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

210 
GCObje˘
 *
o
 = 
	`ˇ°
(GCObje˘ *, 
	`luaM_√wobje˘
(
L
, 
	`nov¨ü¡
(
â
), 
sz
));

211 
o
->
m¨ked
 = 
	`luaC_whôe
(
g
);

212 
o
->
â
 =Åt;

213 
o
->
√xt
 = 
g
->
Ælgc
;

214 
g
->
Ælgc
 = 
o
;

215  
o
;

216 
	}
}

235 
	$ªÆlym¨kobje˘
 (
globÆ_Sèã
 *
g
, 
GCObje˘
 *
o
) {

236 
ªíåy
:

237 
	`whôe2gøy
(
o
);

238 
o
->
â
) {

239 
LUA_TSHRSTR
: {

240 
	`gøy2bœck
(
o
);

241 
g
->
GCmemåav
 +
	`sizñ°rög
(
	`gco2ts
(
o
)->
shæí
);

244 
LUA_TLNGSTR
: {

245 
	`gøy2bœck
(
o
);

246 
g
->
GCmemåav
 +
	`sizñ°rög
(
	`gco2ts
(
o
)->
u
.
 gÀn
);

249 
LUA_TUSERDATA
: {

250 
TVÆue
 
uvÆue
;

251 
	`m¨kobje˘N
(
g
, 
	`gco2u
(
o
)->
më©abÀ
);

252 
	`gøy2bœck
(
o
);

253 
g
->
GCmemåav
 +
	`sizeud©a
(
	`gco2u
(
o
));

254 
	`gëu£rvÆue
(
g
->
maöthªad
, 
	`gco2u
(
o
), &
uvÆue
);

255 i‡(
	`vÆiswhôe
(&
uvÆue
)) {

256 
o
 = 
	`gcvÆue
(&
uvÆue
);

257 
ªíåy
;

261 
LUA_TLCL
: {

262 
	`lökg˛i°
(
	`gco2l˛
(
o
), 
g
->
gøy
);

265 
LUA_TCCL
: {

266 
	`lökg˛i°
(
	`gco2c˛
(
o
), 
g
->
gøy
);

269 
LUA_TTABLE
: {

270 
	`lökg˛i°
(
	`gco2t
(
o
), 
g
->
gøy
);

273 
LUA_TTHREAD
: {

274 
	`lökg˛i°
(
	`gco2th
(
o
), 
g
->
gøy
);

277 
LUA_TPROTO
: {

278 
	`lökg˛i°
(
	`gco2p
(
o
), 
g
->
gøy
);

281 : 
	`lua_as£π
(0); ;

283 
	}
}

289 
	$m¨kmt
 (
globÆ_Sèã
 *
g
) {

290 
i
;

291 
i
=0; i < 
LUA_NUMTAGS
; i++)

292 
	`m¨kobje˘N
(
g
, g->
mt
[
i
]);

293 
	}
}

299 
	$m¨kbeög‚z
 (
globÆ_Sèã
 *
g
) {

300 
GCObje˘
 *
o
;

301 
o
 = 
g
->
tobe‚z
; o !
NULL
; o = o->
√xt
)

302 
	`m¨kobje˘
(
g
, 
o
);

303 
	}
}

312 
	$ªm¨kupvÆs
 (
globÆ_Sèã
 *
g
) {

313 
lua_Sèã
 *
thªad
;

314 
lua_Sèã
 **
p
 = &
g
->
twups
;

315 (
thªad
 = *
p
Ë!
NULL
) {

316 
	`lua_as£π
(!
	`isbœck
(
thªad
));

317 i‡(
	`isgøy
(
thªad
Ë&&Åhªad->
›íupvÆ
 !
NULL
)

318 
p
 = &
thªad
->
twups
;

320 
UpVÆ
 *
uv
;

321 *
p
 = 
thªad
->
twups
;

322 
thªad
->
twups
 =Åhread;

323 
uv
 = 
thªad
->
›íupvÆ
; uv !
NULL
; uv = uv->
u
.
›í
.
√xt
) {

324 i‡(
uv
->
u
.
›í
.
touched
) {

325 
	`m¨kvÆue
(
g
, 
uv
->
v
);

326 
uv
->
u
.
›í
.
touched
 = 0;

331 
	}
}

337 
	$ª°¨tcﬁÀ˘i⁄
 (
globÆ_Sèã
 *
g
) {

338 
g
->
gøy
 = g->
gøyagaö
 = 
NULL
;

339 
g
->
wók
 = g->
Ælwók
 = g->
ïhemî⁄
 = 
NULL
;

340 
	`m¨kobje˘
(
g
, g->
maöthªad
);

341 
	`m¨kvÆue
(
g
, &g->
l_ªgi°ry
);

342 
	`m¨kmt
(
g
);

343 
	`m¨kbeög‚z
(
g
);

344 
	}
}

361 
	$åavî£wókvÆue
 (
globÆ_Sèã
 *
g
, 
TabÀ
 *
h
) {

362 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

365 
has˛órs
 = (
h
->
sizóºay
 > 0);

366 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

367 
	`checkdódkey
(
n
);

368 i‡(
	`âi¢û
(
	`gvÆ
(
n
)))

369 
	`ªmovì¡ry
(
n
);

371 
	`lua_as£π
(!
	`âi¢û
(
	`gkey
(
n
)));

372 
	`m¨kvÆue
(
g
, 
	`gkey
(
n
));

373 i‡(!
has˛órs
 && 
	`is˛óªd
(
g
, 
	`gvÆ
(
n
)))

374 
has˛órs
 = 1;

377 i‡(
g
->
gc°©e
 =
GCS¥›ag©e
)

378 
	`lökg˛i°
(
h
, 
g
->
gøyagaö
);

379 i‡(
has˛órs
)

380 
	`lökg˛i°
(
h
, 
g
->
wók
);

381 
	}
}

394 
	$åavî£ïhemî⁄
 (
globÆ_Sèã
 *
g
, 
TabÀ
 *
h
) {

395 
m¨ked
 = 0;

396 
has˛órs
 = 0;

397 
hasww
 = 0;

398 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

399 
i
;

401 
i
 = 0; i < 
h
->
sizóºay
; i++) {

402 i‡(
	`vÆiswhôe
(&
h
->
¨øy
[
i
])) {

403 
m¨ked
 = 1;

404 
	`ªÆlym¨kobje˘
(
g
, 
	`gcvÆue
(&
h
->
¨øy
[
i
]));

408 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

409 
	`checkdódkey
(
n
);

410 i‡(
	`âi¢û
(
	`gvÆ
(
n
)))

411 
	`ªmovì¡ry
(
n
);

412 i‡(
	`is˛óªd
(
g
, 
	`gkey
(
n
))) {

413 
has˛órs
 = 1;

414 i‡(
	`vÆiswhôe
(
	`gvÆ
(
n
)))

415 
hasww
 = 1;

417 i‡(
	`vÆiswhôe
(
	`gvÆ
(
n
))) {

418 
m¨ked
 = 1;

419 
	`ªÆlym¨kobje˘
(
g
, 
	`gcvÆue
(
	`gvÆ
(
n
)));

423 i‡(
g
->
gc°©e
 =
GCS¥›ag©e
)

424 
	`lökg˛i°
(
h
, 
g
->
gøyagaö
);

425 i‡(
hasww
)

426 
	`lökg˛i°
(
h
, 
g
->
ïhemî⁄
);

427 i‡(
has˛órs
)

428 
	`lökg˛i°
(
h
, 
g
->
Ælwók
);

429  
m¨ked
;

430 
	}
}

433 
	$åavî£°r⁄gèbÀ
 (
globÆ_Sèã
 *
g
, 
TabÀ
 *
h
) {

434 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

435 
i
;

436 
i
 = 0; i < 
h
->
sizóºay
; i++)

437 
	`m¨kvÆue
(
g
, &
h
->
¨øy
[
i
]);

438 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

439 
	`checkdódkey
(
n
);

440 i‡(
	`âi¢û
(
	`gvÆ
(
n
)))

441 
	`ªmovì¡ry
(
n
);

443 
	`lua_as£π
(!
	`âi¢û
(
	`gkey
(
n
)));

444 
	`m¨kvÆue
(
g
, 
	`gkey
(
n
));

445 
	`m¨kvÆue
(
g
, 
	`gvÆ
(
n
));

448 
	}
}

451 
lu_mem
 
	$åavî£èbÀ
 (
globÆ_Sèã
 *
g
, 
TabÀ
 *
h
) {

452 c⁄° *
wókkey
, *
wókvÆue
;

453 c⁄° 
TVÆue
 *
mode
 = 
	`gÁ°tm
(
g
, 
h
->
më©abÀ
, 
TM_MODE
);

454 
	`m¨kobje˘N
(
g
, 
h
->
më©abÀ
);

455 i‡(
mode
 && 
	`âis°rög
(mode) &&

456 ((
wókkey
 = 
	`°rchr
(
	`svÆue
(
mode
), 'k')),

457 (
wókvÆue
 = 
	`°rchr
(
	`svÆue
(
mode
), 'v')),

458 (
wókkey
 || 
wókvÆue
))) {

459 
	`bœck2gøy
(
h
);

460 i‡(!
wókkey
)

461 
	`åavî£wókvÆue
(
g
, 
h
);

462 i‡(!
wókvÆue
)

463 
	`åavî£ïhemî⁄
(
g
, 
h
);

465 
	`lökg˛i°
(
h
, 
g
->
Ælwók
);

468 
	`åavî£°r⁄gèbÀ
(
g
, 
h
);

469  (
TabÀ
Ë+ (
TVÆue
Ë* 
h
->
sizóºay
 +

470 (
Node
Ë* 
	`ˇ°
(
size_t
, 
	`sizíode
(
h
));

471 
	}
}

479 
	$åavî£¥Ÿo
 (
globÆ_Sèã
 *
g
, 
PrŸo
 *
f
) {

480 
i
;

481 i‡(
f
->
ˇche
 && 
	`iswhôe
(f->cache))

482 
f
->
ˇche
 = 
NULL
;

483 
	`m¨kobje˘N
(
g
, 
f
->
sour˚
);

484 
i
 = 0; i < 
f
->
sizek
; i++)

485 
	`m¨kvÆue
(
g
, &
f
->
k
[
i
]);

486 
i
 = 0; i < 
f
->
sizeupvÆues
; i++)

487 
	`m¨kobje˘N
(
g
, 
f
->
upvÆues
[
i
].
«me
);

488 
i
 = 0; i < 
f
->
sizï
; i++)

489 
	`m¨kobje˘N
(
g
, 
f
->
p
[
i
]);

490 
i
 = 0; i < 
f
->
sizñocv¨s
; i++)

491 
	`m¨kobje˘N
(
g
, 
f
->
locv¨s
[
i
].
v¨«me
);

492  (
PrŸo
Ë+ (
In°ru˘i⁄
Ë* 
f
->
sizecode
 +

493 (
PrŸo
 *Ë* 
f
->
sizï
 +

494 (
TVÆue
Ë* 
f
->
sizek
 +

495 (Ë* 
f
->
sizñöeöfo
 +

496 (
LocV¨
Ë* 
f
->
sizñocv¨s
 +

497 (
UpvÆdesc
Ë* 
f
->
sizeupvÆues
;

498 
	}
}

501 
lu_mem
 
	$åavî£C˛osuª
 (
globÆ_Sèã
 *
g
, 
CClosuª
 *
˛
) {

502 
i
;

503 
i
 = 0; i < 
˛
->
nupvÆues
; i++)

504 
	`m¨kvÆue
(
g
, &
˛
->
upvÆue
[
i
]);

505  
	`sizeC˛osuª
(
˛
->
nupvÆues
);

506 
	}
}

514 
lu_mem
 
	$åavî£L˛osuª
 (
globÆ_Sèã
 *
g
, 
LClosuª
 *
˛
) {

515 
i
;

516 
	`m¨kobje˘N
(
g
, 
˛
->
p
);

517 
i
 = 0; i < 
˛
->
nupvÆues
; i++) {

518 
UpVÆ
 *
uv
 = 
˛
->
upvÆs
[
i
];

519 i‡(
uv
 !
NULL
) {

520 i‡(
	`upis›í
(
uv
Ë&& 
g
->
gc°©e
 !
GCSösidótomic
)

521 
uv
->
u
.
›í
.
touched
 = 1;

523 
	`m¨kvÆue
(
g
, 
uv
->
v
);

526  
	`sizeL˛osuª
(
˛
->
nupvÆues
);

527 
	}
}

530 
lu_mem
 
	$åavî£thªad
 (
globÆ_Sèã
 *
g
, 
lua_Sèã
 *
th
) {

531 
StkId
 
o
 = 
th
->
°ack
;

532 i‡(
o
 =
NULL
)

534 
	`lua_as£π
(
g
->
gc°©e
 =
GCSösidótomic
 ||

535 
th
->
›íupvÆ
 =
NULL
 || 
	`isötwups
(th));

536 ; 
o
 < 
th
->
t›
; o++)

537 
	`m¨kvÆue
(
g
, 
o
);

538 i‡(
g
->
gc°©e
 =
GCSösidótomic
) {

539 
StkId
 
lim
 = 
th
->
°ack
 +Åh->
°acksize
;

540 ; 
o
 < 
lim
; o++)

541 
	`£äûvÆue
(
o
);

543 i‡(!
	`isötwups
(
th
Ë&&Åh->
›íupvÆ
 !
NULL
) {

544 
th
->
twups
 = 
g
->twups;

545 
g
->
twups
 = 
th
;

548 i‡(
g
->
gcköd
 !
KGC_EMERGENCY
)

549 
	`luaD_shrök°ack
(
th
);

550  ((
lua_Sèã
Ë+ (
TVÆue
Ë* 
th
->
°acksize
 +

551 (
CÆlInfo
Ë* 
th
->
nci
);

552 
	}
}

559 
	$¥›ag©em¨k
 (
globÆ_Sèã
 *
g
) {

560 
lu_mem
 
size
;

561 
GCObje˘
 *
o
 = 
g
->
gøy
;

562 
	`lua_as£π
(
	`isgøy
(
o
));

563 
	`gøy2bœck
(
o
);

564 
o
->
â
) {

565 
LUA_TTABLE
: {

566 
TabÀ
 *
h
 = 
	`gco2t
(
o
);

567 
g
->
gøy
 = 
h
->
g˛i°
;

568 
size
 = 
	`åavî£èbÀ
(
g
, 
h
);

571 
LUA_TLCL
: {

572 
LClosuª
 *
˛
 = 
	`gco2l˛
(
o
);

573 
g
->
gøy
 = 
˛
->
g˛i°
;

574 
size
 = 
	`åavî£L˛osuª
(
g
, 
˛
);

577 
LUA_TCCL
: {

578 
CClosuª
 *
˛
 = 
	`gco2c˛
(
o
);

579 
g
->
gøy
 = 
˛
->
g˛i°
;

580 
size
 = 
	`åavî£C˛osuª
(
g
, 
˛
);

583 
LUA_TTHREAD
: {

584 
lua_Sèã
 *
th
 = 
	`gco2th
(
o
);

585 
g
->
gøy
 = 
th
->
g˛i°
;

586 
	`lökg˛i°
(
th
, 
g
->
gøyagaö
);

587 
	`bœck2gøy
(
o
);

588 
size
 = 
	`åavî£thªad
(
g
, 
th
);

591 
LUA_TPROTO
: {

592 
PrŸo
 *
p
 = 
	`gco2p
(
o
);

593 
g
->
gøy
 = 
p
->
g˛i°
;

594 
size
 = 
	`åavî£¥Ÿo
(
g
, 
p
);

597 : 
	`lua_as£π
(0); ;

599 
g
->
GCmemåav
 +
size
;

600 
	}
}

603 
	$¥›ag©óŒ
 (
globÆ_Sèã
 *
g
) {

604 
g
->
gøy
Ë
	`¥›ag©em¨k
(g);

605 
	}
}

608 
	$c⁄vîgìphemî⁄s
 (
globÆ_Sèã
 *
g
) {

609 
ch™ged
;

611 
GCObje˘
 *
w
;

612 
GCObje˘
 *
√xt
 = 
g
->
ïhemî⁄
;

613 
g
->
ïhemî⁄
 = 
NULL
;

614 
ch™ged
 = 0;

615 (
w
 = 
√xt
Ë!
NULL
) {

616 
√xt
 = 
	`gco2t
(
w
)->
g˛i°
;

617 i‡(
	`åavî£ïhemî⁄
(
g
, 
	`gco2t
(
w
))) {

618 
	`¥›ag©óŒ
(
g
);

619 
ch™ged
 = 1;

622 } 
ch™ged
);

623 
	}
}

639 
	$˛órkeys
 (
globÆ_Sèã
 *
g
, 
GCObje˘
 *
l
, GCObje˘ *
f
) {

640 ; 
l
 !
f
;Ü = 
	`gco2t
÷)->
g˛i°
) {

641 
TabÀ
 *
h
 = 
	`gco2t
(
l
);

642 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

643 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

644 i‡(!
	`âi¢û
(
	`gvÆ
(
n
)Ë&& (
	`is˛óªd
(
g
, 
	`gkey
(n)))) {

645 
	`£äûvÆue
(
	`gvÆ
(
n
));

646 
	`ªmovì¡ry
(
n
);

650 
	}
}

657 
	$˛órvÆues
 (
globÆ_Sèã
 *
g
, 
GCObje˘
 *
l
, GCObje˘ *
f
) {

658 ; 
l
 !
f
;Ü = 
	`gco2t
÷)->
g˛i°
) {

659 
TabÀ
 *
h
 = 
	`gco2t
(
l
);

660 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

661 
i
;

662 
i
 = 0; i < 
h
->
sizóºay
; i++) {

663 
TVÆue
 *
o
 = &
h
->
¨øy
[
i
];

664 i‡(
	`is˛óªd
(
g
, 
o
))

665 
	`£äûvÆue
(
o
);

667 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

668 i‡(!
	`âi¢û
(
	`gvÆ
(
n
)Ë&& 
	`is˛óªd
(
g
, gval(n))) {

669 
	`£äûvÆue
(
	`gvÆ
(
n
));

670 
	`ªmovì¡ry
(
n
);

674 
	}
}

677 
	$luaC_upvdeccou¡
 (
lua_Sèã
 *
L
, 
UpVÆ
 *
uv
) {

678 
	`lua_as£π
(
uv
->
ªfcou¡
 > 0);

679 
uv
->
ªfcou¡
--;

680 i‡(
uv
->
ªfcou¡
 =0 && !
	`upis›í
(uv))

681 
	`luaM_‰ì
(
L
, 
uv
);

682 
	}
}

685 
	$‰ìL˛osuª
 (
lua_Sèã
 *
L
, 
LClosuª
 *
˛
) {

686 
i
;

687 
i
 = 0; i < 
˛
->
nupvÆues
; i++) {

688 
UpVÆ
 *
uv
 = 
˛
->
upvÆs
[
i
];

689 i‡(
uv
)

690 
	`luaC_upvdeccou¡
(
L
, 
uv
);

692 
	`luaM_‰ìmem
(
L
, 
˛
, 
	`sizeL˛osuª
(˛->
nupvÆues
));

693 
	}
}

696 
	$‰ìobj
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
) {

697 
o
->
â
) {

698 
LUA_TPROTO
: 
	`luaF_‰ì¥Ÿo
(
L
, 
	`gco2p
(
o
)); ;

699 
LUA_TLCL
: {

700 
	`‰ìL˛osuª
(
L
, 
	`gco2l˛
(
o
));

703 
LUA_TCCL
: {

704 
	`luaM_‰ìmem
(
L
, 
o
, 
	`sizeC˛osuª
(
	`gco2c˛
(o)->
nupvÆues
));

707 
LUA_TTABLE
: 
	`luaH_‰ì
(
L
, 
	`gco2t
(
o
)); ;

708 
LUA_TTHREAD
: 
	`luaE_‰ìthªad
(
L
, 
	`gco2th
(
o
)); ;

709 
LUA_TUSERDATA
: 
	`luaM_‰ìmem
(
L
, 
o
, 
	`sizeud©a
(
	`gco2u
(o))); ;

710 
LUA_TSHRSTR
:

711 
	`luaS_ªmove
(
L
, 
	`gco2ts
(
o
));

712 
	`luaM_‰ìmem
(
L
, 
o
, 
	`sizñ°rög
(
	`gco2ts
(o)->
shæí
));

714 
LUA_TLNGSTR
: {

715 
	`luaM_‰ìmem
(
L
, 
o
, 
	`sizñ°rög
(
	`gco2ts
(o)->
u
.
 gÀn
));

718 : 
	`lua_as£π
(0);

720 
	}
}

723 
	#swìpwhﬁñi°
(
L
,
p
Ë
	`swì∂i°
(L,p,
MAX_LUMEM
)

	)

724 
GCObje˘
 **
swì∂i°
 (
lua_Sèã
 *
L
, GCObje˘ **
p
, 
lu_mem
 
cou¡
);

734 
GCObje˘
 **
	$swì∂i°
 (
lua_Sèã
 *
L
, 
GCObje˘
 **
p
, 
lu_mem
 
cou¡
) {

735 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

736 
ow
 = 
	`Ÿhîwhôe
(
g
);

737 
whôe
 = 
	`luaC_whôe
(
g
);

738 *
p
 !
NULL
 && 
cou¡
-- > 0) {

739 
GCObje˘
 *
cuº
 = *
p
;

740 
m¨ked
 = 
cuº
->marked;

741 i‡(
	`isdódm
(
ow
, 
m¨ked
)) {

742 *
p
 = 
cuº
->
√xt
;

743 
	`‰ìobj
(
L
, 
cuº
);

746 
cuº
->
m¨ked
 = 
	`ˇ°_byã
((m¨ked & 
maskcﬁ‹s
Ë| 
whôe
);

747 
p
 = &
cuº
->
√xt
;

750  (*
p
 =
NULL
) ? NULL :Ö;

751 
	}
}

757 
GCObje˘
 **
	$swì±ﬁive
 (
lua_Sèã
 *
L
, 
GCObje˘
 **
p
) {

758 
GCObje˘
 **
ﬁd
 = 
p
;

760 
p
 = 
	`swì∂i°
(
L
,Ö, 1);

761 } 
p
 =
ﬁd
);

762  
p
;

763 
	}
}

777 
	$checkSizes
 (
lua_Sèã
 *
L
, 
globÆ_Sèã
 *
g
) {

778 i‡(
g
->
gcköd
 !
KGC_EMERGENCY
) {

779 
l_mem
 
ﬁddebt
 = 
g
->
GCdebt
;

780 i‡(
g
->
°π
.
nu£
 < g->°π.
size
 / 4)

781 
	`luaS_ªsize
(
L
, 
g
->
°π
.
size
 / 2);

782 
g
->
GCe°im©e
 +g->
GCdebt
 - 
ﬁddebt
;

784 
	}
}

787 
GCObje˘
 *
	$ud©a2föÆize
 (
globÆ_Sèã
 *
g
) {

788 
GCObje˘
 *
o
 = 
g
->
tobe‚z
;

789 
	`lua_as£π
(
	`toföÆize
(
o
));

790 
g
->
tobe‚z
 = 
o
->
√xt
;

791 
o
->
√xt
 = 
g
->
Ælgc
;

792 
g
->
Ælgc
 = 
o
;

793 
	`ª£tbô
(
o
->
m¨ked
, 
FINALIZEDBIT
);

794 i‡(
	`isswìµha£
(
g
))

795 
	`makewhôe
(
g
, 
o
);

796  
o
;

797 
	}
}

800 
	$dŸheˇŒ
 (
lua_Sèã
 *
L
, *
ud
) {

801 
	`UNUSED
(
ud
);

802 
	`luaD_ˇŒnoyõld
(
L
, L->
t›
 - 2, 0);

803 
	}
}

806 
	$GCTM
 (
lua_Sèã
 *
L
, 
¥›ag©ìº‹s
) {

807 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

808 c⁄° 
TVÆue
 *
tm
;

809 
TVÆue
 
v
;

810 
	`£tgcovÆue
(
L
, &
v
, 
	`ud©a2föÆize
(
g
));

811 
tm
 = 
	`luaT_gëtmbyobj
(
L
, &
v
, 
TM_GC
);

812 i‡(
tm
 !
NULL
 && 
	`âisfun˘i⁄
(tm)) {

813 
°©us
;

814 
lu_byã
 
ﬁdah
 = 
L
->
Ælowhook
;

815 
ru¬ög
 = 
g
->
g¸u¬ög
;

816 
L
->
Ælowhook
 = 0;

817 
g
->
g¸u¬ög
 = 0;

818 
	`£tobj2s
(
L
, L->
t›
, 
tm
);

819 
	`£tobj2s
(
L
, L->
t›
 + 1, &
v
);

820 
L
->
t›
 += 2;

821 
°©us
 = 
	`luaD_pˇŒ
(
L
, 
dŸheˇŒ
, 
NULL
, 
	`ßve°ack
(L, L->
t›
 - 2), 0);

822 
L
->
Ælowhook
 = 
ﬁdah
;

823 
g
->
g¸u¬ög
 = 
ru¬ög
;

824 i‡(
°©us
 !
LUA_OK
 && 
¥›ag©ìº‹s
) {

825 i‡(
°©us
 =
LUA_ERRRUN
) {

826 c⁄° *
msg
 = (
	`âis°rög
(
L
->
t›
 - 1))

827 ? 
	`svÆue
(
L
->
t›
 - 1)

829 
	`luaO_pushf°rög
(
L
, "îr‹ i¿__g¯mëamëhod (%s)", 
msg
);

830 
°©us
 = 
LUA_ERRGCMM
;

832 
	`luaD_throw
(
L
, 
°©us
);

835 
	}
}

841 
	$ru«„wföÆizîs
 (
lua_Sèã
 *
L
) {

842 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

843 
i
;

844 
	`lua_as£π
(!
g
->
tobe‚z
 || g->
gcfönum
 > 0);

845 
i
 = 0; 
g
->
tobe‚z
 && i < g->
gcfönum
; i++)

846 
	`GCTM
(
L
, 1);

847 
g
->
gcfönum
 = (!g->
tobe‚z
) ? 0

848 : 
g
->
gcfönum
 * 2;

849  
i
;

850 
	}
}

856 
	$ˇŒÆÕídögföÆizîs
 (
lua_Sèã
 *
L
) {

857 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

858 
g
->
tobe‚z
)

859 
	`GCTM
(
L
, 0);

860 
	}
}

866 
GCObje˘
 **
	$födœ°
 (
GCObje˘
 **
p
) {

867 *
p
 !
NULL
)

868 
p
 = &(*p)->
√xt
;

869  
p
;

870 
	}
}

877 
	$£∑øãtobe‚z
 (
globÆ_Sèã
 *
g
, 
Æl
) {

878 
GCObje˘
 *
cuº
;

879 
GCObje˘
 **
p
 = &
g
->
föobj
;

880 
GCObje˘
 **
œ°√xt
 = 
	`födœ°
(&
g
->
tobe‚z
);

881 (
cuº
 = *
p
Ë!
NULL
) {

882 
	`lua_as£π
(
	`toföÆize
(
cuº
));

883 i‡(!(
	`iswhôe
(
cuº
Ë|| 
Æl
))

884 
p
 = &
cuº
->
√xt
;

886 *
p
 = 
cuº
->
√xt
;

887 
cuº
->
√xt
 = *
œ°√xt
;

888 *
œ°√xt
 = 
cuº
;

889 
œ°√xt
 = &
cuº
->
√xt
;

892 
	}
}

899 
	$luaC_checkföÆizî
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
, 
TabÀ
 *
mt
) {

900 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

901 i‡(
	`toföÆize
(
o
) ||

902 
	`gÁ°tm
(
g
, 
mt
, 
TM_GC
Ë=
NULL
)

905 
GCObje˘
 **
p
;

906 i‡(
	`isswìµha£
(
g
)) {

907 
	`makewhôe
(
g
, 
o
);

908 i‡(
g
->
swìpgc
 =&
o
->
√xt
)

909 
g
->
swìpgc
 = 
	`swì±ﬁive
(
L
, g->sweepgc);

912 
p
 = &
g
->
Ælgc
; *∞!
o
;Ö = &(*p)->
√xt
) { }

913 *
p
 = 
o
->
√xt
;

914 
o
->
√xt
 = 
g
->
föobj
;

915 
g
->
föobj
 = 
o
;

916 
	`l_£tbô
(
o
->
m¨ked
, 
FINALIZEDBIT
);

918 
	}
}

937 
	$£çau£
 (
globÆ_Sèã
 *
g
) {

938 
l_mem
 
thªshﬁd
, 
debt
;

939 
l_mem
 
e°im©e
 = 
g
->
GCe°im©e
 / 
PAUSEADJ
;

940 
	`lua_as£π
(
e°im©e
 > 0);

941 
thªshﬁd
 = (
g
->
g˝au£
 < 
MAX_LMEM
 / 
e°im©e
)

942 ? 
e°im©e
 * 
g
->
g˝au£


943 : 
MAX_LMEM
;

944 
debt
 = 
	`gëtŸÆbyãs
(
g
Ë- 
thªshﬁd
;

945 
	`luaE_£tdebt
(
g
, 
debt
);

946 
	}
}

956 
	$íãrswìp
 (
lua_Sèã
 *
L
) {

957 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

958 
g
->
gc°©e
 = 
GCSsw∑Œgc
;

959 
	`lua_as£π
(
g
->
swìpgc
 =
NULL
);

960 
g
->
swìpgc
 = 
	`swì∂i°
(
L
, &g->
Ælgc
, 1);

961 
	}
}

964 
	$luaC_‰ìÆlobje˘s
 (
lua_Sèã
 *
L
) {

965 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

966 
	`£∑øãtobe‚z
(
g
, 1);

967 
	`lua_as£π
(
g
->
föobj
 =
NULL
);

968 
	`ˇŒÆÕídögföÆizîs
(
L
);

969 
	`lua_as£π
(
g
->
tobe‚z
 =
NULL
);

970 
g
->
cuºítwhôe
 = 
WHITEBITS
;

971 
g
->
gcköd
 = 
KGC_NORMAL
;

972 
	`swìpwhﬁñi°
(
L
, &
g
->
föobj
);

973 
	`swìpwhﬁñi°
(
L
, &
g
->
Ælgc
);

974 
	`swìpwhﬁñi°
(
L
, &
g
->
fixedgc
);

975 
	`lua_as£π
(
g
->
°π
.
nu£
 == 0);

976 
	}
}

979 
l_mem
 
	$©omic
 (
lua_Sèã
 *
L
) {

980 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

981 
l_mem
 
w‹k
;

982 
GCObje˘
 *
‹igwók
, *
‹igÆl
;

983 
GCObje˘
 *
gøyagaö
 = 
g
->grayagain;

984 
	`lua_as£π
(
g
->
ïhemî⁄
 =
NULL
 && g->
wók
 == NULL);

985 
	`lua_as£π
(!
	`iswhôe
(
g
->
maöthªad
));

986 
g
->
gc°©e
 = 
GCSösidótomic
;

987 
g
->
GCmemåav
 = 0;

988 
	`m¨kobje˘
(
g
, 
L
);

990 
	`m¨kvÆue
(
g
, &g->
l_ªgi°ry
);

991 
	`m¨kmt
(
g
);

993 
	`ªm¨kupvÆs
(
g
);

994 
	`¥›ag©óŒ
(
g
);

995 
w‹k
 = 
g
->
GCmemåav
;

996 
g
->
gøy
 = 
gøyagaö
;

997 
	`¥›ag©óŒ
(
g
);

998 
g
->
GCmemåav
 = 0;

999 
	`c⁄vîgìphemî⁄s
(
g
);

1002 
	`˛órvÆues
(
g
, g->
wók
, 
NULL
);

1003 
	`˛órvÆues
(
g
, g->
Ælwók
, 
NULL
);

1004 
‹igwók
 = 
g
->
wók
; 
‹igÆl
 = g->
Ælwók
;

1005 
w‹k
 +
g
->
GCmemåav
;

1006 
	`£∑øãtobe‚z
(
g
, 0);

1007 
g
->
gcfönum
 = 1;

1008 
	`m¨kbeög‚z
(
g
);

1009 
	`¥›ag©óŒ
(
g
);

1010 
g
->
GCmemåav
 = 0;

1011 
	`c⁄vîgìphemî⁄s
(
g
);

1014 
	`˛órkeys
(
g
, g->
ïhemî⁄
, 
NULL
);

1015 
	`˛órkeys
(
g
, g->
Ælwók
, 
NULL
);

1017 
	`˛órvÆues
(
g
, g->
wók
, 
‹igwók
);

1018 
	`˛órvÆues
(
g
, g->
Ælwók
, 
‹igÆl
);

1019 
	`luaS_˛órˇche
(
g
);

1020 
g
->
cuºítwhôe
 = 
	`ˇ°_byã
(
	`Ÿhîwhôe
(g));

1021 
w‹k
 +
g
->
GCmemåav
;

1022  
w‹k
;

1023 
	}
}

1026 
lu_mem
 
	$swìp°ï
 (
lua_Sèã
 *
L
, 
globÆ_Sèã
 *
g
,

1027 
√xt°©e
, 
GCObje˘
 **
√xéi°
) {

1028 i‡(
g
->
swìpgc
) {

1029 
l_mem
 
ﬁddebt
 = 
g
->
GCdebt
;

1030 
g
->
swìpgc
 = 
	`swì∂i°
(
L
, g->swìpgc, 
GCSWEEPMAX
);

1031 
g
->
GCe°im©e
 +g->
GCdebt
 - 
ﬁddebt
;

1032 i‡(
g
->
swìpgc
)

1033  (
GCSWEEPMAX
 * 
GCSWEEPCOST
);

1036 
g
->
gc°©e
 = 
√xt°©e
;

1037 
g
->
swìpgc
 = 
√xéi°
;

1039 
	}
}

1042 
lu_mem
 
	$sögÀ°ï
 (
lua_Sèã
 *
L
) {

1043 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1044 
g
->
gc°©e
) {

1045 
GCS∑u£
: {

1046 
g
->
GCmemåav
 = g->
°π
.
size
 * (
GCObje˘
*);

1047 
	`ª°¨tcﬁÀ˘i⁄
(
g
);

1048 
g
->
gc°©e
 = 
GCS¥›ag©e
;

1049  
g
->
GCmemåav
;

1051 
GCS¥›ag©e
: {

1052 
g
->
GCmemåav
 = 0;

1053 
	`lua_as£π
(
g
->
gøy
);

1054 
	`¥›ag©em¨k
(
g
);

1055 i‡(
g
->
gøy
 =
NULL
)

1056 
g
->
gc°©e
 = 
GCS©omic
;

1057  
g
->
GCmemåav
;

1059 
GCS©omic
: {

1060 
lu_mem
 
w‹k
;

1061 
	`¥›ag©óŒ
(
g
);

1062 
w‹k
 = 
	`©omic
(
L
);

1063 
	`íãrswìp
(
L
);

1064 
g
->
GCe°im©e
 = 
	`gëtŸÆbyãs
(g); ;

1065  
w‹k
;

1067 
GCSsw∑Œgc
: {

1068  
	`swìp°ï
(
L
, 
g
, 
GCSswpföobj
, &g->
föobj
);

1070 
GCSswpföobj
: {

1071  
	`swìp°ï
(
L
, 
g
, 
GCSsw±obe‚z
, &g->
tobe‚z
);

1073 
GCSsw±obe‚z
: {

1074  
	`swìp°ï
(
L
, 
g
, 
GCSsw≥nd
, 
NULL
);

1076 
GCSsw≥nd
: {

1077 
	`makewhôe
(
g
, g->
maöthªad
);

1078 
	`checkSizes
(
L
, 
g
);

1079 
g
->
gc°©e
 = 
GCSˇŒfö
;

1082 
GCSˇŒfö
: {

1083 i‡(
g
->
tobe‚z
 && g->
gcköd
 !
KGC_EMERGENCY
) {

1084 
n
 = 
	`ru«„wföÆizîs
(
L
);

1085  (
n
 * 
GCFINALIZECOST
);

1088 
g
->
gc°©e
 = 
GCS∑u£
;

1092 : 
	`lua_as£π
(0);  0;

1094 
	}
}

1101 
	$luaC_ru¡û°©e
 (
lua_Sèã
 *
L
, 
°©esmask
) {

1102 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1103 !
	`ã°bô
(
°©esmask
, 
g
->
gc°©e
))

1104 
	`sögÀ°ï
(
L
);

1105 
	}
}

1112 
l_mem
 
	$gëdebt
 (
globÆ_Sèã
 *
g
) {

1113 
l_mem
 
debt
 = 
g
->
GCdebt
;

1114 
°ïmul
 = 
g
->
gc°ïmul
;

1115 i‡(
debt
 <= 0)  0;

1117 
debt
 = (debà/ 
STEPMULADJ
) + 1;

1118 
debt
 = (debà< 
MAX_LMEM
 / 
°ïmul
) ? debt * stepmul : MAX_LMEM;

1119  
debt
;

1121 
	}
}

1126 
	$luaC_°ï
 (
lua_Sèã
 *
L
) {

1127 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1128 
l_mem
 
debt
 = 
	`gëdebt
(
g
);

1129 i‡(!
g
->
g¸u¬ög
) {

1130 
	`luaE_£tdebt
(
g
, -
GCSTEPSIZE
 * 10);

1134 
lu_mem
 
w‹k
 = 
	`sögÀ°ï
(
L
);

1135 
debt
 -
w‹k
;

1136 } 
debt
 > -
GCSTEPSIZE
 && 
g
->
gc°©e
 !
GCS∑u£
);

1137 i‡(
g
->
gc°©e
 =
GCS∑u£
)

1138 
	`£çau£
(
g
);

1140 
debt
 = (debà/ 
g
->
gc°ïmul
Ë* 
STEPMULADJ
;

1141 
	`luaE_£tdebt
(
g
, 
debt
);

1142 
	`ru«„wföÆizîs
(
L
);

1144 
	}
}

1156 
	$luaC_fuŒgc
 (
lua_Sèã
 *
L
, 
i£mîgícy
) {

1157 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1158 
	`lua_as£π
(
g
->
gcköd
 =
KGC_NORMAL
);

1159 i‡(
i£mîgícy
Ë
g
->
gcköd
 = 
KGC_EMERGENCY
;

1160 i‡(
	`kìpöv¨ü¡
(
g
)) {

1161 
	`íãrswìp
(
L
);

1164 
	`luaC_ru¡û°©e
(
L
, 
	`bômask
(
GCS∑u£
));

1165 
	`luaC_ru¡û°©e
(
L
, ~
	`bômask
(
GCS∑u£
));

1166 
	`luaC_ru¡û°©e
(
L
, 
	`bômask
(
GCSˇŒfö
));

1168 
	`lua_as£π
(
g
->
GCe°im©e
 =
	`gëtŸÆbyãs
(g));

1169 
	`luaC_ru¡û°©e
(
L
, 
	`bômask
(
GCS∑u£
));

1170 
g
->
gcköd
 = 
KGC_NORMAL
;

1171 
	`£çau£
(
g
);

1172 
	}
}

	@lua/src/lgc.h

7 #i‚de‡
lgc_h


8 
	#lgc_h


	)

11 
	~"lobje˘.h
"

12 
	~"l°©e.h
"

30 #i‡!
deföed
(
GCSTEPSIZE
)

32 
	#GCSTEPSIZE
 (
	`ˇ°_öt
(100 * (
TSåög
)))

	)

39 
	#GCS¥›ag©e
 0

	)

40 
	#GCS©omic
 1

	)

41 
	#GCSsw∑Œgc
 2

	)

42 
	#GCSswpföobj
 3

	)

43 
	#GCSsw±obe‚z
 4

	)

44 
	#GCSsw≥nd
 5

	)

45 
	#GCSˇŒfö
 6

	)

46 
	#GCS∑u£
 7

	)

49 
	#isswìµha£
(
g
) \

50 (
GCSsw∑Œgc
 <(
g
)->
gc°©e
 && (g)->gc°©ê<
GCSsw≥nd
)

	)

61 
	#kìpöv¨ü¡
(
g
Ë((g)->
gc°©e
 <
GCS©omic
)

	)

67 
	#ª£tbôs
(
x
,
m
Ë((xË&
	`ˇ°
(
lu_byã
, ~(m)))

	)

68 
	#£tbôs
(
x
,
m
Ë((xË|(m))

	)

69 
	#ã°bôs
(
x
,
m
Ë((xË& (m))

	)

70 
	#bômask
(
b
Ë(1<<(b))

	)

71 
	#bô2mask
(
b1
,
b2
Ë(
	`bômask
(b1Ë| bômask(b2))

	)

72 
	#l_£tbô
(
x
,
b
Ë
	`£tbôs
(x, 
	`bômask
(b))

	)

73 
	#ª£tbô
(
x
,
b
Ë
	`ª£tbôs
(x, 
	`bômask
(b))

	)

74 
	#ã°bô
(
x
,
b
Ë
	`ã°bôs
(x, 
	`bômask
(b))

	)

78 
	#WHITE0BIT
 0

	)

79 
	#WHITE1BIT
 1

	)

80 
	#BLACKBIT
 2

	)

81 
	#FINALIZEDBIT
 3

	)

84 
	#WHITEBITS
 
	`bô2mask
(
WHITE0BIT
, 
WHITE1BIT
)

	)

87 
	#iswhôe
(
x
Ë
	`ã°bôs
((x)->
m¨ked
, 
WHITEBITS
)

	)

88 
	#isbœck
(
x
Ë
	`ã°bô
((x)->
m¨ked
, 
BLACKBIT
)

	)

89 
	#isgøy
(
x
) \

90 (!
	`ã°bôs
((
x
)->
m¨ked
, 
WHITEBITS
 | 
	`bômask
(
BLACKBIT
)))

	)

92 
	#toföÆize
(
x
Ë
	`ã°bô
((x)->
m¨ked
, 
FINALIZEDBIT
)

	)

94 
	#Ÿhîwhôe
(
g
Ë((g)->
cuºítwhôe
 ^ 
WHITEBITS
)

	)

95 
	#isdódm
(
ow
,
m
Ë(!(((mË^ 
WHITEBITS
Ë& (ow)))

	)

96 
	#isdód
(
g
,
v
Ë
	`isdódm
(
	`Ÿhîwhôe
(g), (v)->
m¨ked
)

	)

98 
	#ch™gewhôe
(
x
Ë((x)->
m¨ked
 ^
WHITEBITS
)

	)

99 
	#gøy2bœck
(
x
Ë
	`l_£tbô
((x)->
m¨ked
, 
BLACKBIT
)

	)

101 
	#luaC_whôe
(
g
Ë
	`ˇ°
(
lu_byã
, (g)->
cuºítwhôe
 & 
WHITEBITS
)

	)

110 
	#luaC_c⁄dGC
(
L
,
¥e
,
pos
) \

111 { i‡(
	`G
(
L
)->
GCdebt
 > 0Ë{ 
¥e
; 
	`luaC_°ï
(L); 
pos
;}; \

112 
	`c⁄dch™gemem
(
L
,
¥e
,
pos
); }

	)

115 
	#luaC_checkGC
(
L
Ë
	`luaC_c⁄dGC
(L,()0,()0)

	)

118 
	#luaC_b¨rõr
(
L
,
p
,
v
) ( \

119 (
	`iscﬁÀ˘abÀ
(
v
Ë&& 
	`isbœck
(
p
Ë&& 
	`iswhôe
(
	`gcvÆue
(v))) ? \

120 
	`luaC_b¨rõr_
(
L
,
	`obj2gco
(
p
),
	`gcvÆue
(
v
)Ë: 
	`ˇ°_void
(0))

	)

122 
	#luaC_b¨rõrback
(
L
,
p
,
v
) ( \

123 (
	`iscﬁÀ˘abÀ
(
v
Ë&& 
	`isbœck
(
p
Ë&& 
	`iswhôe
(
	`gcvÆue
(v))) ? \

124 
	`luaC_b¨rõrback_
(
L
,
p
Ë: 
	`ˇ°_void
(0))

	)

126 
	#luaC_objb¨rõr
(
L
,
p
,
o
) ( \

127 (
	`isbœck
(
p
Ë&& 
	`iswhôe
(
o
)) ? \

128 
	`luaC_b¨rõr_
(
L
,
	`obj2gco
(
p
),obj2gco(
o
)Ë: 
	`ˇ°_void
(0))

	)

130 
	#luaC_upvÆb¨rõr
(
L
,
uv
) ( \

131 (
	`iscﬁÀ˘abÀ
((
uv
)->
v
Ë&& !
	`upis›í
(uv)) ? \

132 
	`luaC_upvÆb¨rõr_
(
L
,
uv
Ë: 
	`ˇ°_void
(0))

	)

134 
LUAI_FUNC
 
luaC_fix
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
);

135 
LUAI_FUNC
 
luaC_‰ìÆlobje˘s
 (
lua_Sèã
 *
L
);

136 
LUAI_FUNC
 
luaC_°ï
 (
lua_Sèã
 *
L
);

137 
LUAI_FUNC
 
luaC_ru¡û°©e
 (
lua_Sèã
 *
L
, 
°©esmask
);

138 
LUAI_FUNC
 
luaC_fuŒgc
 (
lua_Sèã
 *
L
, 
i£mîgícy
);

139 
LUAI_FUNC
 
GCObje˘
 *
luaC_√wobj
 (
lua_Sèã
 *
L
, 
â
, 
size_t
 
sz
);

140 
LUAI_FUNC
 
luaC_b¨rõr_
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
, GCObje˘ *
v
);

141 
LUAI_FUNC
 
luaC_b¨rõrback_
 (
lua_Sèã
 *
L
, 
TabÀ
 *
o
);

142 
LUAI_FUNC
 
luaC_upvÆb¨rõr_
 (
lua_Sèã
 *
L
, 
UpVÆ
 *
uv
);

143 
LUAI_FUNC
 
luaC_checkföÆizî
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
, 
TabÀ
 *
mt
);

144 
LUAI_FUNC
 
luaC_upvdeccou¡
 (
lua_Sèã
 *
L
, 
UpVÆ
 *
uv
);

	@lua/src/linit.c

8 
	#löô_c


	)

9 
	#LUA_LIB


	)

27 
	~"Õªfix.h
"

30 
	~<°ddef.h
>

32 
	~"lua.h
"

34 
	~"luÆib.h
"

35 
	~"œuxlib.h
"

42 c⁄° 
luaL_Reg
 
	glﬂdedlibs
[] = {

43 {"_G", 
lua›í_ba£
},

44 {
LUA_LOADLIBNAME
, 
lua›í_∑ckage
},

45 {
LUA_COLIBNAME
, 
lua›í_c‹outöe
},

46 {
LUA_TABLIBNAME
, 
lua›í_èbÀ
},

47 {
LUA_IOLIBNAME
, 
lua›í_io
},

48 {
LUA_OSLIBNAME
, 
lua›í_os
},

49 {
LUA_STRLIBNAME
, 
lua›í_°rög
},

50 {
LUA_MATHLIBNAME
, 
lua›í_m©h
},

51 {
LUA_UTF8LIBNAME
, 
lua›í_utf8
},

52 {
LUA_DBLIBNAME
, 
lua›í_debug
},

53 #i‡
deföed
(
LUA_COMPAT_BITLIB
)

54 {
LUA_BITLIBNAME
, 
lua›í_bô32
},

56 {
NULL
, NULL}

60 
LUALIB_API
 
	$luaL_›ílibs
 (
lua_Sèã
 *
L
) {

61 c⁄° 
luaL_Reg
 *
lib
;

63 
lib
 = 
lﬂdedlibs
;Üib->
func
;Üib++) {

64 
	`luaL_ªquúef
(
L
, 
lib
->
«me
,Üib->
func
, 1);

65 
	`lua_p›
(
L
, 1);

67 
	}
}

	@lua/src/liolib.c

7 
	#liﬁib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<˘y≥.h
>

14 
	~<î∫o.h
>

15 
	~<loˇÀ.h
>

16 
	~<°dio.h
>

17 
	~<°dlib.h
>

18 
	~<°rög.h
>

20 
	~"lua.h
"

22 
	~"œuxlib.h
"

23 
	~"luÆib.h
"

32 #i‡!
deföed
(
l_checkmode
)

35 #i‡!
deföed
(
L_MODEEXT
)

36 
	#L_MODEEXT
 "b"

	)

40 
	#l_checkmode
(
mode
) \

41 (*
mode
 !'\0' && 
	`°rchr
("rwa", *(mode++)Ë!
NULL
 && \

42 (*
mode
 != '+' || (++mode, 1)) && \

43 (
	`°r•n
(
mode
, 
L_MODEEXT
Ë=
	`°æí
(mode)))

	)

54 #i‡!
deföed
(
l_p›í
)

56 #i‡
deföed
(
LUA_USE_POSIX
)

58 
	#l_p›í
(
L
,
c
,
m
Ë(
	`fÊush
(
NULL
), 
	`p›í
(c,m))

	)

59 
	#l_p˛o£
(
L
,
fûe
Ë(
	`p˛o£
(fûe))

	)

61 #ñi‡
deföed
(
LUA_USE_WINDOWS
)

63 
	#l_p›í
(
L
,
c
,
m
Ë(
	`_p›í
(c,m))

	)

64 
	#l_p˛o£
(
L
,
fûe
Ë(
	`_p˛o£
(fûe))

	)

69 
	#l_p›í
(
L
,
c
,
m
) \

70 (()(()
c
, 
m
), \

71 
	`luaL_îr‹
(
L
, "'popen'Çot supported"), \

72 (
FILE
*)0)

	)

73 
	#l_p˛o£
(
L
,
fûe
Ë(()L, ()fûe, -1)

	)

82 #i‡!
deföed
(
l_gëc
)

84 #i‡
deföed
(
LUA_USE_POSIX
)

85 
	#l_gëc
(
f
Ë
	`gëc_u∆ocked
(f)

	)

86 
	#l_lockfûe
(
f
Ë
	`Êockfûe
(f)

	)

87 
	#l_u∆ockfûe
(
f
Ë
	`fu∆ockfûe
(f)

	)

89 
	#l_gëc
(
f
Ë
	`gëc
(f)

	)

90 
	#l_lockfûe
(
f
Ë(()0)

	)

91 
	#l_u∆ockfûe
(
f
Ë(()0)

	)

103 #i‡!
deföed
(
l_f£ek
)

105 #i‡
deföed
(
LUA_USE_POSIX
)

107 
	~<sys/ty≥s.h
>

109 
	#l_f£ek
(
f
,
o
,
w
Ë
	`f£eko
(f,o,w)

	)

110 
	#l_·ñl
(
f
Ë
	`·ñlo
(f)

	)

111 
	#l_£eknum
 
off_t


	)

113 #ñi‡
deföed
(
LUA_USE_WINDOWS
Ë&& !deföed(
_CRTIMP_TYPEINFO
) \

114 && 
deföed
(
_MSC_VER
Ë&& (
	g_MSC_VER
 >= 1400)

117 
	#l_f£ek
(
f
,
o
,
w
Ë
	`_f£eki64
(f,o,w)

	)

118 
	#l_·ñl
(
f
Ë
	`_·ñli64
(f)

	)

119 
	#l_£eknum
 
__öt64


	)

124 
	#l_f£ek
(
f
,
o
,
w
Ë
	`f£ek
(f,o,w)

	)

125 
	#l_·ñl
(
f
Ë
	`·ñl
(f)

	)

126 
	#l_£eknum
 

	)

135 
	#IO_PREFIX
 "_IO_"

	)

136 
	#IOPREF_LEN
 ((
IO_PREFIX
)/(Ë- 1)

	)

137 
	#IO_INPUT
 (
IO_PREFIX
 "öput")

	)

138 
	#IO_OUTPUT
 (
IO_PREFIX
 "ouçut")

	)

141 
luaL_Såóm
 
	tLSåóm
;

144 
	#tﬁ°ªam
(
L
Ë((
LSåóm
 *)
	`luaL_checkud©a
(L, 1, 
LUA_FILEHANDLE
))

	)

146 
	#is˛o£d
(
p
Ë(’)->
˛o£f
 =
NULL
)

	)

149 
	$io_ty≥
 (
lua_Sèã
 *
L
) {

150 
LSåóm
 *
p
;

151 
	`luaL_check™y
(
L
, 1);

152 
p
 = (
LSåóm
 *)
	`luaL_ã°ud©a
(
L
, 1, 
LUA_FILEHANDLE
);

153 i‡(
p
 =
NULL
)

154 
	`lua_pushnû
(
L
);

155 i‡(
	`is˛o£d
(
p
))

156 
	`lua_pushlôîÆ
(
L
, "closed file");

158 
	`lua_pushlôîÆ
(
L
, "file");

160 
	}
}

163 
	$f_to°rög
 (
lua_Sèã
 *
L
) {

164 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

165 i‡(
	`is˛o£d
(
p
))

166 
	`lua_pushlôîÆ
(
L
, "file (closed)");

168 
	`lua_pushf°rög
(
L
, "fûê(%p)", 
p
->
f
);

170 
	}
}

173 
FILE
 *
	$tofûe
 (
lua_Sèã
 *
L
) {

174 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

175 i‡(
	`is˛o£d
(
p
))

176 
	`luaL_îr‹
(
L
, "attemptÅo useá closed file");

177 
	`lua_as£π
(
p
->
f
);

178  
p
->
f
;

179 
	}
}

187 
LSåóm
 *
	$√w¥efûe
 (
lua_Sèã
 *
L
) {

188 
LSåóm
 *
p
 = (LSåóm *)
	`lua_√wu£rd©a
(
L
, (LStream));

189 
p
->
˛o£f
 = 
NULL
;

190 
	`luaL_£tmë©abÀ
(
L
, 
LUA_FILEHANDLE
);

191  
p
;

192 
	}
}

200 
	$aux_˛o£
 (
lua_Sèã
 *
L
) {

201 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

202 vﬁ©ûê
lua_CFun˘i⁄
 
cf
 = 
p
->
˛o£f
;

203 
p
->
˛o£f
 = 
NULL
;

204  (*
cf
)(
L
);

205 
	}
}

208 
	$io_˛o£
 (
lua_Sèã
 *
L
) {

209 i‡(
	`lua_i¢⁄e
(
L
, 1))

210 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
IO_OUTPUT
);

211 
	`tofûe
(
L
);

212  
	`aux_˛o£
(
L
);

213 
	}
}

216 
	$f_gc
 (
lua_Sèã
 *
L
) {

217 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

218 i‡(!
	`is˛o£d
(
p
Ë&&Ö->
f
 !
NULL
)

219 
	`aux_˛o£
(
L
);

221 
	}
}

227 
	$io_f˛o£
 (
lua_Sèã
 *
L
) {

228 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

229 
ªs
 = 
	`f˛o£
(
p
->
f
);

230  
	`luaL_fûîesu…
(
L
, (
ªs
 =0), 
NULL
);

231 
	}
}

234 
LSåóm
 *
	$√wfûe
 (
lua_Sèã
 *
L
) {

235 
LSåóm
 *
p
 = 
	`√w¥efûe
(
L
);

236 
p
->
f
 = 
NULL
;

237 
p
->
˛o£f
 = &
io_f˛o£
;

238  
p
;

239 
	}
}

242 
	$›ícheck
 (
lua_Sèã
 *
L
, c⁄° *
‚ame
, c⁄° *
mode
) {

243 
LSåóm
 *
p
 = 
	`√wfûe
(
L
);

244 
p
->
f
 = 
	`f›í
(
‚ame
, 
mode
);

245 i‡(
p
->
f
 =
NULL
)

246 
	`luaL_îr‹
(
L
, "ˇ¬Ÿ o≥¿fûê'%s' (%s)", 
‚ame
, 
	`°ªº‹
(
î∫o
));

247 
	}
}

250 
	$io_›í
 (
lua_Sèã
 *
L
) {

251 c⁄° *
fûíame
 = 
	`luaL_check°rög
(
L
, 1);

252 c⁄° *
mode
 = 
	`luaL_›t°rög
(
L
, 2, "r");

253 
LSåóm
 *
p
 = 
	`√wfûe
(
L
);

254 c⁄° *
md
 = 
mode
;

255 
	`luaL_¨gcheck
(
L
, 
	`l_checkmode
(
md
), 2, "invalid mode");

256 
p
->
f
 = 
	`f›í
(
fûíame
, 
mode
);

257  (
p
->
f
 =
NULL
Ë? 
	`luaL_fûîesu…
(
L
, 0, 
fûíame
) : 1;

258 
	}
}

264 
	$io_p˛o£
 (
lua_Sèã
 *
L
) {

265 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

266  
	`luaL_exe¸esu…
(
L
, 
	`l_p˛o£
(L, 
p
->
f
));

267 
	}
}

270 
	$io_p›í
 (
lua_Sèã
 *
L
) {

271 c⁄° *
fûíame
 = 
	`luaL_check°rög
(
L
, 1);

272 c⁄° *
mode
 = 
	`luaL_›t°rög
(
L
, 2, "r");

273 
LSåóm
 *
p
 = 
	`√w¥efûe
(
L
);

274 
p
->
f
 = 
	`l_p›í
(
L
, 
fûíame
, 
mode
);

275 
p
->
˛o£f
 = &
io_p˛o£
;

276  (
p
->
f
 =
NULL
Ë? 
	`luaL_fûîesu…
(
L
, 0, 
fûíame
) : 1;

277 
	}
}

280 
	$io_tmpfûe
 (
lua_Sèã
 *
L
) {

281 
LSåóm
 *
p
 = 
	`√wfûe
(
L
);

282 
p
->
f
 = 
	`tmpfûe
();

283  (
p
->
f
 =
NULL
Ë? 
	`luaL_fûîesu…
(
L
, 0, NULL) : 1;

284 
	}
}

287 
FILE
 *
	$gëiofûe
 (
lua_Sèã
 *
L
, c⁄° *
födex
) {

288 
LSåóm
 *
p
;

289 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
födex
);

290 
p
 = (
LSåóm
 *)
	`lua_tou£rd©a
(
L
, -1);

291 i‡(
	`is˛o£d
(
p
))

292 
	`luaL_îr‹
(
L
, "°™d¨d %†fûêi†˛o£d", 
födex
 + 
IOPREF_LEN
);

293  
p
->
f
;

294 
	}
}

297 
	$g_iofûe
 (
lua_Sèã
 *
L
, c⁄° *
f
, c⁄° *
mode
) {

298 i‡(!
	`lua_i¢⁄e‹nû
(
L
, 1)) {

299 c⁄° *
fûíame
 = 
	`lua_to°rög
(
L
, 1);

300 i‡(
fûíame
)

301 
	`›ícheck
(
L
, 
fûíame
, 
mode
);

303 
	`tofûe
(
L
);

304 
	`lua_pushvÆue
(
L
, 1);

306 
	`lua_£tfõld
(
L
, 
LUA_REGISTRYINDEX
, 
f
);

309 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
f
);

311 
	}
}

314 
	$io_öput
 (
lua_Sèã
 *
L
) {

315  
	`g_iofûe
(
L
, 
IO_INPUT
, "r");

316 
	}
}

319 
	$io_ouçut
 (
lua_Sèã
 *
L
) {

320  
	`g_iofûe
(
L
, 
IO_OUTPUT
, "w");

321 
	}
}

324 
io_ªadlöe
 (
lua_Sèã
 *
L
);

331 
	#MAXARGLINE
 250

	)

333 
	$aux_löes
 (
lua_Sèã
 *
L
, 
to˛o£
) {

334 
n
 = 
	`lua_gët›
(
L
) - 1;

335 
	`luaL_¨gcheck
(
L
, 
n
 <
MAXARGLINE
, MAXARGLINE + 2, "too manyárguments");

336 
	`lua_pushöãgî
(
L
, 
n
);

337 
	`lua_pushboﬁón
(
L
, 
to˛o£
);

338 
	`lua_rŸ©e
(
L
, 2, 2);

339 
	`lua_pushc˛osuª
(
L
, 
io_ªadlöe
, 3 + 
n
);

340 
	}
}

343 
	$f_löes
 (
lua_Sèã
 *
L
) {

344 
	`tofûe
(
L
);

345 
	`aux_löes
(
L
, 0);

347 
	}
}

350 
	$io_löes
 (
lua_Sèã
 *
L
) {

351 
to˛o£
;

352 i‡(
	`lua_i¢⁄e
(
L
, 1)Ë
	`lua_pushnû
(L);

353 i‡(
	`lua_i¢û
(
L
, 1)) {

354 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
IO_INPUT
);

355 
	`lua_ª∂a˚
(
L
, 1);

356 
	`tofûe
(
L
);

357 
to˛o£
 = 0;

360 c⁄° *
fûíame
 = 
	`luaL_check°rög
(
L
, 1);

361 
	`›ícheck
(
L
, 
fûíame
, "r");

362 
	`lua_ª∂a˚
(
L
, 1);

363 
to˛o£
 = 1;

365 
	`aux_löes
(
L
, 
to˛o£
);

367 
	}
}

378 #i‡!
deföed
 (
L_MAXLENNUM
)

379 
	#L_MAXLENNUM
 200

	)

385 
FILE
 *
	mf
;

386 
	mc
;

387 
	mn
;

388 
	mbuff
[
L_MAXLENNUM
 + 1];

389 } 
	tRN
;

395 
	$√xtc
 (
RN
 *
∫
) {

396 i‡(
∫
->
n
 >
L_MAXLENNUM
) {

397 
∫
->
buff
[0] = '\0';

401 
∫
->
buff
[∫->
n
++] =Ñn->
c
;

402 
∫
->
c
 = 
	`l_gëc
‘n->
f
);

405 
	}
}

411 
	$ã°2
 (
RN
 *
∫
, c⁄° *
£t
) {

412 i‡(
∫
->
c
 =
£t
[0] ||Ñn->c == set[1])

413  
	`√xtc
(
∫
);

415 
	}
}

421 
	$ªaddigôs
 (
RN
 *
∫
, 
hex
) {

422 
cou¡
 = 0;

423 (
hex
 ? 
	`isxdigô
(
∫
->
c
Ë: 
	`isdigô
‘n->c)Ë&& 
	`√xtc
(rn))

424 
cou¡
++;

425  
cou¡
;

426 
	}
}

434 
	$ªad_numbî
 (
lua_Sèã
 *
L
, 
FILE
 *
f
) {

435 
RN
 
∫
;

436 
cou¡
 = 0;

437 
hex
 = 0;

438 
de˝
[2];

439 
∫
.
f
 = f;Ñn.
n
 = 0;

440 
de˝
[0] = 
	`lua_gëloˇÀde˝oöt
();

441 
de˝
[1] = '.';

442 
	`l_lockfûe
(
∫
.
f
);

443 dÿ{ 
∫
.
c
 = 
	`l_gëc
‘n.
f
); } 
	`is•a˚
(rn.c));

444 
	`ã°2
(&
∫
, "-+");

445 i‡(
	`ã°2
(&
∫
, "00")) {

446 i‡(
	`ã°2
(&
∫
, "xX")Ë
hex
 = 1;

447 
cou¡
 = 1;

449 
cou¡
 +
	`ªaddigôs
(&
∫
, 
hex
);

450 i‡(
	`ã°2
(&
∫
, 
de˝
))

451 
cou¡
 +
	`ªaddigôs
(&
∫
, 
hex
);

452 i‡(
cou¡
 > 0 && 
	`ã°2
(&
∫
, (
hex
 ? "pP" : "eE"))) {

453 
	`ã°2
(&
∫
, "-+");

454 
	`ªaddigôs
(&
∫
, 0);

456 
	`ungëc
(
∫
.
c
,Ñn.
f
);

457 
	`l_u∆ockfûe
(
∫
.
f
);

458 
∫
.
buff
[∫.
n
] = '\0';

459 i‡(
	`lua_°rögt⁄umbî
(
L
, 
∫
.
buff
))

462 
	`lua_pushnû
(
L
);

465 
	}
}

468 
	$ã°_eof
 (
lua_Sèã
 *
L
, 
FILE
 *
f
) {

469 
c
 = 
	`gëc
(
f
);

470 
	`ungëc
(
c
, 
f
);

471 
	`lua_pushlôîÆ
(
L
, "");

472  (
c
 !
EOF
);

473 
	}
}

476 
	$ªad_löe
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, 
ch›
) {

477 
luaL_Buf„r
 
b
;

478 
c
 = '\0';

479 
	`luaL_bufföô
(
L
, &
b
);

480 
c
 !
EOF
 && c != '\n') {

481 *
buff
 = 
	`luaL_¥ïbuf„r
(&
b
);

482 
i
 = 0;

483 
	`l_lockfûe
(
f
);

484 
i
 < 
LUAL_BUFFERSIZE
 && (
c
 = 
	`l_gëc
(
f
)Ë!
EOF
 && c != '\n')

485 
buff
[
i
++] = 
c
;

486 
	`l_u∆ockfûe
(
f
);

487 
	`luaL_addsize
(&
b
, 
i
);

489 i‡(!
ch›
 && 
c
 == '\n')

490 
	`luaL_addch¨
(&
b
, 
c
);

491 
	`luaL_pushªsu…
(&
b
);

493  (
c
 ='\n' || 
	`lua_øwÀn
(
L
, -1) > 0);

494 
	}
}

497 
	$ªad_Æl
 (
lua_Sèã
 *
L
, 
FILE
 *
f
) {

498 
size_t
 
ƒ
;

499 
luaL_Buf„r
 
b
;

500 
	`luaL_bufföô
(
L
, &
b
);

502 *
p
 = 
	`luaL_¥ïbuf„r
(&
b
);

503 
ƒ
 = 
	`‰ód
(
p
, (), 
LUAL_BUFFERSIZE
, 
f
);

504 
	`luaL_addsize
(&
b
, 
ƒ
);

505 } 
ƒ
 =
LUAL_BUFFERSIZE
);

506 
	`luaL_pushªsu…
(&
b
);

507 
	}
}

510 
	$ªad_ch¨s
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, 
size_t
 
n
) {

511 
size_t
 
ƒ
;

512 *
p
;

513 
luaL_Buf„r
 
b
;

514 
	`luaL_bufföô
(
L
, &
b
);

515 
p
 = 
	`luaL_¥ïbuffsize
(&
b
, 
n
);

516 
ƒ
 = 
	`‰ód
(
p
, (), 
n
, 
f
);

517 
	`luaL_addsize
(&
b
, 
ƒ
);

518 
	`luaL_pushªsu…
(&
b
);

519  (
ƒ
 > 0);

520 
	}
}

523 
	$g_ªad
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, 
fú°
) {

524 
«rgs
 = 
	`lua_gët›
(
L
) - 1;

525 
suc˚ss
;

526 
n
;

527 
	`˛óªº
(
f
);

528 i‡(
«rgs
 == 0) {

529 
suc˚ss
 = 
	`ªad_löe
(
L
, 
f
, 1);

530 
n
 = 
fú°
+1;

533 
	`luaL_check°ack
(
L
, 
«rgs
+
LUA_MINSTACK
, "too manyárguments");

534 
suc˚ss
 = 1;

535 
n
 = 
fú°
; 
«rgs
-- && 
suc˚ss
;Ç++) {

536 i‡(
	`lua_ty≥
(
L
, 
n
Ë=
LUA_TNUMBER
) {

537 
size_t
 
l
 = (size_t)
	`luaL_checköãgî
(
L
, 
n
);

538 
suc˚ss
 = (
l
 =0Ë? 
	`ã°_eof
(
L
, 
f
Ë: 
	`ªad_ch¨s
(L, f,Ü);

541 c⁄° *
p
 = 
	`luaL_check°rög
(
L
, 
n
);

542 i‡(*
p
 == '*')Ö++;

543 *
p
) {

545 
suc˚ss
 = 
	`ªad_numbî
(
L
, 
f
);

548 
suc˚ss
 = 
	`ªad_löe
(
L
, 
f
, 1);

551 
suc˚ss
 = 
	`ªad_löe
(
L
, 
f
, 0);

554 
	`ªad_Æl
(
L
, 
f
);

555 
suc˚ss
 = 1;

558  
	`luaL_¨gîr‹
(
L
, 
n
, "invalid format");

563 i‡(
	`„º‹
(
f
))

564  
	`luaL_fûîesu…
(
L
, 0, 
NULL
);

565 i‡(!
suc˚ss
) {

566 
	`lua_p›
(
L
, 1);

567 
	`lua_pushnû
(
L
);

569  
n
 - 
fú°
;

570 
	}
}

573 
	$io_ªad
 (
lua_Sèã
 *
L
) {

574  
	`g_ªad
(
L
, 
	`gëiofûe
(L, 
IO_INPUT
), 1);

575 
	}
}

578 
	$f_ªad
 (
lua_Sèã
 *
L
) {

579  
	`g_ªad
(
L
, 
	`tofûe
(L), 2);

580 
	}
}

583 
	$io_ªadlöe
 (
lua_Sèã
 *
L
) {

584 
LSåóm
 *
p
 = (LSåóm *)
	`lua_tou£rd©a
(
L
, 
	`lua_upvÆueödex
(1));

585 
i
;

586 
n
 = ()
	`lua_toöãgî
(
L
, 
	`lua_upvÆueödex
(2));

587 i‡(
	`is˛o£d
(
p
))

588  
	`luaL_îr‹
(
L
, "file isálready closed");

589 
	`lua_£â›
(
L
 , 1);

590 
	`luaL_check°ack
(
L
, 
n
, "too manyárguments");

591 
i
 = 1; i <
n
; i++)

592 
	`lua_pushvÆue
(
L
, 
	`lua_upvÆueödex
(3 + 
i
));

593 
n
 = 
	`g_ªad
(
L
, 
p
->
f
, 2);

594 
	`lua_as£π
(
n
 > 0);

595 i‡(
	`lua_toboﬁón
(
L
, -
n
))

596  
n
;

598 i‡(
n
 > 1) {

600  
	`luaL_îr‹
(
L
, "%s", 
	`lua_to°rög
(L, -
n
 + 1));

602 i‡(
	`lua_toboﬁón
(
L
, 
	`lua_upvÆueödex
(3))) {

603 
	`lua_£â›
(
L
, 0);

604 
	`lua_pushvÆue
(
L
, 
	`lua_upvÆueödex
(1));

605 
	`aux_˛o£
(
L
);

609 
	}
}

614 
	$g_wrôe
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, 
¨g
) {

615 
«rgs
 = 
	`lua_gët›
(
L
Ë- 
¨g
;

616 
°©us
 = 1;

617 ; 
«rgs
--; 
¨g
++) {

618 i‡(
	`lua_ty≥
(
L
, 
¨g
Ë=
LUA_TNUMBER
) {

620 
Àn
 = 
	`lua_isöãgî
(
L
, 
¨g
)

621 ? 
	`Ârötf
(
f
, 
LUA_INTEGER_FMT
, 
	`lua_toöãgî
(
L
, 
¨g
))

622 : 
	`Ârötf
(
f
, 
LUA_NUMBER_FMT
, 
	`lua_t⁄umbî
(
L
, 
¨g
));

623 
°©us
 = sètu†&& (
Àn
 > 0);

626 
size_t
 
l
;

627 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
l
);

628 
°©us
 = sètu†&& (
	`fwrôe
(
s
, (), 
l
, 
f
) ==Ü);

631 i‡(
°©us
)  1;

632  
	`luaL_fûîesu…
(
L
, 
°©us
, 
NULL
);

633 
	}
}

636 
	$io_wrôe
 (
lua_Sèã
 *
L
) {

637  
	`g_wrôe
(
L
, 
	`gëiofûe
(L, 
IO_OUTPUT
), 1);

638 
	}
}

641 
	$f_wrôe
 (
lua_Sèã
 *
L
) {

642 
FILE
 *
f
 = 
	`tofûe
(
L
);

643 
	`lua_pushvÆue
(
L
, 1);

644  
	`g_wrôe
(
L
, 
f
, 2);

645 
	}
}

648 
	$f_£ek
 (
lua_Sèã
 *
L
) {

649 c⁄° 
mode
[] = {
SEEK_SET
, 
SEEK_CUR
, 
SEEK_END
};

650 c⁄° *c⁄° 
modíames
[] = {"£t", "cur", "íd", 
NULL
};

651 
FILE
 *
f
 = 
	`tofûe
(
L
);

652 
›
 = 
	`luaL_check›ti⁄
(
L
, 2, "cur", 
modíames
);

653 
lua_I¡egî
 
p3
 = 
	`luaL_›töãgî
(
L
, 3, 0);

654 
l_£eknum
 
off£t
 = (l_£eknum)
p3
;

655 
	`luaL_¨gcheck
(
L
, (
lua_I¡egî
)
off£t
 =
p3
, 3,

657 
›
 = 
	`l_f£ek
(
f
, 
off£t
, 
mode
[op]);

658 i‡(
›
)

659  
	`luaL_fûîesu…
(
L
, 0, 
NULL
);

661 
	`lua_pushöãgî
(
L
, (
lua_I¡egî
)
	`l_·ñl
(
f
));

664 
	}
}

667 
	$f_£tvbuf
 (
lua_Sèã
 *
L
) {

668 c⁄° 
mode
[] = {
_IONBF
, 
_IOFBF
, 
_IOLBF
};

669 c⁄° *c⁄° 
modíames
[] = {"no", "fuŒ", "löe", 
NULL
};

670 
FILE
 *
f
 = 
	`tofûe
(
L
);

671 
›
 = 
	`luaL_check›ti⁄
(
L
, 2, 
NULL
, 
modíames
);

672 
lua_I¡egî
 
sz
 = 
	`luaL_›töãgî
(
L
, 3, 
LUAL_BUFFERSIZE
);

673 
ªs
 = 
	`£tvbuf
(
f
, 
NULL
, 
mode
[
›
], (
size_t
)
sz
);

674  
	`luaL_fûîesu…
(
L
, 
ªs
 =0, 
NULL
);

675 
	}
}

679 
	$io_Êush
 (
lua_Sèã
 *
L
) {

680  
	`luaL_fûîesu…
(
L
, 
	`fÊush
(
	`gëiofûe
(L, 
IO_OUTPUT
)Ë=0, 
NULL
);

681 
	}
}

684 
	$f_Êush
 (
lua_Sèã
 *
L
) {

685  
	`luaL_fûîesu…
(
L
, 
	`fÊush
(
	`tofûe
(L)Ë=0, 
NULL
);

686 
	}
}

692 c⁄° 
luaL_Reg
 
	giﬁib
[] = {

693 {"˛o£", 
io_˛o£
},

694 {"Êush", 
io_Êush
},

695 {"öput", 
io_öput
},

696 {"löes", 
io_löes
},

697 {"›í", 
io_›í
},

698 {"ouçut", 
io_ouçut
},

699 {"p›í", 
io_p›í
},

700 {"ªad", 
io_ªad
},

701 {"tmpfûe", 
io_tmpfûe
},

702 {"ty≥", 
io_ty≥
},

703 {"wrôe", 
io_wrôe
},

704 {
NULL
, NULL}

711 c⁄° 
luaL_Reg
 
	gÊib
[] = {

712 {"˛o£", 
io_˛o£
},

713 {"Êush", 
f_Êush
},

714 {"löes", 
f_löes
},

715 {"ªad", 
f_ªad
},

716 {"£ek", 
f_£ek
},

717 {"£tvbuf", 
f_£tvbuf
},

718 {"wrôe", 
f_wrôe
},

719 {"__gc", 
f_gc
},

720 {"__to°rög", 
f_to°rög
},

721 {
NULL
, NULL}

725 
	$¸óãmëa
 (
lua_Sèã
 *
L
) {

726 
	`luaL_√wmë©abÀ
(
L
, 
LUA_FILEHANDLE
);

727 
	`lua_pushvÆue
(
L
, -1);

728 
	`lua_£tfõld
(
L
, -2, "__index");

729 
	`luaL_£tfuncs
(
L
, 
Êib
, 0);

730 
	`lua_p›
(
L
, 1);

731 
	}
}

737 
	$io_no˛o£
 (
lua_Sèã
 *
L
) {

738 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

739 
p
->
˛o£f
 = &
io_no˛o£
;

740 
	`lua_pushnû
(
L
);

741 
	`lua_pushlôîÆ
(
L
, "cannot close standard file");

743 
	}
}

746 
	$¸óã°dfûe
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, c⁄° *
k
,

747 c⁄° *
‚ame
) {

748 
LSåóm
 *
p
 = 
	`√w¥efûe
(
L
);

749 
p
->
f
 = f;

750 
p
->
˛o£f
 = &
io_no˛o£
;

751 i‡(
k
 !
NULL
) {

752 
	`lua_pushvÆue
(
L
, -1);

753 
	`lua_£tfõld
(
L
, 
LUA_REGISTRYINDEX
, 
k
);

755 
	`lua_£tfõld
(
L
, -2, 
‚ame
);

756 
	}
}

759 
LUAMOD_API
 
	$lua›í_io
 (
lua_Sèã
 *
L
) {

760 
	`luaL_√wlib
(
L
, 
iﬁib
);

761 
	`¸óãmëa
(
L
);

763 
	`¸óã°dfûe
(
L
, 
°dö
, 
IO_INPUT
, "stdin");

764 
	`¸óã°dfûe
(
L
, 
°dout
, 
IO_OUTPUT
, "stdout");

765 
	`¸óã°dfûe
(
L
, 
°dîr
, 
NULL
, "stderr");

767 
	}
}

	@lua/src/llex.c

7 
	#Œex_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<loˇÀ.h
>

14 
	~<°rög.h
>

16 
	~"lua.h
"

18 
	~"l˘y≥.h
"

19 
	~"ldebug.h
"

20 
	~"ldo.h
"

21 
	~"lgc.h
"

22 
	~"Œex.h
"

23 
	~"lobje˘.h
"

24 
	~"Õ¨£r.h
"

25 
	~"l°©e.h
"

26 
	~"l°rög.h
"

27 
	~"…abÀ.h
"

28 
	~"lzio.h
"

32 
	#√xt
(
ls
Ë÷s->
cuºít
 = 
	`zgëc
÷s->
z
))

	)

36 
	#cuºIsNewlöe
(
ls
Ë÷s->
cuºít
 ='\n' ||Üs->cuºíà='\r')

	)

40 c⁄° *c⁄° 
	gluaX_tokís
 [] = {

51 
	#ßve_™d_√xt
(
ls
Ë(
	`ßve
÷s,Üs->
cuºít
), 
	`√xt
÷s))

	)

54 
l_n‹ë
 
Àxîr‹
 (
LexSèã
 *
ls
, c⁄° *
msg
, 
tokí
);

57 
	$ßve
 (
LexSèã
 *
ls
, 
c
) {

58 
Mbuf„r
 *
b
 = 
ls
->
buff
;

59 i‡(
	`luaZ_bufÊí
(
b
Ë+ 1 > 
	`luaZ_sizebuf„r
(b)) {

60 
size_t
 
√wsize
;

61 i‡(
	`luaZ_sizebuf„r
(
b
Ë>
MAX_SIZE
/2)

62 
	`Àxîr‹
(
ls
, "lexicalÉlementÅooÜong", 0);

63 
√wsize
 = 
	`luaZ_sizebuf„r
(
b
) * 2;

64 
	`luaZ_ªsizebuf„r
(
ls
->
L
, 
b
, 
√wsize
);

66 
b
->
buf„r
[
	`luaZ_bufÊí
(b)++] = 
	`ˇ°
(, 
c
);

67 
	}
}

70 
	$luaX_öô
 (
lua_Sèã
 *
L
) {

71 
i
;

72 
TSåög
 *
e
 = 
	`luaS_√wlôîÆ
(
L
, 
LUA_ENV
);

73 
	`luaC_fix
(
L
, 
	`obj2gco
(
e
));

74 
i
=0; i<
NUM_RESERVED
; i++) {

75 
TSåög
 *
ts
 = 
	`luaS_√w
(
L
, 
luaX_tokís
[
i
]);

76 
	`luaC_fix
(
L
, 
	`obj2gco
(
ts
));

77 
ts
->
exåa
 = 
	`ˇ°_byã
(
i
+1);

79 
	}
}

82 c⁄° *
	$luaX_tokí2°r
 (
LexSèã
 *
ls
, 
tokí
) {

83 i‡(
tokí
 < 
FIRST_RESERVED
) {

84 
	`lua_as£π
(
tokí
 =
	`ˇ°_uch¨
(token));

85  
	`luaO_pushf°rög
(
ls
->
L
, "'%c'", 
tokí
);

88 c⁄° *
s
 = 
luaX_tokís
[
tokí
 - 
FIRST_RESERVED
];

89 i‡(
tokí
 < 
TK_EOS
)

90  
	`luaO_pushf°rög
(
ls
->
L
, "'%s'", 
s
);

92  
s
;

94 
	}
}

97 c⁄° *
	$txtTokí
 (
LexSèã
 *
ls
, 
tokí
) {

98 
tokí
) {

99 
TK_NAME
: 
TK_STRING
:

100 
TK_FLT
: 
TK_INT
:

101 
	`ßve
(
ls
, '\0');

102  
	`luaO_pushf°rög
(
ls
->
L
, "'%s'", 
	`luaZ_buf„r
÷s->
buff
));

104  
	`luaX_tokí2°r
(
ls
, 
tokí
);

106 
	}
}

109 
l_n‹ë
 
	$Àxîr‹
 (
LexSèã
 *
ls
, c⁄° *
msg
, 
tokí
) {

110 
msg
 = 
	`luaG_addöfo
(
ls
->
L
, msg,Üs->
sour˚
,Üs->
löíumbî
);

111 i‡(
tokí
)

112 
	`luaO_pushf°rög
(
ls
->
L
, "%†√¨ %s", 
msg
, 
	`txtTokí
÷s, 
tokí
));

113 
	`luaD_throw
(
ls
->
L
, 
LUA_ERRSYNTAX
);

114 
	}
}

117 
l_n‹ë
 
	$luaX_sy¡axîr‹
 (
LexSèã
 *
ls
, c⁄° *
msg
) {

118 
	`Àxîr‹
(
ls
, 
msg
,Üs->
t
.
tokí
);

119 
	}
}

127 
TSåög
 *
	$luaX_√w°rög
 (
LexSèã
 *
ls
, c⁄° *
°r
, 
size_t
 
l
) {

128 
lua_Sèã
 *
L
 = 
ls
->L;

129 
TVÆue
 *
o
;

130 
TSåög
 *
ts
 = 
	`luaS_√wl°r
(
L
, 
°r
, 
l
);

131 
	`£tsvÆue2s
(
L
, L->
t›
++, 
ts
);

132 
o
 = 
	`luaH_£t
(
L
, 
ls
->
h
, L->
t›
 - 1);

133 i‡(
	`âi¢û
(
o
)) {

136 
	`£tbvÆue
(
o
, 1);

137 
	`luaC_checkGC
(
L
);

140 
ts
 = 
	`tsvÆue
(
	`key‰omvÆ
(
o
));

142 
L
->
t›
--;

143  
ts
;

144 
	}
}

151 
	$ö˛öíumbî
 (
LexSèã
 *
ls
) {

152 
ﬁd
 = 
ls
->
cuºít
;

153 
	`lua_as£π
(
	`cuºIsNewlöe
(
ls
));

154 
	`√xt
(
ls
);

155 i‡(
	`cuºIsNewlöe
(
ls
Ë&&Üs->
cuºít
 !
ﬁd
)

156 
	`√xt
(
ls
);

157 i‡(++
ls
->
löíumbî
 >
MAX_INT
)

158 
	`Àxîr‹
(
ls
, "chunk hasÅoo manyÜines", 0);

159 
	}
}

162 
	$luaX_£töput
 (
lua_Sèã
 *
L
, 
LexSèã
 *
ls
, 
ZIO
 *
z
, 
TSåög
 *
sour˚
,

163 
fú°ch¨
) {

164 
ls
->
t
.
tokí
 = 0;

165 
ls
->
L
 = L;

166 
ls
->
cuºít
 = 
fú°ch¨
;

167 
ls
->
lookahód
.
tokí
 = 
TK_EOS
;

168 
ls
->
z
 = z;

169 
ls
->
fs
 = 
NULL
;

170 
ls
->
löíumbî
 = 1;

171 
ls
->
œ°löe
 = 1;

172 
ls
->
sour˚
 = source;

173 
ls
->
ívn
 = 
	`luaS_√wlôîÆ
(
L
, 
LUA_ENV
);

174 
	`luaZ_ªsizebuf„r
(
ls
->
L
,Üs->
buff
, 
LUA_MINBUFFER
);

175 
	}
}

186 
	$check_√xt1
 (
LexSèã
 *
ls
, 
c
) {

187 i‡(
ls
->
cuºít
 =
c
) {

188 
	`√xt
(
ls
);

192 
	}
}

199 
	$check_√xt2
 (
LexSèã
 *
ls
, c⁄° *
£t
) {

200 
	`lua_as£π
(
£t
[2] == '\0');

201 i‡(
ls
->
cuºít
 =
£t
[0] ||Üs->current == set[1]) {

202 
	`ßve_™d_√xt
(
ls
);

206 
	}
}

214 
	$ªad_numîÆ
 (
LexSèã
 *
ls
, 
SemInfo
 *
£möfo
) {

215 
TVÆue
 
obj
;

216 c⁄° *
expo
 = "Ee";

217 
fú°
 = 
ls
->
cuºít
;

218 
	`lua_as£π
(
	`lisdigô
(
ls
->
cuºít
));

219 
	`ßve_™d_√xt
(
ls
);

220 i‡(
fú°
 ='0' && 
	`check_√xt2
(
ls
, "xX"))

221 
expo
 = "Pp";

223 i‡(
	`check_√xt2
(
ls
, 
expo
))

224 
	`check_√xt2
(
ls
, "-+");

225 i‡(
	`lisxdigô
(
ls
->
cuºít
))

226 
	`ßve_™d_√xt
(
ls
);

227 i‡(
ls
->
cuºít
 == '.')

228 
	`ßve_™d_√xt
(
ls
);

231 
	`ßve
(
ls
, '\0');

232 i‡(
	`luaO_°r2num
(
	`luaZ_buf„r
(
ls
->
buff
), &
obj
) == 0)

233 
	`Àxîr‹
(
ls
, "mÆf‹medÇumbî", 
TK_FLT
);

234 i‡(
	`âisöãgî
(&
obj
)) {

235 
£möfo
->
i
 = 
	`ivÆue
(&
obj
);

236  
TK_INT
;

239 
	`lua_as£π
(
	`âisÊﬂt
(&
obj
));

240 
£möfo
->
r
 = 
	`ÊtvÆue
(&
obj
);

241  
TK_FLT
;

243 
	}
}

251 
	$skù_£p
 (
LexSèã
 *
ls
) {

252 
cou¡
 = 0;

253 
s
 = 
ls
->
cuºít
;

254 
	`lua_as£π
(
s
 == '[' || s == ']');

255 
	`ßve_™d_√xt
(
ls
);

256 
ls
->
cuºít
 == '=') {

257 
	`ßve_™d_√xt
(
ls
);

258 
cou¡
++;

260  (
ls
->
cuºít
 =
s
Ë? 
cou¡
 : (-count) - 1;

261 
	}
}

264 
	$ªad_l⁄g_°rög
 (
LexSèã
 *
ls
, 
SemInfo
 *
£möfo
, 
£p
) {

265 
löe
 = 
ls
->
löíumbî
;

266 
	`ßve_™d_√xt
(
ls
);

267 i‡(
	`cuºIsNewlöe
(
ls
))

268 
	`ö˛öíumbî
(
ls
);

270 
ls
->
cuºít
) {

271 
EOZ
: {

272 c⁄° *
wh©
 = (
£möfo
 ? "string" : "comment");

273 c⁄° *
msg
 = 
	`luaO_pushf°rög
(
ls
->
L
,

274 "unföishedÜ⁄g %†(°¨tögáàlöê%d)", 
wh©
, 
löe
);

275 
	`Àxîr‹
(
ls
, 
msg
, 
TK_EOS
);

279 i‡(
	`skù_£p
(
ls
Ë=
£p
) {

280 
	`ßve_™d_√xt
(
ls
);

281 
ídlo›
;

286 
	`ßve
(
ls
, '\n');

287 
	`ö˛öíumbî
(
ls
);

288 i‡(!
£möfo
Ë
	`luaZ_ª£tbuf„r
(
ls
->
buff
);

292 i‡(
£möfo
Ë
	`ßve_™d_√xt
(
ls
);

293 
	`√xt
(
ls
);

296 } 
ídlo›
:

297 i‡(
£möfo
)

298 
£möfo
->
ts
 = 
	`luaX_√w°rög
(
ls
, 
	`luaZ_buf„r
÷s->
buff
Ë+ (2 + 
£p
),

299 
	`luaZ_bufÊí
(
ls
->
buff
Ë- 2*(2 + 
£p
));

300 
	}
}

303 
	$esccheck
 (
LexSèã
 *
ls
, 
c
, c⁄° *
msg
) {

304 i‡(!
c
) {

305 i‡(
ls
->
cuºít
 !
EOZ
)

306 
	`ßve_™d_√xt
(
ls
);

307 
	`Àxîr‹
(
ls
, 
msg
, 
TK_STRING
);

309 
	}
}

312 
	$gëhexa
 (
LexSèã
 *
ls
) {

313 
	`ßve_™d_√xt
(
ls
);

314 
	`esccheck
 (
ls
, 
	`lisxdigô
÷s->
cuºít
), "hexadecimal digitÉxpected");

315  
	`luaO_hexavÆue
(
ls
->
cuºít
);

316 
	}
}

319 
	$ªadhex´sc
 (
LexSèã
 *
ls
) {

320 
r
 = 
	`gëhexa
(
ls
);

321 
r
 = (∏<< 4Ë+ 
	`gëhexa
(
ls
);

322 
	`luaZ_buf‰emove
(
ls
->
buff
, 2);

323  
r
;

324 
	}
}

327 
	$ªadutf8esc
 (
LexSèã
 *
ls
) {

328 
r
;

329 
i
 = 4;

330 
	`ßve_™d_√xt
(
ls
);

331 
	`esccheck
(
ls
,Üs->
cuºít
 == '{', "missing '{'");

332 
r
 = 
	`gëhexa
(
ls
);

333 (
	`ßve_™d_√xt
(
ls
), 
	`lisxdigô
÷s->
cuºít
))) {

334 
i
++;

335 
r
 = (∏<< 4Ë+ 
	`luaO_hexavÆue
(
ls
->
cuºít
);

336 
	`esccheck
(
ls
, 
r
 <= 0x10FFFF, "UTF-8 valueÅooÜarge");

338 
	`esccheck
(
ls
,Üs->
cuºít
 == '}', "missing '}'");

339 
	`√xt
(
ls
);

340 
	`luaZ_buf‰emove
(
ls
->
buff
, 
i
);

341  
r
;

342 
	}
}

345 
	$utf8esc
 (
LexSèã
 *
ls
) {

346 
buff
[
UTF8BUFFSZ
];

347 
n
 = 
	`luaO_utf8esc
(
buff
, 
	`ªadutf8esc
(
ls
));

348 ; 
n
 > 0;Ç--)

349 
	`ßve
(
ls
, 
buff
[
UTF8BUFFSZ
 - 
n
]);

350 
	}
}

353 
	$ªadde˚sc
 (
LexSèã
 *
ls
) {

354 
i
;

355 
r
 = 0;

356 
i
 = 0; i < 3 && 
	`lisdigô
(
ls
->
cuºít
); i++) {

357 
r
 = 10*∏+ 
ls
->
cuºít
 - '0';

358 
	`ßve_™d_√xt
(
ls
);

360 
	`esccheck
(
ls
, 
r
 <
UCHAR_MAX
, "decimalÉscapeÅooÜarge");

361 
	`luaZ_buf‰emove
(
ls
->
buff
, 
i
);

362  
r
;

363 
	}
}

366 
	$ªad_°rög
 (
LexSèã
 *
ls
, 
dñ
, 
SemInfo
 *
£möfo
) {

367 
	`ßve_™d_√xt
(
ls
);

368 
ls
->
cuºít
 !
dñ
) {

369 
ls
->
cuºít
) {

370 
EOZ
:

371 
	`Àxîr‹
(
ls
, "unföished såög", 
TK_EOS
);

375 
	`Àxîr‹
(
ls
, "unföished såög", 
TK_STRING
);

378 
c
;

379 
	`ßve_™d_√xt
(
ls
);

380 
ls
->
cuºít
) {

381 'a': 
c
 = '\a'; 
ªad_ßve
;

382 'b': 
c
 = '\b'; 
ªad_ßve
;

383 'f': 
c
 = '\f'; 
ªad_ßve
;

384 'n': 
c
 = '\n'; 
ªad_ßve
;

385 'r': 
c
 = '\r'; 
ªad_ßve
;

386 't': 
c
 = '\t'; 
ªad_ßve
;

387 'v': 
c
 = '\v'; 
ªad_ßve
;

388 'x': 
c
 = 
	`ªadhex´sc
(
ls
); 
ªad_ßve
;

389 'u': 
	`utf8esc
(
ls
); 
no_ßve
;

391 
	`ö˛öíumbî
(
ls
); 
c
 = '\n'; 
⁄ly_ßve
;

393 
c
 = 
ls
->
cuºít
; 
ªad_ßve
;

394 
EOZ
: 
no_ßve
;

396 
	`luaZ_buf‰emove
(
ls
->
buff
, 1);

397 
	`√xt
(
ls
);

398 
	`lis•a˚
(
ls
->
cuºít
)) {

399 i‡(
	`cuºIsNewlöe
(
ls
)Ë
	`ö˛öíumbî
(ls);

400 
	`√xt
(
ls
);

402 
no_ßve
;

405 
	`esccheck
(
ls
, 
	`lisdigô
÷s->
cuºít
), "invalidÉscape sequence");

406 
c
 = 
	`ªadde˚sc
(
ls
);

407 
⁄ly_ßve
;

410 
ªad_ßve
:

411 
	`√xt
(
ls
);

413 
⁄ly_ßve
:

414 
	`luaZ_buf‰emove
(
ls
->
buff
, 1);

415 
	`ßve
(
ls
, 
c
);

417 
no_ßve
: ;

420 
	`ßve_™d_√xt
(
ls
);

423 
	`ßve_™d_√xt
(
ls
);

424 
£möfo
->
ts
 = 
	`luaX_√w°rög
(
ls
, 
	`luaZ_buf„r
÷s->
buff
) + 1,

425 
	`luaZ_bufÊí
(
ls
->
buff
) - 2);

426 
	}
}

429 
	$Œex
 (
LexSèã
 *
ls
, 
SemInfo
 *
£möfo
) {

430 
	`luaZ_ª£tbuf„r
(
ls
->
buff
);

432 
ls
->
cuºít
) {

434 
	`ö˛öíumbî
(
ls
);

438 
	`√xt
(
ls
);

442 
	`√xt
(
ls
);

443 i‡(
ls
->
cuºít
 != '-')  '-';

445 
	`√xt
(
ls
);

446 i‡(
ls
->
cuºít
 == '[') {

447 
£p
 = 
	`skù_£p
(
ls
);

448 
	`luaZ_ª£tbuf„r
(
ls
->
buff
);

449 i‡(
£p
 >= 0) {

450 
	`ªad_l⁄g_°rög
(
ls
, 
NULL
, 
£p
);

451 
	`luaZ_ª£tbuf„r
(
ls
->
buff
);

456 !
	`cuºIsNewlöe
(
ls
Ë&&Üs->
cuºít
 !
EOZ
)

457 
	`√xt
(
ls
);

461 
£p
 = 
	`skù_£p
(
ls
);

462 i‡(
£p
 >= 0) {

463 
	`ªad_l⁄g_°rög
(
ls
, 
£möfo
, 
£p
);

464  
TK_STRING
;

466 i‡(
£p
 != -1)

467 
	`Àxîr‹
(
ls
, "övÆidÜ⁄g såög dñimôî", 
TK_STRING
);

471 
	`√xt
(
ls
);

472 i‡(
	`check_√xt1
(
ls
, '=')Ë 
TK_EQ
;

476 
	`√xt
(
ls
);

477 i‡(
	`check_√xt1
(
ls
, '=')Ë 
TK_LE
;

478 i‡(
	`check_√xt1
(
ls
, '<')Ë 
TK_SHL
;

482 
	`√xt
(
ls
);

483 i‡(
	`check_√xt1
(
ls
, '=')Ë 
TK_GE
;

484 i‡(
	`check_√xt1
(
ls
, '>')Ë 
TK_SHR
;

488 
	`√xt
(
ls
);

489 i‡(
	`check_√xt1
(
ls
, '/')Ë 
TK_IDIV
;

493 
	`√xt
(
ls
);

494 i‡(
	`check_√xt1
(
ls
, '=')Ë 
TK_NE
;

498 
	`√xt
(
ls
);

499 i‡(
	`check_√xt1
(
ls
, ':')Ë 
TK_DBCOLON
;

503 
	`ªad_°rög
(
ls
,Üs->
cuºít
, 
£möfo
);

504  
TK_STRING
;

507 
	`ßve_™d_√xt
(
ls
);

508 i‡(
	`check_√xt1
(
ls
, '.')) {

509 i‡(
	`check_√xt1
(
ls
, '.'))

510  
TK_DOTS
;

511  
TK_CONCAT
;

513 i‡(!
	`lisdigô
(
ls
->
cuºít
))  '.';

514  
	`ªad_numîÆ
(
ls
, 
£möfo
);

518  
	`ªad_numîÆ
(
ls
, 
£möfo
);

520 
EOZ
: {

521  
TK_EOS
;

524 i‡(
	`li¶Æpha
(
ls
->
cuºít
)) {

525 
TSåög
 *
ts
;

527 
	`ßve_™d_√xt
(
ls
);

528 } 
	`li¶Ænum
(
ls
->
cuºít
));

529 
ts
 = 
	`luaX_√w°rög
(
ls
, 
	`luaZ_buf„r
÷s->
buff
),

530 
	`luaZ_bufÊí
(
ls
->
buff
));

531 
£möfo
->
ts
 =Ås;

532 i‡(
	`i§e£rved
(
ts
))

533  
ts
->
exåa
 - 1 + 
FIRST_RESERVED
;

535  
TK_NAME
;

539 
c
 = 
ls
->
cuºít
;

540 
	`√xt
(
ls
);

541  
c
;

546 
	}
}

549 
	$luaX_√xt
 (
LexSèã
 *
ls
) {

550 
ls
->
œ°löe
 =Üs->
löíumbî
;

551 i‡(
ls
->
lookahód
.
tokí
 !
TK_EOS
) {

552 
ls
->
t
 =Üs->
lookahód
;

553 
ls
->
lookahód
.
tokí
 = 
TK_EOS
;

556 
ls
->
t
.
tokí
 = 
	`Œex
÷s, &ls->t.
£möfo
);

557 
	}
}

560 
	$luaX_lookahód
 (
LexSèã
 *
ls
) {

561 
	`lua_as£π
(
ls
->
lookahód
.
tokí
 =
TK_EOS
);

562 
ls
->
lookahód
.
tokí
 = 
	`Œex
÷s, &ls->lookahód.
£möfo
);

563  
ls
->
lookahód
.
tokí
;

564 
	}
}

	@lua/src/llex.h

7 #i‚de‡
Œex_h


8 
	#Œex_h


	)

10 
	~"lobje˘.h
"

11 
	~"lzio.h
"

14 
	#FIRST_RESERVED
 257

	)

17 #i‡!
deföed
(
LUA_ENV
)

18 
	#LUA_ENV
 "_ENV"

	)

26 
	eRESERVED
 {

28 
	mTK_AND
 = 
FIRST_RESERVED
, 
	mTK_BREAK
,

29 
	mTK_DO
, 
	mTK_ELSE
, 
	mTK_ELSEIF
, 
	mTK_END
, 
	mTK_FALSE
, 
	mTK_FOR
, 
	mTK_FUNCTION
,

30 
	mTK_GOTO
, 
	mTK_IF
, 
	mTK_IN
, 
	mTK_LOCAL
, 
	mTK_NIL
, 
	mTK_NOT
, 
	mTK_OR
, 
	mTK_REPEAT
,

31 
	mTK_RETURN
, 
	mTK_THEN
, 
	mTK_TRUE
, 
	mTK_UNTIL
, 
	mTK_WHILE
,

33 
	mTK_IDIV
, 
	mTK_CONCAT
, 
	mTK_DOTS
, 
	mTK_EQ
, 
	mTK_GE
, 
	mTK_LE
, 
	mTK_NE
,

34 
	mTK_SHL
, 
	mTK_SHR
,

35 
	mTK_DBCOLON
, 
	mTK_EOS
,

36 
	mTK_FLT
, 
	mTK_INT
, 
	mTK_NAME
, 
	mTK_STRING


40 
	#NUM_RESERVED
 (
	`ˇ°
(, 
TK_WHILE
-
FIRST_RESERVED
+1))

	)

44 
lua_Numbî
 
	mr
;

45 
lua_I¡egî
 
	mi
;

46 
TSåög
 *
	mts
;

47 } 
	tSemInfo
;

50 
	sTokí
 {

51 
	mtokí
;

52 
SemInfo
 
	m£möfo
;

53 } 
	tTokí
;

58 
	sLexSèã
 {

59 
	mcuºít
;

60 
	mlöíumbî
;

61 
	mœ°löe
;

62 
Tokí
 
	mt
;

63 
Tokí
 
	mlookahód
;

64 
FuncSèã
 *
	mfs
;

65 
lua_Sèã
 *
	mL
;

66 
ZIO
 *
	mz
;

67 
Mbuf„r
 *
	mbuff
;

68 
TabÀ
 *
	mh
;

69 
Dynd©a
 *
	mdyd
;

70 
TSåög
 *
	msour˚
;

71 
TSåög
 *
	mívn
;

72 } 
	tLexSèã
;

75 
LUAI_FUNC
 
luaX_öô
 (
lua_Sèã
 *
L
);

76 
LUAI_FUNC
 
luaX_£töput
 (
lua_Sèã
 *
L
, 
LexSèã
 *
ls
, 
ZIO
 *
z
,

77 
TSåög
 *
sour˚
, 
fú°ch¨
);

78 
LUAI_FUNC
 
TSåög
 *
luaX_√w°rög
 (
LexSèã
 *
ls
, c⁄° *
°r
, 
size_t
 
l
);

79 
LUAI_FUNC
 
luaX_√xt
 (
LexSèã
 *
ls
);

80 
LUAI_FUNC
 
luaX_lookahód
 (
LexSèã
 *
ls
);

81 
LUAI_FUNC
 
l_n‹ë
 
luaX_sy¡axîr‹
 (
LexSèã
 *
ls
, c⁄° *
s
);

82 
LUAI_FUNC
 c⁄° *
luaX_tokí2°r
 (
LexSèã
 *
ls
, 
tokí
);

	@lua/src/llimits.h

7 #i‚de‡
Œimôs_h


8 
	#Œimôs_h


	)

11 
	~<limôs.h
>

12 
	~<°ddef.h
>

15 
	~"lua.h
"

22 #i‡
deföed
(
LUAI_MEM
)

23 
LUAI_UMEM
 
	tlu_mem
;

24 
LUAI_MEM
 
	tl_mem
;

25 #ñi‡
LUAI_BITSINT
 >= 32

26 
size_t
 
	tlu_mem
;

27 
±rdiff_t
 
	tl_mem
;

29 
	tlu_mem
;

30 
	tl_mem
;

35 
	tlu_byã
;

39 
	#MAX_SIZET
 ((
size_t
)(~(size_t)0))

	)

42 
	#MAX_SIZE
 ((
size_t
Ë< (
lua_I¡egî
Ë? 
MAX_SIZET
 \

43 : (
size_t
)(
LUA_MAXINTEGER
))

	)

46 
	#MAX_LUMEM
 ((
lu_mem
)(~÷u_mem)0))

	)

48 
	#MAX_LMEM
 ((
l_mem
)(
MAX_LUMEM
 >> 1))

	)

51 
	#MAX_INT
 
INT_MAX


	)

59 
	#poöt2uöt
(
p
Ë(()((
size_t
)’Ë& 
UINT_MAX
))

	)

64 #i‡
deföed
(
LUAI_USER_ALIGNMENT_T
)

65 
LUAI_USER_ALIGNMENT_T
 
	tL_UmaxÆign
;

68 
lua_Numbî
 
	mn
;

69 
	mu
;

70 *
	ms
;

71 
lua_I¡egî
 
	mi
;

72 
	ml
;

73 } 
	tL_UmaxÆign
;

79 
LUAI_UACNUMBER
 
	tl_uacNumbî
;

80 
LUAI_UACINT
 
	tl_uacI¡
;

84 #i‡
deföed
(
lua_as£π
)

85 
	#check_exp
(
c
,
e
Ë(
	`lua_as£π
(c), (e))

	)

87 
	#lua_l⁄gas£π
(
c
Ë((cË? ()0 : 
	`lua_as£π
(0))

	)

89 
	#lua_as£π
(
c
Ë(()0)

	)

90 
	#check_exp
(
c
,
e
Ë”)

	)

91 
	#lua_l⁄gas£π
(
c
Ë(()0)

	)

97 #i‡!
deföed
(
luai_≠icheck
)

98 
	#luai_≠icheck
(
l
,
e
Ë
	`lua_as£π
”)

	)

101 
	#≠i_check
(
l
,
e
,
msg
Ë
	`luai_≠icheck
÷,”Ë&& msg)

	)

105 #i‡!
deföed
(
UNUSED
)

106 
	#UNUSED
(
x
Ë(()(x))

	)

111 
	#ˇ°
(
t
, 
exp
Ë(—)”xp))

	)

113 
	#ˇ°_void
(
i
Ë
	`ˇ°
(, (i))

	)

114 
	#ˇ°_byã
(
i
Ë
	`ˇ°
(
lu_byã
, (i))

	)

115 
	#ˇ°_num
(
i
Ë
	`ˇ°
(
lua_Numbî
, (i))

	)

116 
	#ˇ°_öt
(
i
Ë
	`ˇ°
(, (i))

	)

117 
	#ˇ°_uch¨
(
i
Ë
	`ˇ°
(, (i))

	)

121 #i‡!
deföed
(
l_ˇ°S2U
)

122 
	#l_ˇ°S2U
(
i
Ë((
lua_Unsig√d
)(i))

	)

130 #i‡!
deföed
(
l_ˇ°U2S
)

131 
	#l_ˇ°U2S
(
i
Ë((
lua_I¡egî
)(i))

	)

138 #i‡
deföed
(
__GNUC__
)

139 
	#l_n‹ë
 
	`__©åibuã__
((
n‹ëu∫
))

	)

140 #ñi‡
deföed
(
_MSC_VER
) && _MSC_VER >= 1200

141 
	#l_n‹ë
 
	`__de˛•ec
(
n‹ëu∫
)

	)

143 
	#l_n‹ë
 

	)

152 #i‡!
deföed
(
LUAI_MAXCCALLS
)

153 
	#LUAI_MAXCCALLS
 200

	)

162 #i‡
LUAI_BITSINT
 >= 32

163 
	tIn°ru˘i⁄
;

165 
	tIn°ru˘i⁄
;

176 #i‡!
deföed
(
LUAI_MAXSHORTLEN
)

177 
	#LUAI_MAXSHORTLEN
 40

	)

187 #i‡!
deföed
(
MINSTRTABSIZE
)

188 
	#MINSTRTABSIZE
 128

	)

197 #i‡!
deföed
(
STRCACHE_N
)

198 
	#STRCACHE_N
 53

	)

199 
	#STRCACHE_M
 2

	)

204 #i‡!
deföed
(
LUA_MINBUFFER
)

205 
	#LUA_MINBUFFER
 32

	)

213 #i‡!
deföed
(
lua_lock
)

214 
	#lua_lock
(
L
Ë((Ë0)

	)

215 
	#lua_u∆ock
(
L
Ë((Ë0)

	)

222 #i‡!
deföed
(
luai_thªadyõld
)

223 
	#luai_thªadyõld
(
L
Ë{
	`lua_u∆ock
(L); 
	`lua_lock
(L);}

	)

232 #i‡!
deföed
(
luai_u£r°©e›í
)

233 
	#luai_u£r°©e›í
(
L
Ë(()L)

	)

236 #i‡!
deföed
(
luai_u£r°©e˛o£
)

237 
	#luai_u£r°©e˛o£
(
L
Ë(()L)

	)

240 #i‡!
deföed
(
luai_u£r°©ëhªad
)

241 
	#luai_u£r°©ëhªad
(
L
,
L1
Ë(()L)

	)

244 #i‡!
deföed
(
luai_u£r°©e‰ì
)

245 
	#luai_u£r°©e‰ì
(
L
,
L1
Ë(()L)

	)

248 #i‡!
deföed
(
luai_u£r°©îesume
)

249 
	#luai_u£r°©îesume
(
L
,
n
Ë(()L)

	)

252 #i‡!
deföed
(
luai_u£r°©eyõld
)

253 
	#luai_u£r°©eyõld
(
L
,
n
Ë(()L)

	)

263 #i‡!
deföed
(
luai_numidiv
)

264 
	#luai_numidiv
(
L
,
a
,
b
Ë(()L, 
	`l_Êo‹
(
	`luai_numdiv
(L,a,b)))

	)

268 #i‡!
deföed
(
luai_numdiv
)

269 
	#luai_numdiv
(
L
,
a
,
b
Ë(◊)/(b))

	)

279 #i‡!
deföed
(
luai_nummod
)

280 
	#luai_nummod
(
L
,
a
,
b
,
m
) \

281 { (
m
Ë
	`l_m©h›
(
fmod
)(
a
,
b
); i‡((m)*(bË< 0Ë(mË+(b); }

	)

285 #i‡!
deföed
(
luai_numpow
)

286 
	#luai_numpow
(
L
,
a
,
b
Ë(()L, 
	`l_m©h›
(
pow
)◊,b))

	)

290 #i‡!
deföed
(
luai_numadd
)

291 
	#luai_numadd
(
L
,
a
,
b
Ë(◊)+(b))

	)

292 
	#luai_numsub
(
L
,
a
,
b
Ë(◊)-(b))

	)

293 
	#luai_nummul
(
L
,
a
,
b
Ë(◊)*(b))

	)

294 
	#luai_numunm
(
L
,
a
Ë(-◊))

	)

295 
	#luai_numeq
(
a
,
b
Ë(◊)==(b))

	)

296 
	#luai_num…
(
a
,
b
Ë(◊)<(b))

	)

297 
	#luai_numÀ
(
a
,
b
Ë(◊)<=(b))

	)

298 
	#luai_numi¢™
(
a
Ë(!
	`luai_numeq
(◊), (a)))

	)

308 #i‡!
deföed
(
HARDSTACKTESTS
)

309 
	#c⁄dmove°ack
(
L
,
¥e
,
pos
Ë(()0)

	)

312 
	#c⁄dmove°ack
(
L
,
¥e
,
pos
) \

313 { 
sz_
 = (
L
)->
°acksize
; 
¥e
; 
	`luaD_ªÆloc°ack
((L), sz_); 
pos
; }

	)

316 #i‡!
deföed
(
HARDMEMTESTS
)

317 
	#c⁄dch™gemem
(
L
,
¥e
,
pos
Ë(()0)

	)

319 
	#c⁄dch™gemem
(
L
,
¥e
,
pos
) \

320 { i‡(
	`G
(
L
)->
g¸u¬ög
Ë{ 
¥e
; 
	`luaC_fuŒgc
(L, 0); 
pos
; } }

	)

	@lua/src/lmathlib.c

7 
	#lm©hlib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<°dlib.h
>

14 
	~<m©h.h
>

16 
	~"lua.h
"

18 
	~"œuxlib.h
"

19 
	~"luÆib.h
"

22 #unde‡
PI


23 
	#PI
 (
	`l_m©h›
(3.141592653589793238462643383279502884))

	)

26 #i‡!
deföed
(
l_ønd
)

27 #i‡
deföed
(
LUA_USE_POSIX
)

28 
	#l_ønd
(Ë
	`øndom
()

	)

29 
	#l_§™d
(
x
Ë
	`§™dom
(x)

	)

30 
	#L_RANDMAX
 2147483647

	)

32 
	#l_ønd
(Ë
	`ønd
()

	)

33 
	#l_§™d
(
x
Ë
	`§™d
(x)

	)

34 
	#L_RANDMAX
 
RAND_MAX


	)

39 
	$m©h_abs
 (
lua_Sèã
 *
L
) {

40 i‡(
	`lua_isöãgî
(
L
, 1)) {

41 
lua_I¡egî
 
n
 = 
	`lua_toöãgî
(
L
, 1);

42 i‡(
n
 < 0Ë¿(
lua_I¡egî
)(0u - (
lua_Unsig√d
)n);

43 
	`lua_pushöãgî
(
L
, 
n
);

46 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
Ábs
)(
	`luaL_checknumbî
(L, 1)));

48 
	}
}

50 
	$m©h_sö
 (
lua_Sèã
 *
L
) {

51 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
sö
)(
	`luaL_checknumbî
(L, 1)));

53 
	}
}

55 
	$m©h_cos
 (
lua_Sèã
 *
L
) {

56 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
cos
)(
	`luaL_checknumbî
(L, 1)));

58 
	}
}

60 
	$m©h_èn
 (
lua_Sèã
 *
L
) {

61 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
èn
)(
	`luaL_checknumbî
(L, 1)));

63 
	}
}

65 
	$m©h_asö
 (
lua_Sèã
 *
L
) {

66 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
asö
)(
	`luaL_checknumbî
(L, 1)));

68 
	}
}

70 
	$m©h_acos
 (
lua_Sèã
 *
L
) {

71 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
acos
)(
	`luaL_checknumbî
(L, 1)));

73 
	}
}

75 
	$m©h_©™
 (
lua_Sèã
 *
L
) {

76 
lua_Numbî
 
y
 = 
	`luaL_checknumbî
(
L
, 1);

77 
lua_Numbî
 
x
 = 
	`luaL_›äumbî
(
L
, 2, 1);

78 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
©™2
)(
y
, 
x
));

80 
	}
}

83 
	$m©h_toöt
 (
lua_Sèã
 *
L
) {

84 
vÆid
;

85 
lua_I¡egî
 
n
 = 
	`lua_toöãgîx
(
L
, 1, &
vÆid
);

86 i‡(
vÆid
)

87 
	`lua_pushöãgî
(
L
, 
n
);

89 
	`luaL_check™y
(
L
, 1);

90 
	`lua_pushnû
(
L
);

93 
	}
}

96 
	$pushnumöt
 (
lua_Sèã
 *
L
, 
lua_Numbî
 
d
) {

97 
lua_I¡egî
 
n
;

98 i‡(
	`lua_numbîtoöãgî
(
d
, &
n
))

99 
	`lua_pushöãgî
(
L
, 
n
);

101 
	`lua_pushnumbî
(
L
, 
d
);

102 
	}
}

105 
	$m©h_Êo‹
 (
lua_Sèã
 *
L
) {

106 i‡(
	`lua_isöãgî
(
L
, 1))

107 
	`lua_£â›
(
L
, 1);

109 
lua_Numbî
 
d
 = 
	`l_m©h›
(
Êo‹
)(
	`luaL_checknumbî
(
L
, 1));

110 
	`pushnumöt
(
L
, 
d
);

113 
	}
}

116 
	$m©h_˚û
 (
lua_Sèã
 *
L
) {

117 i‡(
	`lua_isöãgî
(
L
, 1))

118 
	`lua_£â›
(
L
, 1);

120 
lua_Numbî
 
d
 = 
	`l_m©h›
(
˚û
)(
	`luaL_checknumbî
(
L
, 1));

121 
	`pushnumöt
(
L
, 
d
);

124 
	}
}

127 
	$m©h_fmod
 (
lua_Sèã
 *
L
) {

128 i‡(
	`lua_isöãgî
(
L
, 1) &&Üua_isinteger(L, 2)) {

129 
lua_I¡egî
 
d
 = 
	`lua_toöãgî
(
L
, 2);

130 i‡((
lua_Unsig√d
)
d
 + 1u <= 1u) {

131 
	`luaL_¨gcheck
(
L
, 
d
 != 0, 2, "zero");

132 
	`lua_pushöãgî
(
L
, 0);

135 
	`lua_pushöãgî
(
L
, 
	`lua_toöãgî
(L, 1Ë% 
d
);

138 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
fmod
)(
	`luaL_checknumbî
(L, 1),

139 
	`luaL_checknumbî
(
L
, 2)));

141 
	}
}

149 
	$m©h_modf
 (
lua_Sèã
 *
L
) {

150 i‡(
	`lua_isöãgî
(
L
 ,1)) {

151 
	`lua_£â›
(
L
, 1);

152 
	`lua_pushnumbî
(
L
, 0);

155 
lua_Numbî
 
n
 = 
	`luaL_checknumbî
(
L
, 1);

157 
lua_Numbî
 
ù
 = (
n
 < 0Ë? 
	`l_m©h›
(
˚û
)“Ë:Ü_m©h›(
Êo‹
)(n);

158 
	`pushnumöt
(
L
, 
ù
);

160 
	`lua_pushnumbî
(
L
, (
n
 =
ù
Ë? 
	`l_m©h›
(0.0) : (n - ip));

163 
	}
}

166 
	$m©h_sqπ
 (
lua_Sèã
 *
L
) {

167 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
sqπ
)(
	`luaL_checknumbî
(L, 1)));

169 
	}
}

172 
	$m©h_u…
 (
lua_Sèã
 *
L
) {

173 
lua_I¡egî
 
a
 = 
	`luaL_checköãgî
(
L
, 1);

174 
lua_I¡egî
 
b
 = 
	`luaL_checköãgî
(
L
, 2);

175 
	`lua_pushboﬁón
(
L
, (
lua_Unsig√d
)
a
 < (lua_Unsig√d)
b
);

177 
	}
}

179 
	$m©h_log
 (
lua_Sèã
 *
L
) {

180 
lua_Numbî
 
x
 = 
	`luaL_checknumbî
(
L
, 1);

181 
lua_Numbî
 
ªs
;

182 i‡(
	`lua_i¢⁄e‹nû
(
L
, 2))

183 
ªs
 = 
	`l_m©h›
(
log
)(
x
);

185 
lua_Numbî
 
ba£
 = 
	`luaL_checknumbî
(
L
, 2);

186 #i‡!
	`deföed
(
LUA_USE_C89
)

187 i‡(
ba£
 =2.0Ë
ªs
 = 
	`l_m©h›
(
log2
)(
x
); 

189 i‡(
ba£
 =10.0Ë
ªs
 = 
	`l_m©h›
(
log10
)(
x
);

190 
ªs
 = 
	`l_m©h›
(
log
)(
x
)/l_m©h›÷og)(
ba£
);

192 
	`lua_pushnumbî
(
L
, 
ªs
);

194 
	}
}

196 
	$m©h_exp
 (
lua_Sèã
 *
L
) {

197 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
exp
)(
	`luaL_checknumbî
(L, 1)));

199 
	}
}

201 
	$m©h_deg
 (
lua_Sèã
 *
L
) {

202 
	`lua_pushnumbî
(
L
, 
	`luaL_checknumbî
(L, 1Ë* (
	`l_m©h›
(180.0Ë/ 
PI
));

204 
	}
}

206 
	$m©h_ød
 (
lua_Sèã
 *
L
) {

207 
	`lua_pushnumbî
(
L
, 
	`luaL_checknumbî
(L, 1Ë* (
PI
 / 
	`l_m©h›
(180.0)));

209 
	}
}

212 
	$m©h_mö
 (
lua_Sèã
 *
L
) {

213 
n
 = 
	`lua_gët›
(
L
);

214 
imö
 = 1;

215 
i
;

216 
	`luaL_¨gcheck
(
L
, 
n
 >= 1, 1, "valueÉxpected");

217 
i
 = 2; i <
n
; i++) {

218 i‡(
	`lua_com∑ª
(
L
, 
i
, 
imö
, 
LUA_OPLT
))

219 
imö
 = 
i
;

221 
	`lua_pushvÆue
(
L
, 
imö
);

223 
	}
}

226 
	$m©h_max
 (
lua_Sèã
 *
L
) {

227 
n
 = 
	`lua_gët›
(
L
);

228 
imax
 = 1;

229 
i
;

230 
	`luaL_¨gcheck
(
L
, 
n
 >= 1, 1, "valueÉxpected");

231 
i
 = 2; i <
n
; i++) {

232 i‡(
	`lua_com∑ª
(
L
, 
imax
, 
i
, 
LUA_OPLT
))

233 
imax
 = 
i
;

235 
	`lua_pushvÆue
(
L
, 
imax
);

237 
	}
}

244 
	$m©h_øndom
 (
lua_Sèã
 *
L
) {

245 
lua_I¡egî
 
low
, 
up
;

246 
r
 = ()
	`l_ønd
(Ë* (1.0 / (()
L_RANDMAX
 + 1.0));

247 
	`lua_gët›
(
L
)) {

249 
	`lua_pushnumbî
(
L
, (
lua_Numbî
)
r
);

253 
low
 = 1;

254 
up
 = 
	`luaL_checköãgî
(
L
, 1);

258 
low
 = 
	`luaL_checköãgî
(
L
, 1);

259 
up
 = 
	`luaL_checköãgî
(
L
, 2);

262 :  
	`luaL_îr‹
(
L
, "wrongÇumber ofárguments");

265 
	`luaL_¨gcheck
(
L
, 
low
 <
up
, 1, "interval isÉmpty");

266 
	`luaL_¨gcheck
(
L
, 
low
 >0 || 
up
 <
LUA_MAXINTEGER
 +Üow, 1,

268 
r
 *()(
up
 - 
low
) + 1.0;

269 
	`lua_pushöãgî
(
L
, (
lua_I¡egî
)
r
 + 
low
);

271 
	}
}

274 
	$m©h_øndom£ed
 (
lua_Sèã
 *
L
) {

275 
	`l_§™d
(()(
lua_I¡egî
)
	`luaL_checknumbî
(
L
, 1));

276 ()
	`l_ønd
();

278 
	}
}

281 
	$m©h_ty≥
 (
lua_Sèã
 *
L
) {

282 i‡(
	`lua_ty≥
(
L
, 1Ë=
LUA_TNUMBER
) {

283 i‡(
	`lua_isöãgî
(
L
, 1))

284 
	`lua_pushlôîÆ
(
L
, "integer");

286 
	`lua_pushlôîÆ
(
L
, "float");

289 
	`luaL_check™y
(
L
, 1);

290 
	`lua_pushnû
(
L
);

293 
	}
}

301 #i‡
deföed
(
LUA_COMPAT_MATHLIB
)

303 
	$m©h_cosh
 (
lua_Sèã
 *
L
) {

304 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
cosh
)(
	`luaL_checknumbî
(L, 1)));

306 
	}
}

308 
	$m©h_söh
 (
lua_Sèã
 *
L
) {

309 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
söh
)(
	`luaL_checknumbî
(L, 1)));

311 
	}
}

313 
	$m©h_ènh
 (
lua_Sèã
 *
L
) {

314 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
ènh
)(
	`luaL_checknumbî
(L, 1)));

316 
	}
}

318 
	$m©h_pow
 (
lua_Sèã
 *
L
) {

319 
lua_Numbî
 
x
 = 
	`luaL_checknumbî
(
L
, 1);

320 
lua_Numbî
 
y
 = 
	`luaL_checknumbî
(
L
, 2);

321 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
pow
)(
x
, 
y
));

323 
	}
}

325 
	$m©h_‰exp
 (
lua_Sèã
 *
L
) {

326 
e
;

327 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
‰exp
)(
	`luaL_checknumbî
(L, 1), &
e
));

328 
	`lua_pushöãgî
(
L
, 
e
);

330 
	}
}

332 
	$m©h_ldexp
 (
lua_Sèã
 *
L
) {

333 
lua_Numbî
 
x
 = 
	`luaL_checknumbî
(
L
, 1);

334 
ï
 = ()
	`luaL_checköãgî
(
L
, 2);

335 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
ldexp
)(
x
, 
ï
));

337 
	}
}

339 
	$m©h_log10
 (
lua_Sèã
 *
L
) {

340 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
log10
)(
	`luaL_checknumbî
(L, 1)));

342 
	}
}

349 c⁄° 
luaL_Reg
 
	gm©hlib
[] = {

350 {"abs", 
m©h_abs
},

351 {"acos", 
m©h_acos
},

352 {"asö", 
m©h_asö
},

353 {"©™", 
m©h_©™
},

354 {"˚û", 
m©h_˚û
},

355 {"cos", 
m©h_cos
},

356 {"deg", 
m©h_deg
},

357 {"exp", 
m©h_exp
},

358 {"toöãgî", 
m©h_toöt
},

359 {"Êo‹", 
m©h_Êo‹
},

360 {"fmod", 
m©h_fmod
},

361 {"u…", 
m©h_u…
},

362 {"log", 
m©h_log
},

363 {"max", 
m©h_max
},

364 {"mö", 
m©h_mö
},

365 {"modf", 
m©h_modf
},

366 {"ød", 
m©h_ød
},

367 {"øndom", 
m©h_øndom
},

368 {"øndom£ed", 
m©h_øndom£ed
},

369 {"sö", 
m©h_sö
},

370 {"sqπ", 
m©h_sqπ
},

371 {"èn", 
m©h_èn
},

372 {"ty≥", 
m©h_ty≥
},

373 #i‡
deföed
(
LUA_COMPAT_MATHLIB
)

374 {"©™2", 
m©h_©™
},

375 {"cosh", 
m©h_cosh
},

376 {"söh", 
m©h_söh
},

377 {"ènh", 
m©h_ènh
},

378 {"pow", 
m©h_pow
},

379 {"‰exp", 
m©h_‰exp
},

380 {"ldexp", 
m©h_ldexp
},

381 {"log10", 
m©h_log10
},

384 {"pi", 
NULL
},

385 {"huge", 
NULL
},

386 {"maxöãgî", 
NULL
},

387 {"mööãgî", 
NULL
},

388 {
NULL
, NULL}

395 
LUAMOD_API
 
	$lua›í_m©h
 (
lua_Sèã
 *
L
) {

396 
	`luaL_√wlib
(
L
, 
m©hlib
);

397 
	`lua_pushnumbî
(
L
, 
PI
);

398 
	`lua_£tfõld
(
L
, -2, "pi");

399 
	`lua_pushnumbî
(
L
, (
lua_Numbî
)
HUGE_VAL
);

400 
	`lua_£tfõld
(
L
, -2, "huge");

401 
	`lua_pushöãgî
(
L
, 
LUA_MAXINTEGER
);

402 
	`lua_£tfõld
(
L
, -2, "maxinteger");

403 
	`lua_pushöãgî
(
L
, 
LUA_MININTEGER
);

404 
	`lua_£tfõld
(
L
, -2, "mininteger");

406 
	}
}

	@lua/src/lmem.c

7 
	#lmem_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°ddef.h
>

15 
	~"lua.h
"

17 
	~"ldebug.h
"

18 
	~"ldo.h
"

19 
	~"lgc.h
"

20 
	~"lmem.h
"

21 
	~"lobje˘.h
"

22 
	~"l°©e.h
"

45 
	#MINSIZEARRAY
 4

	)

48 *
	$luaM_growaux_
 (
lua_Sèã
 *
L
, *
block
, *
size
, 
size_t
 
size_ñems
,

49 
limô
, c⁄° *
wh©
) {

50 *
√wblock
;

51 
√wsize
;

52 i‡(*
size
 >
limô
/2) {

53 i‡(*
size
 >
limô
)

54 
	`luaG_ru√º‹
(
L
, "toÿm™y %†÷imô i†%d)", 
wh©
, 
limô
);

55 
√wsize
 = 
limô
;

58 
√wsize
 = (*
size
)*2;

59 i‡(
√wsize
 < 
MINSIZEARRAY
)

60 
√wsize
 = 
MINSIZEARRAY
;

62 
√wblock
 = 
	`luaM_ªÆlocv
(
L
, 
block
, *
size
, 
√wsize
, 
size_ñems
);

63 *
size
 = 
√wsize
;

64  
√wblock
;

65 
	}
}

68 
l_n‹ë
 
	$luaM_toobig
 (
lua_Sèã
 *
L
) {

69 
	`luaG_ru√º‹
(
L
, "memoryállocationÉrror: blockÅoo big");

70 
	}
}

77 *
	$luaM_ªÆloc_
 (
lua_Sèã
 *
L
, *
block
, 
size_t
 
osize
, size_à
nsize
) {

78 *
√wblock
;

79 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

80 
size_t
 
ªÆosize
 = (
block
Ë? 
osize
 : 0;

81 
	`lua_as£π
((
ªÆosize
 =0Ë=(
block
 =
NULL
));

82 #i‡
	`deföed
(
HARDMEMTESTS
)

83 i‡(
nsize
 > 
ªÆosize
 && 
g
->
g¸u¬ög
)

84 
	`luaC_fuŒgc
(
L
, 1);

86 
√wblock
 = (*
g
->
‰óŒoc
)(g->
ud
, 
block
, 
osize
, 
nsize
);

87 i‡(
√wblock
 =
NULL
 && 
nsize
 > 0) {

88 
	`lua_as£π
(
nsize
 > 
ªÆosize
);

89 i‡(
g
->
vîsi⁄
) {

90 
	`luaC_fuŒgc
(
L
, 1);

91 
√wblock
 = (*
g
->
‰óŒoc
)(g->
ud
, 
block
, 
osize
, 
nsize
);

93 i‡(
√wblock
 =
NULL
)

94 
	`luaD_throw
(
L
, 
LUA_ERRMEM
);

96 
	`lua_as£π
((
nsize
 =0Ë=(
√wblock
 =
NULL
));

97 
g
->
GCdebt
 = (g->GCdebà+ 
nsize
Ë- 
ªÆosize
;

98  
√wblock
;

99 
	}
}

	@lua/src/lmem.h

7 #i‚de‡
lmem_h


8 
	#lmem_h


	)

11 
	~<°ddef.h
>

13 
	~"Œimôs.h
"

14 
	~"lua.h
"

30 
	#luaM_ªÆlocv
(
L
,
b
,
⁄
,
n
,
e
) \

31 ((((
n
Ë>(
size_t
Ë&& 
	`ˇ°
(size_t, (n)Ë+ 1 > 
MAX_SIZET
/(
e
)) \

32 ? 
	`luaM_toobig
(
L
Ë: 
	`ˇ°_void
(0)) , \

33 
	`luaM_ªÆloc_
(
L
, (
b
), (
⁄
)*(
e
), (
n
)*”)))

	)

38 
	#luaM_ªÆlocvch¨
(
L
,
b
,
⁄
,
n
) \

39 
	`ˇ°
(*, 
	`luaM_ªÆloc_
(
L
, (
b
), (
⁄
)*(), (
n
)*()))

	)

41 
	#luaM_‰ìmem
(
L
, 
b
, 
s
Ë
	`luaM_ªÆloc_
(L, (b), (s), 0)

	)

42 
	#luaM_‰ì
(
L
, 
b
Ë
	`luaM_ªÆloc_
(L, (b), (*(b)), 0)

	)

43 
	#luaM_‰ì¨øy
(
L
, 
b
, 
n
Ë
	`luaM_ªÆloc_
(L, (b), (n)*(*(b)), 0)

	)

45 
	#luaM_mÆloc
(
L
,
s
Ë
	`luaM_ªÆloc_
(L, 
NULL
, 0, (s))

	)

46 
	#luaM_√w
(
L
,
t
Ë
	`ˇ°
— *, 
	`luaM_mÆloc
(L, —)))

	)

47 
	#luaM_√wve˘‹
(
L
,
n
,
t
) \

48 
	`ˇ°
(
t
 *, 
	`luaM_ªÆlocv
(
L
, 
NULL
, 0, 
n
, —)))

	)

50 
	#luaM_√wobje˘
(
L
,
èg
,
s
Ë
	`luaM_ªÆloc_
(L, 
NULL
,Åag, (s))

	)

52 
	#luaM_growve˘‹
(
L
,
v
,
√Àms
,
size
,
t
,
limô
,
e
) \

53 i‡((
√Àms
)+1 > (
size
)) \

54 ((
v
)=
	`ˇ°
(
t
 *, 
	`luaM_growaux_
(
L
,v,&(
size
),—),
limô
,
e
)))

	)

56 
	#luaM_ªÆlocve˘‹
(
L
, 
v
,
ﬁdn
,
n
,
t
) \

57 ((
v
)=
	`ˇ°
(
t
 *, 
	`luaM_ªÆlocv
(
L
, v, 
ﬁdn
, 
n
, —))))

	)

59 
LUAI_FUNC
 
l_n‹ë
 
luaM_toobig
 (
lua_Sèã
 *
L
);

62 
LUAI_FUNC
 *
luaM_ªÆloc_
 (
lua_Sèã
 *
L
, *
block
, 
size_t
 
ﬁdsize
,

63 
size_t
 
size
);

64 
LUAI_FUNC
 *
luaM_growaux_
 (
lua_Sèã
 *
L
, *
block
, *
size
,

65 
size_t
 
size_ñem
, 
limô
,

66 c⁄° *
wh©
);

	@lua/src/loadlib.c

11 
	#lﬂdlib_c


	)

12 
	#LUA_LIB


	)

14 
	~"Õªfix.h
"

17 
	~<°dio.h
>

18 
	~<°dlib.h
>

19 
	~<°rög.h
>

21 
	~"lua.h
"

23 
	~"œuxlib.h
"

24 
	~"luÆib.h
"

31 #i‡!
deföed
(
LUA_PATH_VAR
)

32 
	#LUA_PATH_VAR
 "LUA_PATH"

	)

35 #i‡!
deföed
(
LUA_CPATH_VAR
)

36 
	#LUA_CPATH_VAR
 "LUA_CPATH"

	)

39 
	#LUA_PATHSUFFIX
 "_" 
LUA_VERSION_MAJOR
 "_" 
LUA_VERSION_MINOR


	)

41 
	#LUA_PATHVARVERSION
 
LUA_PATH_VAR
 
LUA_PATHSUFFIX


	)

42 
	#LUA_CPATHVARVERSION
 
LUA_CPATH_VAR
 
LUA_PATHSUFFIX


	)

53 #i‡!
deföed
 (
LUA_PATH_SEP
)

54 
	#LUA_PATH_SEP
 ";"

	)

56 #i‡!
deföed
 (
LUA_PATH_MARK
)

57 
	#LUA_PATH_MARK
 "?"

	)

59 #i‡!
deföed
 (
LUA_EXEC_DIR
)

60 
	#LUA_EXEC_DIR
 "!"

	)

62 #i‡!
deföed
 (
LUA_IGMARK
)

63 
	#LUA_IGMARK
 "-"

	)

73 #i‡!
deföed
(
LUA_CSUBSEP
)

74 
	#LUA_CSUBSEP
 
LUA_DIRSEP


	)

77 #i‡!
deföed
(
LUA_LSUBSEP
)

78 
	#LUA_LSUBSEP
 
LUA_DIRSEP


	)

83 
	#LUA_POF
 "lua›í_"

	)

86 
	#LUA_OFSEP
 "_"

	)

93 c⁄° 
	gCLIBS
 = 0;

95 
	#LIB_FAIL
 "›í"

	)

97 
	#£çrogdú
(
L
Ë(()0)

	)

107 
lsys_u∆ﬂdlib
 (*
lib
);

115 *
lsys_lﬂd
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, 
£eglb
);

122 
lua_CFun˘i⁄
 
lsys_sym
 (
lua_Sèã
 *
L
, *
lib
, c⁄° *
sym
);

127 #i‡
deföed
(
LUA_USE_DLOPEN
)

137 
	~<dlf˙.h
>

144 #i‡
deföed
(
__GNUC__
)

145 
	#ˇ°_func
(
p
Ë(
	`__exãnsi⁄__
 (
lua_CFun˘i⁄
)’))

	)

147 
	#ˇ°_func
(
p
Ë((
lua_CFun˘i⁄
)’))

	)

151 
	$lsys_u∆ﬂdlib
 (*
lib
) {

152 
	`dl˛o£
(
lib
);

153 
	}
}

156 *
	$lsys_lﬂd
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, 
£eglb
) {

157 *
lib
 = 
	`dl›í
(
∑th
, 
RTLD_NOW
 | (
£eglb
 ? 
RTLD_GLOBAL
 : 
RTLD_LOCAL
));

158 i‡(
lib
 =
NULL
Ë
	`lua_push°rög
(
L
, 
	`dÀº‹
());

159  
lib
;

160 
	}
}

163 
lua_CFun˘i⁄
 
	$lsys_sym
 (
lua_Sèã
 *
L
, *
lib
, c⁄° *
sym
) {

164 
lua_CFun˘i⁄
 
f
 = 
	`ˇ°_func
(
	`dlsym
(
lib
, 
sym
));

165 i‡(
f
 =
NULL
Ë
	`lua_push°rög
(
L
, 
	`dÀº‹
());

166  
f
;

167 
	}
}

173 #ñi‡
deföed
(
LUA_DL_DLL
)

180 
	~<wödows.h
>

182 #unde‡
£çrogdú


187 #i‡!
deföed
(
LUA_LLE_FLAGS
)

188 
	#LUA_LLE_FLAGS
 0

	)

192 
	$£çrogdú
 (
lua_Sèã
 *
L
) {

193 
buff
[
MAX_PATH
 + 1];

194 *
lb
;

195 
DWORD
 
nsize
 = (
buff
)/();

196 
DWORD
 
n
 = 
	`GëModuÀFûeNameA
(
NULL
, 
buff
, 
nsize
);

197 i‡(
n
 =0 ||Ç =
nsize
 || (
lb
 = 
	`°ºchr
(
buff
, '\\')Ë=
NULL
)

198 
	`luaL_îr‹
(
L
, "unableÅo get ModuleFileName");

200 *
lb
 = '\0';

201 
	`luaL_gsub
(
L
, 
	`lua_to°rög
(L, -1), 
LUA_EXEC_DIR
, 
buff
);

202 
	`lua_ªmove
(
L
, -2);

204 
	}
}

207 
	$pushîr‹
 (
lua_Sèã
 *
L
) {

208 
îr‹
 = 
	`GëLa°Eº‹
();

209 
buf„r
[128];

210 i‡(
	`F‹m©MesßgeA
(
FORMAT_MESSAGE_IGNORE_INSERTS
 | 
FORMAT_MESSAGE_FROM_SYSTEM
,

211 
NULL
, 
îr‹
, 0, 
buf„r
, (buffer)/(), NULL))

212 
	`lua_push°rög
(
L
, 
buf„r
);

214 
	`lua_pushf°rög
(
L
, "sy°emÉº‹ %d\n", 
îr‹
);

215 
	}
}

217 
	$lsys_u∆ﬂdlib
 (*
lib
) {

218 
	`FªeLibøry
((
HMODULE
)
lib
);

219 
	}
}

222 *
	$lsys_lﬂd
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, 
£eglb
) {

223 
HMODULE
 
lib
 = 
	`LﬂdLibøryExA
(
∑th
, 
NULL
, 
LUA_LLE_FLAGS
);

224 ()(
£eglb
);

225 i‡(
lib
 =
NULL
Ë
	`pushîr‹
(
L
);

226  
lib
;

227 
	}
}

230 
lua_CFun˘i⁄
 
	$lsys_sym
 (
lua_Sèã
 *
L
, *
lib
, c⁄° *
sym
) {

231 
lua_CFun˘i⁄
 
f
 = (lua_CFun˘i⁄)
	`GëProcAddªss
((
HMODULE
)
lib
, 
sym
);

232 i‡(
f
 =
NULL
Ë
	`pushîr‹
(
L
);

233  
f
;

234 
	}
}

246 #unde‡
LIB_FAIL


247 
	#LIB_FAIL
 "ab£¡"

	)

250 
	#DLMSG
 "dy«mi¯libørõ†nŸÉ«bÀd; check you∏Lu®ö°Æœti⁄"

	)

253 
	$lsys_u∆ﬂdlib
 (*
lib
) {

254 ()(
lib
);

255 
	}
}

258 *
	$lsys_lﬂd
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, 
£eglb
) {

259 ()(
∑th
); ()(
£eglb
);

260 
	`lua_pushlôîÆ
(
L
, 
DLMSG
);

261  
NULL
;

262 
	}
}

265 
lua_CFun˘i⁄
 
	$lsys_sym
 (
lua_Sèã
 *
L
, *
lib
, c⁄° *
sym
) {

266 ()(
lib
); ()(
sym
);

267 
	`lua_pushlôîÆ
(
L
, 
DLMSG
);

268  
NULL
;

269 
	}
}

278 *
	$check˛ib
 (
lua_Sèã
 *
L
, c⁄° *
∑th
) {

279 *
∂ib
;

280 
	`lua_øwgëp
(
L
, 
LUA_REGISTRYINDEX
, &
CLIBS
);

281 
	`lua_gëfõld
(
L
, -1, 
∑th
);

282 
∂ib
 = 
	`lua_tou£rd©a
(
L
, -1);

283 
	`lua_p›
(
L
, 2);

284  
∂ib
;

285 
	}
}

292 
	$addto˛ib
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, *
∂ib
) {

293 
	`lua_øwgëp
(
L
, 
LUA_REGISTRYINDEX
, &
CLIBS
);

294 
	`lua_pushlightu£rd©a
(
L
, 
∂ib
);

295 
	`lua_pushvÆue
(
L
, -1);

296 
	`lua_£tfõld
(
L
, -3, 
∑th
);

297 
	`lua_øw£ti
(
L
, -2, 
	`luaL_Àn
(L, -2) + 1);

298 
	`lua_p›
(
L
, 1);

299 
	}
}

306 
	$g˘m
 (
lua_Sèã
 *
L
) {

307 
lua_I¡egî
 
n
 = 
	`luaL_Àn
(
L
, 1);

308 ; 
n
 >= 1;Ç--) {

309 
	`lua_øwgëi
(
L
, 1, 
n
);

310 
	`lsys_u∆ﬂdlib
(
	`lua_tou£rd©a
(
L
, -1));

311 
	`lua_p›
(
L
, 1);

314 
	}
}

319 
	#ERRLIB
 1

	)

320 
	#ERRFUNC
 2

	)

333 
	$lookf‹func
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, c⁄° *
sym
) {

334 *
ªg
 = 
	`check˛ib
(
L
, 
∑th
);

335 i‡(
ªg
 =
NULL
) {

336 
ªg
 = 
	`lsys_lﬂd
(
L
, 
∑th
, *
sym
 == '*');

337 i‡(
ªg
 =
NULL
Ë 
ERRLIB
;

338 
	`addto˛ib
(
L
, 
∑th
, 
ªg
);

340 i‡(*
sym
 == '*') {

341 
	`lua_pushboﬁón
(
L
, 1);

345 
lua_CFun˘i⁄
 
f
 = 
	`lsys_sym
(
L
, 
ªg
, 
sym
);

346 i‡(
f
 =
NULL
)

347  
ERRFUNC
;

348 
	`lua_pushcfun˘i⁄
(
L
, 
f
);

351 
	}
}

354 
	$Œ_lﬂdlib
 (
lua_Sèã
 *
L
) {

355 c⁄° *
∑th
 = 
	`luaL_check°rög
(
L
, 1);

356 c⁄° *
öô
 = 
	`luaL_check°rög
(
L
, 2);

357 
°©
 = 
	`lookf‹func
(
L
, 
∑th
, 
öô
);

358 i‡(
°©
 == 0)

361 
	`lua_pushnû
(
L
);

362 
	`lua_ö£π
(
L
, -2);

363 
	`lua_push°rög
(
L
, (
°©
 =
ERRLIB
Ë? 
LIB_FAIL
 : "init");

366 
	}
}

377 
	$ªadabÀ
 (c⁄° *
fûíame
) {

378 
FILE
 *
f
 = 
	`f›í
(
fûíame
, "r");

379 i‡(
f
 =
NULL
)  0;

380 
	`f˛o£
(
f
);

382 
	}
}

385 c⁄° *
	$push√xâem∂©e
 (
lua_Sèã
 *
L
, c⁄° *
∑th
) {

386 c⁄° *
l
;

387 *
∑th
 =*
LUA_PATH_SEP
)Öath++;

388 i‡(*
∑th
 ='\0'Ë 
NULL
;

389 
l
 = 
	`°rchr
(
∑th
, *
LUA_PATH_SEP
);

390 i‡(
l
 =
NULL
Ë»
∑th
 + 
	`°æí
(path);

391 
	`lua_pushl°rög
(
L
, 
∑th
, 
l
 -Öath);

392  
l
;

393 
	}
}

396 c⁄° *
	$£¨ch∑th
 (
lua_Sèã
 *
L
, c⁄° *
«me
,

397 c⁄° *
∑th
,

398 c⁄° *
£p
,

399 c⁄° *
dú£p
) {

400 
luaL_Buf„r
 
msg
;

401 
	`luaL_bufföô
(
L
, &
msg
);

402 i‡(*
£p
 != '\0')

403 
«me
 = 
	`luaL_gsub
(
L
,Çame, 
£p
, 
dú£p
);

404 (
∑th
 = 
	`push√xâem∂©e
(
L
,Ö©h)Ë!
NULL
) {

405 c⁄° *
fûíame
 = 
	`luaL_gsub
(
L
, 
	`lua_to°rög
(L, -1),

406 
LUA_PATH_MARK
, 
«me
);

407 
	`lua_ªmove
(
L
, -2);

408 i‡(
	`ªadabÀ
(
fûíame
))

409  
fûíame
;

410 
	`lua_pushf°rög
(
L
, "\n\äÿfûê'%s'", 
fûíame
);

411 
	`lua_ªmove
(
L
, -2);

412 
	`luaL_addvÆue
(&
msg
);

414 
	`luaL_pushªsu…
(&
msg
);

415  
NULL
;

416 
	}
}

419 
	$Œ_£¨ch∑th
 (
lua_Sèã
 *
L
) {

420 c⁄° *
f
 = 
	`£¨ch∑th
(
L
, 
	`luaL_check°rög
(L, 1),

421 
	`luaL_check°rög
(
L
, 2),

422 
	`luaL_›t°rög
(
L
, 3, "."),

423 
	`luaL_›t°rög
(
L
, 4, 
LUA_DIRSEP
));

424 i‡(
f
 !
NULL
)  1;

426 
	`lua_pushnû
(
L
);

427 
	`lua_ö£π
(
L
, -2);

430 
	}
}

433 c⁄° *
	$födfûe
 (
lua_Sèã
 *
L
, c⁄° *
«me
,

434 c⁄° *
≤ame
,

435 c⁄° *
dú£p
) {

436 c⁄° *
∑th
;

437 
	`lua_gëfõld
(
L
, 
	`lua_upvÆueödex
(1), 
≤ame
);

438 
∑th
 = 
	`lua_to°rög
(
L
, -1);

439 i‡(
∑th
 =
NULL
)

440 
	`luaL_îr‹
(
L
, "'∑ckage.%s' mu° bê®°rög", 
≤ame
);

441  
	`£¨ch∑th
(
L
, 
«me
, 
∑th
, ".", 
dú£p
);

442 
	}
}

445 
	$checklﬂd
 (
lua_Sèã
 *
L
, 
°©
, c⁄° *
fûíame
) {

446 i‡(
°©
) {

447 
	`lua_push°rög
(
L
, 
fûíame
);

451  
	`luaL_îr‹
(
L
, "errorÜoading module '%s' from file '%s':\n\t%s",

452 
	`lua_to°rög
(
L
, 1), 
fûíame
,Üua_tostring(L, -1));

453 
	}
}

456 
	$£¨chî_Lua
 (
lua_Sèã
 *
L
) {

457 c⁄° *
fûíame
;

458 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

459 
fûíame
 = 
	`födfûe
(
L
, 
«me
, "∑th", 
LUA_LSUBSEP
);

460 i‡(
fûíame
 =
NULL
)  1;

461  
	`checklﬂd
(
L
, (
	`luaL_lﬂdfûe
(L, 
fûíame
Ë=
LUA_OK
), filename);

462 
	}
}

473 
	$lﬂdfunc
 (
lua_Sèã
 *
L
, c⁄° *
fûíame
, c⁄° *
mod«me
) {

474 c⁄° *
›ífunc
;

475 c⁄° *
m¨k
;

476 
mod«me
 = 
	`luaL_gsub
(
L
, mod«me, ".", 
LUA_OFSEP
);

477 
m¨k
 = 
	`°rchr
(
mod«me
, *
LUA_IGMARK
);

478 i‡(
m¨k
) {

479 
°©
;

480 
›ífunc
 = 
	`lua_pushl°rög
(
L
, 
mod«me
, 
m¨k
 - modname);

481 
›ífunc
 = 
	`lua_pushf°rög
(
L
, 
LUA_POF
"%s", openfunc);

482 
°©
 = 
	`lookf‹func
(
L
, 
fûíame
, 
›ífunc
);

483 i‡(
°©
 !
ERRFUNC
)  stat;

484 
mod«me
 = 
m¨k
 + 1;

486 
›ífunc
 = 
	`lua_pushf°rög
(
L
, 
LUA_POF
"%s", 
mod«me
);

487  
	`lookf‹func
(
L
, 
fûíame
, 
›ífunc
);

488 
	}
}

491 
	$£¨chî_C
 (
lua_Sèã
 *
L
) {

492 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

493 c⁄° *
fûíame
 = 
	`födfûe
(
L
, 
«me
, "˝©h", 
LUA_CSUBSEP
);

494 i‡(
fûíame
 =
NULL
)  1;

495  
	`checklﬂd
(
L
, (
	`lﬂdfunc
(L, 
fûíame
, 
«me
) == 0), filename);

496 
	}
}

499 
	$£¨chî_CroŸ
 (
lua_Sèã
 *
L
) {

500 c⁄° *
fûíame
;

501 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

502 c⁄° *
p
 = 
	`°rchr
(
«me
, '.');

503 
°©
;

504 i‡(
p
 =
NULL
)  0;

505 
	`lua_pushl°rög
(
L
, 
«me
, 
p
 -Çame);

506 
fûíame
 = 
	`födfûe
(
L
, 
	`lua_to°rög
(L, -1), "˝©h", 
LUA_CSUBSEP
);

507 i‡(
fûíame
 =
NULL
)  1;

508 i‡((
°©
 = 
	`lﬂdfunc
(
L
, 
fûíame
, 
«me
)) != 0) {

509 i‡(
°©
 !
ERRFUNC
)

510  
	`checklﬂd
(
L
, 0, 
fûíame
);

512 
	`lua_pushf°rög
(
L
, "\n\äÿmoduÀ '%s' i¿fûê'%s'", 
«me
, 
fûíame
);

516 
	`lua_push°rög
(
L
, 
fûíame
);

518 
	}
}

521 
	$£¨chî_¥ñﬂd
 (
lua_Sèã
 *
L
) {

522 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

523 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, "_PRELOAD");

524 i‡(
	`lua_gëfõld
(
L
, -1, 
«me
Ë=
LUA_TNIL
)

525 
	`lua_pushf°rög
(
L
, "\n\äÿfõldÖackage.¥ñﬂd['%s']", 
«me
);

527 
	}
}

530 
	$födlﬂdî
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

531 
i
;

532 
luaL_Buf„r
 
msg
;

533 
	`luaL_bufföô
(
L
, &
msg
);

535 i‡(
	`lua_gëfõld
(
L
, 
	`lua_upvÆueödex
(1), "£¨chîs"Ë!
LUA_TTABLE
)

536 
	`luaL_îr‹
(
L
, "'package.searchers' must beáÅable");

538 
i
 = 1; ; i++) {

539 i‡(
	`lua_øwgëi
(
L
, 3, 
i
Ë=
LUA_TNIL
) {

540 
	`lua_p›
(
L
, 1);

541 
	`luaL_pushªsu…
(&
msg
);

542 
	`luaL_îr‹
(
L
, "moduÀ '%s'ÇŸ found:%s", 
«me
, 
	`lua_to°rög
(L, -1));

544 
	`lua_push°rög
(
L
, 
«me
);

545 
	`lua_ˇŒ
(
L
, 1, 2);

546 i‡(
	`lua_isfun˘i⁄
(
L
, -2))

548 i‡(
	`lua_is°rög
(
L
, -2)) {

549 
	`lua_p›
(
L
, 1);

550 
	`luaL_addvÆue
(&
msg
);

553 
	`lua_p›
(
L
, 2);

555 
	}
}

558 
	$Œ_ªquúe
 (
lua_Sèã
 *
L
) {

559 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

560 
	`lua_£â›
(
L
, 1);

561 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, "_LOADED");

562 
	`lua_gëfõld
(
L
, 2, 
«me
);

563 i‡(
	`lua_toboﬁón
(
L
, -1))

566 
	`lua_p›
(
L
, 1);

567 
	`födlﬂdî
(
L
, 
«me
);

568 
	`lua_push°rög
(
L
, 
«me
);

569 
	`lua_ö£π
(
L
, -2);

570 
	`lua_ˇŒ
(
L
, 2, 1);

571 i‡(!
	`lua_i¢û
(
L
, -1))

572 
	`lua_£tfõld
(
L
, 2, 
«me
);

573 i‡(
	`lua_gëfõld
(
L
, 2, 
«me
Ë=
LUA_TNIL
) {

574 
	`lua_pushboﬁón
(
L
, 1);

575 
	`lua_pushvÆue
(
L
, -1);

576 
	`lua_£tfõld
(
L
, 2, 
«me
);

579 
	}
}

590 #i‡
deföed
(
LUA_COMPAT_MODULE
)

595 
	$£t_ív
 (
lua_Sèã
 *
L
) {

596 
lua_Debug
 
¨
;

597 i‡(
	`lua_gë°ack
(
L
, 1, &
¨
) == 0 ||

598 
	`lua_gëöfo
(
L
, "f", &
¨
) == 0 ||

599 
	`lua_iscfun˘i⁄
(
L
, -1))

600 
	`luaL_îr‹
(
L
, "'module'Çot called fromá Lua function");

601 
	`lua_pushvÆue
(
L
, -2);

602 
	`lua_£tupvÆue
(
L
, -2, 1);

603 
	`lua_p›
(
L
, 1);

604 
	}
}

607 
	$do›ti⁄s
 (
lua_Sèã
 *
L
, 
n
) {

608 
i
;

609 
i
 = 2; i <
n
; i++) {

610 i‡(
	`lua_isfun˘i⁄
(
L
, 
i
)) {

611 
	`lua_pushvÆue
(
L
, 
i
);

612 
	`lua_pushvÆue
(
L
, -2);

613 
	`lua_ˇŒ
(
L
, 1, 0);

616 
	}
}

619 
	$modöô
 (
lua_Sèã
 *
L
, c⁄° *
mod«me
) {

620 c⁄° *
dŸ
;

621 
	`lua_pushvÆue
(
L
, -1);

622 
	`lua_£tfõld
(
L
, -2, "_M");

623 
	`lua_push°rög
(
L
, 
mod«me
);

624 
	`lua_£tfõld
(
L
, -2, "_NAME");

625 
dŸ
 = 
	`°ºchr
(
mod«me
, '.');

626 i‡(
dŸ
 =
NULL
ËdŸ = 
mod«me
;

627 
dŸ
++;

629 
	`lua_pushl°rög
(
L
, 
mod«me
, 
dŸ
 - modname);

630 
	`lua_£tfõld
(
L
, -2, "_PACKAGE");

631 
	}
}

634 
	$Œ_moduÀ
 (
lua_Sèã
 *
L
) {

635 c⁄° *
mod«me
 = 
	`luaL_check°rög
(
L
, 1);

636 
œ°¨g
 = 
	`lua_gët›
(
L
);

637 
	`luaL_pushmoduÀ
(
L
, 
mod«me
, 1);

639 i‡(
	`lua_gëfõld
(
L
, -1, "_NAME"Ë!
LUA_TNIL
)

640 
	`lua_p›
(
L
, 1);

642 
	`lua_p›
(
L
, 1);

643 
	`modöô
(
L
, 
mod«me
);

645 
	`lua_pushvÆue
(
L
, -1);

646 
	`£t_ív
(
L
);

647 
	`do›ti⁄s
(
L
, 
œ°¨g
);

649 
	}
}

652 
	$Œ_£óŒ
 (
lua_Sèã
 *
L
) {

653 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

654 i‡(!
	`lua_gëmë©abÀ
(
L
, 1)) {

655 
	`lua_¸óãèbÀ
(
L
, 0, 1);

656 
	`lua_pushvÆue
(
L
, -1);

657 
	`lua_£tmë©abÀ
(
L
, 1);

659 
	`lua_pushglobÆèbÀ
(
L
);

660 
	`lua_£tfõld
(
L
, -2, "__index");

662 
	}
}

670 
	#AUXMARK
 "\1"

	)

676 
	$n€nv
 (
lua_Sèã
 *
L
) {

677 
b
;

678 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, "LUA_NOENV");

679 
b
 = 
	`lua_toboﬁón
(
L
, -1);

680 
	`lua_p›
(
L
, 1);

681  
b
;

682 
	}
}

685 
	$£ç©h
 (
lua_Sèã
 *
L
, c⁄° *
fõld«me
, c⁄° *
ív«me1
,

686 c⁄° *
ív«me2
, c⁄° *
def
) {

687 c⁄° *
∑th
 = 
	`gëív
(
ív«me1
);

688 i‡(
∑th
 =
NULL
)

689 
∑th
 = 
	`gëív
(
ív«me2
);

690 i‡(
∑th
 =
NULL
 || 
	`n€nv
(
L
))

691 
	`lua_push°rög
(
L
, 
def
);

694 
∑th
 = 
	`luaL_gsub
(
L
,Ö©h, 
LUA_PATH_SEP
 LUA_PATH_SEP,

695 
LUA_PATH_SEP
 
AUXMARK
 LUA_PATH_SEP);

696 
	`luaL_gsub
(
L
, 
∑th
, 
AUXMARK
, 
def
);

697 
	`lua_ªmove
(
L
, -2);

699 
	`£çrogdú
(
L
);

700 
	`lua_£tfõld
(
L
, -2, 
fõld«me
);

701 
	}
}

704 c⁄° 
luaL_Reg
 
	gpk_funcs
[] = {

705 {"lﬂdlib", 
Œ_lﬂdlib
},

706 {"£¨ch∑th", 
Œ_£¨ch∑th
},

707 #i‡
deföed
(
LUA_COMPAT_MODULE
)

708 {"£óŒ", 
Œ_£óŒ
},

711 {"¥ñﬂd", 
NULL
},

712 {"˝©h", 
NULL
},

713 {"∑th", 
NULL
},

714 {"£¨chîs", 
NULL
},

715 {"lﬂded", 
NULL
},

716 {
NULL
, NULL}

720 c⁄° 
luaL_Reg
 
	gŒ_funcs
[] = {

721 #i‡
deföed
(
LUA_COMPAT_MODULE
)

722 {"moduÀ", 
Œ_moduÀ
},

724 {"ªquúe", 
Œ_ªquúe
},

725 {
NULL
, NULL}

729 
	$¸óã£¨chî°abÀ
 (
lua_Sèã
 *
L
) {

730 c⁄° 
lua_CFun˘i⁄
 
£¨chîs
[] =

731 {
£¨chî_¥ñﬂd
, 
£¨chî_Lua
, 
£¨chî_C
, 
£¨chî_CroŸ
, 
NULL
};

732 
i
;

734 
	`lua_¸óãèbÀ
(
L
, (
£¨chîs
)/(searchers[0]) - 1, 0);

736 
i
=0; 
£¨chîs
[i] !
NULL
; i++) {

737 
	`lua_pushvÆue
(
L
, -2);

738 
	`lua_pushc˛osuª
(
L
, 
£¨chîs
[
i
], 1);

739 
	`lua_øw£ti
(
L
, -2, 
i
+1);

741 #i‡
	`deföed
(
LUA_COMPAT_LOADERS
)

742 
	`lua_pushvÆue
(
L
, -1);

743 
	`lua_£tfõld
(
L
, -3, "loaders");

745 
	`lua_£tfõld
(
L
, -2, "searchers");

746 
	}
}

753 
	$¸óã˛ib°abÀ
 (
lua_Sèã
 *
L
) {

754 
	`lua_√wèbÀ
(
L
);

755 
	`lua_¸óãèbÀ
(
L
, 0, 1);

756 
	`lua_pushcfun˘i⁄
(
L
, 
g˘m
);

757 
	`lua_£tfõld
(
L
, -2, "__gc");

758 
	`lua_£tmë©abÀ
(
L
, -2);

759 
	`lua_øw£ç
(
L
, 
LUA_REGISTRYINDEX
, &
CLIBS
);

760 
	}
}

763 
LUAMOD_API
 
	$lua›í_∑ckage
 (
lua_Sèã
 *
L
) {

764 
	`¸óã˛ib°abÀ
(
L
);

765 
	`luaL_√wlib
(
L
, 
pk_funcs
);

766 
	`¸óã£¨chî°abÀ
(
L
);

768 
	`£ç©h
(
L
, "∑th", 
LUA_PATHVARVERSION
, 
LUA_PATH_VAR
, 
LUA_PATH_DEFAULT
);

770 
	`£ç©h
(
L
, "˝©h", 
LUA_CPATHVARVERSION
, 
LUA_CPATH_VAR
, 
LUA_CPATH_DEFAULT
);

772 
	`lua_pushlôîÆ
(
L
, 
LUA_DIRSEP
 "\n" 
LUA_PATH_SEP
 "\n" 
LUA_PATH_MARK
 "\n"

773 
LUA_EXEC_DIR
 "\n" 
LUA_IGMARK
 "\n");

774 
	`lua_£tfõld
(
L
, -2, "config");

776 
	`luaL_gësubèbÀ
(
L
, 
LUA_REGISTRYINDEX
, "_LOADED");

777 
	`lua_£tfõld
(
L
, -2, "loaded");

779 
	`luaL_gësubèbÀ
(
L
, 
LUA_REGISTRYINDEX
, "_PRELOAD");

780 
	`lua_£tfõld
(
L
, -2, "preload");

781 
	`lua_pushglobÆèbÀ
(
L
);

782 
	`lua_pushvÆue
(
L
, -2);

783 
	`luaL_£tfuncs
(
L
, 
Œ_funcs
, 1);

784 
	`lua_p›
(
L
, 1);

786 
	}
}

	@lua/src/lobject.c

7 
	#lobje˘_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<loˇÀ.h
>

14 
	~<m©h.h
>

15 
	~<°d¨g.h
>

16 
	~<°dio.h
>

17 
	~<°dlib.h
>

18 
	~<°rög.h
>

20 
	~"lua.h
"

22 
	~"l˘y≥.h
"

23 
	~"ldebug.h
"

24 
	~"ldo.h
"

25 
	~"lmem.h
"

26 
	~"lobje˘.h
"

27 
	~"l°©e.h
"

28 
	~"l°rög.h
"

29 
	~"lvm.h
"

33 
LUAI_DDEF
 c⁄° 
TVÆue
 
	gluaO_nûobje˘_
 = {
NILCONSTANT
};

41 
	$luaO_öt2fb
 (
x
) {

42 
e
 = 0;

43 i‡(
x
 < 8)  x;

44 
x
 >= (8 << 4)) {

45 
x
 = (x + 0xf) >> 4;

46 
e
 += 4;

48 
x
 >= (8 << 1)) {

49 
x
 = (x + 1) >> 1;

50 
e
++;

52  ((
e
+1Ë<< 3Ë| (
	`ˇ°_öt
(
x
) - 8);

53 
	}
}

57 
	$luaO_fb2öt
 (
x
) {

58  (
x
 < 8) ? x : ((x & 7) + 8) << ((x >> 3) - 1);

59 
	}
}

65 
	$luaO_˚ûlog2
 (
x
) {

66 c⁄° 
lu_byã
 
log_2
[256] = {

76 
l
 = 0;

77 
x
--;

78 
x
 >256Ë{ 
l
 += 8; x >>= 8; }

79  
l
 + 
log_2
[
x
];

80 
	}
}

83 
lua_I¡egî
 
	$öèrôh
 (
lua_Sèã
 *
L
, 
›
, 
lua_I¡egî
 
v1
,

84 
lua_I¡egî
 
v2
) {

85 
›
) {

86 
LUA_OPADD
:  
	`öt›
(+, 
v1
, 
v2
);

87 
LUA_OPSUB
: 
	`öt›
(-, 
v1
, 
v2
);

88 
LUA_OPMUL
: 
	`öt›
(*, 
v1
, 
v2
);

89 
LUA_OPMOD
:  
	`luaV_mod
(
L
, 
v1
, 
v2
);

90 
LUA_OPIDIV
:  
	`luaV_div
(
L
, 
v1
, 
v2
);

91 
LUA_OPBAND
:  
	`öt›
(&, 
v1
, 
v2
);

92 
LUA_OPBOR
:  
	`öt›
(|, 
v1
, 
v2
);

93 
LUA_OPBXOR
:  
	`öt›
(^, 
v1
, 
v2
);

94 
LUA_OPSHL
:  
	`luaV_shi·l
(
v1
, 
v2
);

95 
LUA_OPSHR
:  
	`luaV_shi·l
(
v1
, -
v2
);

96 
LUA_OPUNM
:  
	`öt›
(-, 0, 
v1
);

97 
LUA_OPBNOT
:  
	`öt›
(^, ~
	`l_ˇ°S2U
(0), 
v1
);

98 : 
	`lua_as£π
(0);  0;

100 
	}
}

103 
lua_Numbî
 
	$num¨ôh
 (
lua_Sèã
 *
L
, 
›
, 
lua_Numbî
 
v1
,

104 
lua_Numbî
 
v2
) {

105 
›
) {

106 
LUA_OPADD
:  
	`luai_numadd
(
L
, 
v1
, 
v2
);

107 
LUA_OPSUB
:  
	`luai_numsub
(
L
, 
v1
, 
v2
);

108 
LUA_OPMUL
:  
	`luai_nummul
(
L
, 
v1
, 
v2
);

109 
LUA_OPDIV
:  
	`luai_numdiv
(
L
, 
v1
, 
v2
);

110 
LUA_OPPOW
:  
	`luai_numpow
(
L
, 
v1
, 
v2
);

111 
LUA_OPIDIV
:  
	`luai_numidiv
(
L
, 
v1
, 
v2
);

112 
LUA_OPUNM
:  
	`luai_numunm
(
L
, 
v1
);

113 
LUA_OPMOD
: {

114 
lua_Numbî
 
m
;

115 
	`luai_nummod
(
L
, 
v1
, 
v2
, 
m
);

116  
m
;

118 : 
	`lua_as£π
(0);  0;

120 
	}
}

123 
	$luaO_¨ôh
 (
lua_Sèã
 *
L
, 
›
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

124 
TVÆue
 *
ªs
) {

125 
›
) {

126 
LUA_OPBAND
: 
LUA_OPBOR
: 
LUA_OPBXOR
:

127 
LUA_OPSHL
: 
LUA_OPSHR
:

128 
LUA_OPBNOT
: {

129 
lua_I¡egî
 
i1
;Üua_I¡egî 
i2
;

130 i‡(
	`toöãgî
(
p1
, &
i1
Ë&&Åoöãgî(
p2
, &
i2
)) {

131 
	`£tivÆue
(
ªs
, 
	`öèrôh
(
L
, 
›
, 
i1
, 
i2
));

136 
LUA_OPDIV
: 
LUA_OPPOW
: {

137 
lua_Numbî
 
n1
;Üua_Numbî 
n2
;

138 i‡(
	`t⁄umbî
(
p1
, &
n1
Ë&&Å⁄umbî(
p2
, &
n2
)) {

139 
	`£tÊtvÆue
(
ªs
, 
	`num¨ôh
(
L
, 
›
, 
n1
, 
n2
));

145 
lua_Numbî
 
n1
;Üua_Numbî 
n2
;

146 i‡(
	`âisöãgî
(
p1
Ë&&Åtisöãgî(
p2
)) {

147 
	`£tivÆue
(
ªs
, 
	`öèrôh
(
L
, 
›
, 
	`ivÆue
(
p1
), ivÆue(
p2
)));

150 i‡(
	`t⁄umbî
(
p1
, &
n1
Ë&&Å⁄umbî(
p2
, &
n2
)) {

151 
	`£tÊtvÆue
(
ªs
, 
	`num¨ôh
(
L
, 
›
, 
n1
, 
n2
));

158 
	`lua_as£π
(
L
 !
NULL
);

159 
	`luaT_åyböTM
(
L
, 
p1
, 
p2
, 
ªs
, 
	`ˇ°
(
TMS
, (
›
 - 
LUA_OPADD
Ë+ 
TM_ADD
));

160 
	}
}

163 
	$luaO_hexavÆue
 (
c
) {

164 i‡(
	`lisdigô
(
c
))  c - '0';

165  (
	`…ﬁowî
(
c
) - 'a') + 10;

166 
	}
}

169 
	$i¢eg
 (c⁄° **
s
) {

170 i‡(**
s
 == '-') { (*s)++;  1; }

171 i‡(**
s
 == '+') (*s)++;

173 
	}
}

183 #i‡!
deföed
(
lua_°rx2numbî
)

187 
	#MAXSIGDIG
 30

	)

193 
lua_Numbî
 
	$lua_°rx2numbî
 (c⁄° *
s
, **
íd±r
) {

194 
dŸ
 = 
	`lua_gëloˇÀde˝oöt
();

195 
lua_Numbî
 
r
 = 0.0;

196 
sigdig
 = 0;

197 
nosigdig
 = 0;

198 
e
 = 0;

199 
√g
;

200 
hasdŸ
 = 0;

201 *
íd±r
 = 
	`ˇ°
(*, 
s
);

202 
	`lis•a˚
(
	`ˇ°_uch¨
(*
s
))) s++;

203 
√g
 = 
	`i¢eg
(&
s
);

204 i‡(!(*
s
 == '0' && (*(s + 1) == 'x' || *(s + 1) == 'X')))

206 
s
 += 2; ; s++) {

207 i‡(*
s
 =
dŸ
) {

208 i‡(
hasdŸ
) ;

209 
hasdŸ
 = 1;

211 i‡(
	`lisxdigô
(
	`ˇ°_uch¨
(*
s
))) {

212 i‡(
sigdig
 =0 && *
s
 == '0')

213 
nosigdig
++;

214 i‡(++
sigdig
 <
MAXSIGDIG
)

215 
r
 = (∏* 
	`ˇ°_num
(16.0)Ë+ 
	`luaO_hexavÆue
(*
s
);

216 
e
++;

217 i‡(
hasdŸ
Ë
e
--;

221 i‡(
nosigdig
 + 
sigdig
 == 0)

223 *
íd±r
 = 
	`ˇ°
(*, 
s
);

224 
e
 *= 4;

225 i‡(*
s
 == 'p' || *s == 'P') {

226 
exp1
 = 0;

227 
√g1
;

228 
s
++;

229 
√g1
 = 
	`i¢eg
(&
s
);

230 i‡(!
	`lisdigô
(
	`ˇ°_uch¨
(*
s
)))

232 
	`lisdigô
(
	`ˇ°_uch¨
(*
s
)))

233 
exp1
 =Éxp1 * 10 + *(
s
++) - '0';

234 i‡(
√g1
Ë
exp1
 = -exp1;

235 
e
 +
exp1
;

236 *
íd±r
 = 
	`ˇ°
(*, 
s
);

238 i‡(
√g
Ë
r
 = -r;

239  
	`l_m©h›
(
ldexp
)(
r
, 
e
);

240 
	}
}

247 #i‡!
deföed
 (
L_MAXLENNUM
)

248 
	#L_MAXLENNUM
 200

	)

251 c⁄° *
	$l_°r2dloc
 (c⁄° *
s
, 
lua_Numbî
 *
ªsu…
, 
mode
) {

252 *
íd±r
;

253 *
ªsu…
 = (
mode
 ='x'Ë? 
	`lua_°rx2numbî
(
s
, &
íd±r
)

254 : 
	`lua_°r2numbî
(
s
, &
íd±r
);

255 i‡(
íd±r
 =
s
Ë 
NULL
;

256 
	`lis•a˚
(
	`ˇ°_uch¨
(*
íd±r
)))Éndptr++;

257  (*
íd±r
 ='\0'Ë?Énd±∏: 
NULL
;

258 
	}
}

274 c⁄° *
	$l_°r2d
 (c⁄° *
s
, 
lua_Numbî
 *
ªsu…
) {

275 c⁄° *
íd±r
;

276 c⁄° *
pmode
 = 
	`°Ωbrk
(
s
, ".xXnN");

277 
mode
 = 
pmode
 ? 
	`…ﬁowî
(
	`ˇ°_uch¨
(*pmode)) : 0;

278 i‡(
mode
 == 'n')

279  
NULL
;

280 
íd±r
 = 
	`l_°r2dloc
(
s
, 
ªsu…
, 
mode
);

281 i‡(
íd±r
 =
NULL
) {

282 
buff
[
L_MAXLENNUM
 + 1];

283 *
pdŸ
 = 
	`°rchr
(
s
, '.');

284 i‡(
	`°æí
(
s
Ë> 
L_MAXLENNUM
 || 
pdŸ
 =
NULL
)

285  
NULL
;

286 
	`°r˝y
(
buff
, 
s
);

287 
buff
[
pdŸ
 - 
s
] = 
	`lua_gëloˇÀde˝oöt
();

288 
íd±r
 = 
	`l_°r2dloc
(
buff
, 
ªsu…
, 
mode
);

289 i‡(
íd±r
 !
NULL
)

290 
íd±r
 = 
s
 + (íd±∏- 
buff
);

292  
íd±r
;

293 
	}
}

296 
	#MAXBY10
 
	`ˇ°
(
lua_Unsig√d
, 
LUA_MAXINTEGER
 / 10)

	)

297 
	#MAXLASTD
 
	`ˇ°_öt
(
LUA_MAXINTEGER
 % 10)

	)

299 c⁄° *
	$l_°r2öt
 (c⁄° *
s
, 
lua_I¡egî
 *
ªsu…
) {

300 
lua_Unsig√d
 
a
 = 0;

301 
em±y
 = 1;

302 
√g
;

303 
	`lis•a˚
(
	`ˇ°_uch¨
(*
s
))) s++;

304 
√g
 = 
	`i¢eg
(&
s
);

305 i‡(
s
[0] == '0' &&

306 (
s
[1] == 'x' || s[1] == 'X')) {

307 
s
 += 2;

308 ; 
	`lisxdigô
(
	`ˇ°_uch¨
(*
s
)); s++) {

309 
a
 =á * 16 + 
	`luaO_hexavÆue
(*
s
);

310 
em±y
 = 0;

314 ; 
	`lisdigô
(
	`ˇ°_uch¨
(*
s
)); s++) {

315 
d
 = *
s
 - '0';

316 i‡(
a
 >
MAXBY10
 && (®> MAXBY10 || 
d
 > 
MAXLASTD
 + 
√g
))

317  
NULL
;

318 
a
 =á * 10 + 
d
;

319 
em±y
 = 0;

322 
	`lis•a˚
(
	`ˇ°_uch¨
(*
s
))) s++;

323 i‡(
em±y
 || *
s
 !'\0'Ë 
NULL
;

325 *
ªsu…
 = 
	`l_ˇ°U2S
((
√g
Ë? 0u - 
a
 :á);

326  
s
;

328 
	}
}

331 
size_t
 
	$luaO_°r2num
 (c⁄° *
s
, 
TVÆue
 *
o
) {

332 
lua_I¡egî
 
i
; 
lua_Numbî
 
n
;

333 c⁄° *
e
;

334 i‡((
e
 = 
	`l_°r2öt
(
s
, &
i
)Ë!
NULL
) {

335 
	`£tivÆue
(
o
, 
i
);

337 i‡((
e
 = 
	`l_°r2d
(
s
, &
n
)Ë!
NULL
) {

338 
	`£tÊtvÆue
(
o
, 
n
);

342  (
e
 - 
s
) + 1;

343 
	}
}

346 
	$luaO_utf8esc
 (*
buff
, 
x
) {

347 
n
 = 1;

348 
	`lua_as£π
(
x
 <= 0x10FFFF);

349 i‡(
x
 < 0x80)

350 
buff
[
UTF8BUFFSZ
 - 1] = 
	`ˇ°
(, 
x
);

352 
mfb
 = 0x3f;

354 
buff
[
UTF8BUFFSZ
 - (
n
++)] = 
	`ˇ°
(, 0x80 | (
x
 & 0x3f));

355 
x
 >>= 6;

356 
mfb
 >>= 1;

357 } 
x
 > 
mfb
);

358 
buff
[
UTF8BUFFSZ
 - 
n
] = 
	`ˇ°
(, (~
mfb
 << 1Ë| 
x
);

360  
n
;

361 
	}
}

365 
	#MAXNUMBER2STR
 50

	)

371 
	$luaO_to°rög
 (
lua_Sèã
 *
L
, 
StkId
 
obj
) {

372 
buff
[
MAXNUMBER2STR
];

373 
size_t
 
Àn
;

374 
	`lua_as£π
(
	`âi¢umbî
(
obj
));

375 i‡(
	`âisöãgî
(
obj
))

376 
Àn
 = 
	`lua_öãgî2°r
(
buff
, (buff), 
	`ivÆue
(
obj
));

378 
Àn
 = 
	`lua_numbî2°r
(
buff
, (buff), 
	`ÊtvÆue
(
obj
));

379 #i‡!
	`deföed
(
LUA_COMPAT_FLOATSTRING
)

380 i‡(
buff
[
	`°r•n
(buff, "-0123456789")] == '\0') {

381 
buff
[
Àn
++] = 
	`lua_gëloˇÀde˝oöt
();

382 
buff
[
Àn
++] = '0';

386 
	`£tsvÆue2s
(
L
, 
obj
, 
	`luaS_√wl°r
(L, 
buff
, 
Àn
));

387 
	}
}

390 
	$push°r
 (
lua_Sèã
 *
L
, c⁄° *
°r
, 
size_t
 
l
) {

391 
	`£tsvÆue2s
(
L
, L->
t›
, 
	`luaS_√wl°r
(L, 
°r
, 
l
));

392 
	`luaD_ö˘›
(
L
);

393 
	}
}

400 c⁄° *
	$luaO_pushvf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, 
va_li°
 
¨gp
) {

401 
n
 = 0;

403 c⁄° *
e
 = 
	`°rchr
(
fmt
, '%');

404 i‡(
e
 =
NULL
) ;

405 
	`push°r
(
L
, 
fmt
, 
e
 - fmt);

406 *(
e
+1)) {

408 c⁄° *
s
 = 
	`va_¨g
(
¨gp
, *);

409 i‡(
s
 =
NULL
) s = "(null)";

410 
	`push°r
(
L
, 
s
, 
	`°æí
(s));

414 
buff
 = 
	`ˇ°
(, 
	`va_¨g
(
¨gp
, ));

415 i‡(
	`li•röt
(
	`ˇ°_uch¨
(
buff
)))

416 
	`push°r
(
L
, &
buff
, 1);

418 
	`luaO_pushf°rög
(
L
, "<\\%d>", 
	`ˇ°_uch¨
(
buff
));

422 
	`£tivÆue
(
L
->
t›
, 
	`va_¨g
(
¨gp
, ));

423 
t›2°r
;

426 
	`£tivÆue
(
L
->
t›
, 
	`ˇ°
(
lua_I¡egî
, 
	`va_¨g
(
¨gp
, 
l_uacI¡
)));

427 
t›2°r
;

430 
	`£tÊtvÆue
(
L
->
t›
, 
	`ˇ°_num
(
	`va_¨g
(
¨gp
, 
l_uacNumbî
)));

431 
t›2°r
:

432 
	`luaD_ö˘›
(
L
);

433 
	`luaO_to°rög
(
L
, L->
t›
 - 1);

437 
buff
[4*(*) + 8];

438 
l
 = 
	`l_•rötf
(
buff
, (buff), "%p", 
	`va_¨g
(
¨gp
, *));

439 
	`push°r
(
L
, 
buff
, 
l
);

443 
buff
[
UTF8BUFFSZ
];

444 
l
 = 
	`luaO_utf8esc
(
buff
, 
	`ˇ°
(, 
	`va_¨g
(
¨gp
, )));

445 
	`push°r
(
L
, 
buff
 + 
UTF8BUFFSZ
 - 
l
,Ü);

449 
	`push°r
(
L
, "%", 1);

453 
	`luaG_ru√º‹
(
L
, "invalid option '%%%c'Åo 'lua_pushfstring'",

454 *(
e
 + 1));

457 
n
 += 2;

458 
fmt
 = 
e
+2;

460 
	`luaD_check°ack
(
L
, 1);

461 
	`push°r
(
L
, 
fmt
, 
	`°æí
(fmt));

462 i‡(
n
 > 0Ë
	`luaV_c⁄ˇt
(
L
,Ç + 1);

463  
	`svÆue
(
L
->
t›
 - 1);

464 
	}
}

467 c⁄° *
	$luaO_pushf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...) {

468 c⁄° *
msg
;

469 
va_li°
 
¨gp
;

470 
	`va_°¨t
(
¨gp
, 
fmt
);

471 
msg
 = 
	`luaO_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

472 
	`va_íd
(
¨gp
);

473  
msg
;

474 
	}
}

478 
	#LL
(
x
Ë((x)/(Ë- 1)

	)

480 
	#RETS
 "..."

	)

481 
	#PRE
 "[°rög \""

	)

482 
	#POS
 "\"]"

	)

484 
	#add°r
(
a
,
b
,
l
Ë–
	`mem˝y
◊,b,÷Ë* ()),á +÷Ë)

	)

486 
	$luaO_chunkid
 (*
out
, c⁄° *
sour˚
, 
size_t
 
bufÊí
) {

487 
size_t
 
l
 = 
	`°æí
(
sour˚
);

488 i‡(*
sour˚
 == '=') {

489 i‡(
l
 <
bufÊí
)

490 
	`mem˝y
(
out
, 
sour˚
 + 1, 
l
 * ());

492 
	`add°r
(
out
, 
sour˚
 + 1, 
bufÊí
 - 1);

493 *
out
 = '\0';

496 i‡(*
sour˚
 == '@') {

497 i‡(
l
 <
bufÊí
)

498 
	`mem˝y
(
out
, 
sour˚
 + 1, 
l
 * ());

500 
	`add°r
(
out
, 
RETS
, 
	`LL
(RETS));

501 
bufÊí
 -
	`LL
(
RETS
);

502 
	`mem˝y
(
out
, 
sour˚
 + 1 + 
l
 - 
bufÊí
, bufflen * ());

506 c⁄° *
∆
 = 
	`°rchr
(
sour˚
, '\n');

507 
	`add°r
(
out
, 
PRE
, 
	`LL
(PRE));

508 
bufÊí
 -
	`LL
(
PRE
 
RETS
 
POS
) + 1;

509 i‡(
l
 < 
bufÊí
 && 
∆
 =
NULL
) {

510 
	`add°r
(
out
, 
sour˚
, 
l
);

513 i‡(
∆
 !
NULL
Ë
l
 =Ç»- 
sour˚
;

514 i‡(
l
 > 
bufÊí
)Ü = bufflen;

515 
	`add°r
(
out
, 
sour˚
, 
l
);

516 
	`add°r
(
out
, 
RETS
, 
	`LL
(RETS));

518 
	`mem˝y
(
out
, 
POS
, (
	`LL
(POS) + 1) * ());

520 
	}
}

	@lua/src/lobject.h

8 #i‚de‡
lobje˘_h


9 
	#lobje˘_h


	)

12 
	~<°d¨g.h
>

15 
	~"Œimôs.h
"

16 
	~"lua.h
"

22 
	#LUA_TPROTO
 
LUA_NUMTAGS


	)

23 
	#LUA_TDEADKEY
 (
LUA_NUMTAGS
+1Ë

	)

28 
	#LUA_TOTALTAGS
 (
LUA_TPROTO
 + 2)

	)

47 
	#LUA_TLCL
 (
LUA_TFUNCTION
 | (0 << 4)Ë

	)

48 
	#LUA_TLCF
 (
LUA_TFUNCTION
 | (1 << 4)Ë

	)

49 
	#LUA_TCCL
 (
LUA_TFUNCTION
 | (2 << 4)Ë

	)

53 
	#LUA_TSHRSTR
 (
LUA_TSTRING
 | (0 << 4)Ë

	)

54 
	#LUA_TLNGSTR
 (
LUA_TSTRING
 | (1 << 4)Ë

	)

58 
	#LUA_TNUMFLT
 (
LUA_TNUMBER
 | (0 << 4)Ë

	)

59 
	#LUA_TNUMINT
 (
LUA_TNUMBER
 | (1 << 4)Ë

	)

63 
	#BIT_ISCOLLECTABLE
 (1 << 6)

	)

66 
	#˘b
(
t
Ë(—Ë| 
BIT_ISCOLLECTABLE
)

	)

72 
GCObje˘
 
	tGCObje˘
;

79 
	#Comm⁄Hódî
 
GCObje˘
 *
√xt
; 
lu_byã
 
â
;Üu_byã 
m¨ked


	)

85 
	sGCObje˘
 {

86 
	mComm⁄Hódî
;

100 
	uVÆue
 {

101 
GCObje˘
 *
	mgc
;

102 *
	mp
;

103 
	mb
;

104 
lua_CFun˘i⁄
 
	mf
;

105 
lua_I¡egî
 
	mi
;

106 
lua_Numbî
 
	mn
;

107 } 
	tVÆue
;

110 
	#TVÆuefõlds
 
VÆue
 
vÆue_
; 
â_


	)

113 
	slua_TVÆue
 {

114 
	mTVÆuefõlds
;

115 } 
	tTVÆue
;

120 
	#NILCONSTANT
 {
NULL
}, 
LUA_TNIL


	)

123 
	#vÆ_
(
o
Ë((o)->
vÆue_
)

	)

127 
	#πty≥
(
o
Ë((o)->
â_
)

	)

130 
	#nov¨ü¡
(
x
Ë((xË& 0x0F)

	)

133 
	#ây≥
(
o
Ë(
	`πty≥
(oË& 0x3F)

	)

136 
	#ânov
(
o
Ë(
	`nov¨ü¡
(
	`πty≥
(o)))

	)

140 
	#checkèg
(
o
,
t
Ë(
	`πty≥
(oË=—))

	)

141 
	#checkty≥
(
o
,
t
Ë(
	`ânov
(oË=—))

	)

142 
	#âi¢umbî
(
o
Ë
	`checkty≥
((o), 
LUA_TNUMBER
)

	)

143 
	#âisÊﬂt
(
o
Ë
	`checkèg
((o), 
LUA_TNUMFLT
)

	)

144 
	#âisöãgî
(
o
Ë
	`checkèg
((o), 
LUA_TNUMINT
)

	)

145 
	#âi¢û
(
o
Ë
	`checkèg
((o), 
LUA_TNIL
)

	)

146 
	#âisboﬁón
(
o
Ë
	`checkèg
((o), 
LUA_TBOOLEAN
)

	)

147 
	#âi¶ightu£rd©a
(
o
Ë
	`checkèg
((o), 
LUA_TLIGHTUSERDATA
)

	)

148 
	#âis°rög
(
o
Ë
	`checkty≥
((o), 
LUA_TSTRING
)

	)

149 
	#âisshr°rög
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TSHRSTR
))

	)

150 
	#âi¶ng°rög
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TLNGSTR
))

	)

151 
	#âi°abÀ
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TTABLE
))

	)

152 
	#âisfun˘i⁄
(
o
Ë
	`checkty≥
(o, 
LUA_TFUNCTION
)

	)

153 
	#âis˛osuª
(
o
Ë((
	`πty≥
(oË& 0x1FË=
LUA_TFUNCTION
)

	)

154 
	#âisC˛osuª
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TCCL
))

	)

155 
	#âisL˛osuª
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TLCL
))

	)

156 
	#âi¶cf
(
o
Ë
	`checkèg
((o), 
LUA_TLCF
)

	)

157 
	#âisfuŒu£rd©a
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TUSERDATA
))

	)

158 
	#âi°hªad
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TTHREAD
))

	)

159 
	#âisdódkey
(
o
Ë
	`checkèg
((o), 
LUA_TDEADKEY
)

	)

163 
	#ivÆue
(
o
Ë
	`check_exp
(
	`âisöãgî
(o), 
	`vÆ_
(o).
i
)

	)

164 
	#ÊtvÆue
(
o
Ë
	`check_exp
(
	`âisÊﬂt
(o), 
	`vÆ_
(o).
n
)

	)

165 
	#nvÆue
(
o
Ë
	`check_exp
(
	`âi¢umbî
(o), \

166 (
	`âisöãgî
(
o
Ë? 
	`ˇ°_num
(
	`ivÆue
(o)Ë: 
	`ÊtvÆue
(o)))

	)

167 
	#gcvÆue
(
o
Ë
	`check_exp
(
	`iscﬁÀ˘abÀ
(o), 
	`vÆ_
(o).
gc
)

	)

168 
	#pvÆue
(
o
Ë
	`check_exp
(
	`âi¶ightu£rd©a
(o), 
	`vÆ_
(o).
p
)

	)

169 
	#tsvÆue
(
o
Ë
	`check_exp
(
	`âis°rög
(o), 
	`gco2ts
(
	`vÆ_
(o).
gc
))

	)

170 
	#uvÆue
(
o
Ë
	`check_exp
(
	`âisfuŒu£rd©a
(o), 
	`gco2u
(
	`vÆ_
(o).
gc
))

	)

171 
	#˛vÆue
(
o
Ë
	`check_exp
(
	`âis˛osuª
(o), 
	`gco2˛
(
	`vÆ_
(o).
gc
))

	)

172 
	#˛LvÆue
(
o
Ë
	`check_exp
(
	`âisL˛osuª
(o), 
	`gco2l˛
(
	`vÆ_
(o).
gc
))

	)

173 
	#˛CvÆue
(
o
Ë
	`check_exp
(
	`âisC˛osuª
(o), 
	`gco2c˛
(
	`vÆ_
(o).
gc
))

	)

174 
	#fvÆue
(
o
Ë
	`check_exp
(
	`âi¶cf
(o), 
	`vÆ_
(o).
f
)

	)

175 
	#hvÆue
(
o
Ë
	`check_exp
(
	`âi°abÀ
(o), 
	`gco2t
(
	`vÆ_
(o).
gc
))

	)

176 
	#bvÆue
(
o
Ë
	`check_exp
(
	`âisboﬁón
(o), 
	`vÆ_
(o).
b
)

	)

177 
	#thvÆue
(
o
Ë
	`check_exp
(
	`âi°hªad
(o), 
	`gco2th
(
	`vÆ_
(o).
gc
))

	)

179 
	#dódvÆue
(
o
Ë
	`check_exp
(
	`âisdódkey
(o), 
	`ˇ°
(*, 
	`vÆ_
(o).
gc
))

	)

181 
	#l_isÁl£
(
o
Ë(
	`âi¢û
(oË|| (
	`âisboﬁón
(oË&& 
	`bvÆue
(oË=0))

	)

184 
	#iscﬁÀ˘abÀ
(
o
Ë(
	`πty≥
(oË& 
BIT_ISCOLLECTABLE
)

	)

188 
	#righât
(
obj
Ë(
	`ây≥
(objË=
	`gcvÆue
(obj)->
â
)

	)

190 
	#checklivíess
(
L
,
obj
) \

191 
	`lua_l⁄gas£π
(!
	`iscﬁÀ˘abÀ
(
obj
) || \

192 (
	`righât
(
obj
Ë&& (
L
 =
NULL
 || !
	`isdód
(
	`G
(L),
	`gcvÆue
(obj)))))

	)

196 
	#£ât_
(
o
,
t
Ë((o)->
â_
=—))

	)

198 
	#£tÊtvÆue
(
obj
,
x
) \

199 { 
TVÆue
 *
io
=(
obj
); 
	`vÆ_
(io).
n
=(
x
); 
	`£ât_
(io, 
LUA_TNUMFLT
); }

	)

201 
	#chgÊtvÆue
(
obj
,
x
) \

202 { 
TVÆue
 *
io
=(
obj
); 
	`lua_as£π
(
	`âisÊﬂt
(io)); 
	`vÆ_
(io).
n
=(
x
); }

	)

204 
	#£tivÆue
(
obj
,
x
) \

205 { 
TVÆue
 *
io
=(
obj
); 
	`vÆ_
(io).
i
=(
x
); 
	`£ât_
(io, 
LUA_TNUMINT
); }

	)

207 
	#chgivÆue
(
obj
,
x
) \

208 { 
TVÆue
 *
io
=(
obj
); 
	`lua_as£π
(
	`âisöãgî
(io)); 
	`vÆ_
(io).
i
=(
x
); }

	)

210 
	#£äûvÆue
(
obj
Ë
	`£ât_
(obj, 
LUA_TNIL
)

	)

212 
	#£tfvÆue
(
obj
,
x
) \

213 { 
TVÆue
 *
io
=(
obj
); 
	`vÆ_
(io).
f
=(
x
); 
	`£ât_
(io, 
LUA_TLCF
); }

	)

215 
	#£çvÆue
(
obj
,
x
) \

216 { 
TVÆue
 *
io
=(
obj
); 
	`vÆ_
(io).
p
=(
x
); 
	`£ât_
(io, 
LUA_TLIGHTUSERDATA
); }

	)

218 
	#£tbvÆue
(
obj
,
x
) \

219 { 
TVÆue
 *
io
=(
obj
); 
	`vÆ_
(io).
b
=(
x
); 
	`£ât_
(io, 
LUA_TBOOLEAN
); }

	)

221 
	#£tgcovÆue
(
L
,
obj
,
x
) \

222 { 
TVÆue
 *
io
 = (
obj
); 
GCObje˘
 *
i_g
=(
x
); \

223 
	`vÆ_
(
io
).
gc
 = 
i_g
; 
	`£ât_
(io, 
	`˘b
(i_g->
â
)); }

	)

225 
	#£tsvÆue
(
L
,
obj
,
x
) \

226 { 
TVÆue
 *
io
 = (
obj
); 
TSåög
 *
x_
 = (
x
); \

227 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(x_->
â
)); \

228 
	`checklivíess
(
L
,
io
); }

	)

230 
	#£tuvÆue
(
L
,
obj
,
x
) \

231 { 
TVÆue
 *
io
 = (
obj
); 
Ud©a
 *
x_
 = (
x
); \

232 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(
LUA_TUSERDATA
)); \

233 
	`checklivíess
(
L
,
io
); }

	)

235 
	#£âhvÆue
(
L
,
obj
,
x
) \

236 { 
TVÆue
 *
io
 = (
obj
); 
lua_Sèã
 *
x_
 = (
x
); \

237 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(
LUA_TTHREAD
)); \

238 
	`checklivíess
(
L
,
io
); }

	)

240 
	#£t˛LvÆue
(
L
,
obj
,
x
) \

241 { 
TVÆue
 *
io
 = (
obj
); 
LClosuª
 *
x_
 = (
x
); \

242 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(
LUA_TLCL
)); \

243 
	`checklivíess
(
L
,
io
); }

	)

245 
	#£t˛CvÆue
(
L
,
obj
,
x
) \

246 { 
TVÆue
 *
io
 = (
obj
); 
CClosuª
 *
x_
 = (
x
); \

247 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(
LUA_TCCL
)); \

248 
	`checklivíess
(
L
,
io
); }

	)

250 
	#£thvÆue
(
L
,
obj
,
x
) \

251 { 
TVÆue
 *
io
 = (
obj
); 
TabÀ
 *
x_
 = (
x
); \

252 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(
LUA_TTABLE
)); \

253 
	`checklivíess
(
L
,
io
); }

	)

255 
	#£tdódvÆue
(
obj
Ë
	`£ât_
(obj, 
LUA_TDEADKEY
)

	)

259 
	#£tobj
(
L
,
obj1
,
obj2
) \

260 { 
TVÆue
 *
io1
=(
obj1
); *io1 = *(
obj2
); \

261 ()
L
; 
	`checklivíess
(L,
io1
); }

	)

269 
	#£tobjs2s
 
£tobj


	)

271 
	#£tobj2s
 
£tobj


	)

272 
	#£tsvÆue2s
 
£tsvÆue


	)

273 
	#£thvÆue2s
 
£thvÆue


	)

274 
	#£çtvÆue2s
 
£çtvÆue


	)

276 
	#£tobjt2t
 
£tobj


	)

278 
	#£tobj2n
 
£tobj


	)

279 
	#£tsvÆue2n
 
£tsvÆue


	)

282 
	#£tobj2t
(
L
,
o1
,
o2
Ë(()L, *(o1)=*(o2), 
	`checklivíess
(L,(o1)))

	)

294 
TVÆue
 *
	tStkId
;

303 
	sTSåög
 {

304 
	mComm⁄Hódî
;

305 
lu_byã
 
	mexåa
;

306 
lu_byã
 
	mshæí
;

307 
	mhash
;

309 
size_t
 
	m gÀn
;

310 
TSåög
 *
	mh√xt
;

311 } 
	mu
;

312 } 
	tTSåög
;

318 
	uUTSåög
 {

319 
L_UmaxÆign
 
	mdummy
;

320 
TSåög
 
	mtsv
;

321 } 
	tUTSåög
;

328 
	#gë°r
(
ts
) \

329 
	`check_exp
(((
ts
)->
exåa
), 
	`ˇ°
(*, (ts)Ë+ (
UTSåög
))

	)

333 
	#svÆue
(
o
Ë
	`gë°r
(
	`tsvÆue
(o))

	)

336 
	#ts¶í
(
s
Ë((s)->
â
 =
LUA_TSHRSTR
 ? (s)->
shæí
 : (s)->
u
.
 gÀn
)

	)

339 
	#v¶í
(
o
Ë
	`ts¶í
(
	`tsvÆue
(o))

	)

346 
	sUd©a
 {

347 
	mComm⁄Hódî
;

348 
lu_byã
 
	mâuv_
;

349 
TabÀ
 *
	mmë©abÀ
;

350 
size_t
 
	mÀn
;

351 
VÆue
 
	mu£r_
;

352 } 
	tUd©a
;

358 
	uUUd©a
 {

359 
L_UmaxÆign
 
	mdummy
;

360 
Ud©a
 
	muv
;

361 } 
	tUUd©a
;

368 
	#gëud©amem
(
u
) \

369 
	`check_exp
(((
u
)->
âuv_
), (
	`ˇ°
(*, (u)Ë+ (
UUd©a
)))

	)

371 
	#£tu£rvÆue
(
L
,
u
,
o
) \

372 { c⁄° 
TVÆue
 *
io
=(
o
); 
Ud©a
 *
iu
 = (
u
); \

373 
iu
->
u£r_
 = 
io
->
vÆue_
; iu->
âuv_
 = 
	`πty≥
(io); \

374 
	`checklivíess
(
L
,
io
); }

	)

377 
	#gëu£rvÆue
(
L
,
u
,
o
) \

378 { 
TVÆue
 *
io
=(
o
); c⁄° 
Ud©a
 *
iu
 = (
u
); \

379 
io
->
vÆue_
 = 
iu
->
u£r_
; 
	`£ât_
(io, iu->
âuv_
); \

380 
	`checklivíess
(
L
,
io
); }

	)

386 
	sUpvÆdesc
 {

387 
TSåög
 *
	m«me
;

388 
lu_byã
 
	mö°ack
;

389 
lu_byã
 
	midx
;

390 } 
	tUpvÆdesc
;

397 
	sLocV¨
 {

398 
TSåög
 *
	mv¨«me
;

399 
	m°¨çc
;

400 
	mídpc
;

401 } 
	tLocV¨
;

407 
	sPrŸo
 {

408 
	mComm⁄Hódî
;

409 
lu_byã
 
	mnum∑øms
;

410 
lu_byã
 
	mis_v¨¨g
;

411 
lu_byã
 
	mmax°acksize
;

412 
	msizeupvÆues
;

413 
	msizek
;

414 
	msizecode
;

415 
	msizñöeöfo
;

416 
	msizï
;

417 
	msizñocv¨s
;

418 
	mlöedeföed
;

419 
	mœ°löedeföed
;

420 
TVÆue
 *
	mk
;

421 
In°ru˘i⁄
 *
	mcode
;

422 
PrŸo
 **
	mp
;

423 *
	mlöeöfo
;

424 
LocV¨
 *
	mlocv¨s
;

425 
UpvÆdesc
 *
	mupvÆues
;

426 
LClosuª
 *
	mˇche
;

427 
TSåög
 *
	msour˚
;

428 
GCObje˘
 *
	mg˛i°
;

429 } 
	tPrŸo
;

436 
UpVÆ
 
	tUpVÆ
;

443 
	#ClosuªHódî
 \

444 
Comm⁄Hódî
; 
lu_byã
 
nupvÆues
; 
GCObje˘
 *
g˛i°


	)

446 
	sCClosuª
 {

447 
	mClosuªHódî
;

448 
lua_CFun˘i⁄
 
	mf
;

449 
TVÆue
 
	mupvÆue
[1];

450 } 
	tCClosuª
;

453 
	sLClosuª
 {

454 
	mClosuªHódî
;

455 
PrŸo
 *
	mp
;

456 
UpVÆ
 *
	mupvÆs
[1];

457 } 
	tLClosuª
;

460 
	uClosuª
 {

461 
CClosuª
 
	mc
;

462 
LClosuª
 
	ml
;

463 } 
	tClosuª
;

466 
	#isLfun˘i⁄
(
o
Ë
	`âisL˛osuª
(o)

	)

468 
	#gë¥Ÿo
(
o
Ë(
	`˛LvÆue
(o)->
p
)

	)

475 
	uTKey
 {

477 
	mTVÆuefõlds
;

478 
	m√xt
;

479 } 
	mnk
;

480 
TVÆue
 
	mtvk
;

481 } 
	tTKey
;

485 
	#£äodekey
(
L
,
key
,
obj
) \

486 { 
TKey
 *
k_
=(
key
); c⁄° 
TVÆue
 *
io_
=(
obj
); \

487 
k_
->
nk
.
vÆue_
 = 
io_
->vÆue_; k_->nk.
â_
 = io_->tt_; \

488 ()
L
; 
	`checklivíess
(L,
io_
); }

	)

491 
	sNode
 {

492 
TVÆue
 
	mi_vÆ
;

493 
TKey
 
	mi_key
;

494 } 
	tNode
;

497 
	sTabÀ
 {

498 
	mComm⁄Hódî
;

499 
lu_byã
 
	mÊags
;

500 
lu_byã
 
	mlsizíode
;

501 
	msizóºay
;

502 
TVÆue
 *
	m¨øy
;

503 
Node
 *
	mnode
;

504 
Node
 *
	mœ°‰ì
;

505 
TabÀ
 *
	mmë©abÀ
;

506 
GCObje˘
 *
	mg˛i°
;

507 } 
	tTabÀ
;

514 
	#lmod
(
s
,
size
) \

515 (
	`check_exp
((
size
&(size-1))==0, (
	`ˇ°
(, (
s
Ë& ((size)-1)))))

	)

518 
	#twŸo
(
x
Ë(1<<(x))

	)

519 
	#sizíode
(
t
Ë(
	`twŸo
(—)->
lsizíode
))

	)

525 
	#luaO_nûobje˘
 (&
luaO_nûobje˘_
)

	)

528 
LUAI_DDEC
 c⁄° 
TVÆue
 
	gluaO_nûobje˘_
;

531 
	#UTF8BUFFSZ
 8

	)

533 
LUAI_FUNC
 
luaO_öt2fb
 (
x
);

534 
LUAI_FUNC
 
luaO_fb2öt
 (
x
);

535 
LUAI_FUNC
 
luaO_utf8esc
 (*
buff
, 
x
);

536 
LUAI_FUNC
 
luaO_˚ûlog2
 (
x
);

537 
LUAI_FUNC
 
luaO_¨ôh
 (
lua_Sèã
 *
L
, 
›
, c⁄° 
TVÆue
 *
p1
,

538 c⁄° 
TVÆue
 *
p2
, TVÆuê*
ªs
);

539 
LUAI_FUNC
 
size_t
 
luaO_°r2num
 (c⁄° *
s
, 
TVÆue
 *
o
);

540 
LUAI_FUNC
 
luaO_hexavÆue
 (
c
);

541 
LUAI_FUNC
 
luaO_to°rög
 (
lua_Sèã
 *
L
, 
StkId
 
obj
);

542 
LUAI_FUNC
 c⁄° *
luaO_pushvf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
,

543 
va_li°
 
¨gp
);

544 
LUAI_FUNC
 c⁄° *
luaO_pushf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...);

545 
LUAI_FUNC
 
luaO_chunkid
 (*
out
, c⁄° *
sour˚
, 
size_t
 
Àn
);

	@lua/src/lopcodes.c

7 
	#l›codes_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°ddef.h
>

15 
	~"l›codes.h
"

20 
LUAI_DDEF
 c⁄° *c⁄° 
	gluaP_›«mes
[
NUM_OPCODES
+1] = {

68 
NULL


72 
	#›mode
(
t
,
a
,
b
,
c
,
m
Ë((—)<<7Ë| (◊)<<6Ë| ((b)<<4Ë| ((c)<<2Ë| (m))

	)

74 
LUAI_DDEF
 c⁄° 
lu_byã
 
	gluaP_›modes
[
NUM_OPCODES
] = {

76 
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

77 ,
›mode
(0, 1, 
OpArgK
, 
OpArgN
, 
iABx
)

78 ,
›mode
(0, 1, 
OpArgN
, OpArgN, 
iABx
)

79 ,
›mode
(0, 1, 
OpArgU
, OpArgU, 
iABC
)

80 ,
›mode
(0, 1, 
OpArgU
, 
OpArgN
, 
iABC
)

81 ,
›mode
(0, 1, 
OpArgU
, 
OpArgN
, 
iABC
)

82 ,
›mode
(0, 1, 
OpArgU
, 
OpArgK
, 
iABC
)

83 ,
›mode
(0, 1, 
OpArgR
, 
OpArgK
, 
iABC
)

84 ,
›mode
(0, 0, 
OpArgK
, OpArgK, 
iABC
)

85 ,
›mode
(0, 0, 
OpArgU
, 
OpArgN
, 
iABC
)

86 ,
›mode
(0, 0, 
OpArgK
, OpArgK, 
iABC
)

87 ,
›mode
(0, 1, 
OpArgU
, OpArgU, 
iABC
)

88 ,
›mode
(0, 1, 
OpArgR
, 
OpArgK
, 
iABC
)

89 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

90 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

91 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

92 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

93 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

94 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

95 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

96 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

97 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

98 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

99 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

100 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

101 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

102 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

103 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

104 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

105 ,
›mode
(0, 1, 
OpArgR
, OpArgR, 
iABC
)

106 ,
›mode
(0, 0, 
OpArgR
, 
OpArgN
, 
iAsBx
)

107 ,
›mode
(1, 0, 
OpArgK
, OpArgK, 
iABC
)

108 ,
›mode
(1, 0, 
OpArgK
, OpArgK, 
iABC
)

109 ,
›mode
(1, 0, 
OpArgK
, OpArgK, 
iABC
)

110 ,
›mode
(1, 0, 
OpArgN
, 
OpArgU
, 
iABC
)

111 ,
›mode
(1, 1, 
OpArgR
, 
OpArgU
, 
iABC
)

112 ,
›mode
(0, 1, 
OpArgU
, OpArgU, 
iABC
)

113 ,
›mode
(0, 1, 
OpArgU
, OpArgU, 
iABC
)

114 ,
›mode
(0, 0, 
OpArgU
, 
OpArgN
, 
iABC
)

115 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iAsBx
)

116 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iAsBx
)

117 ,
›mode
(0, 0, 
OpArgN
, 
OpArgU
, 
iABC
)

118 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iAsBx
)

119 ,
›mode
(0, 0, 
OpArgU
, OpArgU, 
iABC
)

120 ,
›mode
(0, 1, 
OpArgU
, 
OpArgN
, 
iABx
)

121 ,
›mode
(0, 1, 
OpArgU
, 
OpArgN
, 
iABC
)

122 ,
›mode
(0, 0, 
OpArgU
, OpArgU, 
iAx
)

	@lua/src/lopcodes.h

7 #i‚de‡
l›codes_h


8 
	#l›codes_h


	)

10 
	~"Œimôs.h
"

32 
	eOpMode
 {
	miABC
, 
	miABx
, 
	miAsBx
, 
	miAx
};

38 
	#SIZE_C
 9

	)

39 
	#SIZE_B
 9

	)

40 
	#SIZE_Bx
 (
SIZE_C
 + 
SIZE_B
)

	)

41 
	#SIZE_A
 8

	)

42 
	#SIZE_Ax
 (
SIZE_C
 + 
SIZE_B
 + 
SIZE_A
)

	)

44 
	#SIZE_OP
 6

	)

46 
	#POS_OP
 0

	)

47 
	#POS_A
 (
POS_OP
 + 
SIZE_OP
)

	)

48 
	#POS_C
 (
POS_A
 + 
SIZE_A
)

	)

49 
	#POS_B
 (
POS_C
 + 
SIZE_C
)

	)

50 
	#POS_Bx
 
POS_C


	)

51 
	#POS_Ax
 
POS_A


	)

59 #i‡
SIZE_Bx
 < 
LUAI_BITSINT
-1

60 
	#MAXARG_Bx
 ((1<<
SIZE_Bx
)-1)

	)

61 
	#MAXARG_sBx
 (
MAXARG_Bx
>>1Ë

	)

63 
	#MAXARG_Bx
 
MAX_INT


	)

64 
	#MAXARG_sBx
 
MAX_INT


	)

67 #i‡
SIZE_Ax
 < 
LUAI_BITSINT
-1

68 
	#MAXARG_Ax
 ((1<<
SIZE_Ax
)-1)

	)

70 
	#MAXARG_Ax
 
MAX_INT


	)

74 
	#MAXARG_A
 ((1<<
SIZE_A
)-1)

	)

75 
	#MAXARG_B
 ((1<<
SIZE_B
)-1)

	)

76 
	#MAXARG_C
 ((1<<
SIZE_C
)-1)

	)

80 
	#MASK1
(
n
,
p
Ë((~((~(
In°ru˘i⁄
)0)<<“)))<<’))

	)

83 
	#MASK0
(
n
,
p
Ë(~
	`MASK1
“,p))

	)

89 
	#GET_OPCODE
(
i
Ë(
	`ˇ°
(
OpCode
, ((i)>>
POS_OP
Ë& 
	`MASK1
(
SIZE_OP
,0)))

	)

90 
	#SET_OPCODE
(
i
,
o
Ë((iË(((i)&
	`MASK0
(
SIZE_OP
,
POS_OP
)) | \

91 ((
	`ˇ°
(
In°ru˘i⁄
, 
o
)<<
POS_OP
)&
	`MASK1
(
SIZE_OP
,POS_OP))))

	)

93 
	#gë¨g
(
i
,
pos
,
size
Ë(
	`ˇ°
(, ((i)>>posË& 
	`MASK1
(size,0)))

	)

94 
	#£èrg
(
i
,
v
,
pos
,
size
Ë((iË(((i)&
	`MASK0
(size,pos)) | \

95 ((
	`ˇ°
(
In°ru˘i⁄
, 
v
)<<
pos
)&
	`MASK1
(
size
,pos))))

	)

97 
	#GETARG_A
(
i
Ë
	`gë¨g
(i, 
POS_A
, 
SIZE_A
)

	)

98 
	#SETARG_A
(
i
,
v
Ë
	`£èrg
(i, v, 
POS_A
, 
SIZE_A
)

	)

100 
	#GETARG_B
(
i
Ë
	`gë¨g
(i, 
POS_B
, 
SIZE_B
)

	)

101 
	#SETARG_B
(
i
,
v
Ë
	`£èrg
(i, v, 
POS_B
, 
SIZE_B
)

	)

103 
	#GETARG_C
(
i
Ë
	`gë¨g
(i, 
POS_C
, 
SIZE_C
)

	)

104 
	#SETARG_C
(
i
,
v
Ë
	`£èrg
(i, v, 
POS_C
, 
SIZE_C
)

	)

106 
	#GETARG_Bx
(
i
Ë
	`gë¨g
(i, 
POS_Bx
, 
SIZE_Bx
)

	)

107 
	#SETARG_Bx
(
i
,
v
Ë
	`£èrg
(i, v, 
POS_Bx
, 
SIZE_Bx
)

	)

109 
	#GETARG_Ax
(
i
Ë
	`gë¨g
(i, 
POS_Ax
, 
SIZE_Ax
)

	)

110 
	#SETARG_Ax
(
i
,
v
Ë
	`£èrg
(i, v, 
POS_Ax
, 
SIZE_Ax
)

	)

112 
	#GETARG_sBx
(
i
Ë(
	`GETARG_Bx
(i)-
MAXARG_sBx
)

	)

113 
	#SETARG_sBx
(
i
,
b
Ë
	`SETARG_Bx
((i),
	`ˇ°
(, (b)+
MAXARG_sBx
))

	)

116 
	#CREATE_ABC
(
o
,
a
,
b
,
c
Ë((
	`ˇ°
(
In°ru˘i⁄
, o)<<
POS_OP
) \

117 | (
	`ˇ°
(
In°ru˘i⁄
, 
a
)<<
POS_A
) \

118 | (
	`ˇ°
(
In°ru˘i⁄
, 
b
)<<
POS_B
) \

119 | (
	`ˇ°
(
In°ru˘i⁄
, 
c
)<<
POS_C
))

	)

121 
	#CREATE_ABx
(
o
,
a
,
bc
Ë((
	`ˇ°
(
In°ru˘i⁄
, o)<<
POS_OP
) \

122 | (
	`ˇ°
(
In°ru˘i⁄
, 
a
)<<
POS_A
) \

123 | (
	`ˇ°
(
In°ru˘i⁄
, 
bc
)<<
POS_Bx
))

	)

125 
	#CREATE_Ax
(
o
,
a
Ë((
	`ˇ°
(
In°ru˘i⁄
, o)<<
POS_OP
) \

126 | (
	`ˇ°
(
In°ru˘i⁄
, 
a
)<<
POS_Ax
))

	)

134 
	#BITRK
 (1 << (
SIZE_B
 - 1))

	)

137 
	#ISK
(
x
Ë((xË& 
BITRK
)

	)

140 
	#INDEXK
(
r
Ë(()‘Ë& ~
BITRK
)

	)

142 
	#MAXINDEXRK
 (
BITRK
 - 1)

	)

145 
	#RKASK
(
x
Ë((xË| 
BITRK
)

	)

151 
	#NO_REG
 
MAXARG_A


	)

169 
	mOP_MOVE
,

170 
	mOP_LOADK
,

171 
	mOP_LOADKX
,

172 
	mOP_LOADBOOL
,

173 
	mOP_LOADNIL
,

174 
	mOP_GETUPVAL
,

176 
	mOP_GETTABUP
,

177 
	mOP_GETTABLE
,

179 
	mOP_SETTABUP
,

180 
	mOP_SETUPVAL
,

181 
	mOP_SETTABLE
,

183 
	mOP_NEWTABLE
,

185 
	mOP_SELF
,

187 
	mOP_ADD
,

188 
	mOP_SUB
,

189 
	mOP_MUL
,

190 
	mOP_MOD
,

191 
	mOP_POW
,

192 
	mOP_DIV
,

193 
	mOP_IDIV
,

194 
	mOP_BAND
,

195 
	mOP_BOR
,

196 
	mOP_BXOR
,

197 
	mOP_SHL
,

198 
	mOP_SHR
,

199 
	mOP_UNM
,

200 
	mOP_BNOT
,

201 
	mOP_NOT
,

202 
	mOP_LEN
,

204 
	mOP_CONCAT
,

206 
	mOP_JMP
,

207 
	mOP_EQ
,

208 
	mOP_LT
,

209 
	mOP_LE
,

211 
	mOP_TEST
,

212 
	mOP_TESTSET
,

214 
	mOP_CALL
,

215 
	mOP_TAILCALL
,

216 
	mOP_RETURN
,

218 
	mOP_FORLOOP
,

220 
	mOP_FORPREP
,

222 
	mOP_TFORCALL
,

223 
	mOP_TFORLOOP
,

225 
	mOP_SETLIST
,

227 
	mOP_CLOSURE
,

229 
	mOP_VARARG
,

231 
	mOP_EXTRAARG


232 } 
	tOpCode
;

235 
	#NUM_OPCODES
 (
	`ˇ°
(, 
OP_EXTRAARG
Ë+ 1)

	)

272 
	eOpArgMask
 {

273 
	mOpArgN
,

274 
	mOpArgU
,

275 
	mOpArgR
,

276 
	mOpArgK


279 
LUAI_DDEC
 c⁄° 
lu_byã
 
	gluaP_›modes
[
NUM_OPCODES
];

281 
	#gëOpMode
(
m
Ë(
	`ˇ°
(
OpMode
, 
luaP_›modes
[m] & 3))

	)

282 
	#gëBMode
(
m
Ë(
	`ˇ°
(
OpArgMask
, (
luaP_›modes
[m] >> 4Ë& 3))

	)

283 
	#gëCMode
(
m
Ë(
	`ˇ°
(
OpArgMask
, (
luaP_›modes
[m] >> 2Ë& 3))

	)

284 
	#ã°AMode
(
m
Ë(
luaP_›modes
[m] & (1 << 6))

	)

285 
	#ã°TMode
(
m
Ë(
luaP_›modes
[m] & (1 << 7))

	)

288 
LUAI_DDEC
 c⁄° *c⁄° 
	gluaP_›«mes
[
NUM_OPCODES
+1];

292 
	#LFIELDS_PER_FLUSH
 50

	)

	@lua/src/loslib.c

7 
	#lo¶ib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<î∫o.h
>

14 
	~<loˇÀ.h
>

15 
	~<°dlib.h
>

16 
	~<°rög.h
>

17 
	~<time.h
>

19 
	~"lua.h
"

21 
	~"œuxlib.h
"

22 
	~"luÆib.h
"

31 #i‡!
deföed
(
LUA_STRFTIMEOPTIONS
)

34 
	#L_STRFTIMEC89
 "aAbBcdHIjmMpSUwWxXyYZ%"

	)

37 
	#L_STRFTIMEC99
 "aAbBcCdDeFgGhHIjmMnprRStTuUVwWxXyYzZ%" \

38 "||" "EcECExEXEyEY" "OdOeOHOIOmOMOSOuOUOVOwOWOy"

	)

41 
	#L_STRFTIMEWIN
 "aAbBcdHIjmMpSUwWxXyYzZ%" \

42 "||" "#c#x#d#H#I#j#m#M#S#U#w#W#y#Y"

	)

44 #i‡
deföed
(
LUA_USE_WINDOWS
)

45 
	#LUA_STRFTIMEOPTIONS
 
L_STRFTIMEWIN


	)

46 #ñi‡
deföed
(
LUA_USE_C89
)

47 
	#LUA_STRFTIMEOPTIONS
 
L_STRFTIMEC89


	)

49 
	#LUA_STRFTIMEOPTIONS
 
L_STRFTIMEC99


	)

62 #i‡!
deföed
(
l_time_t
)

66 
	#l_timë
 
lua_I¡egî


	)

67 
	#l_pushtime
(
L
,
t
Ë
	`lua_pushöãgî
(L,(
lua_I¡egî
)—))

	)

69 
time_t
 
	$l_checktime
 (
lua_Sèã
 *
L
, 
¨g
) {

70 
lua_I¡egî
 
t
 = 
	`luaL_checköãgî
(
L
, 
¨g
);

71 
	`luaL_¨gcheck
(
L
, (
time_t
)
t
 =t, 
¨g
, "time out-of-bounds");

72  (
time_t
)
t
;

73 
	}
}

78 #i‡!
deföed
(
l_gmtime
)

84 #i‡
deföed
(
LUA_USE_POSIX
)

86 
	#l_gmtime
(
t
,
r
Ë
	`gmtime_r
—,r)

	)

87 
	#l_loˇ…ime
(
t
,
r
Ë
	`loˇ…ime_r
—,r)

	)

92 
	#l_gmtime
(
t
,
r
Ë(()‘)->
tm_£c
, 
	`gmtime
—))

	)

93 
	#l_loˇ…ime
(
t
,
r
Ë(()‘)->
tm_£c
, 
	`loˇ…ime
—))

	)

109 #i‡!
deföed
(
lua_tm≤am
)

111 #i‡
deföed
(
LUA_USE_POSIX
)

113 
	~<uni°d.h
>

115 
	#LUA_TMPNAMBUFSIZE
 32

	)

117 #i‡!
deföed
(
LUA_TMPNAMTEMPLATE
)

118 
	#LUA_TMPNAMTEMPLATE
 "/tmp/lua_XXXXXX"

	)

121 
	#lua_tm≤am
(
b
,
e
) { \

122 
	`°r˝y
(
b
, 
LUA_TMPNAMTEMPLATE
); \

123 
e
 = 
	`mk°emp
(
b
); \

124 i‡(
e
 !-1Ë
	`˛o£
(e); \

125 
e
 = (ê=-1); }

	)

130 
	#LUA_TMPNAMBUFSIZE
 
L_tm≤am


	)

131 
	#lua_tm≤am
(
b
,
e
Ë{É = (
	`tm≤am
(bË=
NULL
); }

	)

141 
	$os_execuã
 (
lua_Sèã
 *
L
) {

142 c⁄° *
cmd
 = 
	`luaL_›t°rög
(
L
, 1, 
NULL
);

143 
°©
 = 
	`sy°em
(
cmd
);

144 i‡(
cmd
 !
NULL
)

145  
	`luaL_exe¸esu…
(
L
, 
°©
);

147 
	`lua_pushboﬁón
(
L
, 
°©
);

150 
	}
}

153 
	$os_ªmove
 (
lua_Sèã
 *
L
) {

154 c⁄° *
fûíame
 = 
	`luaL_check°rög
(
L
, 1);

155  
	`luaL_fûîesu…
(
L
, 
	`ªmove
(
fûíame
) == 0, filename);

156 
	}
}

159 
	$os_ª«me
 (
lua_Sèã
 *
L
) {

160 c⁄° *
‰om«me
 = 
	`luaL_check°rög
(
L
, 1);

161 c⁄° *
t⁄ame
 = 
	`luaL_check°rög
(
L
, 2);

162  
	`luaL_fûîesu…
(
L
, 
	`ª«me
(
‰om«me
, 
t⁄ame
Ë=0, 
NULL
);

163 
	}
}

166 
	$os_tm≤ame
 (
lua_Sèã
 *
L
) {

167 
buff
[
LUA_TMPNAMBUFSIZE
];

168 
îr
;

169 
	`lua_tm≤am
(
buff
, 
îr
);

170 i‡(
îr
)

171  
	`luaL_îr‹
(
L
, "unableÅo generateá unique filename");

172 
	`lua_push°rög
(
L
, 
buff
);

174 
	}
}

177 
	$os_gëív
 (
lua_Sèã
 *
L
) {

178 
	`lua_push°rög
(
L
, 
	`gëív
(
	`luaL_check°rög
(L, 1)));

180 
	}
}

183 
	$os_˛ock
 (
lua_Sèã
 *
L
) {

184 
	`lua_pushnumbî
(
L
, ((
lua_Numbî
)
	`˛ock
())/÷ua_Numbî)
CLOCKS_PER_SEC
);

186 
	}
}

197 
	$£tfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
, 
vÆue
) {

198 
	`lua_pushöãgî
(
L
, 
vÆue
);

199 
	`lua_£tfõld
(
L
, -2, 
key
);

200 
	}
}

202 
	$£tboﬁfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
, 
vÆue
) {

203 i‡(
vÆue
 < 0)

205 
	`lua_pushboﬁón
(
L
, 
vÆue
);

206 
	`lua_£tfõld
(
L
, -2, 
key
);

207 
	}
}

213 
	$£èŒfõlds
 (
lua_Sèã
 *
L
, 
tm
 *
°m
) {

214 
	`£tfõld
(
L
, "£c", 
°m
->
tm_£c
);

215 
	`£tfõld
(
L
, "mö", 
°m
->
tm_mö
);

216 
	`£tfõld
(
L
, "hour", 
°m
->
tm_hour
);

217 
	`£tfõld
(
L
, "day", 
°m
->
tm_mday
);

218 
	`£tfõld
(
L
, "m⁄th", 
°m
->
tm_m⁄
 + 1);

219 
	`£tfõld
(
L
, "yór", 
°m
->
tm_yór
 + 1900);

220 
	`£tfõld
(
L
, "wday", 
°m
->
tm_wday
 + 1);

221 
	`£tfõld
(
L
, "yday", 
°m
->
tm_yday
 + 1);

222 
	`£tboﬁfõld
(
L
, "isd°", 
°m
->
tm_isd°
);

223 
	}
}

226 
	$gëboﬁfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
) {

227 
ªs
;

228 
ªs
 = (
	`lua_gëfõld
(
L
, -1, 
key
Ë=
LUA_TNIL
Ë? -1 : 
	`lua_toboﬁón
(L, -1);

229 
	`lua_p›
(
L
, 1);

230  
ªs
;

231 
	}
}

235 #i‡!
deföed
(
L_MAXDATEFIELD
)

236 
	#L_MAXDATEFIELD
 (
INT_MAX
 / 2)

	)

239 
	$gëfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
, 
d
, 
dñè
) {

240 
i¢um
;

241 
t
 = 
	`lua_gëfõld
(
L
, -1, 
key
);

242 
lua_I¡egî
 
ªs
 = 
	`lua_toöãgîx
(
L
, -1, &
i¢um
);

243 i‡(!
i¢um
) {

244 i‡(
t
 !
LUA_TNIL
)

245  
	`luaL_îr‹
(
L
, "fõld '%s' i†nŸá¿öãgî", 
key
);

246 i‡(
d
 < 0)

247  
	`luaL_îr‹
(
L
, "fõld '%s' missög i¿d©êèbÀ", 
key
);

248 
ªs
 = 
d
;

251 i‡(!(-
L_MAXDATEFIELD
 <
ªs
 &&Ñes <= L_MAXDATEFIELD))

252  
	`luaL_îr‹
(
L
, "fõld '%s' i†out-of-bound", 
key
);

253 
ªs
 -
dñè
;

255 
	`lua_p›
(
L
, 1);

256  ()
ªs
;

257 
	}
}

260 c⁄° *
	$check›ti⁄
 (
lua_Sèã
 *
L
, c⁄° *
c⁄v
, *
buff
) {

261 c⁄° *
›ti⁄
;

262 
›Àn
 = 1;

263 
›ti⁄
 = 
LUA_STRFTIMEOPTIONS
; *›ti⁄ !'\0'; o±i⁄ +
›Àn
) {

264 i‡(*
›ti⁄
 == '|')

265 
›Àn
++;

266 i‡(
	`memcmp
(
c⁄v
, 
›ti⁄
, 
›Àn
) == 0) {

267 
	`mem˝y
(
buff
, 
c⁄v
, 
›Àn
);

268 
buff
[
›Àn
] = '\0';

269  
c⁄v
 + 
›Àn
;

272 
	`luaL_¨gîr‹
(
L
, 1,

273 
	`lua_pushf°rög
(
L
, "övÆid c⁄vîsi⁄ s≥cifõ∏'%%%s'", 
c⁄v
));

274  
c⁄v
;

275 
	}
}

279 
	#SIZETIMEFMT
 250

	)

282 
	$os_d©e
 (
lua_Sèã
 *
L
) {

283 c⁄° *
s
 = 
	`luaL_›t°rög
(
L
, 1, "%c");

284 
time_t
 
t
 = 
	`luaL_›t
(
L
, 
l_checktime
, 2, 
	`time
(
NULL
));

285 
tm
 
tmr
, *
°m
;

286 i‡(*
s
 == '!') {

287 
°m
 = 
	`l_gmtime
(&
t
, &
tmr
);

288 
s
++;

291 
°m
 = 
	`l_loˇ…ime
(&
t
, &
tmr
);

292 i‡(
°m
 =
NULL
)

293 
	`luaL_îr‹
(
L
, "timeÑesult cannot beÑepresented inÅhis installation");

294 i‡(
	`°rcmp
(
s
, "*t") == 0) {

295 
	`lua_¸óãèbÀ
(
L
, 0, 9);

296 
	`£èŒfõlds
(
L
, 
°m
);

299 
cc
[4];

300 
luaL_Buf„r
 
b
;

301 
cc
[0] = '%';

302 
	`luaL_bufföô
(
L
, &
b
);

303 *
s
) {

304 i‡(*
s
 != '%')

305 
	`luaL_addch¨
(&
b
, *
s
++);

307 
size_t
 
ª¶í
;

308 *
buff
 = 
	`luaL_¥ïbuffsize
(&
b
, 
SIZETIMEFMT
);

309 
s
 = 
	`check›ti⁄
(
L
, s + 1, 
cc
 + 1);

310 
ª¶í
 = 
	`°r·ime
(
buff
, 
SIZETIMEFMT
, 
cc
, 
°m
);

311 
	`luaL_addsize
(&
b
, 
ª¶í
);

314 
	`luaL_pushªsu…
(&
b
);

317 
	}
}

320 
	$os_time
 (
lua_Sèã
 *
L
) {

321 
time_t
 
t
;

322 i‡(
	`lua_i¢⁄e‹nû
(
L
, 1))

323 
t
 = 
	`time
(
NULL
);

325 
tm
 
ts
;

326 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

327 
	`lua_£â›
(
L
, 1);

328 
ts
.
tm_£c
 = 
	`gëfõld
(
L
, "sec", 0, 0);

329 
ts
.
tm_mö
 = 
	`gëfõld
(
L
, "min", 0, 0);

330 
ts
.
tm_hour
 = 
	`gëfõld
(
L
, "hour", 12, 0);

331 
ts
.
tm_mday
 = 
	`gëfõld
(
L
, "day", -1, 0);

332 
ts
.
tm_m⁄
 = 
	`gëfõld
(
L
, "month", -1, 1);

333 
ts
.
tm_yór
 = 
	`gëfõld
(
L
, "year", -1, 1900);

334 
ts
.
tm_isd°
 = 
	`gëboﬁfõld
(
L
, "isdst");

335 
t
 = 
	`mktime
(&
ts
);

336 
	`£èŒfõlds
(
L
, &
ts
);

338 i‡(
t
 !(
time_t
)(
l_timë
)t ||Å == (time_t)(-1))

339 
	`luaL_îr‹
(
L
, "timeÑesult cannot beÑepresented inÅhis installation");

340 
	`l_pushtime
(
L
, 
t
);

342 
	}
}

345 
	$os_dif·ime
 (
lua_Sèã
 *
L
) {

346 
time_t
 
t1
 = 
	`l_checktime
(
L
, 1);

347 
time_t
 
t2
 = 
	`l_checktime
(
L
, 2);

348 
	`lua_pushnumbî
(
L
, (
lua_Numbî
)
	`dif·ime
(
t1
, 
t2
));

350 
	}
}

355 
	$os_£éoˇÀ
 (
lua_Sèã
 *
L
) {

356 c⁄° 
ˇt
[] = {
LC_ALL
, 
LC_COLLATE
, 
LC_CTYPE
, 
LC_MONETARY
,

357 
LC_NUMERIC
, 
LC_TIME
};

358 c⁄° *c⁄° 
ˇäames
[] = {"all", "collate", "ctype", "monetary",

359 "numîic", "time", 
NULL
};

360 c⁄° *
l
 = 
	`luaL_›t°rög
(
L
, 1, 
NULL
);

361 
›
 = 
	`luaL_check›ti⁄
(
L
, 2, "Æl", 
ˇäames
);

362 
	`lua_push°rög
(
L
, 
	`£éoˇÀ
(
ˇt
[
›
], 
l
));

364 
	}
}

367 
	$os_exô
 (
lua_Sèã
 *
L
) {

368 
°©us
;

369 i‡(
	`lua_isboﬁón
(
L
, 1))

370 
°©us
 = (
	`lua_toboﬁón
(
L
, 1Ë? 
EXIT_SUCCESS
 : 
EXIT_FAILURE
);

372 
°©us
 = ()
	`luaL_›töãgî
(
L
, 1, 
EXIT_SUCCESS
);

373 i‡(
	`lua_toboﬁón
(
L
, 2))

374 
	`lua_˛o£
(
L
);

375 i‡(
L
Ë
	`exô
(
°©us
);

377 
	}
}

380 c⁄° 
luaL_Reg
 
	gsy¶ib
[] = {

381 {"˛ock", 
os_˛ock
},

382 {"d©e", 
os_d©e
},

383 {"dif·ime", 
os_dif·ime
},

384 {"execuã", 
os_execuã
},

385 {"exô", 
os_exô
},

386 {"gëív", 
os_gëív
},

387 {"ªmove", 
os_ªmove
},

388 {"ª«me", 
os_ª«me
},

389 {"£éoˇÀ", 
os_£éoˇÀ
},

390 {"time", 
os_time
},

391 {"tm≤ame", 
os_tm≤ame
},

392 {
NULL
, NULL}

399 
LUAMOD_API
 
	$lua›í_os
 (
lua_Sèã
 *
L
) {

400 
	`luaL_√wlib
(
L
, 
sy¶ib
);

402 
	}
}

	@lua/src/lparser.c

7 
	#Õ¨£r_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"lcode.h
"

18 
	~"ldebug.h
"

19 
	~"ldo.h
"

20 
	~"lfunc.h
"

21 
	~"Œex.h
"

22 
	~"lmem.h
"

23 
	~"lobje˘.h
"

24 
	~"l›codes.h
"

25 
	~"Õ¨£r.h
"

26 
	~"l°©e.h
"

27 
	~"l°rög.h
"

28 
	~"…abÀ.h
"

34 
	#MAXVARS
 200

	)

37 
	#hasmu…ªt
(
k
Ë((kË=
VCALL
 || (kË=
VVARARG
)

	)

42 
	#eq°r
(
a
,
b
Ë(◊Ë=(b))

	)

48 
	sBlockC¡
 {

49 
BlockC¡
 *
	m¥evious
;

50 
	mfú°œbñ
;

51 
	mfú°gŸo
;

52 
lu_byã
 
	m«˘v¨
;

53 
lu_byã
 
	mupvÆ
;

54 
lu_byã
 
	mi¶o›
;

55 } 
	tBlockC¡
;

62 
°©emít
 (
LexSèã
 *
ls
);

63 
ex¥
 (
LexSèã
 *
ls
, 
expdesc
 *
v
);

67 
l_n‹ë
 
	$£mîr‹
 (
LexSèã
 *
ls
, c⁄° *
msg
) {

68 
ls
->
t
.
tokí
 = 0;

69 
	`luaX_sy¡axîr‹
(
ls
, 
msg
);

70 
	}
}

73 
l_n‹ë
 
	$îr‹_ex≥˘ed
 (
LexSèã
 *
ls
, 
tokí
) {

74 
	`luaX_sy¡axîr‹
(
ls
,

75 
	`luaO_pushf°rög
(
ls
->
L
, "%†ex≥˘ed", 
	`luaX_tokí2°r
÷s, 
tokí
)));

76 
	}
}

79 
l_n‹ë
 
	$îr‹limô
 (
FuncSèã
 *
fs
, 
limô
, c⁄° *
wh©
) {

80 
lua_Sèã
 *
L
 = 
fs
->
ls
->L;

81 c⁄° *
msg
;

82 
löe
 = 
fs
->
f
->
löedeföed
;

83 c⁄° *
whîe
 = (
löe
 == 0)

85 : 
	`luaO_pushf°rög
(
L
, "fun˘i⁄áàlöê%d", 
löe
);

86 
msg
 = 
	`luaO_pushf°rög
(
L
, "too many %s (limit is %d) in %s",

87 
wh©
, 
limô
, 
whîe
);

88 
	`luaX_sy¡axîr‹
(
fs
->
ls
, 
msg
);

89 
	}
}

92 
	$checklimô
 (
FuncSèã
 *
fs
, 
v
, 
l
, c⁄° *
wh©
) {

93 i‡(
v
 > 
l
Ë
	`îr‹limô
(
fs
,Ü, 
wh©
);

94 
	}
}

97 
	$ã°√xt
 (
LexSèã
 *
ls
, 
c
) {

98 i‡(
ls
->
t
.
tokí
 =
c
) {

99 
	`luaX_√xt
(
ls
);

103 
	}
}

106 
	$check
 (
LexSèã
 *
ls
, 
c
) {

107 i‡(
ls
->
t
.
tokí
 !
c
)

108 
	`îr‹_ex≥˘ed
(
ls
, 
c
);

109 
	}
}

112 
	$check√xt
 (
LexSèã
 *
ls
, 
c
) {

113 
	`check
(
ls
, 
c
);

114 
	`luaX_√xt
(
ls
);

115 
	}
}

118 
	#check_c⁄dôi⁄
(
ls
,
c
,
msg
Ë{ i‡(!(c)Ë
	`luaX_sy¡axîr‹
÷s, msg); }

	)

122 
	$check_m©ch
 (
LexSèã
 *
ls
, 
wh©
, 
who
, 
whîe
) {

123 i‡(!
	`ã°√xt
(
ls
, 
wh©
)) {

124 i‡(
whîe
 =
ls
->
löíumbî
)

125 
	`îr‹_ex≥˘ed
(
ls
, 
wh©
);

127 
	`luaX_sy¡axîr‹
(
ls
, 
	`luaO_pushf°rög
÷s->
L
,

129 
	`luaX_tokí2°r
(
ls
, 
wh©
),ÜuaX_tokí2°r÷s, 
who
), 
whîe
));

132 
	}
}

135 
TSåög
 *
	$°r_check«me
 (
LexSèã
 *
ls
) {

136 
TSåög
 *
ts
;

137 
	`check
(
ls
, 
TK_NAME
);

138 
ts
 = 
ls
->
t
.
£möfo
.ts;

139 
	`luaX_√xt
(
ls
);

140  
ts
;

141 
	}
}

144 
	$öô_exp
 (
expdesc
 *
e
, 
expköd
 
k
, 
i
) {

145 
e
->
f
 =É->
t
 = 
NO_JUMP
;

146 
e
->
k
 = k;

147 
e
->
u
.
öfo
 = 
i
;

148 
	}
}

151 
	$code°rög
 (
LexSèã
 *
ls
, 
expdesc
 *
e
, 
TSåög
 *
s
) {

152 
	`öô_exp
(
e
, 
VK
, 
	`luaK_°rögK
(
ls
->
fs
, 
s
));

153 
	}
}

156 
	$check«me
 (
LexSèã
 *
ls
, 
expdesc
 *
e
) {

157 
	`code°rög
(
ls
, 
e
, 
	`°r_check«me
(ls));

158 
	}
}

161 
	$ªgi°îloˇlv¨
 (
LexSèã
 *
ls
, 
TSåög
 *
v¨«me
) {

162 
FuncSèã
 *
fs
 = 
ls
->fs;

163 
PrŸo
 *
f
 = 
fs
->f;

164 
ﬁdsize
 = 
f
->
sizñocv¨s
;

165 
	`luaM_growve˘‹
(
ls
->
L
, 
f
->
locv¨s
, 
fs
->
∆ocv¨s
, f->
sizñocv¨s
,

166 
LocV¨
, 
SHRT_MAX
, "local variables");

167 
ﬁdsize
 < 
f
->
sizñocv¨s
)

168 
f
->
locv¨s
[
ﬁdsize
++].
v¨«me
 = 
NULL
;

169 
f
->
locv¨s
[
fs
->
∆ocv¨s
].
v¨«me
 = varname;

170 
	`luaC_objb¨rõr
(
ls
->
L
, 
f
, 
v¨«me
);

171  
fs
->
∆ocv¨s
++;

172 
	}
}

175 
	$√w_loˇlv¨
 (
LexSèã
 *
ls
, 
TSåög
 *
«me
) {

176 
FuncSèã
 *
fs
 = 
ls
->fs;

177 
Dynd©a
 *
dyd
 = 
ls
->dyd;

178 
ªg
 = 
	`ªgi°îloˇlv¨
(
ls
, 
«me
);

179 
	`checklimô
(
fs
, 
dyd
->
a˘v¨
.
n
 + 1 - fs->
fú°loˇl
,

180 
MAXVARS
, "local variables");

181 
	`luaM_growve˘‹
(
ls
->
L
, 
dyd
->
a˘v¨
.
¨r
, dyd->a˘v¨.
n
 + 1,

182 
dyd
->
a˘v¨
.
size
, 
V¨desc
, 
MAX_INT
, "local variables");

183 
dyd
->
a˘v¨
.
¨r
[dyd->a˘v¨.
n
++].
idx
 = 
	`ˇ°
(, 
ªg
);

184 
	}
}

187 
	$√w_loˇlv¨lôîÆ_
 (
LexSèã
 *
ls
, c⁄° *
«me
, 
size_t
 
sz
) {

188 
	`√w_loˇlv¨
(
ls
, 
	`luaX_√w°rög
÷s, 
«me
, 
sz
));

189 
	}
}

191 
	#√w_loˇlv¨lôîÆ
(
ls
,
v
) \

192 
	`√w_loˇlv¨lôîÆ_
(
ls
, "" 
v
, ((v)/())-1)

	)

195 
LocV¨
 *
	$gëlocv¨
 (
FuncSèã
 *
fs
, 
i
) {

196 
idx
 = 
fs
->
ls
->
dyd
->
a˘v¨
.
¨r
[fs->
fú°loˇl
 + 
i
].idx;

197 
	`lua_as£π
(
idx
 < 
fs
->
∆ocv¨s
);

198  &
fs
->
f
->
locv¨s
[
idx
];

199 
	}
}

202 
	$adju°loˇlv¨s
 (
LexSèã
 *
ls
, 
nv¨s
) {

203 
FuncSèã
 *
fs
 = 
ls
->fs;

204 
fs
->
«˘v¨
 = 
	`ˇ°_byã
(fs->«˘v¨ + 
nv¨s
);

205 ; 
nv¨s
;Çvars--) {

206 
	`gëlocv¨
(
fs
, fs->
«˘v¨
 - 
nv¨s
)->
°¨çc
 = fs->
pc
;

208 
	}
}

211 
	$ªmovev¨s
 (
FuncSèã
 *
fs
, 
tﬁevñ
) {

212 
fs
->
ls
->
dyd
->
a˘v¨
.
n
 -(fs->
«˘v¨
 - 
tﬁevñ
);

213 
fs
->
«˘v¨
 > 
tﬁevñ
)

214 
	`gëlocv¨
(
fs
, --fs->
«˘v¨
)->
ídpc
 = fs->
pc
;

215 
	}
}

218 
	$£¨chupvÆue
 (
FuncSèã
 *
fs
, 
TSåög
 *
«me
) {

219 
i
;

220 
UpvÆdesc
 *
up
 = 
fs
->
f
->
upvÆues
;

221 
i
 = 0; i < 
fs
->
nups
; i++) {

222 i‡(
	`eq°r
(
up
[
i
].
«me
,Çame))  i;

225 
	}
}

228 
	$√wupvÆue
 (
FuncSèã
 *
fs
, 
TSåög
 *
«me
, 
expdesc
 *
v
) {

229 
PrŸo
 *
f
 = 
fs
->f;

230 
ﬁdsize
 = 
f
->
sizeupvÆues
;

231 
	`checklimô
(
fs
, fs->
nups
 + 1, 
MAXUPVAL
, "upvalues");

232 
	`luaM_growve˘‹
(
fs
->
ls
->
L
, 
f
->
upvÆues
, fs->
nups
, f->
sizeupvÆues
,

233 
UpvÆdesc
, 
MAXUPVAL
, "upvalues");

234 
ﬁdsize
 < 
f
->
sizeupvÆues
)

235 
f
->
upvÆues
[
ﬁdsize
++].
«me
 = 
NULL
;

236 
f
->
upvÆues
[
fs
->
nups
].
ö°ack
 = (
v
->
k
 =
VLOCAL
);

237 
f
->
upvÆues
[
fs
->
nups
].
idx
 = 
	`ˇ°_byã
(
v
->
u
.
öfo
);

238 
f
->
upvÆues
[
fs
->
nups
].
«me
 =Çame;

239 
	`luaC_objb¨rõr
(
fs
->
ls
->
L
, 
f
, 
«me
);

240  
fs
->
nups
++;

241 
	}
}

244 
	$£¨chv¨
 (
FuncSèã
 *
fs
, 
TSåög
 *
n
) {

245 
i
;

246 
i
 = 
	`ˇ°_öt
(
fs
->
«˘v¨
) - 1; i >= 0; i--) {

247 i‡(
	`eq°r
(
n
, 
	`gëlocv¨
(
fs
, 
i
)->
v¨«me
))

248  
i
;

251 
	}
}

258 
	$m¨kupvÆ
 (
FuncSèã
 *
fs
, 
Àvñ
) {

259 
BlockC¡
 *
bl
 = 
fs
->bl;

260 
bl
->
«˘v¨
 > 
Àvñ
)

261 
bl
 = bl->
¥evious
;

262 
bl
->
upvÆ
 = 1;

263 
	}
}

270 
	$sögÀv¨aux
 (
FuncSèã
 *
fs
, 
TSåög
 *
n
, 
expdesc
 *
v¨
, 
ba£
) {

271 i‡(
fs
 =
NULL
)

272 
	`öô_exp
(
v¨
, 
VVOID
, 0);

274 
v
 = 
	`£¨chv¨
(
fs
, 
n
);

275 i‡(
v
 >= 0) {

276 
	`öô_exp
(
v¨
, 
VLOCAL
, 
v
);

277 i‡(!
ba£
)

278 
	`m¨kupvÆ
(
fs
, 
v
);

281 
idx
 = 
	`£¨chupvÆue
(
fs
, 
n
);

282 i‡(
idx
 < 0) {

283 
	`sögÀv¨aux
(
fs
->
¥ev
, 
n
, 
v¨
, 0);

284 i‡(
v¨
->
k
 =
VVOID
)

287 
idx
 = 
	`√wupvÆue
(
fs
, 
n
, 
v¨
);

289 
	`öô_exp
(
v¨
, 
VUPVAL
, 
idx
);

292 
	}
}

295 
	$sögÀv¨
 (
LexSèã
 *
ls
, 
expdesc
 *
v¨
) {

296 
TSåög
 *
v¨«me
 = 
	`°r_check«me
(
ls
);

297 
FuncSèã
 *
fs
 = 
ls
->fs;

298 
	`sögÀv¨aux
(
fs
, 
v¨«me
, 
v¨
, 1);

299 i‡(
v¨
->
k
 =
VVOID
) {

300 
expdesc
 
key
;

301 
	`sögÀv¨aux
(
fs
, 
ls
->
ívn
, 
v¨
, 1);

302 
	`lua_as£π
(
v¨
->
k
 !
VVOID
);

303 
	`code°rög
(
ls
, &
key
, 
v¨«me
);

304 
	`luaK_ödexed
(
fs
, 
v¨
, &
key
);

306 
	}
}

309 
	$adju°_assign
 (
LexSèã
 *
ls
, 
nv¨s
, 
√xps
, 
expdesc
 *
e
) {

310 
FuncSèã
 *
fs
 = 
ls
->fs;

311 
exåa
 = 
nv¨s
 - 
√xps
;

312 i‡(
	`hasmu…ªt
(
e
->
k
)) {

313 
exåa
++;

314 i‡(
exåa
 < 0)Éxtra = 0;

315 
	`luaK_£åëu∫s
(
fs
, 
e
, 
exåa
);

316 i‡(
exåa
 > 1Ë
	`luaK_ª£rvîegs
(
fs
,Éxtra-1);

319 i‡(
e
->
k
 !
VVOID
Ë
	`luaK_exp2√xåeg
(
fs
,É);

320 i‡(
exåa
 > 0) {

321 
ªg
 = 
fs
->
‰ìªg
;

322 
	`luaK_ª£rvîegs
(
fs
, 
exåa
);

323 
	`luaK_nû
(
fs
, 
ªg
, 
exåa
);

326 
	}
}

329 
	$íãæevñ
 (
LexSèã
 *
ls
) {

330 
lua_Sèã
 *
L
 = 
ls
->L;

331 ++
L
->
nCˇŒs
;

332 
	`checklimô
(
ls
->
fs
, 
L
->
nCˇŒs
, 
LUAI_MAXCCALLS
, "CÜevels");

333 
	}
}

336 
	#Àavñevñ
(
ls
Ë(÷s)->
L
->
nCˇŒs
--)

	)

339 
	$˛o£gŸo
 (
LexSèã
 *
ls
, 
g
, 
Labñdesc
 *
œbñ
) {

340 
i
;

341 
FuncSèã
 *
fs
 = 
ls
->fs;

342 
Labñli°
 *
gl
 = &
ls
->
dyd
->
gt
;

343 
Labñdesc
 *
gt
 = &
gl
->
¨r
[
g
];

344 
	`lua_as£π
(
	`eq°r
(
gt
->
«me
, 
œbñ
->name));

345 i‡(
gt
->
«˘v¨
 < 
œbñ
->nactvar) {

346 
TSåög
 *
v«me
 = 
	`gëlocv¨
(
fs
, 
gt
->
«˘v¨
)->
v¨«me
;

347 c⁄° *
msg
 = 
	`luaO_pushf°rög
(
ls
->
L
,

349 
	`gë°r
(
gt
->
«me
), gt->
löe
, gë°r(
v«me
));

350 
	`£mîr‹
(
ls
, 
msg
);

352 
	`luaK_∑tchli°
(
fs
, 
gt
->
pc
, 
œbñ
->pc);

354 
i
 = 
g
; i < 
gl
->
n
 - 1; i++)

355 
gl
->
¨r
[
i
] = gl->arr[i + 1];

356 
gl
->
n
--;

357 
	}
}

363 
	$födœbñ
 (
LexSèã
 *
ls
, 
g
) {

364 
i
;

365 
BlockC¡
 *
bl
 = 
ls
->
fs
->bl;

366 
Dynd©a
 *
dyd
 = 
ls
->dyd;

367 
Labñdesc
 *
gt
 = &
dyd
->gt.
¨r
[
g
];

369 
i
 = 
bl
->
fú°œbñ
; i < 
dyd
->
œbñ
.
n
; i++) {

370 
Labñdesc
 *
lb
 = &
dyd
->
œbñ
.
¨r
[
i
];

371 i‡(
	`eq°r
(
lb
->
«me
, 
gt
->name)) {

372 i‡(
gt
->
«˘v¨
 > 
lb
->nactvar &&

373 (
bl
->
upvÆ
 || 
dyd
->
œbñ
.
n
 > bl->
fú°œbñ
))

374 
	`luaK_∑tch˛o£
(
ls
->
fs
, 
gt
->
pc
, 
lb
->
«˘v¨
);

375 
	`˛o£gŸo
(
ls
, 
g
, 
lb
);

380 
	}
}

383 
	$√wœbñíåy
 (
LexSèã
 *
ls
, 
Labñli°
 *
l
, 
TSåög
 *
«me
,

384 
löe
, 
pc
) {

385 
n
 = 
l
->n;

386 
	`luaM_growve˘‹
(
ls
->
L
, 
l
->
¨r
, 
n
,Ü->
size
,

387 
Labñdesc
, 
SHRT_MAX
, "labels/gotos");

388 
l
->
¨r
[
n
].
«me
 =Çame;

389 
l
->
¨r
[
n
].
löe
 =Üine;

390 
l
->
¨r
[
n
].
«˘v¨
 = 
ls
->
fs
->nactvar;

391 
l
->
¨r
[
n
].
pc
 =Öc;

392 
l
->
n
 =Ç + 1;

393  
n
;

394 
	}
}

401 
	$födgŸos
 (
LexSèã
 *
ls
, 
Labñdesc
 *
lb
) {

402 
Labñli°
 *
gl
 = &
ls
->
dyd
->
gt
;

403 
i
 = 
ls
->
fs
->
bl
->
fú°gŸo
;

404 
i
 < 
gl
->
n
) {

405 i‡(
	`eq°r
(
gl
->
¨r
[
i
].
«me
, 
lb
->name))

406 
	`˛o£gŸo
(
ls
, 
i
, 
lb
);

408 
i
++;

410 
	}
}

419 
	$movegŸosout
 (
FuncSèã
 *
fs
, 
BlockC¡
 *
bl
) {

420 
i
 = 
bl
->
fú°gŸo
;

421 
Labñli°
 *
gl
 = &
fs
->
ls
->
dyd
->
gt
;

424 
i
 < 
gl
->
n
) {

425 
Labñdesc
 *
gt
 = &
gl
->
¨r
[
i
];

426 i‡(
gt
->
«˘v¨
 > 
bl
->nactvar) {

427 i‡(
bl
->
upvÆ
)

428 
	`luaK_∑tch˛o£
(
fs
, 
gt
->
pc
, 
bl
->
«˘v¨
);

429 
gt
->
«˘v¨
 = 
bl
->nactvar;

431 i‡(!
	`födœbñ
(
fs
->
ls
, 
i
))

432 
i
++;

434 
	}
}

437 
	$íãrblock
 (
FuncSèã
 *
fs
, 
BlockC¡
 *
bl
, 
lu_byã
 
i¶o›
) {

438 
bl
->
i¶o›
 = isloop;

439 
bl
->
«˘v¨
 = 
fs
->nactvar;

440 
bl
->
fú°œbñ
 = 
fs
->
ls
->
dyd
->
œbñ
.
n
;

441 
bl
->
fú°gŸo
 = 
fs
->
ls
->
dyd
->
gt
.
n
;

442 
bl
->
upvÆ
 = 0;

443 
bl
->
¥evious
 = 
fs
->bl;

444 
fs
->
bl
 = bl;

445 
	`lua_as£π
(
fs
->
‰ìªg
 =fs->
«˘v¨
);

446 
	}
}

452 
	$bªakœbñ
 (
LexSèã
 *
ls
) {

453 
TSåög
 *
n
 = 
	`luaS_√w
(
ls
->
L
, "break");

454 
l
 = 
	`√wœbñíåy
(
ls
, &ls->
dyd
->
œbñ
, 
n
, 0,Üs->
fs
->
pc
);

455 
	`födgŸos
(
ls
, &ls->
dyd
->
œbñ
.
¨r
[
l
]);

456 
	}
}

462 
l_n‹ë
 
	$undefgŸo
 (
LexSèã
 *
ls
, 
Labñdesc
 *
gt
) {

463 c⁄° *
msg
 = 
	`i§e£rved
(
gt
->
«me
)

466 
msg
 = 
	`luaO_pushf°rög
(
ls
->
L
, msg, 
	`gë°r
(
gt
->
«me
), gt->
löe
);

467 
	`£mîr‹
(
ls
, 
msg
);

468 
	}
}

471 
	$Àaveblock
 (
FuncSèã
 *
fs
) {

472 
BlockC¡
 *
bl
 = 
fs
->bl;

473 
LexSèã
 *
ls
 = 
fs
->ls;

474 i‡(
bl
->
¥evious
 && bl->
upvÆ
) {

476 
j
 = 
	`luaK_jump
(
fs
);

477 
	`luaK_∑tch˛o£
(
fs
, 
j
, 
bl
->
«˘v¨
);

478 
	`luaK_∑tchtohîe
(
fs
, 
j
);

480 i‡(
bl
->
i¶o›
)

481 
	`bªakœbñ
(
ls
);

482 
fs
->
bl
 = bl->
¥evious
;

483 
	`ªmovev¨s
(
fs
, 
bl
->
«˘v¨
);

484 
	`lua_as£π
(
bl
->
«˘v¨
 =
fs
->nactvar);

485 
fs
->
‰ìªg
 = fs->
«˘v¨
;

486 
ls
->
dyd
->
œbñ
.
n
 = 
bl
->
fú°œbñ
;

487 i‡(
bl
->
¥evious
)

488 
	`movegŸosout
(
fs
, 
bl
);

489 i‡(
bl
->
fú°gŸo
 < 
ls
->
dyd
->
gt
.
n
)

490 
	`undefgŸo
(
ls
, &ls->
dyd
->
gt
.
¨r
[
bl
->
fú°gŸo
]);

491 
	}
}

497 
PrŸo
 *
	$add¥ŸŸy≥
 (
LexSèã
 *
ls
) {

498 
PrŸo
 *
˛p
;

499 
lua_Sèã
 *
L
 = 
ls
->L;

500 
FuncSèã
 *
fs
 = 
ls
->fs;

501 
PrŸo
 *
f
 = 
fs
->f;

502 i‡(
fs
->
≈
 >
f
->
sizï
) {

503 
ﬁdsize
 = 
f
->
sizï
;

504 
	`luaM_growve˘‹
(
L
, 
f
->
p
, 
fs
->
≈
, f->
sizï
, 
PrŸo
 *, 
MAXARG_Bx
, "functions");

505 
ﬁdsize
 < 
f
->
sizï
)

506 
f
->
p
[
ﬁdsize
++] = 
NULL
;

508 
f
->
p
[
fs
->
≈
++] = 
˛p
 = 
	`luaF_√w¥Ÿo
(
L
);

509 
	`luaC_objb¨rõr
(
L
, 
f
, 
˛p
);

510  
˛p
;

511 
	}
}

520 
	$code˛osuª
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

521 
FuncSèã
 *
fs
 = 
ls
->fs->
¥ev
;

522 
	`öô_exp
(
v
, 
VRELOCABLE
, 
	`luaK_codeABx
(
fs
, 
OP_CLOSURE
, 0, fs->
≈
 - 1));

523 
	`luaK_exp2√xåeg
(
fs
, 
v
);

524 
	}
}

527 
	$›í_func
 (
LexSèã
 *
ls
, 
FuncSèã
 *
fs
, 
BlockC¡
 *
bl
) {

528 
PrŸo
 *
f
;

529 
fs
->
¥ev
 = 
ls
->fs;

530 
fs
->
ls
 =Üs;

531 
ls
->
fs
 = fs;

532 
fs
->
pc
 = 0;

533 
fs
->
œ°èrgë
 = 0;

534 
fs
->
jpc
 = 
NO_JUMP
;

535 
fs
->
‰ìªg
 = 0;

536 
fs
->
nk
 = 0;

537 
fs
->
≈
 = 0;

538 
fs
->
nups
 = 0;

539 
fs
->
∆ocv¨s
 = 0;

540 
fs
->
«˘v¨
 = 0;

541 
fs
->
fú°loˇl
 = 
ls
->
dyd
->
a˘v¨
.
n
;

542 
fs
->
bl
 = 
NULL
;

543 
f
 = 
fs
->f;

544 
f
->
sour˚
 = 
ls
->source;

545 
f
->
max°acksize
 = 2;

546 
	`íãrblock
(
fs
, 
bl
, 0);

547 
	}
}

550 
	$˛o£_func
 (
LexSèã
 *
ls
) {

551 
lua_Sèã
 *
L
 = 
ls
->L;

552 
FuncSèã
 *
fs
 = 
ls
->fs;

553 
PrŸo
 *
f
 = 
fs
->f;

554 
	`luaK_ªt
(
fs
, 0, 0);

555 
	`Àaveblock
(
fs
);

556 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
code
, f->
sizecode
, 
fs
->
pc
, 
In°ru˘i⁄
);

557 
f
->
sizecode
 = 
fs
->
pc
;

558 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
löeöfo
, f->
sizñöeöfo
, 
fs
->
pc
, );

559 
f
->
sizñöeöfo
 = 
fs
->
pc
;

560 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
k
, f->
sizek
, 
fs
->
nk
, 
TVÆue
);

561 
f
->
sizek
 = 
fs
->
nk
;

562 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
p
, f->
sizï
, 
fs
->
≈
, 
PrŸo
 *);

563 
f
->
sizï
 = 
fs
->
≈
;

564 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
locv¨s
, f->
sizñocv¨s
, 
fs
->
∆ocv¨s
, 
LocV¨
);

565 
f
->
sizñocv¨s
 = 
fs
->
∆ocv¨s
;

566 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
upvÆues
, f->
sizeupvÆues
, 
fs
->
nups
, 
UpvÆdesc
);

567 
f
->
sizeupvÆues
 = 
fs
->
nups
;

568 
	`lua_as£π
(
fs
->
bl
 =
NULL
);

569 
ls
->
fs
 = fs->
¥ev
;

570 
	`luaC_checkGC
(
L
);

571 
	}
}

585 
	$block_fﬁlow
 (
LexSèã
 *
ls
, 
wôhu¡û
) {

586 
ls
->
t
.
tokí
) {

587 
TK_ELSE
: 
TK_ELSEIF
:

588 
TK_END
: 
TK_EOS
:

590 
TK_UNTIL
:  
wôhu¡û
;

593 
	}
}

596 
	$°©li°
 (
LexSèã
 *
ls
) {

598 !
	`block_fﬁlow
(
ls
, 1)) {

599 i‡(
ls
->
t
.
tokí
 =
TK_RETURN
) {

600 
	`°©emít
(
ls
);

603 
	`°©emít
(
ls
);

605 
	}
}

608 
	$fõld£l
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

610 
FuncSèã
 *
fs
 = 
ls
->fs;

611 
expdesc
 
key
;

612 
	`luaK_exp2™yªgup
(
fs
, 
v
);

613 
	`luaX_√xt
(
ls
);

614 
	`check«me
(
ls
, &
key
);

615 
	`luaK_ödexed
(
fs
, 
v
, &
key
);

616 
	}
}

619 
	$yödex
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

621 
	`luaX_√xt
(
ls
);

622 
	`ex¥
(
ls
, 
v
);

623 
	`luaK_exp2vÆ
(
ls
->
fs
, 
v
);

624 
	`check√xt
(
ls
, ']');

625 
	}
}

635 
	sC⁄sC⁄åﬁ
 {

636 
expdesc
 
	mv
;

637 
expdesc
 *
	mt
;

638 
	mnh
;

639 
	m«
;

640 
	mto°‹e
;

644 
	$ªcfõld
 (
LexSèã
 *
ls
, 
C⁄sC⁄åﬁ
 *
cc
) {

646 
FuncSèã
 *
fs
 = 
ls
->fs;

647 
ªg
 = 
ls
->
fs
->
‰ìªg
;

648 
expdesc
 
key
, 
vÆ
;

649 
rkkey
;

650 i‡(
ls
->
t
.
tokí
 =
TK_NAME
) {

651 
	`checklimô
(
fs
, 
cc
->
nh
, 
MAX_INT
, "items iná constructor");

652 
	`check«me
(
ls
, &
key
);

655 
	`yödex
(
ls
, &
key
);

656 
cc
->
nh
++;

657 
	`check√xt
(
ls
, '=');

658 
rkkey
 = 
	`luaK_exp2RK
(
fs
, &
key
);

659 
	`ex¥
(
ls
, &
vÆ
);

660 
	`luaK_codeABC
(
fs
, 
OP_SETTABLE
, 
cc
->
t
->
u
.
öfo
, 
rkkey
, 
	`luaK_exp2RK
(fs, &
vÆ
));

661 
fs
->
‰ìªg
 = 
ªg
;

662 
	}
}

665 
	$˛o£li°fõld
 (
FuncSèã
 *
fs
, 
C⁄sC⁄åﬁ
 *
cc
) {

666 i‡(
cc
->
v
.
k
 =
VVOID
) ;

667 
	`luaK_exp2√xåeg
(
fs
, &
cc
->
v
);

668 
cc
->
v
.
k
 = 
VVOID
;

669 i‡(
cc
->
to°‹e
 =
LFIELDS_PER_FLUSH
) {

670 
	`luaK_£éi°
(
fs
, 
cc
->
t
->
u
.
öfo
, cc->
«
, cc->
to°‹e
);

671 
cc
->
to°‹e
 = 0;

673 
	}
}

676 
	$œ°li°fõld
 (
FuncSèã
 *
fs
, 
C⁄sC⁄åﬁ
 *
cc
) {

677 i‡(
cc
->
to°‹e
 == 0) ;

678 i‡(
	`hasmu…ªt
(
cc
->
v
.
k
)) {

679 
	`luaK_£tmu…ªt
(
fs
, &
cc
->
v
);

680 
	`luaK_£éi°
(
fs
, 
cc
->
t
->
u
.
öfo
, cc->
«
, 
LUA_MULTRET
);

681 
cc
->
«
--;

684 i‡(
cc
->
v
.
k
 !
VVOID
)

685 
	`luaK_exp2√xåeg
(
fs
, &
cc
->
v
);

686 
	`luaK_£éi°
(
fs
, 
cc
->
t
->
u
.
öfo
, cc->
«
, cc->
to°‹e
);

688 
	}
}

691 
	$li°fõld
 (
LexSèã
 *
ls
, 
C⁄sC⁄åﬁ
 *
cc
) {

693 
	`ex¥
(
ls
, &
cc
->
v
);

694 
	`checklimô
(
ls
->
fs
, 
cc
->
«
, 
MAX_INT
, "items iná constructor");

695 
cc
->
«
++;

696 
cc
->
to°‹e
++;

697 
	}
}

700 
	$fõld
 (
LexSèã
 *
ls
, 
C⁄sC⁄åﬁ
 *
cc
) {

702 
ls
->
t
.
tokí
) {

703 
TK_NAME
: {

704 i‡(
	`luaX_lookahód
(
ls
) != '=')

705 
	`li°fõld
(
ls
, 
cc
);

707 
	`ªcfõld
(
ls
, 
cc
);

711 
	`ªcfõld
(
ls
, 
cc
);

715 
	`li°fõld
(
ls
, 
cc
);

719 
	}
}

722 
	$c⁄°ru˘‹
 (
LexSèã
 *
ls
, 
expdesc
 *
t
) {

725 
FuncSèã
 *
fs
 = 
ls
->fs;

726 
löe
 = 
ls
->
löíumbî
;

727 
pc
 = 
	`luaK_codeABC
(
fs
, 
OP_NEWTABLE
, 0, 0, 0);

728 
C⁄sC⁄åﬁ
 
cc
;

729 
cc
.
«
 = cc.
nh
 = cc.
to°‹e
 = 0;

730 
cc
.
t
 =Å;

731 
	`öô_exp
(
t
, 
VRELOCABLE
, 
pc
);

732 
	`öô_exp
(&
cc
.
v
, 
VVOID
, 0);

733 
	`luaK_exp2√xåeg
(
ls
->
fs
, 
t
);

734 
	`check√xt
(
ls
, '{');

736 
	`lua_as£π
(
cc
.
v
.
k
 =
VVOID
 || cc.
to°‹e
 > 0);

737 i‡(
ls
->
t
.
tokí
 == '}') ;

738 
	`˛o£li°fõld
(
fs
, &
cc
);

739 
	`fõld
(
ls
, &
cc
);

740 } 
	`ã°√xt
(
ls
, ',') ||Åestnext(ls, ';'));

741 
	`check_m©ch
(
ls
, '}', '{', 
löe
);

742 
	`œ°li°fõld
(
fs
, &
cc
);

743 
	`SETARG_B
(
fs
->
f
->
code
[
pc
], 
	`luaO_öt2fb
(
cc
.
«
));

744 
	`SETARG_C
(
fs
->
f
->
code
[
pc
], 
	`luaO_öt2fb
(
cc
.
nh
));

745 
	}
}

751 
	$∑æi°
 (
LexSèã
 *
ls
) {

753 
FuncSèã
 *
fs
 = 
ls
->fs;

754 
PrŸo
 *
f
 = 
fs
->f;

755 
≈¨ams
 = 0;

756 
f
->
is_v¨¨g
 = 0;

757 i‡(
ls
->
t
.
tokí
 != ')') {

759 
ls
->
t
.
tokí
) {

760 
TK_NAME
: {

761 
	`√w_loˇlv¨
(
ls
, 
	`°r_check«me
(ls));

762 
≈¨ams
++;

765 
TK_DOTS
: {

766 
	`luaX_√xt
(
ls
);

767 
f
->
is_v¨¨g
 = 2;

770 : 
	`luaX_sy¡axîr‹
(
ls
, "<name> or '...'Éxpected");

772 } !
f
->
is_v¨¨g
 && 
	`ã°√xt
(
ls
, ','));

774 
	`adju°loˇlv¨s
(
ls
, 
≈¨ams
);

775 
f
->
num∑øms
 = 
	`ˇ°_byã
(
fs
->
«˘v¨
);

776 
	`luaK_ª£rvîegs
(
fs
, fs->
«˘v¨
);

777 
	}
}

780 
	$body
 (
LexSèã
 *
ls
, 
expdesc
 *
e
, 
ismëhod
, 
löe
) {

782 
FuncSèã
 
√w_fs
;

783 
BlockC¡
 
bl
;

784 
√w_fs
.
f
 = 
	`add¥ŸŸy≥
(
ls
);

785 
√w_fs
.
f
->
löedeföed
 = 
löe
;

786 
	`›í_func
(
ls
, &
√w_fs
, &
bl
);

787 
	`check√xt
(
ls
, '(');

788 i‡(
ismëhod
) {

789 
	`√w_loˇlv¨lôîÆ
(
ls
, "self");

790 
	`adju°loˇlv¨s
(
ls
, 1);

792 
	`∑æi°
(
ls
);

793 
	`check√xt
(
ls
, ')');

794 
	`°©li°
(
ls
);

795 
√w_fs
.
f
->
œ°löedeföed
 = 
ls
->
löíumbî
;

796 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_FUNCTION
, 
löe
);

797 
	`code˛osuª
(
ls
, 
e
);

798 
	`˛o£_func
(
ls
);

799 
	}
}

802 
	$ex∂i°
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

804 
n
 = 1;

805 
	`ex¥
(
ls
, 
v
);

806 
	`ã°√xt
(
ls
, ',')) {

807 
	`luaK_exp2√xåeg
(
ls
->
fs
, 
v
);

808 
	`ex¥
(
ls
, 
v
);

809 
n
++;

811  
n
;

812 
	}
}

815 
	$funˇrgs
 (
LexSèã
 *
ls
, 
expdesc
 *
f
, 
löe
) {

816 
FuncSèã
 *
fs
 = 
ls
->fs;

817 
expdesc
 
¨gs
;

818 
ba£
, 
≈¨ams
;

819 
ls
->
t
.
tokí
) {

821 
	`luaX_√xt
(
ls
);

822 i‡(
ls
->
t
.
tokí
 == ')')

823 
¨gs
.
k
 = 
VVOID
;

825 
	`ex∂i°
(
ls
, &
¨gs
);

826 
	`luaK_£tmu…ªt
(
fs
, &
¨gs
);

828 
	`check_m©ch
(
ls
, ')', '(', 
löe
);

832 
	`c⁄°ru˘‹
(
ls
, &
¨gs
);

835 
TK_STRING
: {

836 
	`code°rög
(
ls
, &
¨gs
,Üs->
t
.
£möfo
.
ts
);

837 
	`luaX_√xt
(
ls
);

841 
	`luaX_sy¡axîr‹
(
ls
, "functionárgumentsÉxpected");

844 
	`lua_as£π
(
f
->
k
 =
VNONRELOC
);

845 
ba£
 = 
f
->
u
.
öfo
;

846 i‡(
	`hasmu…ªt
(
¨gs
.
k
))

847 
≈¨ams
 = 
LUA_MULTRET
;

849 i‡(
¨gs
.
k
 !
VVOID
)

850 
	`luaK_exp2√xåeg
(
fs
, &
¨gs
);

851 
≈¨ams
 = 
fs
->
‰ìªg
 - (
ba£
+1);

853 
	`öô_exp
(
f
, 
VCALL
, 
	`luaK_codeABC
(
fs
, 
OP_CALL
, 
ba£
, 
≈¨ams
+1, 2));

854 
	`luaK_fixlöe
(
fs
, 
löe
);

855 
fs
->
‰ìªg
 = 
ba£
+1;

857 
	}
}

869 
	$¥im¨yexp
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

871 
ls
->
t
.
tokí
) {

873 
löe
 = 
ls
->
löíumbî
;

874 
	`luaX_√xt
(
ls
);

875 
	`ex¥
(
ls
, 
v
);

876 
	`check_m©ch
(
ls
, ')', '(', 
löe
);

877 
	`luaK_disch¨gev¨s
(
ls
->
fs
, 
v
);

880 
TK_NAME
: {

881 
	`sögÀv¨
(
ls
, 
v
);

885 
	`luaX_sy¡axîr‹
(
ls
, "unexpected symbol");

888 
	}
}

891 
	$suffixedexp
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

894 
FuncSèã
 *
fs
 = 
ls
->fs;

895 
löe
 = 
ls
->
löíumbî
;

896 
	`¥im¨yexp
(
ls
, 
v
);

898 
ls
->
t
.
tokí
) {

900 
	`fõld£l
(
ls
, 
v
);

904 
expdesc
 
key
;

905 
	`luaK_exp2™yªgup
(
fs
, 
v
);

906 
	`yödex
(
ls
, &
key
);

907 
	`luaK_ödexed
(
fs
, 
v
, &
key
);

911 
expdesc
 
key
;

912 
	`luaX_√xt
(
ls
);

913 
	`check«me
(
ls
, &
key
);

914 
	`luaK_£lf
(
fs
, 
v
, &
key
);

915 
	`funˇrgs
(
ls
, 
v
, 
löe
);

918 '(': 
TK_STRING
: '{': {

919 
	`luaK_exp2√xåeg
(
fs
, 
v
);

920 
	`funˇrgs
(
ls
, 
v
, 
löe
);

926 
	}
}

929 
	$sim∂ìxp
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

932 
ls
->
t
.
tokí
) {

933 
TK_FLT
: {

934 
	`öô_exp
(
v
, 
VKFLT
, 0);

935 
v
->
u
.
nvÆ
 = 
ls
->
t
.
£möfo
.
r
;

938 
TK_INT
: {

939 
	`öô_exp
(
v
, 
VKINT
, 0);

940 
v
->
u
.
ivÆ
 = 
ls
->
t
.
£möfo
.
i
;

943 
TK_STRING
: {

944 
	`code°rög
(
ls
, 
v
,Üs->
t
.
£möfo
.
ts
);

947 
TK_NIL
: {

948 
	`öô_exp
(
v
, 
VNIL
, 0);

951 
TK_TRUE
: {

952 
	`öô_exp
(
v
, 
VTRUE
, 0);

955 
TK_FALSE
: {

956 
	`öô_exp
(
v
, 
VFALSE
, 0);

959 
TK_DOTS
: {

960 
FuncSèã
 *
fs
 = 
ls
->fs;

961 
	`check_c⁄dôi⁄
(
ls
, 
fs
->
f
->
is_v¨¨g
,

963 
fs
->
f
->
is_v¨¨g
 = 1;

964 
	`öô_exp
(
v
, 
VVARARG
, 
	`luaK_codeABC
(
fs
, 
OP_VARARG
, 0, 1, 0));

968 
	`c⁄°ru˘‹
(
ls
, 
v
);

971 
TK_FUNCTION
: {

972 
	`luaX_√xt
(
ls
);

973 
	`body
(
ls
, 
v
, 0,Üs->
löíumbî
);

977 
	`suffixedexp
(
ls
, 
v
);

981 
	`luaX_√xt
(
ls
);

982 
	}
}

985 
UnO¥
 
	$gëun›r
 (
›
) {

986 
›
) {

987 
TK_NOT
:  
OPR_NOT
;

988 '-':  
OPR_MINUS
;

989 '~':  
OPR_BNOT
;

990 '#':  
OPR_LEN
;

991 :  
OPR_NOUNOPR
;

993 
	}
}

996 
BöO¥
 
	$gëbö›r
 (
›
) {

997 
›
) {

998 '+':  
OPR_ADD
;

999 '-':  
OPR_SUB
;

1000 '*':  
OPR_MUL
;

1001 '%':  
OPR_MOD
;

1002 '^':  
OPR_POW
;

1003 '/':  
OPR_DIV
;

1004 
TK_IDIV
:  
OPR_IDIV
;

1005 '&':  
OPR_BAND
;

1006 '|':  
OPR_BOR
;

1007 '~':  
OPR_BXOR
;

1008 
TK_SHL
:  
OPR_SHL
;

1009 
TK_SHR
:  
OPR_SHR
;

1010 
TK_CONCAT
:  
OPR_CONCAT
;

1011 
TK_NE
:  
OPR_NE
;

1012 
TK_EQ
:  
OPR_EQ
;

1013 '<':  
OPR_LT
;

1014 
TK_LE
:  
OPR_LE
;

1015 '>':  
OPR_GT
;

1016 
TK_GE
:  
OPR_GE
;

1017 
TK_AND
:  
OPR_AND
;

1018 
TK_OR
:  
OPR_OR
;

1019 :  
OPR_NOBINOPR
;

1021 
	}
}

1025 
lu_byã
 
	mÀ·
;

1026 
lu_byã
 
	mright
;

1027 } 
	g¥i‹ôy
[] = {

1040 
	#UNARY_PRIORITY
 12

	)

1047 
BöO¥
 
	$subex¥
 (
LexSèã
 *
ls
, 
expdesc
 *
v
, 
limô
) {

1048 
BöO¥
 
›
;

1049 
UnO¥
 
u›
;

1050 
	`íãæevñ
(
ls
);

1051 
u›
 = 
	`gëun›r
(
ls
->
t
.
tokí
);

1052 i‡(
u›
 !
OPR_NOUNOPR
) {

1053 
löe
 = 
ls
->
löíumbî
;

1054 
	`luaX_√xt
(
ls
);

1055 
	`subex¥
(
ls
, 
v
, 
UNARY_PRIORITY
);

1056 
	`luaK_¥efix
(
ls
->
fs
, 
u›
, 
v
, 
löe
);

1058 
	`sim∂ìxp
(
ls
, 
v
);

1060 
›
 = 
	`gëbö›r
(
ls
->
t
.
tokí
);

1061 
›
 !
OPR_NOBINOPR
 && 
¥i‹ôy
[›].
À·
 > 
limô
) {

1062 
expdesc
 
v2
;

1063 
BöO¥
 
√xt›
;

1064 
löe
 = 
ls
->
löíumbî
;

1065 
	`luaX_√xt
(
ls
);

1066 
	`luaK_öfix
(
ls
->
fs
, 
›
, 
v
);

1068 
√xt›
 = 
	`subex¥
(
ls
, &
v2
, 
¥i‹ôy
[
›
].
right
);

1069 
	`luaK_posfix
(
ls
->
fs
, 
›
, 
v
, &
v2
, 
löe
);

1070 
›
 = 
√xt›
;

1072 
	`Àavñevñ
(
ls
);

1073  
›
;

1074 
	}
}

1077 
	$ex¥
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

1078 
	`subex¥
(
ls
, 
v
, 0);

1079 
	}
}

1092 
	$block
 (
LexSèã
 *
ls
) {

1094 
FuncSèã
 *
fs
 = 
ls
->fs;

1095 
BlockC¡
 
bl
;

1096 
	`íãrblock
(
fs
, &
bl
, 0);

1097 
	`°©li°
(
ls
);

1098 
	`Àaveblock
(
fs
);

1099 
	}
}

1106 
	sLHS_assign
 {

1107 
LHS_assign
 *
	m¥ev
;

1108 
expdesc
 
	mv
;

1118 
	$check_c⁄Êi˘
 (
LexSèã
 *
ls
, 
LHS_assign
 *
lh
, 
expdesc
 *
v
) {

1119 
FuncSèã
 *
fs
 = 
ls
->fs;

1120 
exåa
 = 
fs
->
‰ìªg
;

1121 
c⁄Êi˘
 = 0;

1122 ; 
lh
;Üh =Üh->
¥ev
) {

1123 i‡(
lh
->
v
.
k
 =
VINDEXED
) {

1125 i‡(
lh
->
v
.
u
.
öd
.
vt
 =v->
k
 &&Üh->v.u.öd.
t
 =v->u.
öfo
) {

1126 
c⁄Êi˘
 = 1;

1127 
lh
->
v
.
u
.
öd
.
vt
 = 
VLOCAL
;

1128 
lh
->
v
.
u
.
öd
.
t
 = 
exåa
;

1131 i‡(
v
->
k
 =
VLOCAL
 && 
lh
->v.
u
.
öd
.
idx
 =v->u.
öfo
) {

1132 
c⁄Êi˘
 = 1;

1133 
lh
->
v
.
u
.
öd
.
idx
 = 
exåa
;

1137 i‡(
c⁄Êi˘
) {

1139 
OpCode
 
›
 = (
v
->
k
 =
VLOCAL
Ë? 
OP_MOVE
 : 
OP_GETUPVAL
;

1140 
	`luaK_codeABC
(
fs
, 
›
, 
exåa
, 
v
->
u
.
öfo
, 0);

1141 
	`luaK_ª£rvîegs
(
fs
, 1);

1143 
	}
}

1146 
	$assignmít
 (
LexSèã
 *
ls
, 
LHS_assign
 *
lh
, 
nv¨s
) {

1147 
expdesc
 
e
;

1148 
	`check_c⁄dôi⁄
(
ls
, 
	`vkisv¨
(
lh
->
v
.
k
), "syntaxÉrror");

1149 i‡(
	`ã°√xt
(
ls
, ',')) {

1150 
LHS_assign
 
nv
;

1151 
nv
.
¥ev
 = 
lh
;

1152 
	`suffixedexp
(
ls
, &
nv
.
v
);

1153 i‡(
nv
.
v
.
k
 !
VINDEXED
)

1154 
	`check_c⁄Êi˘
(
ls
, 
lh
, &
nv
.
v
);

1155 
	`checklimô
(
ls
->
fs
, 
nv¨s
 +Üs->
L
->
nCˇŒs
, 
LUAI_MAXCCALLS
,

1157 
	`assignmít
(
ls
, &
nv
, 
nv¨s
+1);

1160 
√xps
;

1161 
	`check√xt
(
ls
, '=');

1162 
√xps
 = 
	`ex∂i°
(
ls
, &
e
);

1163 i‡(
√xps
 !
nv¨s
) {

1164 
	`adju°_assign
(
ls
, 
nv¨s
, 
√xps
, &
e
);

1165 i‡(
√xps
 > 
nv¨s
)

1166 
ls
->
fs
->
‰ìªg
 -
√xps
 - 
nv¨s
;

1169 
	`luaK_£t⁄îë
(
ls
->
fs
, &
e
);

1170 
	`luaK_°‹ev¨
(
ls
->
fs
, &
lh
->
v
, &
e
);

1174 
	`öô_exp
(&
e
, 
VNONRELOC
, 
ls
->
fs
->
‰ìªg
-1);

1175 
	`luaK_°‹ev¨
(
ls
->
fs
, &
lh
->
v
, &
e
);

1176 
	}
}

1179 
	$c⁄d
 (
LexSèã
 *
ls
) {

1181 
expdesc
 
v
;

1182 
	`ex¥
(
ls
, &
v
);

1183 i‡(
v
.
k
 =
VNIL
Ëv.k = 
VFALSE
;

1184 
	`luaK_goi·rue
(
ls
->
fs
, &
v
);

1185  
v
.
f
;

1186 
	}
}

1189 
	$gŸo°©
 (
LexSèã
 *
ls
, 
pc
) {

1190 
löe
 = 
ls
->
löíumbî
;

1191 
TSåög
 *
œbñ
;

1192 
g
;

1193 i‡(
	`ã°√xt
(
ls
, 
TK_GOTO
))

1194 
œbñ
 = 
	`°r_check«me
(
ls
);

1196 
	`luaX_√xt
(
ls
);

1197 
œbñ
 = 
	`luaS_√w
(
ls
->
L
, "break");

1199 
g
 = 
	`√wœbñíåy
(
ls
, &ls->
dyd
->
gt
, 
œbñ
, 
löe
, 
pc
);

1200 
	`födœbñ
(
ls
, 
g
);

1201 
	}
}

1205 
	$checkª≥©ed
 (
FuncSèã
 *
fs
, 
Labñli°
 *
Œ
, 
TSåög
 *
œbñ
) {

1206 
i
;

1207 
i
 = 
fs
->
bl
->
fú°œbñ
; i < 
Œ
->
n
; i++) {

1208 i‡(
	`eq°r
(
œbñ
, 
Œ
->
¨r
[
i
].
«me
)) {

1209 c⁄° *
msg
 = 
	`luaO_pushf°rög
(
fs
->
ls
->
L
,

1211 
	`gë°r
(
œbñ
), 
Œ
->
¨r
[
i
].
löe
);

1212 
	`£mîr‹
(
fs
->
ls
, 
msg
);

1215 
	}
}

1219 
	$skùno›°©
 (
LexSèã
 *
ls
) {

1220 
ls
->
t
.
tokí
 =';' ||Üs->t.tokí =
TK_DBCOLON
)

1221 
	`°©emít
(
ls
);

1222 
	}
}

1225 
	$œbñ°©
 (
LexSèã
 *
ls
, 
TSåög
 *
œbñ
, 
löe
) {

1227 
FuncSèã
 *
fs
 = 
ls
->fs;

1228 
Labñli°
 *
Œ
 = &
ls
->
dyd
->
œbñ
;

1229 
l
;

1230 
	`checkª≥©ed
(
fs
, 
Œ
, 
œbñ
);

1231 
	`check√xt
(
ls
, 
TK_DBCOLON
);

1233 
l
 = 
	`√wœbñíåy
(
ls
, 
Œ
, 
œbñ
, 
löe
, 
	`luaK_gëœbñ
(
fs
));

1234 
	`skùno›°©
(
ls
);

1235 i‡(
	`block_fﬁlow
(
ls
, 0)) {

1237 
Œ
->
¨r
[
l
].
«˘v¨
 = 
fs
->
bl
->nactvar;

1239 
	`födgŸos
(
ls
, &
Œ
->
¨r
[
l
]);

1240 
	}
}

1243 
	$whûe°©
 (
LexSèã
 *
ls
, 
löe
) {

1245 
FuncSèã
 *
fs
 = 
ls
->fs;

1246 
whûeöô
;

1247 
c⁄dexô
;

1248 
BlockC¡
 
bl
;

1249 
	`luaX_√xt
(
ls
);

1250 
whûeöô
 = 
	`luaK_gëœbñ
(
fs
);

1251 
c⁄dexô
 = 
	`c⁄d
(
ls
);

1252 
	`íãrblock
(
fs
, &
bl
, 1);

1253 
	`check√xt
(
ls
, 
TK_DO
);

1254 
	`block
(
ls
);

1255 
	`luaK_jum±o
(
fs
, 
whûeöô
);

1256 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_WHILE
, 
löe
);

1257 
	`Àaveblock
(
fs
);

1258 
	`luaK_∑tchtohîe
(
fs
, 
c⁄dexô
);

1259 
	}
}

1262 
	$ª≥©°©
 (
LexSèã
 *
ls
, 
löe
) {

1264 
c⁄dexô
;

1265 
FuncSèã
 *
fs
 = 
ls
->fs;

1266 
ª≥©_öô
 = 
	`luaK_gëœbñ
(
fs
);

1267 
BlockC¡
 
bl1
, 
bl2
;

1268 
	`íãrblock
(
fs
, &
bl1
, 1);

1269 
	`íãrblock
(
fs
, &
bl2
, 0);

1270 
	`luaX_√xt
(
ls
);

1271 
	`°©li°
(
ls
);

1272 
	`check_m©ch
(
ls
, 
TK_UNTIL
, 
TK_REPEAT
, 
löe
);

1273 
c⁄dexô
 = 
	`c⁄d
(
ls
);

1274 i‡(
bl2
.
upvÆ
)

1275 
	`luaK_∑tch˛o£
(
fs
, 
c⁄dexô
, 
bl2
.
«˘v¨
);

1276 
	`Àaveblock
(
fs
);

1277 
	`luaK_∑tchli°
(
fs
, 
c⁄dexô
, 
ª≥©_öô
);

1278 
	`Àaveblock
(
fs
);

1279 
	}
}

1282 
	$exp1
 (
LexSèã
 *
ls
) {

1283 
expdesc
 
e
;

1284 
ªg
;

1285 
	`ex¥
(
ls
, &
e
);

1286 
	`luaK_exp2√xåeg
(
ls
->
fs
, &
e
);

1287 
	`lua_as£π
(
e
.
k
 =
VNONRELOC
);

1288 
ªg
 = 
e
.
u
.
öfo
;

1289  
ªg
;

1290 
	}
}

1293 
	$f‹body
 (
LexSèã
 *
ls
, 
ba£
, 
löe
, 
nv¨s
, 
i¢um
) {

1295 
BlockC¡
 
bl
;

1296 
FuncSèã
 *
fs
 = 
ls
->fs;

1297 
¥ï
, 
ídf‹
;

1298 
	`adju°loˇlv¨s
(
ls
, 3);

1299 
	`check√xt
(
ls
, 
TK_DO
);

1300 
¥ï
 = 
i¢um
 ? 
	`luaK_codeAsBx
(
fs
, 
OP_FORPREP
, 
ba£
, 
NO_JUMP
Ë: 
	`luaK_jump
(fs);

1301 
	`íãrblock
(
fs
, &
bl
, 0);

1302 
	`adju°loˇlv¨s
(
ls
, 
nv¨s
);

1303 
	`luaK_ª£rvîegs
(
fs
, 
nv¨s
);

1304 
	`block
(
ls
);

1305 
	`Àaveblock
(
fs
);

1306 
	`luaK_∑tchtohîe
(
fs
, 
¥ï
);

1307 i‡(
i¢um
)

1308 
ídf‹
 = 
	`luaK_codeAsBx
(
fs
, 
OP_FORLOOP
, 
ba£
, 
NO_JUMP
);

1310 
	`luaK_codeABC
(
fs
, 
OP_TFORCALL
, 
ba£
, 0, 
nv¨s
);

1311 
	`luaK_fixlöe
(
fs
, 
löe
);

1312 
ídf‹
 = 
	`luaK_codeAsBx
(
fs
, 
OP_TFORLOOP
, 
ba£
 + 2, 
NO_JUMP
);

1314 
	`luaK_∑tchli°
(
fs
, 
ídf‹
, 
¥ï
 + 1);

1315 
	`luaK_fixlöe
(
fs
, 
löe
);

1316 
	}
}

1319 
	$f‹num
 (
LexSèã
 *
ls
, 
TSåög
 *
v¨«me
, 
löe
) {

1321 
FuncSèã
 *
fs
 = 
ls
->fs;

1322 
ba£
 = 
fs
->
‰ìªg
;

1323 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for index)");

1324 
	`√w_loˇlv¨lôîÆ
(
ls
, "(forÜimit)");

1325 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for step)");

1326 
	`√w_loˇlv¨
(
ls
, 
v¨«me
);

1327 
	`check√xt
(
ls
, '=');

1328 
	`exp1
(
ls
);

1329 
	`check√xt
(
ls
, ',');

1330 
	`exp1
(
ls
);

1331 i‡(
	`ã°√xt
(
ls
, ','))

1332 
	`exp1
(
ls
);

1334 
	`luaK_codek
(
fs
, fs->
‰ìªg
, 
	`luaK_ötK
(fs, 1));

1335 
	`luaK_ª£rvîegs
(
fs
, 1);

1337 
	`f‹body
(
ls
, 
ba£
, 
löe
, 1, 1);

1338 
	}
}

1341 
	$f‹li°
 (
LexSèã
 *
ls
, 
TSåög
 *
ödex«me
) {

1343 
FuncSèã
 *
fs
 = 
ls
->fs;

1344 
expdesc
 
e
;

1345 
nv¨s
 = 4;

1346 
löe
;

1347 
ba£
 = 
fs
->
‰ìªg
;

1349 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for generator)");

1350 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for state)");

1351 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for control)");

1353 
	`√w_loˇlv¨
(
ls
, 
ödex«me
);

1354 
	`ã°√xt
(
ls
, ',')) {

1355 
	`√w_loˇlv¨
(
ls
, 
	`°r_check«me
(ls));

1356 
nv¨s
++;

1358 
	`check√xt
(
ls
, 
TK_IN
);

1359 
löe
 = 
ls
->
löíumbî
;

1360 
	`adju°_assign
(
ls
, 3, 
	`ex∂i°
÷s, &
e
), &e);

1361 
	`luaK_check°ack
(
fs
, 3);

1362 
	`f‹body
(
ls
, 
ba£
, 
löe
, 
nv¨s
 - 3, 0);

1363 
	}
}

1366 
	$f‹°©
 (
LexSèã
 *
ls
, 
löe
) {

1368 
FuncSèã
 *
fs
 = 
ls
->fs;

1369 
TSåög
 *
v¨«me
;

1370 
BlockC¡
 
bl
;

1371 
	`íãrblock
(
fs
, &
bl
, 1);

1372 
	`luaX_√xt
(
ls
);

1373 
v¨«me
 = 
	`°r_check«me
(
ls
);

1374 
ls
->
t
.
tokí
) {

1375 '=': 
	`f‹num
(
ls
, 
v¨«me
, 
löe
); ;

1376 ',': 
TK_IN
: 
	`f‹li°
(
ls
, 
v¨«me
); ;

1377 : 
	`luaX_sy¡axîr‹
(
ls
, "'=' or 'in'Éxpected");

1379 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_FOR
, 
löe
);

1380 
	`Àaveblock
(
fs
);

1381 
	}
}

1384 
	$ã°_thí_block
 (
LexSèã
 *
ls
, *
esˇ≥li°
) {

1386 
BlockC¡
 
bl
;

1387 
FuncSèã
 *
fs
 = 
ls
->fs;

1388 
expdesc
 
v
;

1389 
jf
;

1390 
	`luaX_√xt
(
ls
);

1391 
	`ex¥
(
ls
, &
v
);

1392 
	`check√xt
(
ls
, 
TK_THEN
);

1393 i‡(
ls
->
t
.
tokí
 =
TK_GOTO
 ||Üs->t.tokí =
TK_BREAK
) {

1394 
	`luaK_goifÁl£
(
ls
->
fs
, &
v
);

1395 
	`íãrblock
(
fs
, &
bl
, 0);

1396 
	`gŸo°©
(
ls
, 
v
.
t
);

1397 
	`skùno›°©
(
ls
);

1398 i‡(
	`block_fﬁlow
(
ls
, 0)) {

1399 
	`Àaveblock
(
fs
);

1403 
jf
 = 
	`luaK_jump
(
fs
);

1406 
	`luaK_goi·rue
(
ls
->
fs
, &
v
);

1407 
	`íãrblock
(
fs
, &
bl
, 0);

1408 
jf
 = 
v
.
f
;

1410 
	`°©li°
(
ls
);

1411 
	`Àaveblock
(
fs
);

1412 i‡(
ls
->
t
.
tokí
 =
TK_ELSE
 ||

1413 
ls
->
t
.
tokí
 =
TK_ELSEIF
)

1414 
	`luaK_c⁄ˇt
(
fs
, 
esˇ≥li°
, 
	`luaK_jump
(fs));

1415 
	`luaK_∑tchtohîe
(
fs
, 
jf
);

1416 
	}
}

1419 
	$if°©
 (
LexSèã
 *
ls
, 
löe
) {

1421 
FuncSèã
 *
fs
 = 
ls
->fs;

1422 
esˇ≥li°
 = 
NO_JUMP
;

1423 
	`ã°_thí_block
(
ls
, &
esˇ≥li°
);

1424 
ls
->
t
.
tokí
 =
TK_ELSEIF
)

1425 
	`ã°_thí_block
(
ls
, &
esˇ≥li°
);

1426 i‡(
	`ã°√xt
(
ls
, 
TK_ELSE
))

1427 
	`block
(
ls
);

1428 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_IF
, 
löe
);

1429 
	`luaK_∑tchtohîe
(
fs
, 
esˇ≥li°
);

1430 
	}
}

1433 
	$loˇlfunc
 (
LexSèã
 *
ls
) {

1434 
expdesc
 
b
;

1435 
FuncSèã
 *
fs
 = 
ls
->fs;

1436 
	`√w_loˇlv¨
(
ls
, 
	`°r_check«me
(ls));

1437 
	`adju°loˇlv¨s
(
ls
, 1);

1438 
	`body
(
ls
, &
b
, 0,Üs->
löíumbî
);

1440 
	`gëlocv¨
(
fs
, 
b
.
u
.
öfo
)->
°¨çc
 = fs->
pc
;

1441 
	}
}

1444 
	$loˇl°©
 (
LexSèã
 *
ls
) {

1446 
nv¨s
 = 0;

1447 
√xps
;

1448 
expdesc
 
e
;

1450 
	`√w_loˇlv¨
(
ls
, 
	`°r_check«me
(ls));

1451 
nv¨s
++;

1452 } 
	`ã°√xt
(
ls
, ','));

1453 i‡(
	`ã°√xt
(
ls
, '='))

1454 
√xps
 = 
	`ex∂i°
(
ls
, &
e
);

1456 
e
.
k
 = 
VVOID
;

1457 
√xps
 = 0;

1459 
	`adju°_assign
(
ls
, 
nv¨s
, 
√xps
, &
e
);

1460 
	`adju°loˇlv¨s
(
ls
, 
nv¨s
);

1461 
	}
}

1464 
	$fun˙ame
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

1466 
ismëhod
 = 0;

1467 
	`sögÀv¨
(
ls
, 
v
);

1468 
ls
->
t
.
tokí
 == '.')

1469 
	`fõld£l
(
ls
, 
v
);

1470 i‡(
ls
->
t
.
tokí
 == ':') {

1471 
ismëhod
 = 1;

1472 
	`fõld£l
(
ls
, 
v
);

1474  
ismëhod
;

1475 
	}
}

1478 
	$func°©
 (
LexSèã
 *
ls
, 
löe
) {

1480 
ismëhod
;

1481 
expdesc
 
v
, 
b
;

1482 
	`luaX_√xt
(
ls
);

1483 
ismëhod
 = 
	`fun˙ame
(
ls
, &
v
);

1484 
	`body
(
ls
, &
b
, 
ismëhod
, 
löe
);

1485 
	`luaK_°‹ev¨
(
ls
->
fs
, &
v
, &
b
);

1486 
	`luaK_fixlöe
(
ls
->
fs
, 
löe
);

1487 
	}
}

1490 
	$ex¥°©
 (
LexSèã
 *
ls
) {

1492 
FuncSèã
 *
fs
 = 
ls
->fs;

1493 
LHS_assign
 
v
;

1494 
	`suffixedexp
(
ls
, &
v
.v);

1495 i‡(
ls
->
t
.
tokí
 == '=' ||Üs->t.token == ',') {

1496 
v
.
¥ev
 = 
NULL
;

1497 
	`assignmít
(
ls
, &
v
, 1);

1500 
	`check_c⁄dôi⁄
(
ls
, 
v
.v.
k
 =
VCALL
, "syntaxÉrror");

1501 
	`SETARG_C
(
	`gëö°ru˘i⁄
(
fs
, &
v
.v), 1);

1503 
	}
}

1506 
	$ªt°©
 (
LexSèã
 *
ls
) {

1508 
FuncSèã
 *
fs
 = 
ls
->fs;

1509 
expdesc
 
e
;

1510 
fú°
, 
ƒë
;

1511 i‡(
	`block_fﬁlow
(
ls
, 1Ë||Üs->
t
.
tokí
 == ';')

1512 
fú°
 = 
ƒë
 = 0;

1514 
ƒë
 = 
	`ex∂i°
(
ls
, &
e
);

1515 i‡(
	`hasmu…ªt
(
e
.
k
)) {

1516 
	`luaK_£tmu…ªt
(
fs
, &
e
);

1517 i‡(
e
.
k
 =
VCALL
 && 
ƒë
 == 1) {

1518 
	`SET_OPCODE
(
	`gëö°ru˘i⁄
(
fs
,&
e
), 
OP_TAILCALL
);

1519 
	`lua_as£π
(
	`GETARG_A
(
	`gëö°ru˘i⁄
(
fs
,&
e
)Ë=fs->
«˘v¨
);

1521 
fú°
 = 
fs
->
«˘v¨
;

1522 
ƒë
 = 
LUA_MULTRET
;

1525 i‡(
ƒë
 == 1)

1526 
fú°
 = 
	`luaK_exp2™yªg
(
fs
, &
e
);

1528 
	`luaK_exp2√xåeg
(
fs
, &
e
);

1529 
fú°
 = 
fs
->
«˘v¨
;

1530 
	`lua_as£π
(
ƒë
 =
fs
->
‰ìªg
 - 
fú°
);

1534 
	`luaK_ªt
(
fs
, 
fú°
, 
ƒë
);

1535 
	`ã°√xt
(
ls
, ';');

1536 
	}
}

1539 
	$°©emít
 (
LexSèã
 *
ls
) {

1540 
löe
 = 
ls
->
löíumbî
;

1541 
	`íãæevñ
(
ls
);

1542 
ls
->
t
.
tokí
) {

1544 
	`luaX_√xt
(
ls
);

1547 
TK_IF
: {

1548 
	`if°©
(
ls
, 
löe
);

1551 
TK_WHILE
: {

1552 
	`whûe°©
(
ls
, 
löe
);

1555 
TK_DO
: {

1556 
	`luaX_√xt
(
ls
);

1557 
	`block
(
ls
);

1558 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_DO
, 
löe
);

1561 
TK_FOR
: {

1562 
	`f‹°©
(
ls
, 
löe
);

1565 
TK_REPEAT
: {

1566 
	`ª≥©°©
(
ls
, 
löe
);

1569 
TK_FUNCTION
: {

1570 
	`func°©
(
ls
, 
löe
);

1573 
TK_LOCAL
: {

1574 
	`luaX_√xt
(
ls
);

1575 i‡(
	`ã°√xt
(
ls
, 
TK_FUNCTION
))

1576 
	`loˇlfunc
(
ls
);

1578 
	`loˇl°©
(
ls
);

1581 
TK_DBCOLON
: {

1582 
	`luaX_√xt
(
ls
);

1583 
	`œbñ°©
(
ls
, 
	`°r_check«me
÷s), 
löe
);

1586 
TK_RETURN
: {

1587 
	`luaX_√xt
(
ls
);

1588 
	`ªt°©
(
ls
);

1591 
TK_BREAK
:

1592 
TK_GOTO
: {

1593 
	`gŸo°©
(
ls
, 
	`luaK_jump
÷s->
fs
));

1597 
	`ex¥°©
(
ls
);

1601 
	`lua_as£π
(
ls
->
fs
->
f
->
max°acksize
 >ls->fs->
‰ìªg
 &&

1602 
ls
->
fs
->
‰ìªg
 >ls->fs->
«˘v¨
);

1603 
ls
->
fs
->
‰ìªg
 =Üs->fs->
«˘v¨
;

1604 
	`Àavñevñ
(
ls
);

1605 
	}
}

1614 
	$maöfunc
 (
LexSèã
 *
ls
, 
FuncSèã
 *
fs
) {

1615 
BlockC¡
 
bl
;

1616 
expdesc
 
v
;

1617 
	`›í_func
(
ls
, 
fs
, &
bl
);

1618 
fs
->
f
->
is_v¨¨g
 = 2;

1619 
	`öô_exp
(&
v
, 
VLOCAL
, 0);

1620 
	`√wupvÆue
(
fs
, 
ls
->
ívn
, &
v
);

1621 
	`luaX_√xt
(
ls
);

1622 
	`°©li°
(
ls
);

1623 
	`check
(
ls
, 
TK_EOS
);

1624 
	`˛o£_func
(
ls
);

1625 
	}
}

1628 
LClosuª
 *
	$luaY_∑r£r
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, 
Mbuf„r
 *
buff
,

1629 
Dynd©a
 *
dyd
, c⁄° *
«me
, 
fú°ch¨
) {

1630 
LexSèã
 
Àx°©e
;

1631 
FuncSèã
 
func°©e
;

1632 
LClosuª
 *
˛
 = 
	`luaF_√wL˛osuª
(
L
, 1);

1633 
	`£t˛LvÆue
(
L
, L->
t›
, 
˛
);

1634 
	`luaD_ö˘›
(
L
);

1635 
Àx°©e
.
h
 = 
	`luaH_√w
(
L
);

1636 
	`£thvÆue
(
L
, L->
t›
, 
Àx°©e
.
h
);

1637 
	`luaD_ö˘›
(
L
);

1638 
func°©e
.
f
 = 
˛
->
p
 = 
	`luaF_√w¥Ÿo
(
L
);

1639 
func°©e
.
f
->
sour˚
 = 
	`luaS_√w
(
L
, 
«me
);

1640 
	`lua_as£π
(
	`iswhôe
(
func°©e
.
f
));

1641 
Àx°©e
.
buff
 = buff;

1642 
Àx°©e
.
dyd
 = dyd;

1643 
dyd
->
a˘v¨
.
n
 = dyd->
gt
.¿dyd->
œbñ
.n = 0;

1644 
	`luaX_£töput
(
L
, &
Àx°©e
, 
z
, 
func°©e
.
f
->
sour˚
, 
fú°ch¨
);

1645 
	`maöfunc
(&
Àx°©e
, &
func°©e
);

1646 
	`lua_as£π
(!
func°©e
.
¥ev
 && func°©e.
nups
 =1 && !
Àx°©e
.
fs
);

1648 
	`lua_as£π
(
dyd
->
a˘v¨
.
n
 =0 && dyd->
gt
.¿=0 && dyd->
œbñ
.n == 0);

1649 
L
->
t›
--;

1650  
˛
;

1651 
	}
}

	@lua/src/lparser.h

7 #i‚de‡
Õ¨£r_h


8 
	#Õ¨£r_h


	)

10 
	~"Œimôs.h
"

11 
	~"lobje˘.h
"

12 
	~"lzio.h
"

26 
	mVVOID
,

28 
	mVNIL
,

29 
	mVTRUE
,

30 
	mVFALSE
,

31 
	mVK
,

32 
	mVKFLT
,

33 
	mVKINT
,

34 
	mVNONRELOC
,

36 
	mVLOCAL
,

37 
	mVUPVAL
,

38 
	mVINDEXED
,

42 
	mVJMP
,

44 
	mVRELOCABLE
,

46 
	mVCALL
,

47 
	mVVARARG


48 } 
	texpköd
;

51 
	#vkisv¨
(
k
Ë(
VLOCAL
 <(kË&& (kË<
VINDEXED
)

	)

52 
	#vkisöªg
(
k
Ë((kË=
VNONRELOC
 || (kË=
VLOCAL
)

	)

54 
	sexpdesc
 {

55 
expköd
 
	mk
;

57 
lua_I¡egî
 
	mivÆ
;

58 
lua_Numbî
 
	mnvÆ
;

59 
	möfo
;

61 
	midx
;

62 
lu_byã
 
	mt
;

63 
lu_byã
 
	mvt
;

64 } 
	möd
;

65 } 
	mu
;

66 
	mt
;

67 
	mf
;

68 } 
	texpdesc
;

72 
	sV¨desc
 {

73 
	midx
;

74 } 
	tV¨desc
;

78 
	sLabñdesc
 {

79 
TSåög
 *
	m«me
;

80 
	mpc
;

81 
	mlöe
;

82 
lu_byã
 
	m«˘v¨
;

83 } 
	tLabñdesc
;

87 
	sLabñli°
 {

88 
Labñdesc
 *
	m¨r
;

89 
	mn
;

90 
	msize
;

91 } 
	tLabñli°
;

95 
	sDynd©a
 {

97 
V¨desc
 *
	m¨r
;

98 
	mn
;

99 
	msize
;

100 } 
	ma˘v¨
;

101 
Labñli°
 
	mgt
;

102 
Labñli°
 
	mœbñ
;

103 } 
	tDynd©a
;

107 
	gBlockC¡
;

111 
	sFuncSèã
 {

112 
PrŸo
 *
	mf
;

113 
FuncSèã
 *
	m¥ev
;

114 
LexSèã
 *
	mls
;

115 
BlockC¡
 *
	mbl
;

116 
	mpc
;

117 
	mœ°èrgë
;

118 
	mjpc
;

119 
	mnk
;

120 
	m≈
;

121 
	mfú°loˇl
;

122 
	m∆ocv¨s
;

123 
lu_byã
 
	m«˘v¨
;

124 
lu_byã
 
	mnups
;

125 
lu_byã
 
	m‰ìªg
;

126 } 
	tFuncSèã
;

129 
LUAI_FUNC
 
LClosuª
 *
luaY_∑r£r
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, 
Mbuf„r
 *
buff
,

130 
Dynd©a
 *
dyd
, c⁄° *
«me
, 
fú°ch¨
);

	@lua/src/lprefix.h

7 #i‚de‡
Õªfix_h


8 
	#Õªfix_h


	)

14 #i‡!
deföed
(
LUA_USE_C89
)

16 #i‡!
deföed
(
_XOPEN_SOURCE
)

17 
	#_XOPEN_SOURCE
 600

	)

18 #ñi‡
_XOPEN_SOURCE
 == 0

19 #unde‡
_XOPEN_SOURCE


25 #i‡!
deföed
(
LUA_32BITS
Ë&& !deföed(
_FILE_OFFSET_BITS
)

26 
	#_LARGEFILE_SOURCE
 1

	)

27 
	#_FILE_OFFSET_BITS
 64

	)

36 #i‡
deföed
(
_WIN32
)

38 #i‡!
deföed
(
_CRT_SECURE_NO_WARNINGS
)

39 
	#_CRT_SECURE_NO_WARNINGS


	)

	@lua/src/lstate.c

7 
	#l°©e_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°ddef.h
>

14 
	~<°rög.h
>

16 
	~"lua.h
"

18 
	~"œpi.h
"

19 
	~"ldebug.h
"

20 
	~"ldo.h
"

21 
	~"lfunc.h
"

22 
	~"lgc.h
"

23 
	~"Œex.h
"

24 
	~"lmem.h
"

25 
	~"l°©e.h
"

26 
	~"l°rög.h
"

27 
	~"…abÀ.h
"

28 
	~"…m.h
"

31 #i‡!
deföed
(
LUAI_GCPAUSE
)

32 
	#LUAI_GCPAUSE
 200

	)

35 #i‡!
deföed
(
LUAI_GCMUL
)

36 
	#LUAI_GCMUL
 200

	)

44 #i‡!
deföed
(
luai_make£ed
)

45 
	~<time.h
>

46 
	#luai_make£ed
(Ë
	`ˇ°
(, 
	`time
(
NULL
))

	)

54 
	sLX
 {

55 
lu_byã
 
	mexåa_
[
LUA_EXTRASPACE
];

56 
lua_Sèã
 
	ml
;

57 } 
	tLX
;

63 
	sLG
 {

64 
LX
 
	ml
;

65 
globÆ_Sèã
 
	mg
;

66 } 
	tLG
;

70 
	#‰om°©e
(
L
Ë(
	`ˇ°
(
LX
 *, ca°(
lu_byã
 *, (L)Ë- 
	`off£tof
(LX, 
l
)))

	)

77 
	#addbuff
(
b
,
p
,
e
) \

78 { 
size_t
 
t
 = 
	`ˇ°
(size_t, 
e
); \

79 
	`mem˝y
(
b
 + 
p
, &
t
, —));Ö +—); }

	)

81 
	$make£ed
 (
lua_Sèã
 *
L
) {

82 
buff
[4 * (
size_t
)];

83 
h
 = 
	`luai_make£ed
();

84 
p
 = 0;

85 
	`addbuff
(
buff
, 
p
, 
L
);

86 
	`addbuff
(
buff
, 
p
, &
h
);

87 
	`addbuff
(
buff
, 
p
, 
luaO_nûobje˘
);

88 
	`addbuff
(
buff
, 
p
, &
lua_√w°©e
);

89 
	`lua_as£π
(
p
 =(
buff
));

90  
	`luaS_hash
(
buff
, 
p
, 
h
);

91 
	}
}

98 
	$luaE_£tdebt
 (
globÆ_Sèã
 *
g
, 
l_mem
 
debt
) {

99 
l_mem
 
tb
 = 
	`gëtŸÆbyãs
(
g
);

100 
	`lua_as£π
(
tb
 > 0);

101 i‡(
debt
 < 
tb
 - 
MAX_LMEM
)

102 
debt
 = 
tb
 - 
MAX_LMEM
;

103 
g
->
tŸÆbyãs
 = 
tb
 - 
debt
;

104 
g
->
GCdebt
 = 
debt
;

105 
	}
}

108 
CÆlInfo
 *
	$luaE_exãndCI
 (
lua_Sèã
 *
L
) {

109 
CÆlInfo
 *
ci
 = 
	`luaM_√w
(
L
, CallInfo);

110 
	`lua_as£π
(
L
->
ci
->
√xt
 =
NULL
);

111 
L
->
ci
->
√xt
 = ci;

112 
ci
->
¥evious
 = 
L
->ci;

113 
ci
->
√xt
 = 
NULL
;

114 
L
->
nci
++;

115  
ci
;

116 
	}
}

122 
	$luaE_‰ìCI
 (
lua_Sèã
 *
L
) {

123 
CÆlInfo
 *
ci
 = 
L
->ci;

124 
CÆlInfo
 *
√xt
 = 
ci
->next;

125 
ci
->
√xt
 = 
NULL
;

126 (
ci
 = 
√xt
Ë!
NULL
) {

127 
√xt
 = 
ci
->next;

128 
	`luaM_‰ì
(
L
, 
ci
);

129 
L
->
nci
--;

131 
	}
}

137 
	$luaE_shrökCI
 (
lua_Sèã
 *
L
) {

138 
CÆlInfo
 *
ci
 = 
L
->ci;

139 
CÆlInfo
 *
√xt2
;

141 
ci
->
√xt
 !
NULL
 && (
√xt2
 = ci->next->next) != NULL) {

142 
	`luaM_‰ì
(
L
, 
ci
->
√xt
);

143 
L
->
nci
--;

144 
ci
->
√xt
 = 
√xt2
;

145 
√xt2
->
¥evious
 = 
ci
;

146 
ci
 = 
√xt2
;

148 
	}
}

151 
	$°ack_öô
 (
lua_Sèã
 *
L1
,Üua_Sèã *
L
) {

152 
i
; 
CÆlInfo
 *
ci
;

154 
L1
->
°ack
 = 
	`luaM_√wve˘‹
(
L
, 
BASIC_STACK_SIZE
, 
TVÆue
);

155 
L1
->
°acksize
 = 
BASIC_STACK_SIZE
;

156 
i
 = 0; i < 
BASIC_STACK_SIZE
; i++)

157 
	`£äûvÆue
(
L1
->
°ack
 + 
i
);

158 
L1
->
t›
 = L1->
°ack
;

159 
L1
->
°ack_œ°
 = L1->
°ack
 + L1->
°acksize
 - 
EXTRA_STACK
;

161 
ci
 = &
L1
->
ba£_ci
;

162 
ci
->
√xt
 = ci->
¥evious
 = 
NULL
;

163 
ci
->
ˇŒ°©us
 = 0;

164 
ci
->
func
 = 
L1
->
t›
;

165 
	`£äûvÆue
(
L1
->
t›
++);

166 
ci
->
t›
 = 
L1
->t› + 
LUA_MINSTACK
;

167 
L1
->
ci
 = ci;

168 
	}
}

171 
	$‰ì°ack
 (
lua_Sèã
 *
L
) {

172 i‡(
L
->
°ack
 =
NULL
)

174 
L
->
ci
 = &L->
ba£_ci
;

175 
	`luaE_‰ìCI
(
L
);

176 
	`lua_as£π
(
L
->
nci
 == 0);

177 
	`luaM_‰ì¨øy
(
L
, L->
°ack
, L->
°acksize
);

178 
	}
}

184 
	$öô_ªgi°ry
 (
lua_Sèã
 *
L
, 
globÆ_Sèã
 *
g
) {

185 
TVÆue
 
ãmp
;

187 
TabÀ
 *
ªgi°ry
 = 
	`luaH_√w
(
L
);

188 
	`£thvÆue
(
L
, &
g
->
l_ªgi°ry
, 
ªgi°ry
);

189 
	`luaH_ªsize
(
L
, 
ªgi°ry
, 
LUA_RIDX_LAST
, 0);

191 
	`£âhvÆue
(
L
, &
ãmp
, L);

192 
	`luaH_£töt
(
L
, 
ªgi°ry
, 
LUA_RIDX_MAINTHREAD
, &
ãmp
);

194 
	`£thvÆue
(
L
, &
ãmp
, 
	`luaH_√w
(L));

195 
	`luaH_£töt
(
L
, 
ªgi°ry
, 
LUA_RIDX_GLOBALS
, &
ãmp
);

196 
	}
}

203 
	$f_lua›í
 (
lua_Sèã
 *
L
, *
ud
) {

204 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

205 
	`UNUSED
(
ud
);

206 
	`°ack_öô
(
L
, L);

207 
	`öô_ªgi°ry
(
L
, 
g
);

208 
	`luaS_öô
(
L
);

209 
	`luaT_öô
(
L
);

210 
	`luaX_öô
(
L
);

211 
g
->
g¸u¬ög
 = 1;

212 
g
->
vîsi⁄
 = 
	`lua_vîsi⁄
(
NULL
);

213 
	`luai_u£r°©e›í
(
L
);

214 
	}
}

221 
	$¥eöô_thªad
 (
lua_Sèã
 *
L
, 
globÆ_Sèã
 *
g
) {

222 
	`G
(
L
Ë
g
;

223 
L
->
°ack
 = 
NULL
;

224 
L
->
ci
 = 
NULL
;

225 
L
->
nci
 = 0;

226 
L
->
°acksize
 = 0;

227 
L
->
twups
 = L;

228 
L
->
îr‹Jmp
 = 
NULL
;

229 
L
->
nCˇŒs
 = 0;

230 
L
->
hook
 = 
NULL
;

231 
L
->
hookmask
 = 0;

232 
L
->
ba£hookcou¡
 = 0;

233 
L
->
Ælowhook
 = 1;

234 
	`ª£thookcou¡
(
L
);

235 
L
->
›íupvÆ
 = 
NULL
;

236 
L
->
¬y
 = 1;

237 
L
->
°©us
 = 
LUA_OK
;

238 
L
->
îrfunc
 = 0;

239 
	}
}

242 
	$˛o£_°©e
 (
lua_Sèã
 *
L
) {

243 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

244 
	`luaF_˛o£
(
L
, L->
°ack
);

245 
	`luaC_‰ìÆlobje˘s
(
L
);

246 i‡(
g
->
vîsi⁄
)

247 
	`luai_u£r°©e˛o£
(
L
);

248 
	`luaM_‰ì¨øy
(
L
, 
	`G
(L)->
°π
.
hash
, G(L)->°π.
size
);

249 
	`‰ì°ack
(
L
);

250 
	`lua_as£π
(
	`gëtŸÆbyãs
(
g
Ë=(
LG
));

251 (*
g
->
‰óŒoc
)(g->
ud
, 
	`‰om°©e
(
L
), (
LG
), 0);

252 
	}
}

255 
LUA_API
 
lua_Sèã
 *
	$lua_√wthªad
 (
lua_Sèã
 *
L
) {

256 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

257 
lua_Sèã
 *
L1
;

258 
	`lua_lock
(
L
);

259 
	`luaC_checkGC
(
L
);

261 
L1
 = &
	`ˇ°
(
LX
 *, 
	`luaM_√wobje˘
(
L
, 
LUA_TTHREAD
, (LX)))->
l
;

262 
L1
->
m¨ked
 = 
	`luaC_whôe
(
g
);

263 
L1
->
â
 = 
LUA_TTHREAD
;

265 
L1
->
√xt
 = 
g
->
Ælgc
;

266 
g
->
Ælgc
 = 
	`obj2gco
(
L1
);

268 
	`£âhvÆue
(
L
, L->
t›
, 
L1
);

269 
	`≠i_ö¸_t›
(
L
);

270 
	`¥eöô_thªad
(
L1
, 
g
);

271 
L1
->
hookmask
 = 
L
->hookmask;

272 
L1
->
ba£hookcou¡
 = 
L
->basehookcount;

273 
L1
->
hook
 = 
L
->hook;

274 
	`ª£thookcou¡
(
L1
);

276 
	`mem˝y
(
	`lua_gëexåa•a˚
(
L1
),Üua_gëexåa•a˚(
g
->
maöthªad
),

277 
LUA_EXTRASPACE
);

278 
	`luai_u£r°©ëhªad
(
L
, 
L1
);

279 
	`°ack_öô
(
L1
, 
L
);

280 
	`lua_u∆ock
(
L
);

281  
L1
;

282 
	}
}

285 
	$luaE_‰ìthªad
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
) {

286 
LX
 *
l
 = 
	`‰om°©e
(
L1
);

287 
	`luaF_˛o£
(
L1
, L1->
°ack
);

288 
	`lua_as£π
(
L1
->
›íupvÆ
 =
NULL
);

289 
	`luai_u£r°©e‰ì
(
L
, 
L1
);

290 
	`‰ì°ack
(
L1
);

291 
	`luaM_‰ì
(
L
, 
l
);

292 
	}
}

295 
LUA_API
 
lua_Sèã
 *
	$lua_√w°©e
 (
lua_AŒoc
 
f
, *
ud
) {

296 
i
;

297 
lua_Sèã
 *
L
;

298 
globÆ_Sèã
 *
g
;

299 
LG
 *
l
 = 
	`ˇ°
(LG *, (*
f
)(
ud
, 
NULL
, 
LUA_TTHREAD
, (LG)));

300 i‡(
l
 =
NULL
)  NULL;

301 
L
 = &
l
->l.l;

302 
g
 = &
l
->g;

303 
L
->
√xt
 = 
NULL
;

304 
L
->
â
 = 
LUA_TTHREAD
;

305 
g
->
cuºítwhôe
 = 
	`bômask
(
WHITE0BIT
);

306 
L
->
m¨ked
 = 
	`luaC_whôe
(
g
);

307 
	`¥eöô_thªad
(
L
, 
g
);

308 
g
->
‰óŒoc
 = 
f
;

309 
g
->
ud
 = ud;

310 
g
->
maöthªad
 = 
L
;

311 
g
->
£ed
 = 
	`make£ed
(
L
);

312 
g
->
g¸u¬ög
 = 0;

313 
g
->
GCe°im©e
 = 0;

314 
g
->
°π
.
size
 = g->°π.
nu£
 = 0;

315 
g
->
°π
.
hash
 = 
NULL
;

316 
	`£äûvÆue
(&
g
->
l_ªgi°ry
);

317 
g
->
∑nic
 = 
NULL
;

318 
g
->
vîsi⁄
 = 
NULL
;

319 
g
->
gc°©e
 = 
GCS∑u£
;

320 
g
->
gcköd
 = 
KGC_NORMAL
;

321 
g
->
Ælgc
 = g->
föobj
 = g->
tobe‚z
 = g->
fixedgc
 = 
NULL
;

322 
g
->
swìpgc
 = 
NULL
;

323 
g
->
gøy
 = g->
gøyagaö
 = 
NULL
;

324 
g
->
wók
 = g->
ïhemî⁄
 = g->
Ælwók
 = 
NULL
;

325 
g
->
twups
 = 
NULL
;

326 
g
->
tŸÆbyãs
 = (
LG
);

327 
g
->
GCdebt
 = 0;

328 
g
->
gcfönum
 = 0;

329 
g
->
g˝au£
 = 
LUAI_GCPAUSE
;

330 
g
->
gc°ïmul
 = 
LUAI_GCMUL
;

331 
i
=0; i < 
LUA_NUMTAGS
; i++Ë
g
->
mt
[i] = 
NULL
;

332 i‡(
	`luaD_øwru≈rŸe˘ed
(
L
, 
f_lua›í
, 
NULL
Ë!
LUA_OK
) {

334 
	`˛o£_°©e
(
L
);

335 
L
 = 
NULL
;

337  
L
;

338 
	}
}

341 
LUA_API
 
	$lua_˛o£
 (
lua_Sèã
 *
L
) {

342 
L
 = 
	`G
(L)->
maöthªad
;

343 
	`lua_lock
(
L
);

344 
	`˛o£_°©e
(
L
);

345 
	}
}

	@lua/src/lstate.h

7 #i‚de‡
l°©e_h


8 
	#l°©e_h


	)

10 
	~"lua.h
"

12 
	~"lobje˘.h
"

13 
	~"…m.h
"

14 
	~"lzio.h
"

33 
	glua_l⁄gjmp
;

40 #i‡!
deföed
(
l_sig«lT
)

41 
	~<sig«l.h
>

42 
	#l_sig«lT
 
sig_©omic_t


	)

47 
	#EXTRA_STACK
 5

	)

50 
	#BASIC_STACK_SIZE
 (2*
LUA_MINSTACK
)

	)

54 
	#KGC_NORMAL
 0

	)

55 
	#KGC_EMERGENCY
 1

	)

58 
	s°rögèbÀ
 {

59 
TSåög
 **
	mhash
;

60 
	mnu£
;

61 
	msize
;

62 } 
	t°rögèbÀ
;

74 
	sCÆlInfo
 {

75 
StkId
 
	mfunc
;

76 
StkId
 
	mt›
;

77 
CÆlInfo
 *
	m¥evious
, *
	m√xt
;

80 
StkId
 
	mba£
;

81 c⁄° 
In°ru˘i⁄
 *
	mßvedpc
;

82 } 
	ml
;

84 
lua_KFun˘i⁄
 
	mk
;

85 
±rdiff_t
 
	mﬁd_îrfunc
;

86 
lua_KC⁄ãxt
 
	m˘x
;

87 } 
	mc
;

88 } 
	mu
;

89 
±rdiff_t
 
	mexåa
;

90 
	mƒesu…s
;

91 
lu_byã
 
	mˇŒ°©us
;

92 } 
	tCÆlInfo
;

98 
	#CIST_OAH
 (1<<0Ë

	)

99 
	#CIST_LUA
 (1<<1Ë

	)

100 
	#CIST_HOOKED
 (1<<2Ë

	)

101 
	#CIST_FRESH
 (1<<3Ë

	)

103 
	#CIST_YPCALL
 (1<<4Ë

	)

104 
	#CIST_TAIL
 (1<<5Ë

	)

105 
	#CIST_HOOKYIELD
 (1<<6Ë

	)

106 
	#CIST_LEQ
 (1<<7Ë

	)

108 
	#isLua
(
ci
Ë((ci)->
ˇŒ°©us
 & 
CIST_LUA
)

	)

111 
	#£tﬂh
(
°
,
v
Ë((°Ë((°Ë& ~
CIST_OAH
Ë| (v))

	)

112 
	#gëﬂh
(
°
Ë((°Ë& 
CIST_OAH
)

	)

118 
	sglobÆ_Sèã
 {

119 
lua_AŒoc
 
	m‰óŒoc
;

120 *
	mud
;

121 
l_mem
 
	mtŸÆbyãs
;

122 
l_mem
 
	mGCdebt
;

123 
lu_mem
 
	mGCmemåav
;

124 
lu_mem
 
	mGCe°im©e
;

125 
°rögèbÀ
 
	m°π
;

126 
TVÆue
 
	ml_ªgi°ry
;

127 
	m£ed
;

128 
lu_byã
 
	mcuºítwhôe
;

129 
lu_byã
 
	mgc°©e
;

130 
lu_byã
 
	mgcköd
;

131 
lu_byã
 
	mg¸u¬ög
;

132 
GCObje˘
 *
	mÆlgc
;

133 
GCObje˘
 **
	mswìpgc
;

134 
GCObje˘
 *
	mföobj
;

135 
GCObje˘
 *
	mgøy
;

136 
GCObje˘
 *
	mgøyagaö
;

137 
GCObje˘
 *
	mwók
;

138 
GCObje˘
 *
	mïhemî⁄
;

139 
GCObje˘
 *
	mÆlwók
;

140 
GCObje˘
 *
	mtobe‚z
;

141 
GCObje˘
 *
	mfixedgc
;

142 
lua_Sèã
 *
	mtwups
;

143 
	mgcfönum
;

144 
	mg˝au£
;

145 
	mgc°ïmul
;

146 
lua_CFun˘i⁄
 
	m∑nic
;

147 
lua_Sèã
 *
	mmaöthªad
;

148 c⁄° 
lua_Numbî
 *
	mvîsi⁄
;

149 
TSåög
 *
	mmemîrmsg
;

150 
TSåög
 *
	mtm«me
[
TM_N
];

151 
TabÀ
 *
	mmt
[
LUA_NUMTAGS
];

152 
TSåög
 *
	m°rˇche
[
STRCACHE_N
][
STRCACHE_M
];

153 } 
	tglobÆ_Sèã
;

159 
	slua_Sèã
 {

160 
	mComm⁄Hódî
;

161 
	mnci
;

162 
lu_byã
 
	m°©us
;

163 
StkId
 
	mt›
;

164 
globÆ_Sèã
 *
	ml_G
;

165 
CÆlInfo
 *
	mci
;

166 c⁄° 
In°ru˘i⁄
 *
	mﬁdpc
;

167 
StkId
 
	m°ack_œ°
;

168 
StkId
 
	m°ack
;

169 
UpVÆ
 *
	m›íupvÆ
;

170 
GCObje˘
 *
	mg˛i°
;

171 
lua_Sèã
 *
	mtwups
;

172 
lua_l⁄gjmp
 *
	mîr‹Jmp
;

173 
CÆlInfo
 
	mba£_ci
;

174 vﬁ©ûê
lua_Hook
 
	mhook
;

175 
±rdiff_t
 
	mîrfunc
;

176 
	m°acksize
;

177 
	mba£hookcou¡
;

178 
	mhookcou¡
;

179 
	m¬y
;

180 
	mnCˇŒs
;

181 
l_sig«lT
 
	mhookmask
;

182 
lu_byã
 
	mÆlowhook
;

186 
	#G
(
L
Ë(L->
l_G
)

	)

192 
	uGCUni⁄
 {

193 
GCObje˘
 
	mgc
;

194 
TSåög
 
	mts
;

195 
Ud©a
 
	mu
;

196 
Closuª
 
	m˛
;

197 
TabÀ
 
	mh
;

198 
PrŸo
 
	mp
;

199 
lua_Sèã
 
	mth
;

203 
	#ˇ°_u
(
o
Ë
	`ˇ°
(
GCUni⁄
 *, (o))

	)

206 
	#gco2ts
(
o
) \

207 
	`check_exp
(
	`nov¨ü¡
((
o
)->
â
Ë=
LUA_TSTRING
, &((
	`ˇ°_u
(o))->
ts
))

	)

208 
	#gco2u
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TUSERDATA
, &((
	`ˇ°_u
(o))->
u
))

	)

209 
	#gco2l˛
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TLCL
, &((
	`ˇ°_u
(o))->
˛
.
l
))

	)

210 
	#gco2c˛
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TCCL
, &((
	`ˇ°_u
(o))->
˛
.
c
))

	)

211 
	#gco2˛
(
o
) \

212 
	`check_exp
(
	`nov¨ü¡
((
o
)->
â
Ë=
LUA_TFUNCTION
, &((
	`ˇ°_u
(o))->
˛
))

	)

213 
	#gco2t
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TTABLE
, &((
	`ˇ°_u
(o))->
h
))

	)

214 
	#gco2p
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TPROTO
, &((
	`ˇ°_u
(o))->
p
))

	)

215 
	#gco2th
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TTHREAD
, &((
	`ˇ°_u
(o))->
th
))

	)

219 
	#obj2gco
(
v
) \

220 
	`check_exp
(
	`nov¨ü¡
((
v
)->
â
Ë< 
LUA_TDEADKEY
, (&(
	`ˇ°_u
(v)->
gc
)))

	)

224 
	#gëtŸÆbyãs
(
g
Ë
	`ˇ°
(
lu_mem
, (g)->
tŸÆbyãs
 + (g)->
GCdebt
)

	)

226 
LUAI_FUNC
 
luaE_£tdebt
 (
globÆ_Sèã
 *
g
, 
l_mem
 
debt
);

227 
LUAI_FUNC
 
luaE_‰ìthªad
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
);

228 
LUAI_FUNC
 
CÆlInfo
 *
luaE_exãndCI
 (
lua_Sèã
 *
L
);

229 
LUAI_FUNC
 
luaE_‰ìCI
 (
lua_Sèã
 *
L
);

230 
LUAI_FUNC
 
luaE_shrökCI
 (
lua_Sèã
 *
L
);

	@lua/src/lstring.c

7 
	#l°rög_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"ldebug.h
"

18 
	~"ldo.h
"

19 
	~"lmem.h
"

20 
	~"lobje˘.h
"

21 
	~"l°©e.h
"

22 
	~"l°rög.h
"

25 
	#MEMERRMSG
 "nŸÉnough mem‹y"

	)

32 #i‡!
deföed
(
LUAI_HASHLIMIT
)

33 
	#LUAI_HASHLIMIT
 5

	)

40 
	$luaS_eq g°r
 (
TSåög
 *
a
, TSåög *
b
) {

41 
size_t
 
Àn
 = 
a
->
u
.
 gÀn
;

42 
	`lua_as£π
(
a
->
â
 =
LUA_TLNGSTR
 && 
b
->tt == LUA_TLNGSTR);

43  (
a
 =
b
) ||

44 ((
Àn
 =
b
->
u
.
 gÀn
) &&

45 (
	`memcmp
(
	`gë°r
(
a
), gë°r(
b
), 
Àn
) == 0));

46 
	}
}

49 
	$luaS_hash
 (c⁄° *
°r
, 
size_t
 
l
, 
£ed
) {

50 
h
 = 
£ed
 ^ 
	`ˇ°
(, 
l
);

51 
size_t
 
°ï
 = (
l
 >> 
LUAI_HASHLIMIT
) + 1;

52 ; 
l
 >
°ï
;Ü -= step)

53 
h
 ^((h<<5Ë+ (h>>2Ë+ 
	`ˇ°_byã
(
°r
[
l
 - 1]));

54  
h
;

55 
	}
}

58 
	$luaS_hashl⁄g°r
 (
TSåög
 *
ts
) {

59 
	`lua_as£π
(
ts
->
â
 =
LUA_TLNGSTR
);

60 i‡(
ts
->
exåa
 == 0) {

61 
ts
->
hash
 = 
	`luaS_hash
(
	`gë°r
—s),Ås->
u
.
 gÀn
,Ås->hash);

62 
ts
->
exåa
 = 1;

64  
ts
->
hash
;

65 
	}
}

71 
	$luaS_ªsize
 (
lua_Sèã
 *
L
, 
√wsize
) {

72 
i
;

73 
°rögèbÀ
 *
tb
 = &
	`G
(
L
)->
°π
;

74 i‡(
√wsize
 > 
tb
->
size
) {

75 
	`luaM_ªÆlocve˘‹
(
L
, 
tb
->
hash
,Åb->
size
, 
√wsize
, 
TSåög
 *);

76 
i
 = 
tb
->
size
; i < 
√wsize
; i++)

77 
tb
->
hash
[
i
] = 
NULL
;

79 
i
 = 0; i < 
tb
->
size
; i++) {

80 
TSåög
 *
p
 = 
tb
->
hash
[
i
];

81 
tb
->
hash
[
i
] = 
NULL
;

82 
p
) {

83 
TSåög
 *
h√xt
 = 
p
->
u
.hnext;

84 
h
 = 
	`lmod
(
p
->
hash
, 
√wsize
);

85 
p
->
u
.
h√xt
 = 
tb
->
hash
[
h
];

86 
tb
->
hash
[
h
] = 
p
;

87 
p
 = 
h√xt
;

90 i‡(
√wsize
 < 
tb
->
size
) {

92 
	`lua_as£π
(
tb
->
hash
[
√wsize
] =
NULL
 &&Åb->hash[tb->
size
 - 1] == NULL);

93 
	`luaM_ªÆlocve˘‹
(
L
, 
tb
->
hash
,Åb->
size
, 
√wsize
, 
TSåög
 *);

95 
tb
->
size
 = 
√wsize
;

96 
	}
}

103 
	$luaS_˛órˇche
 (
globÆ_Sèã
 *
g
) {

104 
i
, 
j
;

105 
i
 = 0; i < 
STRCACHE_N
; i++)

106 
j
 = 0; j < 
STRCACHE_M
; j++) {

107 i‡(
	`iswhôe
(
g
->
°rˇche
[
i
][
j
]))

108 
g
->
°rˇche
[
i
][
j
] = g->
memîrmsg
;

110 
	}
}

116 
	$luaS_öô
 (
lua_Sèã
 *
L
) {

117 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

118 
i
, 
j
;

119 
	`luaS_ªsize
(
L
, 
MINSTRTABSIZE
);

121 
g
->
memîrmsg
 = 
	`luaS_√wlôîÆ
(
L
, 
MEMERRMSG
);

122 
	`luaC_fix
(
L
, 
	`obj2gco
(
g
->
memîrmsg
));

123 
i
 = 0; i < 
STRCACHE_N
; i++)

124 
j
 = 0; j < 
STRCACHE_M
; j++)

125 
g
->
°rˇche
[
i
][
j
] = g->
memîrmsg
;

126 
	}
}

133 
TSåög
 *
	$¸óã°robj
 (
lua_Sèã
 *
L
, 
size_t
 
l
, 
èg
, 
h
) {

134 
TSåög
 *
ts
;

135 
GCObje˘
 *
o
;

136 
size_t
 
tŸÆsize
;

137 
tŸÆsize
 = 
	`sizñ°rög
(
l
);

138 
o
 = 
	`luaC_√wobj
(
L
, 
èg
, 
tŸÆsize
);

139 
ts
 = 
	`gco2ts
(
o
);

140 
ts
->
hash
 = 
h
;

141 
ts
->
exåa
 = 0;

142 
	`gë°r
(
ts
)[
l
] = '\0';

143  
ts
;

144 
	}
}

147 
TSåög
 *
	$luaS_¸óã g°robj
 (
lua_Sèã
 *
L
, 
size_t
 
l
) {

148 
TSåög
 *
ts
 = 
	`¸óã°robj
(
L
, 
l
, 
LUA_TLNGSTR
, 
	`G
(L)->
£ed
);

149 
ts
->
u
.
 gÀn
 = 
l
;

150  
ts
;

151 
	}
}

154 
	$luaS_ªmove
 (
lua_Sèã
 *
L
, 
TSåög
 *
ts
) {

155 
°rögèbÀ
 *
tb
 = &
	`G
(
L
)->
°π
;

156 
TSåög
 **
p
 = &
tb
->
hash
[
	`lmod
(
ts
->hash,Åb->
size
)];

157 *
p
 !
ts
)

158 
p
 = &(*p)->
u
.
h√xt
;

159 *
p
 = (*p)->
u
.
h√xt
;

160 
tb
->
nu£
--;

161 
	}
}

167 
TSåög
 *
	$öã∫shr°r
 (
lua_Sèã
 *
L
, c⁄° *
°r
, 
size_t
 
l
) {

168 
TSåög
 *
ts
;

169 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

170 
h
 = 
	`luaS_hash
(
°r
, 
l
, 
g
->
£ed
);

171 
TSåög
 **
li°
 = &
g
->
°π
.
hash
[
	`lmod
(
h
, g->°π.
size
)];

172 
	`lua_as£π
(
°r
 !
NULL
);

173 
ts
 = *
li°
;Å†!
NULL
;Å†ts->
u
.
h√xt
) {

174 i‡(
l
 =
ts
->
shæí
 &&

175 (
	`memcmp
(
°r
, 
	`gë°r
(
ts
), 
l
 * ()) == 0)) {

177 i‡(
	`isdód
(
g
, 
ts
))

178 
	`ch™gewhôe
(
ts
);

179  
ts
;

182 i‡(
g
->
°π
.
nu£
 >g->°π.
size
 && g->°π.sizê<
MAX_INT
/2) {

183 
	`luaS_ªsize
(
L
, 
g
->
°π
.
size
 * 2);

184 
li°
 = &
g
->
°π
.
hash
[
	`lmod
(
h
, g->°π.
size
)];

186 
ts
 = 
	`¸óã°robj
(
L
, 
l
, 
LUA_TSHRSTR
, 
h
);

187 
	`mem˝y
(
	`gë°r
(
ts
), 
°r
, 
l
 * ());

188 
ts
->
shæí
 = 
	`ˇ°_byã
(
l
);

189 
ts
->
u
.
h√xt
 = *
li°
;

190 *
li°
 = 
ts
;

191 
g
->
°π
.
nu£
++;

192  
ts
;

193 
	}
}

199 
TSåög
 *
	$luaS_√wl°r
 (
lua_Sèã
 *
L
, c⁄° *
°r
, 
size_t
 
l
) {

200 i‡(
l
 <
LUAI_MAXSHORTLEN
)

201  
	`öã∫shr°r
(
L
, 
°r
, 
l
);

203 
TSåög
 *
ts
;

204 i‡(
l
 >(
MAX_SIZE
 - (
TSåög
))/())

205 
	`luaM_toobig
(
L
);

206 
ts
 = 
	`luaS_¸óã g°robj
(
L
, 
l
);

207 
	`mem˝y
(
	`gë°r
(
ts
), 
°r
, 
l
 * ());

208  
ts
;

210 
	}
}

219 
TSåög
 *
	$luaS_√w
 (
lua_Sèã
 *
L
, c⁄° *
°r
) {

220 
i
 = 
	`poöt2uöt
(
°r
Ë% 
STRCACHE_N
;

221 
j
;

222 
TSåög
 **
p
 = 
	`G
(
L
)->
°rˇche
[
i
];

223 
j
 = 0; j < 
STRCACHE_M
; j++) {

224 i‡(
	`°rcmp
(
°r
, 
	`gë°r
(
p
[
j
])) == 0)

225  
p
[
j
];

228 
j
 = 
STRCACHE_M
 - 1; j > 0; j--)

229 
p
[
j
] =Ö[j - 1];

231 
p
[0] = 
	`luaS_√wl°r
(
L
, 
°r
, 
	`°æí
(str));

232  
p
[0];

233 
	}
}

236 
Ud©a
 *
	$luaS_√wud©a
 (
lua_Sèã
 *
L
, 
size_t
 
s
) {

237 
Ud©a
 *
u
;

238 
GCObje˘
 *
o
;

239 i‡(
s
 > 
MAX_SIZE
 - (
Ud©a
))

240 
	`luaM_toobig
(
L
);

241 
o
 = 
	`luaC_√wobj
(
L
, 
LUA_TUSERDATA
, 
	`sizñud©a
(
s
));

242 
u
 = 
	`gco2u
(
o
);

243 
u
->
Àn
 = 
s
;

244 
u
->
më©abÀ
 = 
NULL
;

245 
	`£tu£rvÆue
(
L
, 
u
, 
luaO_nûobje˘
);

246  
u
;

247 
	}
}

	@lua/src/lstring.h

7 #i‚de‡
l°rög_h


8 
	#l°rög_h


	)

10 
	~"lgc.h
"

11 
	~"lobje˘.h
"

12 
	~"l°©e.h
"

15 
	#sizñ°rög
(
l
Ë((
UTSåög
Ë+ (÷Ë+ 1Ë* ())

	)

17 
	#sizñud©a
(
l
Ë((
UUd©a
Ë+ (l))

	)

18 
	#sizeud©a
(
u
Ë
	`sizñud©a
((u)->
Àn
)

	)

20 
	#luaS_√wlôîÆ
(
L
, 
s
Ë(
	`luaS_√wl°r
(L, "" s, \

21 ((
s
)/())-1))

	)

27 
	#i§e£rved
(
s
Ë((s)->
â
 =
LUA_TSHRSTR
 && (s)->
exåa
 > 0)

	)

33 
	#eqshr°r
(
a
,
b
Ë
	`check_exp
(◊)->
â
 =
LUA_TSHRSTR
, (aË=(b))

	)

36 
LUAI_FUNC
 
luaS_hash
 (c⁄° *
°r
, 
size_t
 
l
, 
£ed
);

37 
LUAI_FUNC
 
luaS_hashl⁄g°r
 (
TSåög
 *
ts
);

38 
LUAI_FUNC
 
luaS_eq g°r
 (
TSåög
 *
a
, TSåög *
b
);

39 
LUAI_FUNC
 
luaS_ªsize
 (
lua_Sèã
 *
L
, 
√wsize
);

40 
LUAI_FUNC
 
luaS_˛órˇche
 (
globÆ_Sèã
 *
g
);

41 
LUAI_FUNC
 
luaS_öô
 (
lua_Sèã
 *
L
);

42 
LUAI_FUNC
 
luaS_ªmove
 (
lua_Sèã
 *
L
, 
TSåög
 *
ts
);

43 
LUAI_FUNC
 
Ud©a
 *
luaS_√wud©a
 (
lua_Sèã
 *
L
, 
size_t
 
s
);

44 
LUAI_FUNC
 
TSåög
 *
luaS_√wl°r
 (
lua_Sèã
 *
L
, c⁄° *
°r
, 
size_t
 
l
);

45 
LUAI_FUNC
 
TSåög
 *
luaS_√w
 (
lua_Sèã
 *
L
, c⁄° *
°r
);

46 
LUAI_FUNC
 
TSåög
 *
luaS_¸óã g°robj
 (
lua_Sèã
 *
L
, 
size_t
 
l
);

	@lua/src/lstrlib.c

7 
	#l°æib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<˘y≥.h
>

14 
	~<Êﬂt.h
>

15 
	~<limôs.h
>

16 
	~<loˇÀ.h
>

17 
	~<°ddef.h
>

18 
	~<°dio.h
>

19 
	~<°dlib.h
>

20 
	~<°rög.h
>

22 
	~"lua.h
"

24 
	~"œuxlib.h
"

25 
	~"luÆib.h
"

33 #i‡!
deföed
(
LUA_MAXCAPTURES
)

34 
	#LUA_MAXCAPTURES
 32

	)

39 
	#uch¨
(
c
Ë(()(c))

	)

46 
	#MAX_SIZET
 ((
size_t
)(~(size_t)0))

	)

48 
	#MAXSIZE
 \

49 ((
size_t
Ë< (Ë? 
MAX_SIZET
 : (size_t)(
INT_MAX
))

	)

54 
	$°r_Àn
 (
lua_Sèã
 *
L
) {

55 
size_t
 
l
;

56 
	`luaL_checkl°rög
(
L
, 1, &
l
);

57 
	`lua_pushöãgî
(
L
, (
lua_I¡egî
)
l
);

59 
	}
}

63 
lua_I¡egî
 
	$po§ñ©
 (
lua_I¡egî
 
pos
, 
size_t
 
Àn
) {

64 i‡(
pos
 >= 0) Öos;

65 i‡(0u - (
size_t
)
pos
 > 
Àn
)  0;

66  (
lua_I¡egî
)
Àn
 + 
pos
 + 1;

67 
	}
}

70 
	$°r_sub
 (
lua_Sèã
 *
L
) {

71 
size_t
 
l
;

72 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

73 
lua_I¡egî
 
°¨t
 = 
	`po§ñ©
(
	`luaL_checköãgî
(
L
, 2), 
l
);

74 
lua_I¡egî
 
íd
 = 
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 3, -1), 
l
);

75 i‡(
°¨t
 < 1) start = 1;

76 i‡(
íd
 > (
lua_I¡egî
)
l
)Énd =Ü;

77 i‡(
°¨t
 <
íd
)

78 
	`lua_pushl°rög
(
L
, 
s
 + 
°¨t
 - 1, (
size_t
)(
íd
 - start) + 1);

79 
	`lua_pushlôîÆ
(
L
, "");

81 
	}
}

84 
	$°r_ªvî£
 (
lua_Sèã
 *
L
) {

85 
size_t
 
l
, 
i
;

86 
luaL_Buf„r
 
b
;

87 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

88 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
l
);

89 
i
 = 0; i < 
l
; i++)

90 
p
[
i
] = 
s
[
l
 - i - 1];

91 
	`luaL_pushªsu…size
(&
b
, 
l
);

93 
	}
}

96 
	$°r_lowî
 (
lua_Sèã
 *
L
) {

97 
size_t
 
l
;

98 
size_t
 
i
;

99 
luaL_Buf„r
 
b
;

100 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

101 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
l
);

102 
i
=0; i<
l
; i++)

103 
p
[
i
] = 
	`tﬁowî
(
	`uch¨
(
s
[i]));

104 
	`luaL_pushªsu…size
(&
b
, 
l
);

106 
	}
}

109 
	$°r_uµî
 (
lua_Sèã
 *
L
) {

110 
size_t
 
l
;

111 
size_t
 
i
;

112 
luaL_Buf„r
 
b
;

113 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

114 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
l
);

115 
i
=0; i<
l
; i++)

116 
p
[
i
] = 
	`touµî
(
	`uch¨
(
s
[i]));

117 
	`luaL_pushªsu…size
(&
b
, 
l
);

119 
	}
}

122 
	$°r_ªp
 (
lua_Sèã
 *
L
) {

123 
size_t
 
l
, 
l£p
;

124 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

125 
lua_I¡egî
 
n
 = 
	`luaL_checköãgî
(
L
, 2);

126 c⁄° *
£p
 = 
	`luaL_›é°rög
(
L
, 3, "", &
l£p
);

127 i‡(
n
 <0Ë
	`lua_pushlôîÆ
(
L
, "");

128 i‡(
l
 + 
l£p
 <Ü ||Ü +Ü£∞> 
MAXSIZE
 / 
n
)

129  
	`luaL_îr‹
(
L
, "resulting stringÅooÜarge");

131 
size_t
 
tŸÆÀn
 = (size_t)
n
 * 
l
 + (size_t)“ - 1Ë* 
l£p
;

132 
luaL_Buf„r
 
b
;

133 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
tŸÆÀn
);

134 
n
-- > 1) {

135 
	`mem˝y
(
p
, 
s
, 
l
 * ());Ö +=Ü;

136 i‡(
l£p
 > 0) {

137 
	`mem˝y
(
p
, 
£p
, 
l£p
 * ());

138 
p
 +
l£p
;

141 
	`mem˝y
(
p
, 
s
, 
l
 * ());

142 
	`luaL_pushªsu…size
(&
b
, 
tŸÆÀn
);

145 
	}
}

148 
	$°r_byã
 (
lua_Sèã
 *
L
) {

149 
size_t
 
l
;

150 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

151 
lua_I¡egî
 
posi
 = 
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 2, 1), 
l
);

152 
lua_I¡egî
 
po£
 = 
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 3, 
posi
), 
l
);

153 
n
, 
i
;

154 i‡(
posi
 < 1)Öosi = 1;

155 i‡(
po£
 > (
lua_I¡egî
)
l
)Öose =Ü;

156 i‡(
posi
 > 
po£
)  0;

157 i‡(
po£
 - 
posi
 >
INT_MAX
)

158  
	`luaL_îr‹
(
L
, "string sliceÅooÜong");

159 
n
 = ()(
po£
 - 
posi
) + 1;

160 
	`luaL_check°ack
(
L
, 
n
, "string sliceÅooÜong");

161 
i
=0; i<
n
; i++)

162 
	`lua_pushöãgî
(
L
, 
	`uch¨
(
s
[
posi
+
i
-1]));

163  
n
;

164 
	}
}

167 
	$°r_ch¨
 (
lua_Sèã
 *
L
) {

168 
n
 = 
	`lua_gët›
(
L
);

169 
i
;

170 
luaL_Buf„r
 
b
;

171 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
n
);

172 
i
=1; i<=
n
; i++) {

173 
lua_I¡egî
 
c
 = 
	`luaL_checköãgî
(
L
, 
i
);

174 
	`luaL_¨gcheck
(
L
, 
	`uch¨
(
c
Ë=c, 
i
, "value out ofÑange");

175 
p
[
i
 - 1] = 
	`uch¨
(
c
);

177 
	`luaL_pushªsu…size
(&
b
, 
n
);

179 
	}
}

182 
	$wrôî
 (
lua_Sèã
 *
L
, c⁄° *
b
, 
size_t
 
size
, *
B
) {

183 ()
L
;

184 
	`luaL_addl°rög
((
luaL_Buf„r
 *Ë
B
, (c⁄° *)
b
, 
size
);

186 
	}
}

189 
	$°r_dump
 (
lua_Sèã
 *
L
) {

190 
luaL_Buf„r
 
b
;

191 
°rù
 = 
	`lua_toboﬁón
(
L
, 2);

192 
	`luaL_checkty≥
(
L
, 1, 
LUA_TFUNCTION
);

193 
	`lua_£â›
(
L
, 1);

194 
	`luaL_bufföô
(
L
,&
b
);

195 i‡(
	`lua_dump
(
L
, 
wrôî
, &
b
, 
°rù
) != 0)

196  
	`luaL_îr‹
(
L
, "unableÅo dump given function");

197 
	`luaL_pushªsu…
(&
b
);

199 
	}
}

210 
	#CAP_UNFINISHED
 (-1)

	)

211 
	#CAP_POSITION
 (-2)

	)

214 
	sM©chSèã
 {

215 c⁄° *
	m§c_öô
;

216 c⁄° *
	m§c_íd
;

217 c⁄° *
	mp_íd
;

218 
lua_Sèã
 *
	mL
;

219 
	mm©chdïth
;

220 
	mÀvñ
;

222 c⁄° *
	möô
;

223 
±rdiff_t
 
	mÀn
;

224 } 
	mˇ±uª
[
LUA_MAXCAPTURES
];

225 } 
	tM©chSèã
;

229 c⁄° *
m©ch
 (
M©chSèã
 *
ms
, c⁄° *
s
, c⁄° *
p
);

233 #i‡!
deföed
(
MAXCCALLS
)

234 
	#MAXCCALLS
 200

	)

238 
	#L_ESC
 '%'

	)

239 
	#SPECIALS
 "^$*+?.([%-"

	)

242 
	$check_ˇ±uª
 (
M©chSèã
 *
ms
, 
l
) {

243 
l
 -= '1';

244 i‡(
l
 < 0 ||Ü >
ms
->
Àvñ
 || ms->
ˇ±uª
[l].
Àn
 =
CAP_UNFINISHED
)

245  
	`luaL_îr‹
(
ms
->
L
, "övÆid c≠tuª index %%%d", 
l
 + 1);

246  
l
;

247 
	}
}

250 
	$ˇ±uª_to_˛o£
 (
M©chSèã
 *
ms
) {

251 
Àvñ
 = 
ms
->level;

252 
Àvñ
--;Üevel>=0;Üevel--)

253 i‡(
ms
->
ˇ±uª
[
Àvñ
].
Àn
 =
CAP_UNFINISHED
) Üevel;

254  
	`luaL_îr‹
(
ms
->
L
, "invalidÖattern capture");

255 
	}
}

258 c⁄° *
	$˛as£nd
 (
M©chSèã
 *
ms
, c⁄° *
p
) {

259 *
p
++) {

260 
L_ESC
: {

261 i‡(
p
 =
ms
->
p_íd
)

262 
	`luaL_îr‹
(
ms
->
L
, "malformedÖattern (ends with '%%')");

263  
p
+1;

266 i‡(*
p
 == '^')Ö++;

268 i‡(
p
 =
ms
->
p_íd
)

269 
	`luaL_îr‹
(
ms
->
L
, "malformedÖattern (missing ']')");

270 i‡(*(
p
++Ë=
L_ESC
 &&Ö < 
ms
->
p_íd
)

271 
p
++;

272 } *
p
 != ']');

273  
p
+1;

276  
p
;

279 
	}
}

282 
	$m©ch_˛ass
 (
c
, 
˛
) {

283 
ªs
;

284 
	`tﬁowî
(
˛
)) {

285 'a' : 
ªs
 = 
	`ißÕha
(
c
); ;

286 'c' : 
ªs
 = 
	`is˙ål
(
c
); ;

287 'd' : 
ªs
 = 
	`isdigô
(
c
); ;

288 'g' : 
ªs
 = 
	`isgøph
(
c
); ;

289 'l' : 
ªs
 = 
	`i¶owî
(
c
); ;

290 'p' : 
ªs
 = 
	`i•un˘
(
c
); ;

291 's' : 
ªs
 = 
	`is•a˚
(
c
); ;

292 'u' : 
ªs
 = 
	`isuµî
(
c
); ;

293 'w' : 
ªs
 = 
	`iß um
(
c
); ;

294 'x' : 
ªs
 = 
	`isxdigô
(
c
); ;

295 'z' : 
ªs
 = (
c
 == 0); ;

296 :  (
˛
 =
c
);

298  (
	`i¶owî
(
˛
Ë? 
ªs
 : !res);

299 
	}
}

302 
	$m©chbøckë˛ass
 (
c
, c⁄° *
p
, c⁄° *
ec
) {

303 
sig
 = 1;

304 i‡(*(
p
+1) == '^') {

305 
sig
 = 0;

306 
p
++;

308 ++
p
 < 
ec
) {

309 i‡(*
p
 =
L_ESC
) {

310 
p
++;

311 i‡(
	`m©ch_˛ass
(
c
, 
	`uch¨
(*
p
)))

312  
sig
;

314 i‡((*(
p
+1Ë='-'Ë&& (p+2 < 
ec
)) {

315 
p
+=2;

316 i‡(
	`uch¨
(*(
p
-2)Ë<
c
 && c <= uchar(*p))

317  
sig
;

319 i‡(
	`uch¨
(*
p
Ë=
c
Ë 
sig
;

321  !
sig
;

322 
	}
}

325 
	$sögÀm©ch
 (
M©chSèã
 *
ms
, c⁄° *
s
, c⁄° *
p
,

326 c⁄° *
ï
) {

327 i‡(
s
 >
ms
->
§c_íd
)

330 
c
 = 
	`uch¨
(*
s
);

331 *
p
) {

333 
L_ESC
:  
	`m©ch_˛ass
(
c
, 
	`uch¨
(*(
p
+1)));

334 '[':  
	`m©chbøckë˛ass
(
c
, 
p
, 
ï
-1);

335 :  (
	`uch¨
(*
p
Ë=
c
);

338 
	}
}

341 c⁄° *
	$m©chbÆ™˚
 (
M©chSèã
 *
ms
, c⁄° *
s
,

342 c⁄° *
p
) {

343 i‡(
p
 >
ms
->
p_íd
 - 1)

344 
	`luaL_îr‹
(
ms
->
L
, "malformedÖattern (missingárgumentsÅo '%%b')");

345 i‡(*
s
 !*
p
Ë 
NULL
;

347 
b
 = *
p
;

348 
e
 = *(
p
+1);

349 
c⁄t
 = 1;

350 ++
s
 < 
ms
->
§c_íd
) {

351 i‡(*
s
 =
e
) {

352 i‡(--
c⁄t
 =0Ë 
s
+1;

354 i‡(*
s
 =
b
Ë
c⁄t
++;

357  
NULL
;

358 
	}
}

361 c⁄° *
	$max_ex∑nd
 (
M©chSèã
 *
ms
, c⁄° *
s
,

362 c⁄° *
p
, c⁄° *
ï
) {

363 
±rdiff_t
 
i
 = 0;

364 
	`sögÀm©ch
(
ms
, 
s
 + 
i
, 
p
, 
ï
))

365 
i
++;

367 
i
>=0) {

368 c⁄° *
ªs
 = 
	`m©ch
(
ms
, (
s
+
i
), 
ï
+1);

369 i‡(
ªs
) Ñes;

370 
i
--;

372  
NULL
;

373 
	}
}

376 c⁄° *
	$mö_ex∑nd
 (
M©chSèã
 *
ms
, c⁄° *
s
,

377 c⁄° *
p
, c⁄° *
ï
) {

379 c⁄° *
ªs
 = 
	`m©ch
(
ms
, 
s
, 
ï
+1);

380 i‡(
ªs
 !
NULL
)

381  
ªs
;

382 i‡(
	`sögÀm©ch
(
ms
, 
s
, 
p
, 
ï
))

383 
s
++;

384  
NULL
;

386 
	}
}

389 c⁄° *
	$°¨t_ˇ±uª
 (
M©chSèã
 *
ms
, c⁄° *
s
,

390 c⁄° *
p
, 
wh©
) {

391 c⁄° *
ªs
;

392 
Àvñ
 = 
ms
->level;

393 i‡(
Àvñ
 >
LUA_MAXCAPTURES
Ë
	`luaL_îr‹
(
ms
->
L
, "too many captures");

394 
ms
->
ˇ±uª
[
Àvñ
].
öô
 = 
s
;

395 
ms
->
ˇ±uª
[
Àvñ
].
Àn
 = 
wh©
;

396 
ms
->
Àvñ
 =Üevel+1;

397 i‡((
ªs
=
	`m©ch
(
ms
, 
s
, 
p
)Ë=
NULL
)

398 
ms
->
Àvñ
--;

399  
ªs
;

400 
	}
}

403 c⁄° *
	$íd_ˇ±uª
 (
M©chSèã
 *
ms
, c⁄° *
s
,

404 c⁄° *
p
) {

405 
l
 = 
	`ˇ±uª_to_˛o£
(
ms
);

406 c⁄° *
ªs
;

407 
ms
->
ˇ±uª
[
l
].
Àn
 = 
s
 - ms->ˇ±uª[l].
öô
;

408 i‡((
ªs
 = 
	`m©ch
(
ms
, 
s
, 
p
)Ë=
NULL
)

409 
ms
->
ˇ±uª
[
l
].
Àn
 = 
CAP_UNFINISHED
;

410  
ªs
;

411 
	}
}

414 c⁄° *
	$m©ch_ˇ±uª
 (
M©chSèã
 *
ms
, c⁄° *
s
, 
l
) {

415 
size_t
 
Àn
;

416 
l
 = 
	`check_ˇ±uª
(
ms
,Ü);

417 
Àn
 = 
ms
->
ˇ±uª
[
l
].len;

418 i‡((
size_t
)(
ms
->
§c_íd
-
s
Ë>
Àn
 &&

419 
	`memcmp
(
ms
->
ˇ±uª
[
l
].
öô
, 
s
, 
Àn
) == 0)

420  
s
+
Àn
;

421  
NULL
;

422 
	}
}

425 c⁄° *
	$m©ch
 (
M©chSèã
 *
ms
, c⁄° *
s
, c⁄° *
p
) {

426 i‡(
ms
->
m©chdïth
-- == 0)

427 
	`luaL_îr‹
(
ms
->
L
, "patternÅoo complex");

428 
öô
:

429 i‡(
p
 !
ms
->
p_íd
) {

430 *
p
) {

432 i‡(*(
p
 + 1) == ')')

433 
s
 = 
	`°¨t_ˇ±uª
(
ms
, s, 
p
 + 2, 
CAP_POSITION
);

435 
s
 = 
	`°¨t_ˇ±uª
(
ms
, s, 
p
 + 1, 
CAP_UNFINISHED
);

439 
s
 = 
	`íd_ˇ±uª
(
ms
, s, 
p
 + 1);

443 i‡((
p
 + 1Ë!
ms
->
p_íd
)

444 
dÊt
;

445 
s
 = (†=
ms
->
§c_íd
Ë? s : 
NULL
;

448 
L_ESC
: {

449 *(
p
 + 1)) {

451 
s
 = 
	`m©chbÆ™˚
(
ms
, s, 
p
 + 2);

452 i‡(
s
 !
NULL
) {

453 
p
 +4; 
öô
;

458 c⁄° *
ï
; 
¥evious
;

459 
p
 += 2;

460 i‡(*
p
 != '[')

461 
	`luaL_îr‹
(
ms
->
L
, "missing '['áfter '%%f' inÖattern");

462 
ï
 = 
	`˛as£nd
(
ms
, 
p
);

463 
¥evious
 = (
s
 =
ms
->
§c_öô
) ? '\0' : *(s - 1);

464 i‡(!
	`m©chbøckë˛ass
(
	`uch¨
(
¥evious
), 
p
, 
ï
 - 1) &&

465 
	`m©chbøckë˛ass
(
	`uch¨
(*
s
), 
p
, 
ï
 - 1)) {

466 
p
 = 
ï
; 
öô
;

468 
s
 = 
NULL
;

474 
s
 = 
	`m©ch_ˇ±uª
(
ms
, s, 
	`uch¨
(*(
p
 + 1)));

475 i‡(
s
 !
NULL
) {

476 
p
 +2; 
öô
;

480 : 
dÊt
;

484 : 
dÊt
: {

485 c⁄° *
ï
 = 
	`˛as£nd
(
ms
, 
p
);

487 i‡(!
	`sögÀm©ch
(
ms
, 
s
, 
p
, 
ï
)) {

488 i‡(*
ï
 == '*' || *ep == '?' || *ep == '-') {

489 
p
 = 
ï
 + 1; 
öô
;

492 
s
 = 
NULL
;

495 *
ï
) {

497 c⁄° *
ªs
;

498 i‡((
ªs
 = 
	`m©ch
(
ms
, 
s
 + 1, 
ï
 + 1)Ë!
NULL
)

499 
s
 = 
ªs
;

501 
p
 = 
ï
 + 1; 
öô
;

506 
s
++;

509 
s
 = 
	`max_ex∑nd
(
ms
, s, 
p
, 
ï
);

512 
s
 = 
	`mö_ex∑nd
(
ms
, s, 
p
, 
ï
);

515 
s
++; 
p
 = 
ï
; 
öô
;

522 
ms
->
m©chdïth
++;

523  
s
;

524 
	}
}

528 c⁄° *
	$lmemföd
 (c⁄° *
s1
, 
size_t
 
l1
,

529 c⁄° *
s2
, 
size_t
 
l2
) {

530 i‡(
l2
 =0Ë 
s1
;

531 i‡(
l2
 > 
l1
Ë 
NULL
;

533 c⁄° *
öô
;

534 
l2
--;

535 
l1
 =Ü1-
l2
;

536 
l1
 > 0 && (
öô
 = (c⁄° *)
	`memchr
(
s1
, *
s2
,Ü1)Ë!
NULL
) {

537 
öô
++;

538 i‡(
	`memcmp
(
öô
, 
s2
+1, 
l2
) == 0)

539  
öô
-1;

541 
l1
 -
öô
-
s1
;

542 
s1
 = 
öô
;

545  
NULL
;

547 
	}
}

550 
	$push_⁄eˇ±uª
 (
M©chSèã
 *
ms
, 
i
, c⁄° *
s
,

551 c⁄° *
e
) {

552 i‡(
i
 >
ms
->
Àvñ
) {

553 i‡(
i
 == 0)

554 
	`lua_pushl°rög
(
ms
->
L
, 
s
, 
e
 - s);

556 
	`luaL_îr‹
(
ms
->
L
, "övÆid c≠tuª index %%%d", 
i
 + 1);

559 
±rdiff_t
 
l
 = 
ms
->
ˇ±uª
[
i
].
Àn
;

560 i‡(
l
 =
CAP_UNFINISHED
Ë
	`luaL_îr‹
(
ms
->
L
, "unfinished capture");

561 i‡(
l
 =
CAP_POSITION
)

562 
	`lua_pushöãgî
(
ms
->
L
, (ms->
ˇ±uª
[
i
].
öô
 - ms->
§c_öô
) + 1);

564 
	`lua_pushl°rög
(
ms
->
L
, ms->
ˇ±uª
[
i
].
öô
, 
l
);

566 
	}
}

569 
	$push_ˇ±uªs
 (
M©chSèã
 *
ms
, c⁄° *
s
, c⁄° *
e
) {

570 
i
;

571 
∆evñs
 = (
ms
->
Àvñ
 =0 && 
s
) ? 1 : ms->level;

572 
	`luaL_check°ack
(
ms
->
L
, 
∆evñs
, "too many captures");

573 
i
 = 0; i < 
∆evñs
; i++)

574 
	`push_⁄eˇ±uª
(
ms
, 
i
, 
s
, 
e
);

575  
∆evñs
;

576 
	}
}

580 
	$no•ecüls
 (c⁄° *
p
, 
size_t
 
l
) {

581 
size_t
 
u±o
 = 0;

583 i‡(
	`°Ωbrk
(
p
 + 
u±o
, 
SPECIALS
))

585 
u±o
 +
	`°æí
(
p
 + upto) + 1;

586 } 
u±o
 <
l
);

588 
	}
}

591 
	$¥ï°©e
 (
M©chSèã
 *
ms
, 
lua_Sèã
 *
L
,

592 c⁄° *
s
, 
size_t
 
ls
, c⁄° *
p
, size_à
Õ
) {

593 
ms
->
L
 = L;

594 
ms
->
m©chdïth
 = 
MAXCCALLS
;

595 
ms
->
§c_öô
 = 
s
;

596 
ms
->
§c_íd
 = 
s
 + 
ls
;

597 
ms
->
p_íd
 = 
p
 + 
Õ
;

598 
	}
}

601 
	$ª¥ï°©e
 (
M©chSèã
 *
ms
) {

602 
ms
->
Àvñ
 = 0;

603 
	`lua_as£π
(
ms
->
m©chdïth
 =
MAXCCALLS
);

604 
	}
}

607 
	$°r_föd_aux
 (
lua_Sèã
 *
L
, 
föd
) {

608 
size_t
 
ls
, 
Õ
;

609 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
ls
);

610 c⁄° *
p
 = 
	`luaL_checkl°rög
(
L
, 2, &
Õ
);

611 
lua_I¡egî
 
öô
 = 
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 3, 1), 
ls
);

612 i‡(
öô
 < 1) init = 1;

613 i‡(
öô
 > (
lua_I¡egî
)
ls
 + 1) {

614 
	`lua_pushnû
(
L
);

618 i‡(
föd
 && (
	`lua_toboﬁón
(
L
, 4Ë|| 
	`no•ecüls
(
p
, 
Õ
))) {

620 c⁄° *
s2
 = 
	`lmemföd
(
s
 + 
öô
 - 1, 
ls
 - (
size_t
)öô + 1, 
p
, 
Õ
);

621 i‡(
s2
) {

622 
	`lua_pushöãgî
(
L
, (
s2
 - 
s
) + 1);

623 
	`lua_pushöãgî
(
L
, (
s2
 - 
s
Ë+ 
Õ
);

628 
M©chSèã
 
ms
;

629 c⁄° *
s1
 = 
s
 + 
öô
 - 1;

630 
™ch‹
 = (*
p
 == '^');

631 i‡(
™ch‹
) {

632 
p
++; 
Õ
--;

634 
	`¥ï°©e
(&
ms
, 
L
, 
s
, 
ls
, 
p
, 
Õ
);

636 c⁄° *
ªs
;

637 
	`ª¥ï°©e
(&
ms
);

638 i‡((
ªs
=
	`m©ch
(&
ms
, 
s1
, 
p
)Ë!
NULL
) {

639 i‡(
föd
) {

640 
	`lua_pushöãgî
(
L
, (
s1
 - 
s
) + 1);

641 
	`lua_pushöãgî
(
L
, 
ªs
 - 
s
);

642  
	`push_ˇ±uªs
(&
ms
, 
NULL
, 0) + 2;

645  
	`push_ˇ±uªs
(&
ms
, 
s1
, 
ªs
);

647 } 
s1
++ < 
ms
.
§c_íd
 && !
™ch‹
);

649 
	`lua_pushnû
(
L
);

651 
	}
}

654 
	$°r_föd
 (
lua_Sèã
 *
L
) {

655  
	`°r_föd_aux
(
L
, 1);

656 
	}
}

659 
	$°r_m©ch
 (
lua_Sèã
 *
L
) {

660  
	`°r_föd_aux
(
L
, 0);

661 
	}
}

665 
	sGM©chSèã
 {

666 c⁄° *
	m§c
;

667 c⁄° *
	mp
;

668 c⁄° *
	mœ°m©ch
;

669 
M©chSèã
 
	mms
;

670 } 
	tGM©chSèã
;

673 
	$gm©ch_aux
 (
lua_Sèã
 *
L
) {

674 
GM©chSèã
 *
gm
 = (GM©chSèã *)
	`lua_tou£rd©a
(
L
, 
	`lua_upvÆueödex
(3));

675 c⁄° *
§c
;

676 
gm
->
ms
.
L
 = L;

677 
§c
 = 
gm
->§c; sr¯<gm->
ms
.
§c_íd
; src++) {

678 c⁄° *
e
;

679 
	`ª¥ï°©e
(&
gm
->
ms
);

680 i‡((
e
 = 
	`m©ch
(&
gm
->
ms
, 
§c
, gm->
p
)Ë!
NULL
 &&É !gm->
œ°m©ch
) {

681 
gm
->
§c
 = gm->
œ°m©ch
 = 
e
;

682  
	`push_ˇ±uªs
(&
gm
->
ms
, 
§c
, 
e
);

686 
	}
}

689 
	$gm©ch
 (
lua_Sèã
 *
L
) {

690 
size_t
 
ls
, 
Õ
;

691 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
ls
);

692 c⁄° *
p
 = 
	`luaL_checkl°rög
(
L
, 2, &
Õ
);

693 
GM©chSèã
 *
gm
;

694 
	`lua_£â›
(
L
, 2);

695 
gm
 = (
GM©chSèã
 *)
	`lua_√wu£rd©a
(
L
, (GMatchState));

696 
	`¥ï°©e
(&
gm
->
ms
, 
L
, 
s
, 
ls
, 
p
, 
Õ
);

697 
gm
->
§c
 = 
s
; gm->
p
 =Ö; gm->
œ°m©ch
 = 
NULL
;

698 
	`lua_pushc˛osuª
(
L
, 
gm©ch_aux
, 3);

700 
	}
}

703 
	$add_s
 (
M©chSèã
 *
ms
, 
luaL_Buf„r
 *
b
, c⁄° *
s
,

704 c⁄° *
e
) {

705 
size_t
 
l
, 
i
;

706 
lua_Sèã
 *
L
 = 
ms
->L;

707 c⁄° *
√ws
 = 
	`lua_tﬁ°rög
(
L
, 3, &
l
);

708 
i
 = 0; i < 
l
; i++) {

709 i‡(
√ws
[
i
] !
L_ESC
)

710 
	`luaL_addch¨
(
b
, 
√ws
[
i
]);

712 
i
++;

713 i‡(!
	`isdigô
(
	`uch¨
(
√ws
[
i
]))) {

714 i‡(
√ws
[
i
] !
L_ESC
)

715 
	`luaL_îr‹
(
L
, "övÆid u£ o‡'%c' i¿ª∂a˚míà°rög", 
L_ESC
);

716 
	`luaL_addch¨
(
b
, 
√ws
[
i
]);

718 i‡(
√ws
[
i
] == '0')

719 
	`luaL_addl°rög
(
b
, 
s
, 
e
 - s);

721 
	`push_⁄eˇ±uª
(
ms
, 
√ws
[
i
] - '1', 
s
, 
e
);

722 
	`luaL_tﬁ°rög
(
L
, -1, 
NULL
);

723 
	`lua_ªmove
(
L
, -2);

724 
	`luaL_addvÆue
(
b
);

728 
	}
}

731 
	$add_vÆue
 (
M©chSèã
 *
ms
, 
luaL_Buf„r
 *
b
, c⁄° *
s
,

732 c⁄° *
e
, 
å
) {

733 
lua_Sèã
 *
L
 = 
ms
->L;

734 
å
) {

735 
LUA_TFUNCTION
: {

736 
n
;

737 
	`lua_pushvÆue
(
L
, 3);

738 
n
 = 
	`push_ˇ±uªs
(
ms
, 
s
, 
e
);

739 
	`lua_ˇŒ
(
L
, 
n
, 1);

742 
LUA_TTABLE
: {

743 
	`push_⁄eˇ±uª
(
ms
, 0, 
s
, 
e
);

744 
	`lua_gëèbÀ
(
L
, 3);

748 
	`add_s
(
ms
, 
b
, 
s
, 
e
);

752 i‡(!
	`lua_toboﬁón
(
L
, -1)) {

753 
	`lua_p›
(
L
, 1);

754 
	`lua_pushl°rög
(
L
, 
s
, 
e
 - s);

756 i‡(!
	`lua_is°rög
(
L
, -1))

757 
	`luaL_îr‹
(
L
, "övÆidÑïœ˚míàvÆuê◊ %s)", 
	`luaL_ty≥«me
(L, -1));

758 
	`luaL_addvÆue
(
b
);

759 
	}
}

762 
	$°r_gsub
 (
lua_Sèã
 *
L
) {

763 
size_t
 
§˛
, 
Õ
;

764 c⁄° *
§c
 = 
	`luaL_checkl°rög
(
L
, 1, &
§˛
);

765 c⁄° *
p
 = 
	`luaL_checkl°rög
(
L
, 2, &
Õ
);

766 c⁄° *
œ°m©ch
 = 
NULL
;

767 
å
 = 
	`lua_ty≥
(
L
, 3);

768 
lua_I¡egî
 
max_s
 = 
	`luaL_›töãgî
(
L
, 4, 
§˛
 + 1);

769 
™ch‹
 = (*
p
 == '^');

770 
lua_I¡egî
 
n
 = 0;

771 
M©chSèã
 
ms
;

772 
luaL_Buf„r
 
b
;

773 
	`luaL_¨gcheck
(
L
, 
å
 =
LUA_TNUMBER
 ||Å∏=
LUA_TSTRING
 ||

774 
å
 =
LUA_TFUNCTION
 ||Å∏=
LUA_TTABLE
, 3,

776 
	`luaL_bufföô
(
L
, &
b
);

777 i‡(
™ch‹
) {

778 
p
++; 
Õ
--;

780 
	`¥ï°©e
(&
ms
, 
L
, 
§c
, 
§˛
, 
p
, 
Õ
);

781 
n
 < 
max_s
) {

782 c⁄° *
e
;

783 
	`ª¥ï°©e
(&
ms
);

784 i‡((
e
 = 
	`m©ch
(&
ms
, 
§c
, 
p
)Ë!
NULL
 &&É !
œ°m©ch
) {

785 
n
++;

786 
	`add_vÆue
(&
ms
, &
b
, 
§c
, 
e
, 
å
);

787 
§c
 = 
œ°m©ch
 = 
e
;

789 i‡(
§c
 < 
ms
.
§c_íd
)

790 
	`luaL_addch¨
(&
b
, *
§c
++);

792 i‡(
™ch‹
) ;

794 
	`luaL_addl°rög
(&
b
, 
§c
, 
ms
.
§c_íd
-src);

795 
	`luaL_pushªsu…
(&
b
);

796 
	`lua_pushöãgî
(
L
, 
n
);

798 
	}
}

810 #i‡!
deföed
(
lua_numbî2°rx
)

816 
	~<m©h.h
>

818 
	#SIZELENMOD
 ((
LUA_NUMBER_FRMLEN
)/())

	)

827 
	#L_NBFD
 ((
	`l_m©hlim
(
MANT_DIG
Ë- 1)%4 + 1)

	)

833 
lua_Numbî
 
	$adddigô
 (*
buff
, 
n
, 
lua_Numbî
 
x
) {

834 
lua_Numbî
 
dd
 = 
	`l_m©h›
(
Êo‹
)(
x
);

835 
d
 = ()
dd
;

836 
buff
[
n
] = (
d
 < 10 ? d + '0' : d - 10 + 'a');

837  
x
 - 
dd
;

838 
	}
}

841 
	$num2°øux
 (*
buff
, 
sz
, 
lua_Numbî
 
x
) {

842 i‡(
x
 !x || x =
HUGE_VAL
 || x == -HUGE_VAL)

843  
	`l_•rötf
(
buff
, 
sz
, 
LUA_NUMBER_FMT
, 
x
);

844 i‡(
x
 == 0) {

846  
	`l_•rötf
(
buff
, 
sz
, 
LUA_NUMBER_FMT
 "x0p+0", 
x
);

849 
e
;

850 
lua_Numbî
 
m
 = 
	`l_m©h›
(
‰exp
)(
x
, &
e
);

851 
n
 = 0;

852 i‡(
m
 < 0) {

853 
buff
[
n
++] = '-';

854 
m
 = -m;

856 
buff
[
n
++] = '0'; buff[n++] = 'x';

857 
m
 = 
	`adddigô
(
buff
, 
n
++, m * (1 << 
L_NBFD
));

858 
e
 -
L_NBFD
;

859 i‡(
m
 > 0) {

860 
buff
[
n
++] = 
	`lua_gëloˇÀde˝oöt
();

862 
m
 = 
	`adddigô
(
buff
, 
n
++, m * 16);

863 } 
m
 > 0);

865 
n
 +
	`l_•rötf
(
buff
 +Ç, 
sz
 -Ç, "p%+d", 
e
);

866 
	`lua_as£π
(
n
 < 
sz
);

867  
n
;

869 
	}
}

872 
	$lua_numbî2°rx
 (
lua_Sèã
 *
L
, *
buff
, 
sz
,

873 c⁄° *
fmt
, 
lua_Numbî
 
x
) {

874 
n
 = 
	`num2°øux
(
buff
, 
sz
, 
x
);

875 i‡(
fmt
[
SIZELENMOD
] == 'A') {

876 
i
;

877 
i
 = 0; i < 
n
; i++)

878 
buff
[
i
] = 
	`touµî
(
	`uch¨
(buff[i]));

880 i‡(
fmt
[
SIZELENMOD
] != 'a')

881 
	`luaL_îr‹
(
L
, "modifiers for format '%%a'/'%%A'Çot implemented");

882  
n
;

883 
	}
}

895 
	#MAX_ITEM
 (120 + 
	`l_m©hlim
(
MAX_10_EXP
))

	)

899 
	#FLAGS
 "-+ #0"

	)

904 
	#MAX_FORMAT
 32

	)

907 
	$addquŸed
 (
luaL_Buf„r
 *
b
, c⁄° *
s
, 
size_t
 
Àn
) {

908 
	`luaL_addch¨
(
b
, '"');

909 
Àn
--) {

910 i‡(*
s
 == '"' || *s == '\\' || *s == '\n') {

911 
	`luaL_addch¨
(
b
, '\\');

912 
	`luaL_addch¨
(
b
, *
s
);

914 i‡(
	`is˙ål
(
	`uch¨
(*
s
))) {

915 
buff
[10];

916 i‡(!
	`isdigô
(
	`uch¨
(*(
s
+1))))

917 
	`l_•rötf
(
buff
, (buff), "\\%d", ()
	`uch¨
(*
s
));

919 
	`l_•rötf
(
buff
, (buff), "\\%03d", ()
	`uch¨
(*
s
));

920 
	`luaL_add°rög
(
b
, 
buff
);

923 
	`luaL_addch¨
(
b
, *
s
);

924 
s
++;

926 
	`luaL_addch¨
(
b
, '"');

927 
	}
}

933 
	$checkdp
 (*
buff
, 
nb
) {

934 i‡(
	`memchr
(
buff
, '.', 
nb
Ë=
NULL
) {

935 
poöt
 = 
	`lua_gëloˇÀde˝oöt
();

936 *
µoöt
 = 
	`memchr
(
buff
, 
poöt
, 
nb
);

937 i‡(
µoöt
) *ppoint = '.';

939 
	}
}

942 
	$addlôîÆ
 (
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
b
, 
¨g
) {

943 
	`lua_ty≥
(
L
, 
¨g
)) {

944 
LUA_TSTRING
: {

945 
size_t
 
Àn
;

946 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, 
¨g
, &
Àn
);

947 
	`addquŸed
(
b
, 
s
, 
Àn
);

950 
LUA_TNUMBER
: {

951 *
buff
 = 
	`luaL_¥ïbuffsize
(
b
, 
MAX_ITEM
);

952 
nb
;

953 i‡(!
	`lua_isöãgî
(
L
, 
¨g
)) {

954 
lua_Numbî
 
n
 = 
	`lua_t⁄umbî
(
L
, 
¨g
);

955 
nb
 = 
	`lua_numbî2°rx
(
L
, 
buff
, 
MAX_ITEM
, "%" 
LUA_NUMBER_FRMLEN
 "a", 
n
);

956 
	`checkdp
(
buff
, 
nb
);

959 
lua_I¡egî
 
n
 = 
	`lua_toöãgî
(
L
, 
¨g
);

960 c⁄° *
f‹m©
 = (
n
 =
LUA_MININTEGER
)

961 ? "0x%" 
LUA_INTEGER_FRMLEN
 "x"

962 : 
LUA_INTEGER_FMT
;

963 
nb
 = 
	`l_•rötf
(
buff
, 
MAX_ITEM
, 
f‹m©
, 
n
);

965 
	`luaL_addsize
(
b
, 
nb
);

968 
LUA_TNIL
: 
LUA_TBOOLEAN
: {

969 
	`luaL_tﬁ°rög
(
L
, 
¨g
, 
NULL
);

970 
	`luaL_addvÆue
(
b
);

974 
	`luaL_¨gîr‹
(
L
, 
¨g
, "value hasÇoÜiteral form");

977 
	}
}

980 c⁄° *
	$sˇnf‹m©
 (
lua_Sèã
 *
L
, c⁄° *
°r‰mt
, *
f‹m
) {

981 c⁄° *
p
 = 
°r‰mt
;

982 *
p
 !'\0' && 
	`°rchr
(
FLAGS
, *pË!
NULL
)Ö++;

983 i‡((
size_t
)(
p
 - 
°r‰mt
Ë>(
FLAGS
)/())

984 
	`luaL_îr‹
(
L
, "invalid format (repeated flags)");

985 i‡(
	`isdigô
(
	`uch¨
(*
p
)))Ö++;

986 i‡(
	`isdigô
(
	`uch¨
(*
p
)))Ö++;

987 i‡(*
p
 == '.') {

988 
p
++;

989 i‡(
	`isdigô
(
	`uch¨
(*
p
)))Ö++;

990 i‡(
	`isdigô
(
	`uch¨
(*
p
)))Ö++;

992 i‡(
	`isdigô
(
	`uch¨
(*
p
)))

993 
	`luaL_îr‹
(
L
, "invalid format (width orÖrecisionÅooÜong)");

994 *(
f‹m
++) = '%';

995 
	`mem˝y
(
f‹m
, 
°r‰mt
, ((
p
 - strfrmt) + 1) * ());

996 
f‹m
 +(
p
 - 
°r‰mt
) + 1;

997 *
f‹m
 = '\0';

998  
p
;

999 
	}
}

1005 
	$addÀnmod
 (*
f‹m
, c⁄° *
Ànmod
) {

1006 
size_t
 
l
 = 
	`°æí
(
f‹m
);

1007 
size_t
 
lm
 = 
	`°æí
(
Ànmod
);

1008 
•ec
 = 
f‹m
[
l
 - 1];

1009 
	`°r˝y
(
f‹m
 + 
l
 - 1, 
Ànmod
);

1010 
f‹m
[
l
 + 
lm
 - 1] = 
•ec
;

1011 
f‹m
[
l
 + 
lm
] = '\0';

1012 
	}
}

1015 
	$°r_f‹m©
 (
lua_Sèã
 *
L
) {

1016 
t›
 = 
	`lua_gët›
(
L
);

1017 
¨g
 = 1;

1018 
size_t
 
sÊ
;

1019 c⁄° *
°r‰mt
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
sÊ
);

1020 c⁄° *
°r‰mt_íd
 = 
°r‰mt
+
sÊ
;

1021 
luaL_Buf„r
 
b
;

1022 
	`luaL_bufföô
(
L
, &
b
);

1023 
°r‰mt
 < 
°r‰mt_íd
) {

1024 i‡(*
°r‰mt
 !
L_ESC
)

1025 
	`luaL_addch¨
(&
b
, *
°r‰mt
++);

1026 i‡(*++
°r‰mt
 =
L_ESC
)

1027 
	`luaL_addch¨
(&
b
, *
°r‰mt
++);

1029 
f‹m
[
MAX_FORMAT
];

1030 *
buff
 = 
	`luaL_¥ïbuffsize
(&
b
, 
MAX_ITEM
);

1031 
nb
 = 0;

1032 i‡(++
¨g
 > 
t›
)

1033 
	`luaL_¨gîr‹
(
L
, 
¨g
, "no value");

1034 
°r‰mt
 = 
	`sˇnf‹m©
(
L
, så‰mt, 
f‹m
);

1035 *
°r‰mt
++) {

1037 
nb
 = 
	`l_•rötf
(
buff
, 
MAX_ITEM
, 
f‹m
, ()
	`luaL_checköãgî
(
L
, 
¨g
));

1042 
lua_I¡egî
 
n
 = 
	`luaL_checköãgî
(
L
, 
¨g
);

1043 
	`addÀnmod
(
f‹m
, 
LUA_INTEGER_FRMLEN
);

1044 
nb
 = 
	`l_•rötf
(
buff
, 
MAX_ITEM
, 
f‹m
, 
n
);

1048 
	`addÀnmod
(
f‹m
, 
LUA_NUMBER_FRMLEN
);

1049 
nb
 = 
	`lua_numbî2°rx
(
L
, 
buff
, 
MAX_ITEM
, 
f‹m
,

1050 
	`luaL_checknumbî
(
L
, 
¨g
));

1054 
	`addÀnmod
(
f‹m
, 
LUA_NUMBER_FRMLEN
);

1055 
nb
 = 
	`l_•rötf
(
buff
, 
MAX_ITEM
, 
f‹m
, 
	`luaL_checknumbî
(
L
, 
¨g
));

1059 
	`addlôîÆ
(
L
, &
b
, 
¨g
);

1063 
size_t
 
l
;

1064 c⁄° *
s
 = 
	`luaL_tﬁ°rög
(
L
, 
¨g
, &
l
);

1065 i‡(
f‹m
[2] == '\0')

1066 
	`luaL_addvÆue
(&
b
);

1068 
	`luaL_¨gcheck
(
L
, 
l
 =
	`°æí
(
s
), 
¨g
, "string contains zeros");

1069 i‡(!
	`°rchr
(
f‹m
, '.'Ë&& 
l
 >= 100) {

1071 
	`luaL_addvÆue
(&
b
);

1074 
nb
 = 
	`l_•rötf
(
buff
, 
MAX_ITEM
, 
f‹m
, 
s
);

1075 
	`lua_p›
(
L
, 1);

1081  
	`luaL_îr‹
(
L
, "invalid option '%%%c'Åo 'format'",

1082 *(
°r‰mt
 - 1));

1085 
	`lua_as£π
(
nb
 < 
MAX_ITEM
);

1086 
	`luaL_addsize
(&
b
, 
nb
);

1089 
	`luaL_pushªsu…
(&
b
);

1091 
	}
}

1104 #i‡!
deföed
(
LUAL_PACKPADBYTE
)

1105 
	#LUAL_PACKPADBYTE
 0x00

	)

1109 
	#MAXINTSIZE
 16

	)

1112 
	#NB
 
CHAR_BIT


	)

1115 
	#MC
 ((1 << 
NB
Ë- 1)

	)

1118 
	#SZINT
 (()(
lua_I¡egî
))

	)

1123 
	mdummy
;

1124 
	mlôée
;

1125 } 
	g«tivìndün
 = {1};

1129 
	scD
 {

1130 
	mc
;

1131 uni⁄ { 
	md
; *
	mp
; 
lua_I¡egî
 
	mi
; 
lua_Numbî
 
	mn
; } 
	mu
;

1134 
	#MAXALIGN
 (
	`off£tof
(
cD
, 
u
))

	)

1140 
	uFty≥s
 {

1141 
	mf
;

1142 
	md
;

1143 
lua_Numbî
 
	mn
;

1144 
	mbuff
[5 * (
lua_Numbî
)];

1145 } 
	tFty≥s
;

1151 
	sHódî
 {

1152 
lua_Sèã
 *
	mL
;

1153 
	mi¶ôée
;

1154 
	mmaxÆign
;

1155 } 
	tHódî
;

1161 
	eKO±i⁄
 {

1162 
	mKöt
,

1163 
	mKuöt
,

1164 
	mKÊﬂt
,

1165 
	mKch¨
,

1166 
	mK°rög
,

1167 
	mKz°r
,

1168 
	mK∑ddög
,

1169 
	mK∑ddÆign
,

1170 
	mKn›


1171 } 
	tKO±i⁄
;

1178 
	$digô
 (
c
Ë{  '0' <¯&& c <'9'; 
	}
}

1180 
	$gënum
 (c⁄° **
fmt
, 
df
) {

1181 i‡(!
	`digô
(**
fmt
))

1182  
df
;

1184 
a
 = 0;

1186 
a
 =á*10 + (*((*
fmt
)++) - '0');

1187 } 
	`digô
(**
fmt
Ë&& 
a
 <(()
MAXSIZE
 - 9)/10);

1188  
a
;

1190 
	}
}

1197 
	$gënumlimô
 (
Hódî
 *
h
, c⁄° **
fmt
, 
df
) {

1198 
sz
 = 
	`gënum
(
fmt
, 
df
);

1199 i‡(
sz
 > 
MAXINTSIZE
 || sz <= 0)

1200 
	`luaL_îr‹
(
h
->
L
, "integral size (%d) out ofÜimits [1,%d]",

1201 
sz
, 
MAXINTSIZE
);

1202  
sz
;

1203 
	}
}

1209 
	$öôhódî
 (
lua_Sèã
 *
L
, 
Hódî
 *
h
) {

1210 
h
->
L
 = L;

1211 
h
->
i¶ôée
 = 
«tivìndün
.
lôée
;

1212 
h
->
maxÆign
 = 1;

1213 
	}
}

1219 
KO±i⁄
 
	$gë›ti⁄
 (
Hódî
 *
h
, c⁄° **
fmt
, *
size
) {

1220 
›t
 = *((*
fmt
)++);

1221 *
size
 = 0;

1222 
›t
) {

1223 'b': *
size
 = ();  
Köt
;

1224 'B': *
size
 = ();  
Kuöt
;

1225 'h': *
size
 = ();  
Köt
;

1226 'H': *
size
 = ();  
Kuöt
;

1227 'l': *
size
 = ();  
Köt
;

1228 'L': *
size
 = ();  
Kuöt
;

1229 'j': *
size
 = (
lua_I¡egî
);  
Köt
;

1230 'J': *
size
 = (
lua_I¡egî
);  
Kuöt
;

1231 'T': *
size
 = (
size_t
);  
Kuöt
;

1232 'f': *
size
 = ();  
KÊﬂt
;

1233 'd': *
size
 = ();  
KÊﬂt
;

1234 'n': *
size
 = (
lua_Numbî
);  
KÊﬂt
;

1235 'i': *
size
 = 
	`gënumlimô
(
h
, 
fmt
, ());  
Köt
;

1236 'I': *
size
 = 
	`gënumlimô
(
h
, 
fmt
, ());  
Kuöt
;

1237 's': *
size
 = 
	`gënumlimô
(
h
, 
fmt
, (
size_t
));  
K°rög
;

1239 *
size
 = 
	`gënum
(
fmt
, -1);

1240 i‡(*
size
 == -1)

1241 
	`luaL_îr‹
(
h
->
L
, "missing size for format option 'c'");

1242  
Kch¨
;

1243 'z':  
Kz°r
;

1244 'x': *
size
 = 1;  
K∑ddög
;

1245 'X':  
K∑ddÆign
;

1247 '<': 
h
->
i¶ôée
 = 1; ;

1248 '>': 
h
->
i¶ôée
 = 0; ;

1249 '=': 
h
->
i¶ôée
 = 
«tivìndün
.
lôée
; ;

1250 '!': 
h
->
maxÆign
 = 
	`gënumlimô
(h, 
fmt
, 
MAXALIGN
); ;

1251 : 
	`luaL_îr‹
(
h
->
L
, "övÆid f‹m© o±i⁄ '%c'", 
›t
);

1253  
Kn›
;

1254 
	}
}

1266 
KO±i⁄
 
	$gëdëaûs
 (
Hódî
 *
h
, 
size_t
 
tŸÆsize
,

1267 c⁄° **
fmt
, *
psize
, *
¡ﬂlign
) {

1268 
KO±i⁄
 
›t
 = 
	`gë›ti⁄
(
h
, 
fmt
, 
psize
);

1269 
Æign
 = *
psize
;

1270 i‡(
›t
 =
K∑ddÆign
) {

1271 i‡(**
fmt
 ='\0' || 
	`gë›ti⁄
(
h
, fmt, &
Æign
Ë=
Kch¨
 ||álign == 0)

1272 
	`luaL_¨gîr‹
(
h
->
L
, 1, "invalidÇext option for option 'X'");

1274 i‡(
Æign
 <1 || 
›t
 =
Kch¨
)

1275 *
¡ﬂlign
 = 0;

1277 i‡(
Æign
 > 
h
->
maxÆign
)

1278 
Æign
 = 
h
->
maxÆign
;

1279 i‡((
Æign
 & (align - 1)) != 0)

1280 
	`luaL_¨gîr‹
(
h
->
L
, 1, "formatásks forálignmentÇotÖower of 2");

1281 *
¡ﬂlign
 = (
Æign
 - ()(
tŸÆsize
 & (align - 1))) & (align - 1);

1283  
›t
;

1284 
	}
}

1293 
	$∑cköt
 (
luaL_Buf„r
 *
b
, 
lua_Unsig√d
 
n
,

1294 
i¶ôée
, 
size
, 
√g
) {

1295 *
buff
 = 
	`luaL_¥ïbuffsize
(
b
, 
size
);

1296 
i
;

1297 
buff
[
i¶ôée
 ? 0 : 
size
 - 1] = ()(
n
 & 
MC
);

1298 
i
 = 1; i < 
size
; i++) {

1299 
n
 >>
NB
;

1300 
buff
[
i¶ôée
 ? 
i
 : 
size
 - 1 - i] = ()(
n
 & 
MC
);

1302 i‡(
√g
 && 
size
 > 
SZINT
) {

1303 
i
 = 
SZINT
; i < 
size
; i++)

1304 
buff
[
i¶ôée
 ? 
i
 : 
size
 - 1 - i] = ()
MC
;

1306 
	`luaL_addsize
(
b
, 
size
);

1307 
	}
}

1314 
	$c›ywôhídün
 (vﬁ©ûê*
de°
, vﬁ©ûêc⁄° *
§c
,

1315 
size
, 
i¶ôée
) {

1316 i‡(
i¶ôée
 =
«tivìndün
.
lôée
) {

1317 
size
-- != 0)

1318 *(
de°
++Ë*(
§c
++);

1321 
de°
 +
size
 - 1;

1322 
size
-- != 0)

1323 *(
de°
--Ë*(
§c
++);

1325 
	}
}

1328 
	$°r_∑ck
 (
lua_Sèã
 *
L
) {

1329 
luaL_Buf„r
 
b
;

1330 
Hódî
 
h
;

1331 c⁄° *
fmt
 = 
	`luaL_check°rög
(
L
, 1);

1332 
¨g
 = 1;

1333 
size_t
 
tŸÆsize
 = 0;

1334 
	`öôhódî
(
L
, &
h
);

1335 
	`lua_pushnû
(
L
);

1336 
	`luaL_bufföô
(
L
, &
b
);

1337 *
fmt
 != '\0') {

1338 
size
, 
¡ﬂlign
;

1339 
KO±i⁄
 
›t
 = 
	`gëdëaûs
(&
h
, 
tŸÆsize
, &
fmt
, &
size
, &
¡ﬂlign
);

1340 
tŸÆsize
 +
¡ﬂlign
 + 
size
;

1341 
¡ﬂlign
-- > 0)

1342 
	`luaL_addch¨
(&
b
, 
LUAL_PACKPADBYTE
);

1343 
¨g
++;

1344 
›t
) {

1345 
Köt
: {

1346 
lua_I¡egî
 
n
 = 
	`luaL_checköãgî
(
L
, 
¨g
);

1347 i‡(
size
 < 
SZINT
) {

1348 
lua_I¡egî
 
lim
 = (lua_I¡egî)1 << ((
size
 * 
NB
) - 1);

1349 
	`luaL_¨gcheck
(
L
, -
lim
 <
n
 &&Ç <Üim, 
¨g
, "integer overflow");

1351 
	`∑cköt
(&
b
, (
lua_Unsig√d
)
n
, 
h
.
i¶ôée
, 
size
, (n < 0));

1354 
Kuöt
: {

1355 
lua_I¡egî
 
n
 = 
	`luaL_checköãgî
(
L
, 
¨g
);

1356 i‡(
size
 < 
SZINT
)

1357 
	`luaL_¨gcheck
(
L
, (
lua_Unsig√d
)
n
 < (÷ua_Unsig√d)1 << (
size
 * 
NB
)),

1358 
¨g
, "unsigned overflow");

1359 
	`∑cköt
(&
b
, (
lua_Unsig√d
)
n
, 
h
.
i¶ôée
, 
size
, 0);

1362 
KÊﬂt
: {

1363 vﬁ©ûê
Fty≥s
 
u
;

1364 *
buff
 = 
	`luaL_¥ïbuffsize
(&
b
, 
size
);

1365 
lua_Numbî
 
n
 = 
	`luaL_checknumbî
(
L
, 
¨g
);

1366 i‡(
size
 =(
u
.
f
)Ëu.‡()
n
;

1367 i‡(
size
 =(
u
.
d
)Ëu.d = ()
n
;

1368 
u
.
n
 =Ç;

1370 
	`c›ywôhídün
(
buff
, 
u
.buff, 
size
, 
h
.
i¶ôée
);

1371 
	`luaL_addsize
(&
b
, 
size
);

1374 
Kch¨
: {

1375 
size_t
 
Àn
;

1376 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
Àn
);

1377 
	`luaL_¨gcheck
(
L
, 
Àn
 <(
size_t
)
size
, 
¨g
,

1379 
	`luaL_addl°rög
(&
b
, 
s
, 
Àn
);

1380 
Àn
++ < (
size_t
)
size
)

1381 
	`luaL_addch¨
(&
b
, 
LUAL_PACKPADBYTE
);

1384 
K°rög
: {

1385 
size_t
 
Àn
;

1386 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
Àn
);

1387 
	`luaL_¨gcheck
(
L
, 
size
 >()(
size_t
) ||

1388 
Àn
 < ((
size_t
)1 << (
size
 * 
NB
)),

1389 
¨g
, "stringÜength doesÇot fit in given size");

1390 
	`∑cköt
(&
b
, (
lua_Unsig√d
)
Àn
, 
h
.
i¶ôée
, 
size
, 0);

1391 
	`luaL_addl°rög
(&
b
, 
s
, 
Àn
);

1392 
tŸÆsize
 +
Àn
;

1395 
Kz°r
: {

1396 
size_t
 
Àn
;

1397 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
Àn
);

1398 
	`luaL_¨gcheck
(
L
, 
	`°æí
(
s
Ë=
Àn
, 
¨g
, "string contains zeros");

1399 
	`luaL_addl°rög
(&
b
, 
s
, 
Àn
);

1400 
	`luaL_addch¨
(&
b
, '\0');

1401 
tŸÆsize
 +
Àn
 + 1;

1404 
K∑ddög
: 
	`luaL_addch¨
(&
b
, 
LUAL_PACKPADBYTE
);

1405 
K∑ddÆign
: 
Kn›
:

1406 
¨g
--;

1410 
	`luaL_pushªsu…
(&
b
);

1412 
	}
}

1415 
	$°r_∑cksize
 (
lua_Sèã
 *
L
) {

1416 
Hódî
 
h
;

1417 c⁄° *
fmt
 = 
	`luaL_check°rög
(
L
, 1);

1418 
size_t
 
tŸÆsize
 = 0;

1419 
	`öôhódî
(
L
, &
h
);

1420 *
fmt
 != '\0') {

1421 
size
, 
¡ﬂlign
;

1422 
KO±i⁄
 
›t
 = 
	`gëdëaûs
(&
h
, 
tŸÆsize
, &
fmt
, &
size
, &
¡ﬂlign
);

1423 
size
 +
¡ﬂlign
;

1424 
	`luaL_¨gcheck
(
L
, 
tŸÆsize
 <
MAXSIZE
 - 
size
, 1,

1426 
tŸÆsize
 +
size
;

1427 
›t
) {

1428 
K°rög
:

1429 
Kz°r
:

1430 
	`luaL_¨gîr‹
(
L
, 1, "variable-length format");

1435 
	`lua_pushöãgî
(
L
, (
lua_I¡egî
)
tŸÆsize
);

1437 
	}
}

1448 
lua_I¡egî
 
	$u≈acköt
 (
lua_Sèã
 *
L
, c⁄° *
°r
,

1449 
i¶ôée
, 
size
, 
issig√d
) {

1450 
lua_Unsig√d
 
ªs
 = 0;

1451 
i
;

1452 
limô
 = (
size
 <
SZINT
) ? size : SZINT;

1453 
i
 = 
limô
 - 1; i >= 0; i--) {

1454 
ªs
 <<
NB
;

1455 
ªs
 |(
lua_Unsig√d
)()
°r
[
i¶ôée
 ? 
i
 : 
size
 - 1 - i];

1457 i‡(
size
 < 
SZINT
) {

1458 i‡(
issig√d
) {

1459 
lua_Unsig√d
 
mask
 = (lua_Unsig√d)1 << (
size
*
NB
 - 1);

1460 
ªs
 = (‘e†^ 
mask
) - mask);

1463 i‡(
size
 > 
SZINT
) {

1464 
mask
 = (!
issig√d
 || (
lua_I¡egî
)
ªs
 >0Ë? 0 : 
MC
;

1465 
i
 = 
limô
; i < 
size
; i++) {

1466 i‡(()
°r
[
i¶ôée
 ? 
i
 : 
size
 - 1 - i] !
mask
)

1467 
	`luaL_îr‹
(
L
, "%d-byã i¡egî d€†nŸ fô i¡ÿLu®I¡egî", 
size
);

1470  (
lua_I¡egî
)
ªs
;

1471 
	}
}

1474 
	$°r_u≈ack
 (
lua_Sèã
 *
L
) {

1475 
Hódî
 
h
;

1476 c⁄° *
fmt
 = 
	`luaL_check°rög
(
L
, 1);

1477 
size_t
 
ld
;

1478 c⁄° *
d©a
 = 
	`luaL_checkl°rög
(
L
, 2, &
ld
);

1479 
size_t
 
pos
 = (size_t)
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 3, 1), 
ld
) - 1;

1480 
n
 = 0;

1481 
	`luaL_¨gcheck
(
L
, 
pos
 <
ld
, 3, "initialÖosition out of string");

1482 
	`öôhódî
(
L
, &
h
);

1483 *
fmt
 != '\0') {

1484 
size
, 
¡ﬂlign
;

1485 
KO±i⁄
 
›t
 = 
	`gëdëaûs
(&
h
, 
pos
, &
fmt
, &
size
, &
¡ﬂlign
);

1486 i‡((
size_t
)
¡ﬂlign
 + 
size
 > ~
pos
 ||Öo†+Çtﬂlig¿+ sizê> 
ld
)

1487 
	`luaL_¨gîr‹
(
L
, 2, "data stringÅoo short");

1488 
pos
 +
¡ﬂlign
;

1490 
	`luaL_check°ack
(
L
, 2, "too manyÑesults");

1491 
n
++;

1492 
›t
) {

1493 
Köt
:

1494 
Kuöt
: {

1495 
lua_I¡egî
 
ªs
 = 
	`u≈acköt
(
L
, 
d©a
 + 
pos
, 
h
.
i¶ôée
, 
size
,

1496 (
›t
 =
Köt
));

1497 
	`lua_pushöãgî
(
L
, 
ªs
);

1500 
KÊﬂt
: {

1501 vﬁ©ûê
Fty≥s
 
u
;

1502 
lua_Numbî
 
num
;

1503 
	`c›ywôhídün
(
u
.
buff
, 
d©a
 + 
pos
, 
size
, 
h
.
i¶ôée
);

1504 i‡(
size
 =(
u
.
f
)Ë
num
 = (
lua_Numbî
)u.f;

1505 i‡(
size
 =(
u
.
d
)Ë
num
 = (
lua_Numbî
)u.d;

1506 
num
 = 
u
.
n
;

1507 
	`lua_pushnumbî
(
L
, 
num
);

1510 
Kch¨
: {

1511 
	`lua_pushl°rög
(
L
, 
d©a
 + 
pos
, 
size
);

1514 
K°rög
: {

1515 
size_t
 
Àn
 = (size_t)
	`u≈acköt
(
L
, 
d©a
 + 
pos
, 
h
.
i¶ôée
, 
size
, 0);

1516 
	`luaL_¨gcheck
(
L
, 
pos
 + 
Àn
 + 
size
 <
ld
, 2, "data stringÅoo short");

1517 
	`lua_pushl°rög
(
L
, 
d©a
 + 
pos
 + 
size
, 
Àn
);

1518 
pos
 +
Àn
;

1521 
Kz°r
: {

1522 
size_t
 
Àn
 = ()
	`°æí
(
d©a
 + 
pos
);

1523 
	`lua_pushl°rög
(
L
, 
d©a
 + 
pos
, 
Àn
);

1524 
pos
 +
Àn
 + 1;

1527 
K∑ddÆign
: 
K∑ddög
: 
Kn›
:

1528 
n
--;

1531 
pos
 +
size
;

1533 
	`lua_pushöãgî
(
L
, 
pos
 + 1);

1534  
n
 + 1;

1535 
	}
}

1540 c⁄° 
luaL_Reg
 
	g°æib
[] = {

1541 {"byã", 
°r_byã
},

1542 {"ch¨", 
°r_ch¨
},

1543 {"dump", 
°r_dump
},

1544 {"föd", 
°r_föd
},

1545 {"f‹m©", 
°r_f‹m©
},

1546 {"gm©ch", 
gm©ch
},

1547 {"gsub", 
°r_gsub
},

1548 {"Àn", 
°r_Àn
},

1549 {"lowî", 
°r_lowî
},

1550 {"m©ch", 
°r_m©ch
},

1551 {"ªp", 
°r_ªp
},

1552 {"ªvî£", 
°r_ªvî£
},

1553 {"sub", 
°r_sub
},

1554 {"uµî", 
°r_uµî
},

1555 {"∑ck", 
°r_∑ck
},

1556 {"∑cksize", 
°r_∑cksize
},

1557 {"u≈ack", 
°r_u≈ack
},

1558 {
NULL
, NULL}

1562 
	$¸óãmë©abÀ
 (
lua_Sèã
 *
L
) {

1563 
	`lua_¸óãèbÀ
(
L
, 0, 1);

1564 
	`lua_pushlôîÆ
(
L
, "");

1565 
	`lua_pushvÆue
(
L
, -2);

1566 
	`lua_£tmë©abÀ
(
L
, -2);

1567 
	`lua_p›
(
L
, 1);

1568 
	`lua_pushvÆue
(
L
, -2);

1569 
	`lua_£tfõld
(
L
, -2, "__index");

1570 
	`lua_p›
(
L
, 1);

1571 
	}
}

1577 
LUAMOD_API
 
	$lua›í_°rög
 (
lua_Sèã
 *
L
) {

1578 
	`luaL_√wlib
(
L
, 
°æib
);

1579 
	`¸óãmë©abÀ
(
L
);

1581 
	}
}

	@lua/src/ltable.c

7 
	#…abÀ_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

26 
	~<m©h.h
>

27 
	~<limôs.h
>

29 
	~"lua.h
"

31 
	~"ldebug.h
"

32 
	~"ldo.h
"

33 
	~"lgc.h
"

34 
	~"lmem.h
"

35 
	~"lobje˘.h
"

36 
	~"l°©e.h
"

37 
	~"l°rög.h
"

38 
	~"…abÀ.h
"

39 
	~"lvm.h
"

46 
	#MAXABITS
 
	`ˇ°_öt
((Ë* 
CHAR_BIT
 - 1)

	)

47 
	#MAXASIZE
 (1u << 
MAXABITS
)

	)

55 
	#MAXHBITS
 (
MAXABITS
 - 1)

	)

58 
	#hashpow2
(
t
,
n
Ë(
	`gnode
—, 
	`lmod
(“), 
	`sizíode
—))))

	)

60 
	#hash°r
(
t
,
°r
Ë
	`hashpow2
—, (°r)->
hash
)

	)

61 
	#hashboﬁón
(
t
,
p
Ë
	`hashpow2
—,Ö)

	)

62 
	#hashöt
(
t
,
i
Ë
	`hashpow2
—, i)

	)

69 
	#hashmod
(
t
,
n
Ë(
	`gnode
—, (“Ë% ((
	`sizíode
—)-1)|1))))

	)

72 
	#hashpoöãr
(
t
,
p
Ë
	`hashmod
—, 
	`poöt2uöt
’))

	)

75 
	#dummynode
 (&
dummynode_
)

	)

77 
	#isdummy
(
n
Ë(“Ë=
dummynode
)

	)

79 c⁄° 
Node
 
	gdummynode_
 = {

80 {
NILCONSTANT
},

81 {{
NILCONSTANT
, 0}}

98 #i‡!
deföed
(
l_hashÊﬂt
)

99 
	$l_hashÊﬂt
 (
lua_Numbî
 
n
) {

100 
i
;

101 
lua_I¡egî
 
ni
;

102 
n
 = 
	`l_m©h›
(
‰exp
)“, &
i
Ë* -
	`ˇ°_num
(
INT_MIN
);

103 i‡(!
	`lua_numbîtoöãgî
(
n
, &
ni
)) {

104 
	`lua_as£π
(
	`luai_numi¢™
(
n
Ë|| 
	`l_m©h›
(
Ábs
)“Ë=
	`ˇ°_num
(
HUGE_VAL
));

108 
u
 = 
	`ˇ°
(, 
i
Ë+ ca°(, 
ni
);

109  
	`ˇ°_öt
(
u
 <
	`ˇ°
(, 
INT_MAX
) ? u : ~u);

111 
	}
}

119 
Node
 *
	$maöposôi⁄
 (c⁄° 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

120 
	`ây≥
(
key
)) {

121 
LUA_TNUMINT
:

122  
	`hashöt
(
t
, 
	`ivÆue
(
key
));

123 
LUA_TNUMFLT
:

124  
	`hashmod
(
t
, 
	`l_hashÊﬂt
(
	`ÊtvÆue
(
key
)));

125 
LUA_TSHRSTR
:

126  
	`hash°r
(
t
, 
	`tsvÆue
(
key
));

127 
LUA_TLNGSTR
:

128  
	`hashpow2
(
t
, 
	`luaS_hashl⁄g°r
(
	`tsvÆue
(
key
)));

129 
LUA_TBOOLEAN
:

130  
	`hashboﬁón
(
t
, 
	`bvÆue
(
key
));

131 
LUA_TLIGHTUSERDATA
:

132  
	`hashpoöãr
(
t
, 
	`pvÆue
(
key
));

133 
LUA_TLCF
:

134  
	`hashpoöãr
(
t
, 
	`fvÆue
(
key
));

136 
	`lua_as£π
(!
	`âisdódkey
(
key
));

137  
	`hashpoöãr
(
t
, 
	`gcvÆue
(
key
));

139 
	}
}

146 
	$¨øyödex
 (c⁄° 
TVÆue
 *
key
) {

147 i‡(
	`âisöãgî
(
key
)) {

148 
lua_I¡egî
 
k
 = 
	`ivÆue
(
key
);

149 i‡(0 < 
k
 && (
lua_Unsig√d
)k <
MAXASIZE
)

150  
	`ˇ°
(, 
k
);

153 
	}
}

161 
	$födödex
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
StkId
 
key
) {

162 
i
;

163 i‡(
	`âi¢û
(
key
))  0;

164 
i
 = 
	`¨øyödex
(
key
);

165 i‡(
i
 !0 && i <
t
->
sizóºay
)

166  
i
;

168 
nx
;

169 
Node
 *
n
 = 
	`maöposôi⁄
(
t
, 
key
);

172 i‡(
	`luaV_øwequÆobj
(
	`gkey
(
n
), 
key
) ||

173 (
	`âisdódkey
(
	`gkey
(
n
)Ë&& 
	`iscﬁÀ˘abÀ
(
key
) &&

174 
	`dódvÆue
(
	`gkey
(
n
)Ë=
	`gcvÆue
(
key
))) {

175 
i
 = 
	`ˇ°_öt
(
n
 - 
	`gnode
(
t
, 0));

177  (
i
 + 1Ë+ 
t
->
sizóºay
;

179 
nx
 = 
	`g√xt
(
n
);

180 i‡(
nx
 == 0)

181 
	`luaG_ru√º‹
(
L
, "invalid keyÅo 'next'");

182 
n
 +
nx
;

185 
	}
}

188 
	$luaH_√xt
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
StkId
 
key
) {

189 
i
 = 
	`födödex
(
L
, 
t
, 
key
);

190 ; 
i
 < 
t
->
sizóºay
; i++) {

191 i‡(!
	`âi¢û
(&
t
->
¨øy
[
i
])) {

192 
	`£tivÆue
(
key
, 
i
 + 1);

193 
	`£tobj2s
(
L
, 
key
+1, &
t
->
¨øy
[
i
]);

197 
i
 -
t
->
sizóºay
; 
	`ˇ°_öt
(iË< 
	`sizíode
(t); i++) {

198 i‡(!
	`âi¢û
(
	`gvÆ
(
	`gnode
(
t
, 
i
)))) {

199 
	`£tobj2s
(
L
, 
key
, 
	`gkey
(
	`gnode
(
t
, 
i
)));

200 
	`£tobj2s
(
L
, 
key
+1, 
	`gvÆ
(
	`gnode
(
t
, 
i
)));

205 
	}
}

221 
	$compuãsizes
 (
nums
[], *
≤a
) {

222 
i
;

223 
twŸoi
;

224 
a
 = 0;

225 
«
 = 0;

226 
›timÆ
 = 0;

228 
i
 = 0, 
twŸoi
 = 1; *
≤a
 >Åwotoi / 2; i++,Åwotoi *= 2) {

229 i‡(
nums
[
i
] > 0) {

230 
a
 +
nums
[
i
];

231 i‡(
a
 > 
twŸoi
/2) {

232 
›timÆ
 = 
twŸoi
;

233 
«
 = 
a
;

237 
	`lua_as£π
((
›timÆ
 =0 || o±imÆ / 2 < 
«
) &&Ça <= optimal);

238 *
≤a
 = 
«
;

239  
›timÆ
;

240 
	}
}

243 
	$cou¡öt
 (c⁄° 
TVÆue
 *
key
, *
nums
) {

244 
k
 = 
	`¨øyödex
(
key
);

245 i‡(
k
 != 0) {

246 
nums
[
	`luaO_˚ûlog2
(
k
)]++;

251 
	}
}

259 
	$numu£¨øy
 (c⁄° 
TabÀ
 *
t
, *
nums
) {

260 
lg
;

261 
âlg
;

262 
au£
 = 0;

263 
i
 = 1;

265 
lg
 = 0, 
âlg
 = 1;Üg <
MAXABITS
;Üg++,Åtlg *= 2) {

266 
lc
 = 0;

267 
lim
 = 
âlg
;

268 i‡(
lim
 > 
t
->
sizóºay
) {

269 
lim
 = 
t
->
sizóºay
;

270 i‡(
i
 > 
lim
)

274 ; 
i
 <
lim
; i++) {

275 i‡(!
	`âi¢û
(&
t
->
¨øy
[
i
-1]))

276 
lc
++;

278 
nums
[
lg
] +
lc
;

279 
au£
 +
lc
;

281  
au£
;

282 
	}
}

285 
	$numu£hash
 (c⁄° 
TabÀ
 *
t
, *
nums
, *
≤a
) {

286 
tŸÆu£
 = 0;

287 
au£
 = 0;

288 
i
 = 
	`sizíode
(
t
);

289 
i
--) {

290 
Node
 *
n
 = &
t
->
node
[
i
];

291 i‡(!
	`âi¢û
(
	`gvÆ
(
n
))) {

292 
au£
 +
	`cou¡öt
(
	`gkey
(
n
), 
nums
);

293 
tŸÆu£
++;

296 *
≤a
 +
au£
;

297  
tŸÆu£
;

298 
	}
}

301 
	$£èºayve˘‹
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
size
) {

302 
i
;

303 
	`luaM_ªÆlocve˘‹
(
L
, 
t
->
¨øy
,Å->
sizóºay
, 
size
, 
TVÆue
);

304 
i
=
t
->
sizóºay
; i<
size
; i++)

305 
	`£äûvÆue
(&
t
->
¨øy
[
i
]);

306 
t
->
sizóºay
 = 
size
;

307 
	}
}

310 
	$£äodeve˘‹
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
size
) {

311 
lsize
;

312 i‡(
size
 == 0) {

313 
t
->
node
 = 
	`ˇ°
(
Node
 *, 
dummynode
);

314 
lsize
 = 0;

317 
i
;

318 
lsize
 = 
	`luaO_˚ûlog2
(
size
);

319 i‡(
lsize
 > 
MAXHBITS
)

320 
	`luaG_ru√º‹
(
L
, "table overflow");

321 
size
 = 
	`twŸo
(
lsize
);

322 
t
->
node
 = 
	`luaM_√wve˘‹
(
L
, 
size
, 
Node
);

323 
i
 = 0; i < ()
size
; i++) {

324 
Node
 *
n
 = 
	`gnode
(
t
, 
i
);

325 
	`g√xt
(
n
) = 0;

326 
	`£äûvÆue
(
	`wgkey
(
n
));

327 
	`£äûvÆue
(
	`gvÆ
(
n
));

330 
t
->
lsizíode
 = 
	`ˇ°_byã
(
lsize
);

331 
t
->
œ°‰ì
 = 
	`gnode
—, 
size
);

332 
	}
}

335 
	$luaH_ªsize
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
«size
,

336 
nhsize
) {

337 
i
;

338 
j
;

339 
ﬁdasize
 = 
t
->
sizóºay
;

340 
ﬁdhsize
 = 
t
->
lsizíode
;

341 
Node
 *
nﬁd
 = 
t
->
node
;

342 i‡(
«size
 > 
ﬁdasize
)

343 
	`£èºayve˘‹
(
L
, 
t
, 
«size
);

345 
	`£äodeve˘‹
(
L
, 
t
, 
nhsize
);

346 i‡(
«size
 < 
ﬁdasize
) {

347 
t
->
sizóºay
 = 
«size
;

349 
i
=
«size
; i<
ﬁdasize
; i++) {

350 i‡(!
	`âi¢û
(&
t
->
¨øy
[
i
]))

351 
	`luaH_£töt
(
L
, 
t
, 
i
 + 1, &t->
¨øy
[i]);

354 
	`luaM_ªÆlocve˘‹
(
L
, 
t
->
¨øy
, 
ﬁdasize
, 
«size
, 
TVÆue
);

357 
j
 = 
	`twŸo
(
ﬁdhsize
) - 1; j >= 0; j--) {

358 
Node
 *
ﬁd
 = 
nﬁd
 + 
j
;

359 i‡(!
	`âi¢û
(
	`gvÆ
(
ﬁd
))) {

362 
	`£tobjt2t
(
L
, 
	`luaH_£t
(L, 
t
, 
	`gkey
(
ﬁd
)), 
	`gvÆ
(old));

365 i‡(!
	`isdummy
(
nﬁd
))

366 
	`luaM_‰ì¨øy
(
L
, 
nﬁd
, 
	`ˇ°
(
size_t
, 
	`twŸo
(
ﬁdhsize
)));

367 
	}
}

370 
	$luaH_ªsizóºay
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
«size
) {

371 
nsize
 = 
	`isdummy
(
t
->
node
Ë? 0 : 
	`sizíode
(t);

372 
	`luaH_ªsize
(
L
, 
t
, 
«size
, 
nsize
);

373 
	}
}

378 
	$ªhash
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
ek
) {

379 
asize
;

380 
«
;

381 
nums
[
MAXABITS
 + 1];

382 
i
;

383 
tŸÆu£
;

384 
i
 = 0; i <
MAXABITS
; i++Ë
nums
[i] = 0;

385 
«
 = 
	`numu£¨øy
(
t
, 
nums
);

386 
tŸÆu£
 = 
«
;

387 
tŸÆu£
 +
	`numu£hash
(
t
, 
nums
, &
«
);

389 
«
 +
	`cou¡öt
(
ek
, 
nums
);

390 
tŸÆu£
++;

392 
asize
 = 
	`compuãsizes
(
nums
, &
«
);

394 
	`luaH_ªsize
(
L
, 
t
, 
asize
, 
tŸÆu£
 - 
«
);

395 
	}
}

404 
TabÀ
 *
	$luaH_√w
 (
lua_Sèã
 *
L
) {

405 
GCObje˘
 *
o
 = 
	`luaC_√wobj
(
L
, 
LUA_TTABLE
, (
TabÀ
));

406 
TabÀ
 *
t
 = 
	`gco2t
(
o
);

407 
t
->
më©abÀ
 = 
NULL
;

408 
t
->
Êags
 = 
	`ˇ°_byã
(~0);

409 
t
->
¨øy
 = 
NULL
;

410 
t
->
sizóºay
 = 0;

411 
	`£äodeve˘‹
(
L
, 
t
, 0);

412  
t
;

413 
	}
}

416 
	$luaH_‰ì
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
) {

417 i‡(!
	`isdummy
(
t
->
node
))

418 
	`luaM_‰ì¨øy
(
L
, 
t
->
node
, 
	`ˇ°
(
size_t
, 
	`sizíode
(t)));

419 
	`luaM_‰ì¨øy
(
L
, 
t
->
¨øy
,Å->
sizóºay
);

420 
	`luaM_‰ì
(
L
, 
t
);

421 
	}
}

424 
Node
 *
	$gë‰ìpos
 (
TabÀ
 *
t
) {

425 
t
->
œ°‰ì
 >Å->
node
) {

426 
t
->
œ°‰ì
--;

427 i‡(
	`âi¢û
(
	`gkey
(
t
->
œ°‰ì
)))

428  
t
->
œ°‰ì
;

430  
NULL
;

431 
	}
}

442 
TVÆue
 *
	$luaH_√wkey
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

443 
Node
 *
mp
;

444 
TVÆue
 
aux
;

445 i‡(
	`âi¢û
(
key
)Ë
	`luaG_ru√º‹
(
L
, "table index isÇil");

446 i‡(
	`âisÊﬂt
(
key
)) {

447 
lua_I¡egî
 
k
;

448 i‡(
	`luaV_toöãgî
(
key
, &
k
, 0)) {

449 
	`£tivÆue
(&
aux
, 
k
);

450 
key
 = &
aux
;

452 i‡(
	`luai_numi¢™
(
	`ÊtvÆue
(
key
)))

453 
	`luaG_ru√º‹
(
L
, "table index is NaN");

455 
mp
 = 
	`maöposôi⁄
(
t
, 
key
);

456 i‡(!
	`âi¢û
(
	`gvÆ
(
mp
)Ë|| 
	`isdummy
(mp)) {

457 
Node
 *
Ÿhîn
;

458 
Node
 *
f
 = 
	`gë‰ìpos
(
t
);

459 i‡(
f
 =
NULL
) {

460 
	`ªhash
(
L
, 
t
, 
key
);

462  
	`luaH_£t
(
L
, 
t
, 
key
);

464 
	`lua_as£π
(!
	`isdummy
(
f
));

465 
Ÿhîn
 = 
	`maöposôi⁄
(
t
, 
	`gkey
(
mp
));

466 i‡(
Ÿhîn
 !
mp
) {

468 
Ÿhîn
 + 
	`g√xt
(ŸhînË!
mp
)

469 
Ÿhîn
 +
	`g√xt
(othern);

470 
	`g√xt
(
Ÿhîn
Ë
	`ˇ°_öt
(
f
 - othern);

471 *
f
 = *
mp
;

472 i‡(
	`g√xt
(
mp
) != 0) {

473 
	`g√xt
(
f
Ë+
	`ˇ°_öt
(
mp
 - f);

474 
	`g√xt
(
mp
) = 0;

476 
	`£äûvÆue
(
	`gvÆ
(
mp
));

480 i‡(
	`g√xt
(
mp
) != 0)

481 
	`g√xt
(
f
Ë
	`ˇ°_öt
((
mp
 + gnext(mp)) - f);

482 
	`lua_as£π
(
	`g√xt
(
f
) == 0);

483 
	`g√xt
(
mp
Ë
	`ˇ°_öt
(
f
 - mp);

484 
mp
 = 
f
;

487 
	`£äodekey
(
L
, &
mp
->
i_key
, 
key
);

488 
	`luaC_b¨rõrback
(
L
, 
t
, 
key
);

489 
	`lua_as£π
(
	`âi¢û
(
	`gvÆ
(
mp
)));

490  
	`gvÆ
(
mp
);

491 
	}
}

497 c⁄° 
TVÆue
 *
	$luaH_gëöt
 (
TabÀ
 *
t
, 
lua_I¡egî
 
key
) {

499 i‡(
	`l_ˇ°S2U
(
key
Ë- 1 < 
t
->
sizóºay
)

500  &
t
->
¨øy
[
key
 - 1];

502 
Node
 *
n
 = 
	`hashöt
(
t
, 
key
);

504 i‡(
	`âisöãgî
(
	`gkey
(
n
)Ë&& 
	`ivÆue
(gkey“)Ë=
key
)

505  
	`gvÆ
(
n
);

507 
nx
 = 
	`g√xt
(
n
);

508 i‡(
nx
 == 0) ;

509 
n
 +
nx
;

512  
luaO_nûobje˘
;

514 
	}
}

520 c⁄° 
TVÆue
 *
	$luaH_gësh‹t°r
 (
TabÀ
 *
t
, 
TSåög
 *
key
) {

521 
Node
 *
n
 = 
	`hash°r
(
t
, 
key
);

522 
	`lua_as£π
(
key
->
â
 =
LUA_TSHRSTR
);

524 c⁄° 
TVÆue
 *
k
 = 
	`gkey
(
n
);

525 i‡(
	`âisshr°rög
(
k
Ë&& 
	`eqshr°r
(
	`tsvÆue
(k), 
key
))

526  
	`gvÆ
(
n
);

528 
nx
 = 
	`g√xt
(
n
);

529 i‡(
nx
 == 0)

530  
luaO_nûobje˘
;

531 
n
 +
nx
;

534 
	}
}

541 c⁄° 
TVÆue
 *
	$gëgíîic
 (
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

542 
Node
 *
n
 = 
	`maöposôi⁄
(
t
, 
key
);

544 i‡(
	`luaV_øwequÆobj
(
	`gkey
(
n
), 
key
))

545  
	`gvÆ
(
n
);

547 
nx
 = 
	`g√xt
(
n
);

548 i‡(
nx
 == 0)

549  
luaO_nûobje˘
;

550 
n
 +
nx
;

553 
	}
}

556 c⁄° 
TVÆue
 *
	$luaH_gë°r
 (
TabÀ
 *
t
, 
TSåög
 *
key
) {

557 i‡(
key
->
â
 =
LUA_TSHRSTR
)

558  
	`luaH_gësh‹t°r
(
t
, 
key
);

560 
TVÆue
 
ko
;

561 
	`£tsvÆue
(
	`ˇ°
(
lua_Sèã
 *, 
NULL
), &
ko
, 
key
);

562  
	`gëgíîic
(
t
, &
ko
);

564 
	}
}

570 c⁄° 
TVÆue
 *
	$luaH_gë
 (
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

571 
	`ây≥
(
key
)) {

572 
LUA_TSHRSTR
:  
	`luaH_gësh‹t°r
(
t
, 
	`tsvÆue
(
key
));

573 
LUA_TNUMINT
:  
	`luaH_gëöt
(
t
, 
	`ivÆue
(
key
));

574 
LUA_TNIL
:  
luaO_nûobje˘
;

575 
LUA_TNUMFLT
: {

576 
lua_I¡egî
 
k
;

577 i‡(
	`luaV_toöãgî
(
key
, &
k
, 0))

578  
	`luaH_gëöt
(
t
, 
k
);

582  
	`gëgíîic
(
t
, 
key
);

584 
	}
}

591 
TVÆue
 *
	$luaH_£t
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

592 c⁄° 
TVÆue
 *
p
 = 
	`luaH_gë
(
t
, 
key
);

593 i‡(
p
 !
luaO_nûobje˘
)

594  
	`ˇ°
(
TVÆue
 *, 
p
);

595  
	`luaH_√wkey
(
L
, 
t
, 
key
);

596 
	}
}

599 
	$luaH_£töt
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
lua_I¡egî
 
key
, 
TVÆue
 *
vÆue
) {

600 c⁄° 
TVÆue
 *
p
 = 
	`luaH_gëöt
(
t
, 
key
);

601 
TVÆue
 *
˚Œ
;

602 i‡(
p
 !
luaO_nûobje˘
)

603 
˚Œ
 = 
	`ˇ°
(
TVÆue
 *, 
p
);

605 
TVÆue
 
k
;

606 
	`£tivÆue
(&
k
, 
key
);

607 
˚Œ
 = 
	`luaH_√wkey
(
L
, 
t
, &
k
);

609 
	`£tobj2t
(
L
, 
˚Œ
, 
vÆue
);

610 
	}
}

613 
	$unbound_£¨ch
 (
TabÀ
 *
t
, 
j
) {

614 
i
 = 
j
;

615 
j
++;

617 !
	`âi¢û
(
	`luaH_gëöt
(
t
, 
j
))) {

618 
i
 = 
j
;

619 i‡(
j
 > 
	`ˇ°
(, 
MAX_INT
)/2) {

621 
i
 = 1;

622 !
	`âi¢û
(
	`luaH_gëöt
(
t
, 
i
))) i++;

623  
i
 - 1;

625 
j
 *= 2;

628 
j
 - 
i
 > 1) {

629 
m
 = (
i
+
j
)/2;

630 i‡(
	`âi¢û
(
	`luaH_gëöt
(
t
, 
m
))Ë
j
 = m;

631 
i
 = 
m
;

633  
i
;

634 
	}
}

641 
	$luaH_gën
 (
TabÀ
 *
t
) {

642 
j
 = 
t
->
sizóºay
;

643 i‡(
j
 > 0 && 
	`âi¢û
(&
t
->
¨øy
[j - 1])) {

645 
i
 = 0;

646 
j
 - 
i
 > 1) {

647 
m
 = (
i
+
j
)/2;

648 i‡(
	`âi¢û
(&
t
->
¨øy
[
m
 - 1])Ë
j
 = m;

649 
i
 = 
m
;

651  
i
;

654 i‡(
	`isdummy
(
t
->
node
))

655  
j
;

656  
	`unbound_£¨ch
(
t
, 
j
);

657 
	}
}

661 #i‡
deföed
(
LUA_DEBUG
)

663 
Node
 *
	$luaH_maöposôi⁄
 (c⁄° 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

664  
	`maöposôi⁄
(
t
, 
key
);

665 
	}
}

667 
	$luaH_isdummy
 (
Node
 *
n
Ë{  
	`isdummy
“); 
	}
}

	@lua/src/ltable.h

7 #i‚de‡
…abÀ_h


8 
	#…abÀ_h


	)

10 
	~"lobje˘.h
"

13 
	#gnode
(
t
,
i
Ë(&—)->
node
[i])

	)

14 
	#gvÆ
(
n
Ë(&“)->
i_vÆ
)

	)

15 
	#g√xt
(
n
Ë(“)->
i_key
.
nk
.
√xt
)

	)

19 
	#gkey
(
n
Ë
	`ˇ°
(c⁄° 
TVÆue
*, (&“)->
i_key
.
tvk
))

	)

25 
	#wgkey
(
n
Ë(&“)->
i_key
.
nk
)

	)

27 
	#övÆid©eTMˇche
(
t
Ë(—)->
Êags
 = 0)

	)

31 
	#key‰omvÆ
(
v
) \

32 (
	`gkey
(
	`ˇ°
(
Node
 *, ca°(*, (
v
)Ë- 
	`off£tof
(Node, 
i_vÆ
))))

	)

35 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaH_gëöt
 (
TabÀ
 *
t
, 
lua_I¡egî
 
key
);

36 
LUAI_FUNC
 
luaH_£töt
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
lua_I¡egî
 
key
,

37 
TVÆue
 *
vÆue
);

38 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaH_gësh‹t°r
 (
TabÀ
 *
t
, 
TSåög
 *
key
);

39 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaH_gë°r
 (
TabÀ
 *
t
, 
TSåög
 *
key
);

40 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaH_gë
 (
TabÀ
 *
t
, c⁄° TVÆuê*
key
);

41 
LUAI_FUNC
 
TVÆue
 *
luaH_√wkey
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° TVÆuê*
key
);

42 
LUAI_FUNC
 
TVÆue
 *
luaH_£t
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° TVÆuê*
key
);

43 
LUAI_FUNC
 
TabÀ
 *
luaH_√w
 (
lua_Sèã
 *
L
);

44 
LUAI_FUNC
 
luaH_ªsize
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
«size
,

45 
nhsize
);

46 
LUAI_FUNC
 
luaH_ªsizóºay
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
«size
);

47 
LUAI_FUNC
 
luaH_‰ì
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
);

48 
LUAI_FUNC
 
luaH_√xt
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
StkId
 
key
);

49 
LUAI_FUNC
 
luaH_gën
 (
TabÀ
 *
t
);

52 #i‡
deföed
(
LUA_DEBUG
)

53 
LUAI_FUNC
 
Node
 *
luaH_maöposôi⁄
 (c⁄° 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
);

54 
LUAI_FUNC
 
luaH_isdummy
 (
Node
 *
n
);

	@lua/src/ltablib.c

7 
	#…ablib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<limôs.h
>

14 
	~<°ddef.h
>

15 
	~<°rög.h
>

17 
	~"lua.h
"

19 
	~"œuxlib.h
"

20 
	~"luÆib.h
"

27 
	#TAB_R
 1

	)

28 
	#TAB_W
 2

	)

29 
	#TAB_L
 4

	)

30 
	#TAB_RW
 (
TAB_R
 | 
TAB_W
Ë

	)

33 
	#aux_gën
(
L
,
n
,
w
Ë(
	`checkèb
(L,Ç, (wË| 
TAB_L
), 
	`luaL_Àn
(L,Ç))

	)

36 
	$checkfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
, 
n
) {

37 
	`lua_push°rög
(
L
, 
key
);

38  (
	`lua_øwgë
(
L
, -
n
Ë!
LUA_TNIL
);

39 
	}
}

46 
	$checkèb
 (
lua_Sèã
 *
L
, 
¨g
, 
wh©
) {

47 i‡(
	`lua_ty≥
(
L
, 
¨g
Ë!
LUA_TTABLE
) {

48 
n
 = 1;

49 i‡(
	`lua_gëmë©abÀ
(
L
, 
¨g
) &&

50 (!(
wh©
 & 
TAB_R
Ë|| 
	`checkfõld
(
L
, "__ödex", ++
n
)) &&

51 (!(
wh©
 & 
TAB_W
Ë|| 
	`checkfõld
(
L
, "__√wödex", ++
n
)) &&

52 (!(
wh©
 & 
TAB_L
Ë|| 
	`checkfõld
(
L
, "__Àn", ++
n
))) {

53 
	`lua_p›
(
L
, 
n
);

56 
	`luaL_checkty≥
(
L
, 
¨g
, 
LUA_TTABLE
);

58 
	}
}

61 #i‡
deföed
(
LUA_COMPAT_MAXN
)

62 
	$maxn
 (
lua_Sèã
 *
L
) {

63 
lua_Numbî
 
max
 = 0;

64 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

65 
	`lua_pushnû
(
L
);

66 
	`lua_√xt
(
L
, 1)) {

67 
	`lua_p›
(
L
, 1);

68 i‡(
	`lua_ty≥
(
L
, -1Ë=
LUA_TNUMBER
) {

69 
lua_Numbî
 
v
 = 
	`lua_t⁄umbî
(
L
, -1);

70 i‡(
v
 > 
max
) max = v;

73 
	`lua_pushnumbî
(
L
, 
max
);

75 
	}
}

79 
	$tö£π
 (
lua_Sèã
 *
L
) {

80 
lua_I¡egî
 
e
 = 
	`aux_gën
(
L
, 1, 
TAB_RW
) + 1;

81 
lua_I¡egî
 
pos
;

82 
	`lua_gët›
(
L
)) {

84 
pos
 = 
e
;

88 
lua_I¡egî
 
i
;

89 
pos
 = 
	`luaL_checköãgî
(
L
, 2);

90 
	`luaL_¨gcheck
(
L
, 1 <
pos
 &&Öo†<
e
, 2, "position out of bounds");

91 
i
 = 
e
; i > 
pos
; i--) {

92 
	`lua_gëi
(
L
, 1, 
i
 - 1);

93 
	`lua_£ti
(
L
, 1, 
i
);

98  
	`luaL_îr‹
(
L
, "wrongÇumber ofárgumentsÅo 'insert'");

101 
	`lua_£ti
(
L
, 1, 
pos
);

103 
	}
}

106 
	$åemove
 (
lua_Sèã
 *
L
) {

107 
lua_I¡egî
 
size
 = 
	`aux_gën
(
L
, 1, 
TAB_RW
);

108 
lua_I¡egî
 
pos
 = 
	`luaL_›töãgî
(
L
, 2, 
size
);

109 i‡(
pos
 !
size
)

110 
	`luaL_¨gcheck
(
L
, 1 <
pos
 &&Öo†<
size
 + 1, 1, "position out of bounds");

111 
	`lua_gëi
(
L
, 1, 
pos
);

112  ; 
pos
 < 
size
;Öos++) {

113 
	`lua_gëi
(
L
, 1, 
pos
 + 1);

114 
	`lua_£ti
(
L
, 1, 
pos
);

116 
	`lua_pushnû
(
L
);

117 
	`lua_£ti
(
L
, 1, 
pos
);

119 
	}
}

128 
	$tmove
 (
lua_Sèã
 *
L
) {

129 
lua_I¡egî
 
f
 = 
	`luaL_checköãgî
(
L
, 2);

130 
lua_I¡egî
 
e
 = 
	`luaL_checköãgî
(
L
, 3);

131 
lua_I¡egî
 
t
 = 
	`luaL_checköãgî
(
L
, 4);

132 
â
 = !
	`lua_i¢⁄e‹nû
(
L
, 5) ? 5 : 1;

133 
	`checkèb
(
L
, 1, 
TAB_R
);

134 
	`checkèb
(
L
, 
â
, 
TAB_W
);

135 i‡(
e
 >
f
) {

136 
lua_I¡egî
 
n
, 
i
;

137 
	`luaL_¨gcheck
(
L
, 
f
 > 0 || 
e
 < 
LUA_MAXINTEGER
 + f, 3,

139 
n
 = 
e
 - 
f
 + 1;

140 
	`luaL_¨gcheck
(
L
, 
t
 <
LUA_MAXINTEGER
 - 
n
 + 1, 4,

142 i‡(
t
 > 
e
 ||Å <
f
 || (
â
 !1 && !
	`lua_com∑ª
(
L
, 1,Åt, 
LUA_OPEQ
))) {

143 
i
 = 0; i < 
n
; i++) {

144 
	`lua_gëi
(
L
, 1, 
f
 + 
i
);

145 
	`lua_£ti
(
L
, 
â
, 
t
 + 
i
);

149 
i
 = 
n
 - 1; i >= 0; i--) {

150 
	`lua_gëi
(
L
, 1, 
f
 + 
i
);

151 
	`lua_£ti
(
L
, 
â
, 
t
 + 
i
);

155 
	`lua_pushvÆue
(
L
, 
â
);

157 
	}
}

160 
	$addfõld
 (
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
b
, 
lua_I¡egî
 
i
) {

161 
	`lua_gëi
(
L
, 1, 
i
);

162 i‡(!
	`lua_is°rög
(
L
, -1))

163 
	`luaL_îr‹
(
L
, "invalid value (%s)át index %d inÅable for 'concat'",

164 
	`luaL_ty≥«me
(
L
, -1), 
i
);

165 
	`luaL_addvÆue
(
b
);

166 
	}
}

169 
	$tc⁄ˇt
 (
lua_Sèã
 *
L
) {

170 
luaL_Buf„r
 
b
;

171 
lua_I¡egî
 
œ°
 = 
	`aux_gën
(
L
, 1, 
TAB_R
);

172 
size_t
 
l£p
;

173 c⁄° *
£p
 = 
	`luaL_›é°rög
(
L
, 2, "", &
l£p
);

174 
lua_I¡egî
 
i
 = 
	`luaL_›töãgî
(
L
, 3, 1);

175 
œ°
 = 
	`luaL_›töãgî
(
L
, 4,Üast);

176 
	`luaL_bufföô
(
L
, &
b
);

177 ; 
i
 < 
œ°
; i++) {

178 
	`addfõld
(
L
, &
b
, 
i
);

179 
	`luaL_addl°rög
(&
b
, 
£p
, 
l£p
);

181 i‡(
i
 =
œ°
)

182 
	`addfõld
(
L
, &
b
, 
i
);

183 
	`luaL_pushªsu…
(&
b
);

185 
	}
}

194 
	$∑ck
 (
lua_Sèã
 *
L
) {

195 
i
;

196 
n
 = 
	`lua_gët›
(
L
);

197 
	`lua_¸óãèbÀ
(
L
, 
n
, 1);

198 
	`lua_ö£π
(
L
, 1);

199 
i
 = 
n
; i >= 1; i--)

200 
	`lua_£ti
(
L
, 1, 
i
);

201 
	`lua_pushöãgî
(
L
, 
n
);

202 
	`lua_£tfõld
(
L
, 1, "n");

204 
	}
}

207 
	$u≈ack
 (
lua_Sèã
 *
L
) {

208 
lua_Unsig√d
 
n
;

209 
lua_I¡egî
 
i
 = 
	`luaL_›töãgî
(
L
, 2, 1);

210 
lua_I¡egî
 
e
 = 
	`luaL_›t
(
L
, 
luaL_checköãgî
, 3, 
	`luaL_Àn
(L, 1));

211 i‡(
i
 > 
e
)  0;

212 
n
 = (
lua_Unsig√d
)
e
 - 
i
;

213 i‡(
n
 >()
INT_MAX
 || !
	`lua_check°ack
(
L
, ()(++n)))

214  
	`luaL_îr‹
(
L
, "too manyÑesultsÅo unpack");

215 ; 
i
 < 
e
; i++) {

216 
	`lua_gëi
(
L
, 1, 
i
);

218 
	`lua_gëi
(
L
, 1, 
e
);

219  ()
n
;

220 
	}
}

236 
	tIdxT
;

245 #i‡!
deföed
(
l_øndomizePivŸ
)

247 
	~<time.h
>

250 
	#sof
(
e
Ë(”Ë/ ())

	)

258 
	$l_øndomizePivŸ
 () {

259 
˛ock_t
 
c
 = 
	`˛ock
();

260 
time_t
 
t
 = 
	`time
(
NULL
);

261 
buff
[
	`sof
(
c
Ë+ sof(
t
)];

262 
i
, 
∫d
 = 0;

263 
	`mem˝y
(
buff
, &
c
, 
	`sof
(c) * ());

264 
	`mem˝y
(
buff
 + 
	`sof
(
c
), &
t
, sof(t) * ());

265 
i
 = 0; i < 
	`sof
(
buff
); i++)

266 
∫d
 +
buff
[
i
];

267  
∫d
;

268 
	}
}

274 
	#RANLIMIT
 100u

	)

277 
	$£t2
 (
lua_Sèã
 *
L
, 
IdxT
 
i
, IdxT 
j
) {

278 
	`lua_£ti
(
L
, 1, 
i
);

279 
	`lua_£ti
(
L
, 1, 
j
);

280 
	}
}

287 
	$s‹t_comp
 (
lua_Sèã
 *
L
, 
a
, 
b
) {

288 i‡(
	`lua_i¢û
(
L
, 2))

289  
	`lua_com∑ª
(
L
, 
a
, 
b
, 
LUA_OPLT
);

291 
ªs
;

292 
	`lua_pushvÆue
(
L
, 2);

293 
	`lua_pushvÆue
(
L
, 
a
-1);

294 
	`lua_pushvÆue
(
L
, 
b
-2);

295 
	`lua_ˇŒ
(
L
, 2, 1);

296 
ªs
 = 
	`lua_toboﬁón
(
L
, -1);

297 
	`lua_p›
(
L
, 1);

298  
ªs
;

300 
	}
}

310 
IdxT
 
	$∑πôi⁄
 (
lua_Sèã
 *
L
, 
IdxT
 
lo
, IdxT 
up
) {

311 
IdxT
 
i
 = 
lo
;

312 
IdxT
 
j
 = 
up
 - 1;

316 
	`lua_gëi
(
L
, 1, ++
i
), 
	`s‹t_comp
(L, -1, -2)) {

317 i‡(
i
 =
up
 - 1)

318 
	`luaL_îr‹
(
L
, "invalid order function for sorting");

319 
	`lua_p›
(
L
, 1);

323 
	`lua_gëi
(
L
, 1, --
j
), 
	`s‹t_comp
(L, -3, -1)) {

324 i‡(
j
 < 
i
)

325 
	`luaL_îr‹
(
L
, "invalid order function for sorting");

326 
	`lua_p›
(
L
, 1);

329 i‡(
j
 < 
i
) {

331 
	`lua_p›
(
L
, 1);

333 
	`£t2
(
L
, 
up
 - 1, 
i
);

334  
i
;

337 
	`£t2
(
L
, 
i
, 
j
);

339 
	}
}

346 
IdxT
 
	$choo£PivŸ
 (
IdxT
 
lo
, IdxT 
up
, 
∫d
) {

347 
IdxT
 
r4
 = (
up
 - 
lo
) / 4;

348 
IdxT
 
p
 = 
∫d
 % (
r4
 * 2Ë+ (
lo
 +Ñ4);

349 
	`lua_as£π
(
lo
 + 
r4
 <
p
 &&Ö <
up
 -Ñ4);

350  
p
;

351 
	}
}

357 
	$auxs‹t
 (
lua_Sèã
 *
L
, 
IdxT
 
lo
, IdxT 
up
,

358 
∫d
) {

359 
lo
 < 
up
) {

360 
IdxT
 
p
;

361 
IdxT
 
n
;

363 
	`lua_gëi
(
L
, 1, 
lo
);

364 
	`lua_gëi
(
L
, 1, 
up
);

365 i‡(
	`s‹t_comp
(
L
, -1, -2))

366 
	`£t2
(
L
, 
lo
, 
up
);

368 
	`lua_p›
(
L
, 2);

369 i‡(
up
 - 
lo
 == 1)

371 i‡(
up
 - 
lo
 < 
RANLIMIT
 || 
∫d
 == 0)

372 
p
 = (
lo
 + 
up
)/2;

374 
p
 = 
	`choo£PivŸ
(
lo
, 
up
, 
∫d
);

375 
	`lua_gëi
(
L
, 1, 
p
);

376 
	`lua_gëi
(
L
, 1, 
lo
);

377 i‡(
	`s‹t_comp
(
L
, -2, -1))

378 
	`£t2
(
L
, 
p
, 
lo
);

380 
	`lua_p›
(
L
, 1);

381 
	`lua_gëi
(
L
, 1, 
up
);

382 i‡(
	`s‹t_comp
(
L
, -1, -2))

383 
	`£t2
(
L
, 
p
, 
up
);

385 
	`lua_p›
(
L
, 2);

387 i‡(
up
 - 
lo
 == 2)

389 
	`lua_gëi
(
L
, 1, 
p
);

390 
	`lua_pushvÆue
(
L
, -1);

391 
	`lua_gëi
(
L
, 1, 
up
 - 1);

392 
	`£t2
(
L
, 
p
, 
up
 - 1);

393 
p
 = 
	`∑πôi⁄
(
L
, 
lo
, 
up
);

395 i‡(
p
 - 
lo
 < 
up
 -Ö) {

396 
	`auxs‹t
(
L
, 
lo
, 
p
 - 1, 
∫d
);

397 
n
 = 
p
 - 
lo
;

398 
lo
 = 
p
 + 1;

401 
	`auxs‹t
(
L
, 
p
 + 1, 
up
, 
∫d
);

402 
n
 = 
up
 - 
p
;

403 
up
 = 
p
 - 1;

405 i‡((
up
 - 
lo
Ë/ 128 > 
n
)

406 
∫d
 = 
	`l_øndomizePivŸ
();

408 
	}
}

411 
	$s‹t
 (
lua_Sèã
 *
L
) {

412 
lua_I¡egî
 
n
 = 
	`aux_gën
(
L
, 1, 
TAB_RW
);

413 i‡(
n
 > 1) {

414 
	`luaL_¨gcheck
(
L
, 
n
 < 
INT_MAX
, 1, "arrayÅoo big");

415 i‡(!
	`lua_i¢⁄e‹nû
(
L
, 2))

416 
	`luaL_checkty≥
(
L
, 2, 
LUA_TFUNCTION
);

417 
	`lua_£â›
(
L
, 2);

418 
	`auxs‹t
(
L
, 1, (
IdxT
)
n
, 0);

421 
	}
}

426 c⁄° 
luaL_Reg
 
	gèb_funcs
[] = {

427 {"c⁄ˇt", 
tc⁄ˇt
},

428 #i‡
deföed
(
LUA_COMPAT_MAXN
)

429 {"maxn", 
maxn
},

431 {"ö£π", 
tö£π
},

432 {"∑ck", 
∑ck
},

433 {"u≈ack", 
u≈ack
},

434 {"ªmove", 
åemove
},

435 {"move", 
tmove
},

436 {"s‹t", 
s‹t
},

437 {
NULL
, NULL}

441 
LUAMOD_API
 
	$lua›í_èbÀ
 (
lua_Sèã
 *
L
) {

442 
	`luaL_√wlib
(
L
, 
èb_funcs
);

443 #i‡
	`deföed
(
LUA_COMPAT_UNPACK
)

445 
	`lua_gëfõld
(
L
, -1, "unpack");

446 
	`lua_£tglobÆ
(
L
, "unpack");

449 
	}
}

	@lua/src/ltm.c

7 
	#…m_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"ldebug.h
"

18 
	~"ldo.h
"

19 
	~"lobje˘.h
"

20 
	~"l°©e.h
"

21 
	~"l°rög.h
"

22 
	~"…abÀ.h
"

23 
	~"…m.h
"

24 
	~"lvm.h
"

27 c⁄° 
	gud©©y≥«me
[] = "userdata";

29 
LUAI_DDEF
 c⁄° *c⁄° 
	gluaT_ty≥«mes_
[
LUA_TOTALTAGS
] = {

31 "nû", "boﬁón", 
ud©©y≥«me
, "number",

32 "°rög", "èbÀ", "fun˘i⁄", 
ud©©y≥«me
, "thread",

37 
	$luaT_öô
 (
lua_Sèã
 *
L
) {

38 c⁄° *c⁄° 
luaT_evíäame
[] = {

47 
i
;

48 
i
=0; i<
TM_N
; i++) {

49 
	`G
(
L
)->
tm«me
[
i
] = 
	`luaS_√w
(L, 
luaT_evíäame
[i]);

50 
	`luaC_fix
(
L
, 
	`obj2gco
(
	`G
(L)->
tm«me
[
i
]));

52 
	}
}

59 c⁄° 
TVÆue
 *
	$luaT_gëtm
 (
TabÀ
 *
evíts
, 
TMS
 
evít
, 
TSåög
 *
íame
) {

60 c⁄° 
TVÆue
 *
tm
 = 
	`luaH_gësh‹t°r
(
evíts
, 
íame
);

61 
	`lua_as£π
(
evít
 <
TM_EQ
);

62 i‡(
	`âi¢û
(
tm
)) {

63 
evíts
->
Êags
 |
	`ˇ°_byã
(1u<<
evít
);

64  
NULL
;

66  
tm
;

67 
	}
}

70 c⁄° 
TVÆue
 *
	$luaT_gëtmbyobj
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
, 
TMS
 
evít
) {

71 
TabÀ
 *
mt
;

72 
	`ânov
(
o
)) {

73 
LUA_TTABLE
:

74 
mt
 = 
	`hvÆue
(
o
)->
më©abÀ
;

76 
LUA_TUSERDATA
:

77 
mt
 = 
	`uvÆue
(
o
)->
më©abÀ
;

80 
mt
 = 
	`G
(
L
)->mt[
	`ânov
(
o
)];

82  (
mt
 ? 
	`luaH_gësh‹t°r
(mt, 
	`G
(
L
)->
tm«me
[
evít
]Ë: 
luaO_nûobje˘
);

83 
	}
}

90 c⁄° *
	$luaT_objty≥«me
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
) {

91 
TabÀ
 *
mt
;

92 i‡((
	`âi°abÀ
(
o
Ë&& (
mt
 = 
	`hvÆue
(o)->
më©abÀ
Ë!
NULL
) ||

93 (
	`âisfuŒu£rd©a
(
o
Ë&& (
mt
 = 
	`uvÆue
(o)->
më©abÀ
Ë!
NULL
)) {

94 c⁄° 
TVÆue
 *
«me
 = 
	`luaH_gësh‹t°r
(
mt
, 
	`luaS_√w
(
L
, "__name"));

95 i‡(
	`âis°rög
(
«me
))

96  
	`gë°r
(
	`tsvÆue
(
«me
));

98  
	`ây≥«me
(
	`ânov
(
o
));

99 
	}
}

102 
	$luaT_ˇŒTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
f
, c⁄° TVÆuê*
p1
,

103 c⁄° 
TVÆue
 *
p2
, TVÆuê*
p3
, 
ha§es
) {

104 
±rdiff_t
 
ªsu…
 = 
	`ßve°ack
(
L
, 
p3
);

105 
StkId
 
func
 = 
L
->
t›
;

106 
	`£tobj2s
(
L
, 
func
, 
f
);

107 
	`£tobj2s
(
L
, 
func
 + 1, 
p1
);

108 
	`£tobj2s
(
L
, 
func
 + 2, 
p2
);

109 
L
->
t›
 += 3;

110 i‡(!
ha§es
)

111 
	`£tobj2s
(
L
, L->
t›
++, 
p3
);

113 i‡(
	`isLua
(
L
->
ci
))

114 
	`luaD_ˇŒ
(
L
, 
func
, 
ha§es
);

116 
	`luaD_ˇŒnoyõld
(
L
, 
func
, 
ha§es
);

117 i‡(
ha§es
) {

118 
p3
 = 
	`ª°‹e°ack
(
L
, 
ªsu…
);

119 
	`£tobjs2s
(
L
, 
p3
, --L->
t›
);

121 
	}
}

124 
	$luaT_ˇŒböTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

125 
StkId
 
ªs
, 
TMS
 
evít
) {

126 c⁄° 
TVÆue
 *
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
p1
, 
evít
);

127 i‡(
	`âi¢û
(
tm
))

128 
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
p2
, 
evít
);

129 i‡(
	`âi¢û
(
tm
))  0;

130 
	`luaT_ˇŒTM
(
L
, 
tm
, 
p1
, 
p2
, 
ªs
, 1);

132 
	}
}

135 
	$luaT_åyböTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

136 
StkId
 
ªs
, 
TMS
 
evít
) {

137 i‡(!
	`luaT_ˇŒböTM
(
L
, 
p1
, 
p2
, 
ªs
, 
evít
)) {

138 
evít
) {

139 
TM_CONCAT
:

140 
	`luaG_c⁄ˇãº‹
(
L
, 
p1
, 
p2
);

142 
TM_BAND
: 
TM_BOR
: 
TM_BXOR
:

143 
TM_SHL
: 
TM_SHR
: 
TM_BNOT
: {

144 
lua_Numbî
 
dummy
;

145 i‡(
	`t⁄umbî
(
p1
, &
dummy
Ë&&Å⁄umbî(
p2
, &dummy))

146 
	`luaG_toöãº‹
(
L
, 
p1
, 
p2
);

148 
	`luaG_›öãº‹
(
L
, 
p1
, 
p2
, "perform bitwise operation on");

152 
	`luaG_›öãº‹
(
L
, 
p1
, 
p2
, "performárithmetic on");

155 
	}
}

158 
	$luaT_ˇŒ‹dîTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

159 
TMS
 
evít
) {

160 i‡(!
	`luaT_ˇŒböTM
(
L
, 
p1
, 
p2
, L->
t›
, 
evít
))

163  !
	`l_isÁl£
(
L
->
t›
);

164 
	}
}

	@lua/src/ltm.h

7 #i‚de‡
…m_h


8 
	#…m_h


	)

11 
	~"lobje˘.h
"

19 
	mTM_INDEX
,

20 
	mTM_NEWINDEX
,

21 
	mTM_GC
,

22 
	mTM_MODE
,

23 
	mTM_LEN
,

24 
	mTM_EQ
,

25 
	mTM_ADD
,

26 
	mTM_SUB
,

27 
	mTM_MUL
,

28 
	mTM_MOD
,

29 
	mTM_POW
,

30 
	mTM_DIV
,

31 
	mTM_IDIV
,

32 
	mTM_BAND
,

33 
	mTM_BOR
,

34 
	mTM_BXOR
,

35 
	mTM_SHL
,

36 
	mTM_SHR
,

37 
	mTM_UNM
,

38 
	mTM_BNOT
,

39 
	mTM_LT
,

40 
	mTM_LE
,

41 
	mTM_CONCAT
,

42 
	mTM_CALL
,

43 
	mTM_N


44 } 
	tTMS
;

48 
	#gÁ°tm
(
g
,
ë
,
e
Ë(”tË=
NULL
 ? NULL : \

49 ((
ë
)->
Êags
 & (1u<<(
e
))Ë? 
NULL
 : 
	`luaT_gëtm
”t,É, (
g
)->
tm«me
[e]))

	)

51 
	#Á°tm
(
l
,
ë
,
e
Ë
	`gÁ°tm
(
	`G
÷),Ét,É)

	)

53 
	#ây≥«me
(
x
Ë
luaT_ty≥«mes_
[(xË+ 1]

	)

55 
LUAI_DDEC
 c⁄° *c⁄° 
	gluaT_ty≥«mes_
[
LUA_TOTALTAGS
];

58 
LUAI_FUNC
 c⁄° *
luaT_objty≥«me
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
);

60 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaT_gëtm
 (
TabÀ
 *
evíts
, 
TMS
 
evít
, 
TSåög
 *
íame
);

61 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaT_gëtmbyobj
 (
lua_Sèã
 *
L
, c⁄° TVÆuê*
o
,

62 
TMS
 
evít
);

63 
LUAI_FUNC
 
luaT_öô
 (
lua_Sèã
 *
L
);

65 
LUAI_FUNC
 
luaT_ˇŒTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
f
, c⁄° TVÆuê*
p1
,

66 c⁄° 
TVÆue
 *
p2
, TVÆuê*
p3
, 
ha§es
);

67 
LUAI_FUNC
 
luaT_ˇŒböTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

68 
StkId
 
ªs
, 
TMS
 
evít
);

69 
LUAI_FUNC
 
luaT_åyböTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

70 
StkId
 
ªs
, 
TMS
 
evít
);

71 
LUAI_FUNC
 
luaT_ˇŒ‹dîTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

72 c⁄° 
TVÆue
 *
p2
, 
TMS
 
evít
);

	@lua/src/lua.c

7 
	#lua_c


	)

9 
	~"Õªfix.h
"

12 
	~<sig«l.h
>

13 
	~<°dio.h
>

14 
	~<°dlib.h
>

15 
	~<°rög.h
>

17 
	~"lua.h
"

19 
	~"œuxlib.h
"

20 
	~"luÆib.h
"

23 #i‡!
deföed
(
LUA_PROMPT
)

24 
	#LUA_PROMPT
 "> "

	)

25 
	#LUA_PROMPT2
 ">> "

	)

28 #i‡!
deföed
(
LUA_PROGNAME
)

29 
	#LUA_PROGNAME
 "lua"

	)

32 #i‡!
deföed
(
LUA_MAXINPUT
)

33 
	#LUA_MAXINPUT
 512

	)

36 #i‡!
deföed
(
LUA_INIT_VAR
)

37 
	#LUA_INIT_VAR
 "LUA_INIT"

	)

40 
	#LUA_INITVARVERSION
 \

41 
LUA_INIT_VAR
 "_" 
LUA_VERSION_MAJOR
 "_" 
LUA_VERSION_MINOR


	)

48 #i‡!
deföed
(
lua_°dö_is_ây
)

50 #i‡
deföed
(
LUA_USE_POSIX
)

52 
	~<uni°d.h
>

53 
	#lua_°dö_is_ây
(Ë
	`ißây
(0)

	)

55 #ñi‡
deföed
(
LUA_USE_WINDOWS
)

57 
	~<io.h
>

58 
	#lua_°dö_is_ây
(Ë
	`_ißây
(
	`_fûío
(
°dö
))

	)

63 
	#lua_°dö_is_ây
(Ë1

	)

76 #i‡!
deföed
(
lua_ªadlöe
)

78 #i‡
deföed
(
LUA_USE_READLINE
)

80 
	~<ªadlöe/ªadlöe.h
>

81 
	~<ªadlöe/hi°‹y.h
>

82 
	#lua_ªadlöe
(
L
,
b
,
p
Ë(()L, ((b)=
	`ªadlöe
’)Ë!
NULL
)

	)

83 
	#lua_ßvñöe
(
L
,
löe
Ë(()L, 
	`add_hi°‹y
÷öe))

	)

84 
	#lua_‰ìlöe
(
L
,
b
Ë(()L, 
	`‰ì
(b))

	)

88 
	#lua_ªadlöe
(
L
,
b
,
p
) \

89 (()
L
, 
	`Âuts
(
p
, 
°dout
), 
	`fÊush
(stdout), \

90 
	`fgës
(
b
, 
LUA_MAXINPUT
, 
°dö
Ë!
NULL
Ë

	)

91 
	#lua_ßvñöe
(
L
,
löe
Ë{ ()L; (Óöe; }

	)

92 
	#lua_‰ìlöe
(
L
,
b
Ë{ ()L; ()b; }

	)

101 
lua_Sèã
 *
	gglobÆL
 = 
NULL
;

103 c⁄° *
	g¥og«me
 = 
LUA_PROGNAME
;

109 
	$l°›
 (
lua_Sèã
 *
L
, 
lua_Debug
 *
¨
) {

110 ()
¨
;

111 
	`lua_£thook
(
L
, 
NULL
, 0, 0);

112 
	`luaL_îr‹
(
L
, "interrupted!");

113 
	}
}

122 
	$œ˘i⁄
 (
i
) {

123 
	`sig«l
(
i
, 
SIG_DFL
);

124 
	`lua_£thook
(
globÆL
, 
l°›
, 
LUA_MASKCALL
 | 
LUA_MASKRET
 | 
LUA_MASKCOUNT
, 1);

125 
	}
}

128 
	$¥öt_ußge
 (c⁄° *
bad›ti⁄
) {

129 
	`lua_wrôe°rögîr‹
("%s: ", 
¥og«me
);

130 i‡(
bad›ti⁄
[1] == 'e' || badoption[1] == 'l')

131 
	`lua_wrôe°rögîr‹
("'%s'Çìd†¨gumít\n", 
bad›ti⁄
);

133 
	`lua_wrôe°rögîr‹
("uƒecognized o±i⁄ '%s'\n", 
bad›ti⁄
);

134 
	`lua_wrôe°rögîr‹
(

145 
¥og«me
);

146 
	}
}

153 
	$l_mesßge
 (c⁄° *
≤ame
, c⁄° *
msg
) {

154 i‡(
≤ame
Ë
	`lua_wrôe°rögîr‹
("%s: ",Öname);

155 
	`lua_wrôe°rögîr‹
("%s\n", 
msg
);

156 
	}
}

164 
	$ªp‹t
 (
lua_Sèã
 *
L
, 
°©us
) {

165 i‡(
°©us
 !
LUA_OK
) {

166 c⁄° *
msg
 = 
	`lua_to°rög
(
L
, -1);

167 
	`l_mesßge
(
¥og«me
, 
msg
);

168 
	`lua_p›
(
L
, 1);

170  
°©us
;

171 
	}
}

177 
	$msgh™dÀr
 (
lua_Sèã
 *
L
) {

178 c⁄° *
msg
 = 
	`lua_to°rög
(
L
, 1);

179 i‡(
msg
 =
NULL
) {

180 i‡(
	`luaL_ˇŒmëa
(
L
, 1, "__tostring") &&

181 
	`lua_ty≥
(
L
, -1Ë=
LUA_TSTRING
)

184 
msg
 = 
	`lua_pushf°rög
(
L
, "(error object isá %s value)",

185 
	`luaL_ty≥«me
(
L
, 1));

187 
	`luaL_åa˚back
(
L
, L, 
msg
, 1);

189 
	}
}

196 
	$doˇŒ
 (
lua_Sèã
 *
L
, 
«rg
, 
ƒes
) {

197 
°©us
;

198 
ba£
 = 
	`lua_gët›
(
L
Ë- 
«rg
;

199 
	`lua_pushcfun˘i⁄
(
L
, 
msgh™dÀr
);

200 
	`lua_ö£π
(
L
, 
ba£
);

201 
globÆL
 = 
L
;

202 
	`sig«l
(
SIGINT
, 
œ˘i⁄
);

203 
°©us
 = 
	`lua_pˇŒ
(
L
, 
«rg
, 
ƒes
, 
ba£
);

204 
	`sig«l
(
SIGINT
, 
SIG_DFL
);

205 
	`lua_ªmove
(
L
, 
ba£
);

206  
°©us
;

207 
	}
}

210 
	$¥öt_vîsi⁄
 () {

211 
	`lua_wrôe°rög
(
LUA_COPYRIGHT
, 
	`°æí
(LUA_COPYRIGHT));

212 
	`lua_wrôñöe
();

213 
	}
}

224 
	$¸óã¨gèbÀ
 (
lua_Sèã
 *
L
, **
¨gv
, 
¨gc
, 
s¸ùt
) {

225 
i
, 
«rg
;

226 i‡(
s¸ùt
 =
¨gc
) script = 0;

227 
«rg
 = 
¨gc
 - (
s¸ùt
 + 1);

228 
	`lua_¸óãèbÀ
(
L
, 
«rg
, 
s¸ùt
 + 1);

229 
i
 = 0; i < 
¨gc
; i++) {

230 
	`lua_push°rög
(
L
, 
¨gv
[
i
]);

231 
	`lua_øw£ti
(
L
, -2, 
i
 - 
s¸ùt
);

233 
	`lua_£tglobÆ
(
L
, "arg");

234 
	}
}

237 
	$dochunk
 (
lua_Sèã
 *
L
, 
°©us
) {

238 i‡(
°©us
 =
LUA_OK
Ë°©u†
	`doˇŒ
(
L
, 0, 0);

239  
	`ªp‹t
(
L
, 
°©us
);

240 
	}
}

243 
	$dofûe
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

244  
	`dochunk
(
L
, 
	`luaL_lﬂdfûe
(L, 
«me
));

245 
	}
}

248 
	$do°rög
 (
lua_Sèã
 *
L
, c⁄° *
s
, c⁄° *
«me
) {

249  
	`dochunk
(
L
, 
	`luaL_lﬂdbuf„r
(L, 
s
, 
	`°æí
(s), 
«me
));

250 
	}
}

257 
	$dﬁibøry
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

258 
°©us
;

259 
	`lua_gëglobÆ
(
L
, "require");

260 
	`lua_push°rög
(
L
, 
«me
);

261 
°©us
 = 
	`doˇŒ
(
L
, 1, 1);

262 i‡(
°©us
 =
LUA_OK
)

263 
	`lua_£tglobÆ
(
L
, 
«me
);

264  
	`ªp‹t
(
L
, 
°©us
);

265 
	}
}

271 c⁄° *
	$gë_¥om±
 (
lua_Sèã
 *
L
, 
fú°löe
) {

272 c⁄° *
p
;

273 
	`lua_gëglobÆ
(
L
, 
fú°löe
 ? "_PROMPT" : "_PROMPT2");

274 
p
 = 
	`lua_to°rög
(
L
, -1);

275 i‡(
p
 =
NULL
Ë∞(
fú°löe
 ? 
LUA_PROMPT
 : 
LUA_PROMPT2
);

276  
p
;

277 
	}
}

280 
	#EOFMARK
 "<eof>"

	)

281 
	#m¨kÀn
 ((
EOFMARK
)/(Ë- 1)

	)

289 
	$öcom∂ëe
 (
lua_Sèã
 *
L
, 
°©us
) {

290 i‡(
°©us
 =
LUA_ERRSYNTAX
) {

291 
size_t
 
lmsg
;

292 c⁄° *
msg
 = 
	`lua_tﬁ°rög
(
L
, -1, &
lmsg
);

293 i‡(
lmsg
 >
m¨kÀn
 && 
	`°rcmp
(
msg
 +Ümsg - m¨kÀn, 
EOFMARK
) == 0) {

294 
	`lua_p›
(
L
, 1);

299 
	}
}

305 
	$pushlöe
 (
lua_Sèã
 *
L
, 
fú°löe
) {

306 
buf„r
[
LUA_MAXINPUT
];

307 *
b
 = 
buf„r
;

308 
size_t
 
l
;

309 c⁄° *
¥mt
 = 
	`gë_¥om±
(
L
, 
fú°löe
);

310 
ªad°©us
 = 
	`lua_ªadlöe
(
L
, 
b
, 
¥mt
);

311 i‡(
ªad°©us
 == 0)

313 
	`lua_p›
(
L
, 1);

314 
l
 = 
	`°æí
(
b
);

315 i‡(
l
 > 0 && 
b
[l-1] == '\n')

316 
b
[--
l
] = '\0';

317 i‡(
fú°löe
 && 
b
[0] == '=')

318 
	`lua_pushf°rög
(
L
, "ªtu∫ %s", 
b
 + 1);

320 
	`lua_pushl°rög
(
L
, 
b
, 
l
);

321 
	`lua_‰ìlöe
(
L
, 
b
);

323 
	}
}

330 
	$addªtu∫
 (
lua_Sèã
 *
L
) {

331 c⁄° *
löe
 = 
	`lua_to°rög
(
L
, -1);

332 c⁄° *
ªéöe
 = 
	`lua_pushf°rög
(
L
, "ªtu∫ %s;", 
löe
);

333 
°©us
 = 
	`luaL_lﬂdbuf„r
(
L
, 
ªéöe
, 
	`°æí
(retline), "=stdin");

334 i‡(
°©us
 =
LUA_OK
) {

335 
	`lua_ªmove
(
L
, -2);

336 i‡(
löe
[0] != '\0')

337 
	`lua_ßvñöe
(
L
, 
löe
);

340 
	`lua_p›
(
L
, 2);

341  
°©us
;

342 
	}
}

348 
	$mu…ûöe
 (
lua_Sèã
 *
L
) {

350 
size_t
 
Àn
;

351 c⁄° *
löe
 = 
	`lua_tﬁ°rög
(
L
, 1, &
Àn
);

352 
°©us
 = 
	`luaL_lﬂdbuf„r
(
L
, 
löe
, 
Àn
, "=stdin");

353 i‡(!
	`öcom∂ëe
(
L
, 
°©us
Ë|| !
	`pushlöe
(L, 0)) {

354 
	`lua_ßvñöe
(
L
, 
löe
);

355  
°©us
;

357 
	`lua_pushlôîÆ
(
L
, "\n");

358 
	`lua_ö£π
(
L
, -2);

359 
	`lua_c⁄ˇt
(
L
, 3);

361 
	}
}

370 
	$lﬂdlöe
 (
lua_Sèã
 *
L
) {

371 
°©us
;

372 
	`lua_£â›
(
L
, 0);

373 i‡(!
	`pushlöe
(
L
, 1))

375 i‡((
°©us
 = 
	`addªtu∫
(
L
)Ë!
LUA_OK
)

376 
°©us
 = 
	`mu…ûöe
(
L
);

377 
	`lua_ªmove
(
L
, 1);

378 
	`lua_as£π
(
	`lua_gët›
(
L
) == 1);

379  
°©us
;

380 
	}
}

386 
	$l_¥öt
 (
lua_Sèã
 *
L
) {

387 
n
 = 
	`lua_gët›
(
L
);

388 i‡(
n
 > 0) {

389 
	`luaL_check°ack
(
L
, 
LUA_MINSTACK
, "too manyÑesultsÅoÖrint");

390 
	`lua_gëglobÆ
(
L
, "print");

391 
	`lua_ö£π
(
L
, 1);

392 i‡(
	`lua_pˇŒ
(
L
, 
n
, 0, 0Ë!
LUA_OK
)

393 
	`l_mesßge
(
¥og«me
, 
	`lua_pushf°rög
(
L
, "error calling 'print' (%s)",

394 
	`lua_to°rög
(
L
, -1)));

396 
	}
}

403 
	$doREPL
 (
lua_Sèã
 *
L
) {

404 
°©us
;

405 c⁄° *
ﬁd¥og«me
 = 
¥og«me
;

406 
¥og«me
 = 
NULL
;

407 (
°©us
 = 
	`lﬂdlöe
(
L
)) != -1) {

408 i‡(
°©us
 =
LUA_OK
)

409 
°©us
 = 
	`doˇŒ
(
L
, 0, 
LUA_MULTRET
);

410 i‡(
°©us
 =
LUA_OK
Ë
	`l_¥öt
(
L
);

411 
	`ªp‹t
(
L
, 
°©us
);

413 
	`lua_£â›
(
L
, 0);

414 
	`lua_wrôñöe
();

415 
¥og«me
 = 
ﬁd¥og«me
;

416 
	}
}

422 
	$push¨gs
 (
lua_Sèã
 *
L
) {

423 
i
, 
n
;

424 i‡(
	`lua_gëglobÆ
(
L
, "¨g"Ë!
LUA_TTABLE
)

425 
	`luaL_îr‹
(
L
, "'arg' isÇotáÅable");

426 
n
 = ()
	`luaL_Àn
(
L
, -1);

427 
	`luaL_check°ack
(
L
, 
n
 + 3, "too manyárgumentsÅo script");

428 
i
 = 1; i <
n
; i++)

429 
	`lua_øwgëi
(
L
, -
i
, i);

430 
	`lua_ªmove
(
L
, -
i
);

431  
n
;

432 
	}
}

435 
	$h™dÀ_s¸ùt
 (
lua_Sèã
 *
L
, **
¨gv
) {

436 
°©us
;

437 c⁄° *
‚ame
 = 
¨gv
[0];

438 i‡(
	`°rcmp
(
‚ame
, "-"Ë=0 && såcmp(
¨gv
[-1], "--") != 0)

439 
‚ame
 = 
NULL
;

440 
°©us
 = 
	`luaL_lﬂdfûe
(
L
, 
‚ame
);

441 i‡(
°©us
 =
LUA_OK
) {

442 
n
 = 
	`push¨gs
(
L
);

443 
°©us
 = 
	`doˇŒ
(
L
, 
n
, 
LUA_MULTRET
);

445  
	`ªp‹t
(
L
, 
°©us
);

446 
	}
}

451 
	#has_îr‹
 1

	)

452 
	#has_i
 2

	)

453 
	#has_v
 4

	)

454 
	#has_e
 8

	)

455 
	#has_E
 16

	)

463 
	$cﬁÀ˘¨gs
 (**
¨gv
, *
fú°
) {

464 
¨gs
 = 0;

465 
i
;

466 
i
 = 1; 
¨gv
[i] !
NULL
; i++) {

467 *
fú°
 = 
i
;

468 i‡(
¨gv
[
i
][0] != '-')

469  
¨gs
;

470 
¨gv
[
i
][1]) {

472 i‡(
¨gv
[
i
][2] != '\0')

473  
has_îr‹
;

474 *
fú°
 = 
i
 + 1;

475  
¨gs
;

477  
¨gs
;

479 i‡(
¨gv
[
i
][2] != '\0')

480  
has_îr‹
;

481 
¨gs
 |
has_E
;

484 
¨gs
 |
has_i
;

486 i‡(
¨gv
[
i
][2] != '\0')

487  
has_îr‹
;

488 
¨gs
 |
has_v
;

491 
¨gs
 |
has_e
;

493 i‡(
¨gv
[
i
][2] == '\0') {

494 
i
++;

495 i‡(
¨gv
[
i
] =
NULL
 ||árgv[i][0] == '-')

496  
has_îr‹
;

500  
has_îr‹
;

503 *
fú°
 = 
i
;

504  
¨gs
;

505 
	}
}

512 
	$ru«rgs
 (
lua_Sèã
 *
L
, **
¨gv
, 
n
) {

513 
i
;

514 
i
 = 1; i < 
n
; i++) {

515 
›ti⁄
 = 
¨gv
[
i
][1];

516 
	`lua_as£π
(
¨gv
[
i
][0] == '-');

517 i‡(
›ti⁄
 == 'e' || option == 'l') {

518 
°©us
;

519 c⁄° *
exåa
 = 
¨gv
[
i
] + 2;

520 i‡(*
exåa
 ='\0'Ëexå®
¨gv
[++
i
];

521 
	`lua_as£π
(
exåa
 !
NULL
);

522 
°©us
 = (
›ti⁄
 == 'e')

523 ? 
	`do°rög
(
L
, 
exåa
, "=(commandÜine)")

524 : 
	`dﬁibøry
(
L
, 
exåa
);

525 i‡(
°©us
 !
LUA_OK
)  0;

529 
	}
}

532 
	$h™dÀ_luaöô
 (
lua_Sèã
 *
L
) {

533 c⁄° *
«me
 = "=" 
LUA_INITVARVERSION
;

534 c⁄° *
öô
 = 
	`gëív
(
«me
 + 1);

535 i‡(
öô
 =
NULL
) {

536 
«me
 = "=" 
LUA_INIT_VAR
;

537 
öô
 = 
	`gëív
(
«me
 + 1);

539 i‡(
öô
 =
NULL
Ë 
LUA_OK
;

540 i‡(
öô
[0] == '@')

541  
	`dofûe
(
L
, 
öô
+1);

543  
	`do°rög
(
L
, 
öô
, 
«me
);

544 
	}
}

551 
	$pmaö
 (
lua_Sèã
 *
L
) {

552 
¨gc
 = ()
	`lua_toöãgî
(
L
, 1);

553 **
¨gv
 = (**)
	`lua_tou£rd©a
(
L
, 2);

554 
s¸ùt
;

555 
¨gs
 = 
	`cﬁÀ˘¨gs
(
¨gv
, &
s¸ùt
);

556 
	`luaL_checkvîsi⁄
(
L
);

557 i‡(
¨gv
[0] &&árgv[0][0]Ë
¥og«me
 =árgv[0];

558 i‡(
¨gs
 =
has_îr‹
) {

559 
	`¥öt_ußge
(
¨gv
[
s¸ùt
]);

562 i‡(
¨gs
 & 
has_v
)

563 
	`¥öt_vîsi⁄
();

564 i‡(
¨gs
 & 
has_E
) {

565 
	`lua_pushboﬁón
(
L
, 1);

566 
	`lua_£tfõld
(
L
, 
LUA_REGISTRYINDEX
, "LUA_NOENV");

568 
	`luaL_›ílibs
(
L
);

569 
	`¸óã¨gèbÀ
(
L
, 
¨gv
, 
¨gc
, 
s¸ùt
);

570 i‡(!(
¨gs
 & 
has_E
)) {

571 i‡(
	`h™dÀ_luaöô
(
L
Ë!
LUA_OK
)

574 i‡(!
	`ru«rgs
(
L
, 
¨gv
, 
s¸ùt
))

576 i‡(
s¸ùt
 < 
¨gc
 &&

577 
	`h™dÀ_s¸ùt
(
L
, 
¨gv
 + 
s¸ùt
Ë!
LUA_OK
)

579 i‡(
¨gs
 & 
has_i
)

580 
	`doREPL
(
L
);

581 i‡(
s¸ùt
 =
¨gc
 && !(
¨gs
 & (
has_e
 | 
has_v
))) {

582 i‡(
	`lua_°dö_is_ây
()) {

583 
	`¥öt_vîsi⁄
();

584 
	`doREPL
(
L
);

586 
	`dofûe
(
L
, 
NULL
);

588 
	`lua_pushboﬁón
(
L
, 1);

590 
	}
}

593 
	$maö
 (
¨gc
, **
¨gv
) {

594 
°©us
, 
ªsu…
;

595 
lua_Sèã
 *
L
 = 
	`luaL_√w°©e
();

596 i‡(
L
 =
NULL
) {

597 
	`l_mesßge
(
¨gv
[0], "cannot create state:ÇotÉnough memory");

598  
EXIT_FAILURE
;

600 
	`lua_pushcfun˘i⁄
(
L
, &
pmaö
);

601 
	`lua_pushöãgî
(
L
, 
¨gc
);

602 
	`lua_pushlightu£rd©a
(
L
, 
¨gv
);

603 
°©us
 = 
	`lua_pˇŒ
(
L
, 2, 1, 0);

604 
ªsu…
 = 
	`lua_toboﬁón
(
L
, -1);

605 
	`ªp‹t
(
L
, 
°©us
);

606 
	`lua_˛o£
(
L
);

607  (
ªsu…
 && 
°©us
 =
LUA_OK
Ë? 
EXIT_SUCCESS
 : 
EXIT_FAILURE
;

608 
	}
}

	@lua/src/lua.h

9 #i‚de‡
lua_h


10 
	#lua_h


	)

12 
	~<°d¨g.h
>

13 
	~<°ddef.h
>

16 
	~"luac⁄f.h
"

19 
	#LUA_VERSION_MAJOR
 "5"

	)

20 
	#LUA_VERSION_MINOR
 "3"

	)

21 
	#LUA_VERSION_NUM
 503

	)

22 
	#LUA_VERSION_RELEASE
 "3"

	)

24 
	#LUA_VERSION
 "Lu®" 
LUA_VERSION_MAJOR
 "." 
LUA_VERSION_MINOR


	)

25 
	#LUA_RELEASE
 
LUA_VERSION
 "." 
LUA_VERSION_RELEASE


	)

26 
	#LUA_COPYRIGHT
 
LUA_RELEASE
 " C›yrighà(CË1994-2016 Lua.‹g, PUC-Rio"

	)

27 
	#LUA_AUTHORS
 "R. Iîußlimschy, L. H. dêFigueúedo, W. Cñes"

	)

31 
	#LUA_SIGNATURE
 "\x1bLua"

	)

34 
	#LUA_MULTRET
 (-1)

	)

42 
	#LUA_REGISTRYINDEX
 (-
LUAI_MAXSTACK
 - 1000)

	)

43 
	#lua_upvÆueödex
(
i
Ë(
LUA_REGISTRYINDEX
 - (i))

	)

47 
	#LUA_OK
 0

	)

48 
	#LUA_YIELD
 1

	)

49 
	#LUA_ERRRUN
 2

	)

50 
	#LUA_ERRSYNTAX
 3

	)

51 
	#LUA_ERRMEM
 4

	)

52 
	#LUA_ERRGCMM
 5

	)

53 
	#LUA_ERRERR
 6

	)

56 
lua_Sèã
 
	tlua_Sèã
;

62 
	#LUA_TNONE
 (-1)

	)

64 
	#LUA_TNIL
 0

	)

65 
	#LUA_TBOOLEAN
 1

	)

66 
	#LUA_TLIGHTUSERDATA
 2

	)

67 
	#LUA_TNUMBER
 3

	)

68 
	#LUA_TSTRING
 4

	)

69 
	#LUA_TTABLE
 5

	)

70 
	#LUA_TFUNCTION
 6

	)

71 
	#LUA_TUSERDATA
 7

	)

72 
	#LUA_TTHREAD
 8

	)

74 
	#LUA_NUMTAGS
 9

	)

79 
	#LUA_MINSTACK
 20

	)

83 
	#LUA_RIDX_MAINTHREAD
 1

	)

84 
	#LUA_RIDX_GLOBALS
 2

	)

85 
	#LUA_RIDX_LAST
 
LUA_RIDX_GLOBALS


	)

89 
LUA_NUMBER
 
	tlua_Numbî
;

93 
LUA_INTEGER
 
	tlua_I¡egî
;

96 
LUA_UNSIGNED
 
	tlua_Unsig√d
;

99 
LUA_KCONTEXT
 
	tlua_KC⁄ãxt
;

105 (*
	tlua_CFun˘i⁄
Ë(
	tlua_Sèã
 *
	tL
);

110 (*
	tlua_KFun˘i⁄
Ë(
	tlua_Sèã
 *
	tL
, 
	t°©us
, 
	tlua_KC⁄ãxt
 
	t˘x
);

116 c⁄° * (*
	tlua_Ródî
Ë(
	tlua_Sèã
 *
	tL
, *
	tud
, 
	tsize_t
 *
	tsz
);

118 (*
	tlua_Wrôî
Ë(
	tlua_Sèã
 *
	tL
, c⁄° *
	tp
, 
	tsize_t
 
	tsz
, *
	tud
);

124 * (*
	tlua_AŒoc
Ë(*
	tud
, *
	t±r
, 
	tsize_t
 
	tosize
, size_à
	tnsize
);

131 #i‡
	`deföed
(
LUA_USER_H
)

132 #ö˛udê
LUA_USER_H


139 c⁄° 
lua_idít
[];

145 
LUA_API
 
lua_Sèã
 *(
lua_√w°©e
Ë(
lua_AŒoc
 
f
, *
ud
);

146 
LUA_API
 (
lua_˛o£
Ë(
lua_Sèã
 *
L
);

147 
LUA_API
 
lua_Sèã
 *(
lua_√wthªad
Ë÷ua_Sèã *
L
);

149 
LUA_API
 
	$lua_CFun˘i⁄
 (
lua_©∑nic
Ë(
lua_Sèã
 *
L
, 
lua_CFun˘i⁄
 
∑nicf
);

152 
LUA_API
 c⁄° 
lua_Numbî
 *(
lua_vîsi⁄
Ë(
lua_Sèã
 *
L
);

158 
LUA_API
 (
lua_absödex
Ë(
lua_Sèã
 *
L
, 
idx
);

159 
LUA_API
 (
lua_gët›
Ë(
lua_Sèã
 *
L
);

160 
LUA_API
 (
lua_£â›
Ë(
lua_Sèã
 *
L
, 
idx
);

161 
LUA_API
 (
lua_pushvÆue
Ë(
lua_Sèã
 *
L
, 
idx
);

162 
LUA_API
 (
lua_rŸ©e
Ë(
lua_Sèã
 *
L
, 
idx
, 
n
);

163 
LUA_API
 (
lua_c›y
Ë(
lua_Sèã
 *
L
, 
‰omidx
, 
toidx
);

164 
LUA_API
 (
lua_check°ack
Ë(
lua_Sèã
 *
L
, 
n
);

166 
LUA_API
 (
lua_xmove
Ë(
lua_Sèã
 *
‰om
,Üua_Sèã *
to
, 
n
);

173 
LUA_API
 (
lua_i¢umbî
Ë(
lua_Sèã
 *
L
, 
idx
);

174 
LUA_API
 (
lua_is°rög
Ë(
lua_Sèã
 *
L
, 
idx
);

175 
LUA_API
 (
lua_iscfun˘i⁄
Ë(
lua_Sèã
 *
L
, 
idx
);

176 
LUA_API
 (
lua_isöãgî
Ë(
lua_Sèã
 *
L
, 
idx
);

177 
LUA_API
 (
lua_isu£rd©a
Ë(
lua_Sèã
 *
L
, 
idx
);

178 
LUA_API
 (
lua_ty≥
Ë(
lua_Sèã
 *
L
, 
idx
);

179 
LUA_API
 c⁄° *(
lua_ty≥«me
Ë(
lua_Sèã
 *
L
, 
ç
);

181 
LUA_API
 
	$lua_Numbî
 (
lua_t⁄umbîx
Ë(
lua_Sèã
 *
L
, 
idx
, *
i¢um
);

182 
LUA_API
 
	$lua_I¡egî
 (
lua_toöãgîx
Ë(
lua_Sèã
 *
L
, 
idx
, *
i¢um
);

183 
LUA_API
 (
lua_toboﬁón
Ë(
lua_Sèã
 *
L
, 
idx
);

184 
LUA_API
 c⁄° *(
lua_tﬁ°rög
Ë(
lua_Sèã
 *
L
, 
idx
, 
size_t
 *
Àn
);

185 
LUA_API
 
	$size_t
 (
lua_øwÀn
Ë(
lua_Sèã
 *
L
, 
idx
);

186 
LUA_API
 
	$lua_CFun˘i⁄
 (
lua_tocfun˘i⁄
Ë(
lua_Sèã
 *
L
, 
idx
);

187 
LUA_API
 *(
lua_tou£rd©a
Ë(
lua_Sèã
 *
L
, 
idx
);

188 
LUA_API
 
lua_Sèã
 *(
lua_tŸhªad
Ë÷ua_Sèã *
L
, 
idx
);

189 
LUA_API
 c⁄° *(
lua_t›oöãr
Ë(
lua_Sèã
 *
L
, 
idx
);

196 
	#LUA_OPADD
 0

	)

197 
	#LUA_OPSUB
 1

	)

198 
	#LUA_OPMUL
 2

	)

199 
	#LUA_OPMOD
 3

	)

200 
	#LUA_OPPOW
 4

	)

201 
	#LUA_OPDIV
 5

	)

202 
	#LUA_OPIDIV
 6

	)

203 
	#LUA_OPBAND
 7

	)

204 
	#LUA_OPBOR
 8

	)

205 
	#LUA_OPBXOR
 9

	)

206 
	#LUA_OPSHL
 10

	)

207 
	#LUA_OPSHR
 11

	)

208 
	#LUA_OPUNM
 12

	)

209 
	#LUA_OPBNOT
 13

	)

211 
LUA_API
 (
lua_¨ôh
Ë(
lua_Sèã
 *
L
, 
›
);

213 
	#LUA_OPEQ
 0

	)

214 
	#LUA_OPLT
 1

	)

215 
	#LUA_OPLE
 2

	)

217 
LUA_API
 (
lua_øwequÆ
Ë(
lua_Sèã
 *
L
, 
idx1
, 
idx2
);

218 
LUA_API
 (
lua_com∑ª
Ë(
lua_Sèã
 *
L
, 
idx1
, 
idx2
, 
›
);

224 
LUA_API
 (
lua_pushnû
Ë(
lua_Sèã
 *
L
);

225 
LUA_API
 (
lua_pushnumbî
Ë(
lua_Sèã
 *
L
, 
lua_Numbî
 
n
);

226 
LUA_API
 (
lua_pushöãgî
Ë(
lua_Sèã
 *
L
, 
lua_I¡egî
 
n
);

227 
LUA_API
 c⁄° *(
lua_pushl°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
s
, 
size_t
 
Àn
);

228 
LUA_API
 c⁄° *(
lua_push°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
s
);

229 
LUA_API
 c⁄° *(
lua_pushvf°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
fmt
,

230 
va_li°
 
¨gp
);

231 
LUA_API
 c⁄° *(
lua_pushf°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
fmt
, ...);

232 
LUA_API
 (
lua_pushc˛osuª
Ë(
lua_Sèã
 *
L
, 
lua_CFun˘i⁄
 
‚
, 
n
);

233 
LUA_API
 (
lua_pushboﬁón
Ë(
lua_Sèã
 *
L
, 
b
);

234 
LUA_API
 (
lua_pushlightu£rd©a
Ë(
lua_Sèã
 *
L
, *
p
);

235 
LUA_API
 (
lua_pushthªad
Ë(
lua_Sèã
 *
L
);

241 
LUA_API
 (
lua_gëglobÆ
Ë(
lua_Sèã
 *
L
, c⁄° *
«me
);

242 
LUA_API
 (
lua_gëèbÀ
Ë(
lua_Sèã
 *
L
, 
idx
);

243 
LUA_API
 (
lua_gëfõld
Ë(
lua_Sèã
 *
L
, 
idx
, c⁄° *
k
);

244 
LUA_API
 (
lua_gëi
Ë(
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
);

245 
LUA_API
 (
lua_øwgë
Ë(
lua_Sèã
 *
L
, 
idx
);

246 
LUA_API
 (
lua_øwgëi
Ë(
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
);

247 
LUA_API
 (
lua_øwgëp
Ë(
lua_Sèã
 *
L
, 
idx
, c⁄° *
p
);

249 
LUA_API
 (
lua_¸óãèbÀ
Ë(
lua_Sèã
 *
L
, 
«º
, 
ƒec
);

250 
LUA_API
 *(
lua_√wu£rd©a
Ë(
lua_Sèã
 *
L
, 
size_t
 
sz
);

251 
LUA_API
 (
lua_gëmë©abÀ
Ë(
lua_Sèã
 *
L
, 
objödex
);

252 
LUA_API
 (
lua_gëu£rvÆue
Ë(
lua_Sèã
 *
L
, 
idx
);

258 
LUA_API
 (
lua_£tglobÆ
Ë(
lua_Sèã
 *
L
, c⁄° *
«me
);

259 
LUA_API
 (
lua_£âabÀ
Ë(
lua_Sèã
 *
L
, 
idx
);

260 
LUA_API
 (
lua_£tfõld
Ë(
lua_Sèã
 *
L
, 
idx
, c⁄° *
k
);

261 
LUA_API
 (
lua_£ti
Ë(
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
);

262 
LUA_API
 (
lua_øw£t
Ë(
lua_Sèã
 *
L
, 
idx
);

263 
LUA_API
 (
lua_øw£ti
Ë(
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
);

264 
LUA_API
 (
lua_øw£ç
Ë(
lua_Sèã
 *
L
, 
idx
, c⁄° *
p
);

265 
LUA_API
 (
lua_£tmë©abÀ
Ë(
lua_Sèã
 *
L
, 
objödex
);

266 
LUA_API
 (
lua_£tu£rvÆue
Ë(
lua_Sèã
 *
L
, 
idx
);

272 
LUA_API
 (
lua_ˇŒk
Ë(
lua_Sèã
 *
L
, 
«rgs
, 
ƒesu…s
,

273 
lua_KC⁄ãxt
 
˘x
, 
lua_KFun˘i⁄
 
k
);

274 
	#lua_ˇŒ
(
L
,
n
,
r
Ë
	`lua_ˇŒk
(L, (n), (r), 0, 
NULL
)

	)

276 
LUA_API
 (
lua_pˇŒk
Ë(
lua_Sèã
 *
L
, 
«rgs
, 
ƒesu…s
, 
îrfunc
,

277 
lua_KC⁄ãxt
 
˘x
, 
lua_KFun˘i⁄
 
k
);

278 
	#lua_pˇŒ
(
L
,
n
,
r
,
f
Ë
	`lua_pˇŒk
(L, (n), (r), (f), 0, 
NULL
)

	)

280 
LUA_API
 (
lua_lﬂd
Ë(
lua_Sèã
 *
L
, 
lua_Ródî
 
ªadî
, *
dt
,

281 c⁄° *
chunk«me
, c⁄° *
mode
);

283 
LUA_API
 (
lua_dump
Ë(
lua_Sèã
 *
L
, 
lua_Wrôî
 
wrôî
, *
d©a
, 
°rù
);

289 
LUA_API
 (
lua_yõldk
Ë(
lua_Sèã
 *
L
, 
ƒesu…s
, 
lua_KC⁄ãxt
 
˘x
,

290 
lua_KFun˘i⁄
 
k
);

291 
LUA_API
 (
lua_ªsume
Ë(
lua_Sèã
 *
L
,Üua_Sèã *
‰om
, 
«rg
);

292 
LUA_API
 (
lua_°©us
Ë(
lua_Sèã
 *
L
);

293 
LUA_API
 (
lua_isyõldabÀ
Ë(
lua_Sèã
 *
L
);

295 
	#lua_yõld
(
L
,
n
Ë
	`lua_yõldk
(L, (n), 0, 
NULL
)

	)

302 
	#LUA_GCSTOP
 0

	)

303 
	#LUA_GCRESTART
 1

	)

304 
	#LUA_GCCOLLECT
 2

	)

305 
	#LUA_GCCOUNT
 3

	)

306 
	#LUA_GCCOUNTB
 4

	)

307 
	#LUA_GCSTEP
 5

	)

308 
	#LUA_GCSETPAUSE
 6

	)

309 
	#LUA_GCSETSTEPMUL
 7

	)

310 
	#LUA_GCISRUNNING
 9

	)

312 
LUA_API
 (
lua_gc
Ë(
lua_Sèã
 *
L
, 
wh©
, 
d©a
);

319 
LUA_API
 (
lua_îr‹
Ë(
lua_Sèã
 *
L
);

321 
LUA_API
 (
lua_√xt
Ë(
lua_Sèã
 *
L
, 
idx
);

323 
LUA_API
 (
lua_c⁄ˇt
Ë(
lua_Sèã
 *
L
, 
n
);

324 
LUA_API
 (
lua_Àn
Ë(
lua_Sèã
 *
L
, 
idx
);

326 
LUA_API
 
	$size_t
 (
lua_°rögt⁄umbî
Ë(
lua_Sèã
 *
L
, c⁄° *
s
);

328 
LUA_API
 
	$lua_AŒoc
 (
lua_gëÆlocf
Ë(
lua_Sèã
 *
L
, **
ud
);

329 
LUA_API
 (
lua_£èŒocf
Ë(
lua_Sèã
 *
L
, 
lua_AŒoc
 
f
, *
ud
);

339 
	#lua_gëexåa•a˚
(
L
Ë((*)((*)(LË- 
LUA_EXTRASPACE
))

	)

341 
	#lua_t⁄umbî
(
L
,
i
Ë
	`lua_t⁄umbîx
(L,(i),
NULL
)

	)

342 
	#lua_toöãgî
(
L
,
i
Ë
	`lua_toöãgîx
(L,(i),
NULL
)

	)

344 
	#lua_p›
(
L
,
n
Ë
	`lua_£â›
(L, -“)-1)

	)

346 
	#lua_√wèbÀ
(
L
Ë
	`lua_¸óãèbÀ
(L, 0, 0)

	)

348 
	#lua_ªgi°î
(
L
,
n
,
f
Ë(
	`lua_pushcfun˘i⁄
(L, (f)), 
	`lua_£tglobÆ
(L, (n)))

	)

350 
	#lua_pushcfun˘i⁄
(
L
,
f
Ë
	`lua_pushc˛osuª
(L, (f), 0)

	)

352 
	#lua_isfun˘i⁄
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TFUNCTION
)

	)

353 
	#lua_i°abÀ
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TTABLE
)

	)

354 
	#lua_i¶ightu£rd©a
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TLIGHTUSERDATA
)

	)

355 
	#lua_i¢û
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TNIL
)

	)

356 
	#lua_isboﬁón
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TBOOLEAN
)

	)

357 
	#lua_i°hªad
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TTHREAD
)

	)

358 
	#lua_i¢⁄e
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TNONE
)

	)

359 
	#lua_i¢⁄e‹nû
(
L
, 
n
Ë(
	`lua_ty≥
(L, (n)Ë<0)

	)

361 
	#lua_pushlôîÆ
(
L
, 
s
Ë
	`lua_push°rög
(L, "" s)

	)

363 
	#lua_pushglobÆèbÀ
(
L
) \

364 (()
	`lua_øwgëi
(
L
, 
LUA_REGISTRYINDEX
, 
LUA_RIDX_GLOBALS
))

	)

366 
	#lua_to°rög
(
L
,
i
Ë
	`lua_tﬁ°rög
(L, (i), 
NULL
)

	)

369 
	#lua_ö£π
(
L
,
idx
Ë
	`lua_rŸ©e
(L, (idx), 1)

	)

371 
	#lua_ªmove
(
L
,
idx
Ë(
	`lua_rŸ©e
(L, (idx), -1), 
	`lua_p›
(L, 1))

	)

373 
	#lua_ª∂a˚
(
L
,
idx
Ë(
	`lua_c›y
(L, -1, (idx)), 
	`lua_p›
(L, 1))

	)

383 #i‡
	`deföed
(
LUA_COMPAT_APIINTCASTS
)

385 
	#lua_pushunsig√d
(
L
,
n
Ë
	`lua_pushöãgî
(L, (
lua_I¡egî
)“))

	)

386 
	#lua_tounsig√dx
(
L
,
i
,
is
Ë((
lua_Unsig√d
)
	`lua_toöãgîx
(L,i,is))

	)

387 
	#lua_tounsig√d
(
L
,
i
Ë
	`lua_tounsig√dx
(L,(i),
NULL
)

	)

402 
	#LUA_HOOKCALL
 0

	)

403 
	#LUA_HOOKRET
 1

	)

404 
	#LUA_HOOKLINE
 2

	)

405 
	#LUA_HOOKCOUNT
 3

	)

406 
	#LUA_HOOKTAILCALL
 4

	)

412 
	#LUA_MASKCALL
 (1 << 
LUA_HOOKCALL
)

	)

413 
	#LUA_MASKRET
 (1 << 
LUA_HOOKRET
)

	)

414 
	#LUA_MASKLINE
 (1 << 
LUA_HOOKLINE
)

	)

415 
	#LUA_MASKCOUNT
 (1 << 
LUA_HOOKCOUNT
)

	)

417 
lua_Debug
 
	tlua_Debug
;

421 (*
	tlua_Hook
Ë(
	tlua_Sèã
 *
	tL
, 
	tlua_Debug
 *
	t¨
);

424 
LUA_API
 (
lua_gë°ack
Ë(
lua_Sèã
 *
L
, 
Àvñ
, 
lua_Debug
 *
¨
);

425 
LUA_API
 (
lua_gëöfo
Ë(
lua_Sèã
 *
L
, c⁄° *
wh©
, 
lua_Debug
 *
¨
);

426 
LUA_API
 c⁄° *(
lua_gëloˇl
Ë(
lua_Sèã
 *
L
, c⁄° 
lua_Debug
 *
¨
, 
n
);

427 
LUA_API
 c⁄° *(
lua_£éoˇl
Ë(
lua_Sèã
 *
L
, c⁄° 
lua_Debug
 *
¨
, 
n
);

428 
LUA_API
 c⁄° *(
lua_gëupvÆue
Ë(
lua_Sèã
 *
L
, 
funcödex
, 
n
);

429 
LUA_API
 c⁄° *(
lua_£tupvÆue
Ë(
lua_Sèã
 *
L
, 
funcödex
, 
n
);

431 
LUA_API
 *(
lua_upvÆueid
Ë(
lua_Sèã
 *
L
, 
fidx
, 
n
);

432 
LUA_API
 (
lua_upvÆuejoö
Ë(
lua_Sèã
 *
L
, 
fidx1
, 
n1
,

433 
fidx2
, 
n2
);

435 
LUA_API
 (
lua_£thook
Ë(
lua_Sèã
 *
L
, 
lua_Hook
 
func
, 
mask
, 
cou¡
);

436 
LUA_API
 
	$lua_Hook
 (
lua_gëhook
Ë(
lua_Sèã
 *
L
);

437 
LUA_API
 (
lua_gëhookmask
Ë(
lua_Sèã
 *
L
);

438 
LUA_API
 (
lua_gëhookcou¡
Ë(
lua_Sèã
 *
L
);

441 
	slua_Debug
 {

442 
evít
;

443 c⁄° *
«me
;

444 c⁄° *
«mewh©
;

445 c⁄° *
wh©
;

446 c⁄° *
sour˚
;

447 
cuºíéöe
;

448 
löedeföed
;

449 
œ°löedeföed
;

450 
nups
;

451 
≈¨ams
;

452 
isv¨¨g
;

453 
i°aûˇŒ
;

454 
sh‹t_§c
[
LUA_IDSIZE
];

456 
CÆlInfo
 *
i_ci
;

	@lua/src/luac.c

7 
	#luac_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

12 
	~<˘y≥.h
>

13 
	~<î∫o.h
>

14 
	~<°dio.h
>

15 
	~<°dlib.h
>

16 
	~<°rög.h
>

18 
	~"lua.h
"

19 
	~"œuxlib.h
"

21 
	~"lobje˘.h
"

22 
	~"l°©e.h
"

23 
	~"lundump.h
"

25 
PrötFun˘i⁄
(c⁄° 
PrŸo
* 
f
, 
fuŒ
);

26 
	#luaU_¥öt
 
PrötFun˘i⁄


	)

28 
	#PROGNAME
 "luac"

	)

29 
	#OUTPUT
 
PROGNAME
 ".out"

	)

31 
	gli°ög
=0;

32 
	gdumpög
=1;

33 
	g°rùpög
=0;

34 
	gOuçut
[]={ 
OUTPUT
 };

35 c⁄° * 
	gouçut
=
Ouçut
;

36 c⁄° * 
	g¥og«me
=
PROGNAME
;

38 
	$Áèl
(c⁄° * 
mesßge
)

40 
	`Ârötf
(
°dîr
,"%s: %s\n",
¥og«me
,
mesßge
);

41 
	`exô
(
EXIT_FAILURE
);

42 
	}
}

44 
	$ˇ¬Ÿ
(c⁄° * 
wh©
)

46 
	`Ârötf
(
°dîr
,"%s: c™nŸ %†%s: %s\n",
¥og«me
,
wh©
,
ouçut
,
	`°ªº‹
(
î∫o
));

47 
	`exô
(
EXIT_FAILURE
);

48 
	}
}

50 
	$ußge
(c⁄° * 
mesßge
)

52 i‡(*
mesßge
=='-')

53 
	`Ârötf
(
°dîr
,"%s: uƒecognized o±i⁄ '%s'\n",
¥og«me
,
mesßge
);

55 
	`Ârötf
(
°dîr
,"%s: %s\n",
¥og«me
,
mesßge
);

56 
	`Ârötf
(
°dîr
,

66 ,
¥og«me
,
Ouçut
);

67 
	`exô
(
EXIT_FAILURE
);

68 
	}
}

70 
	#IS
(
s
Ë(
	`°rcmp
(
¨gv
[
i
],s)==0)

	)

72 
	$dﬂrgs
(
¨gc
, * 
¨gv
[])

74 
i
;

75 
vîsi⁄
=0;

76 i‡(
¨gv
[0]!=
NULL
 && *¨gv[0]!=0Ë
¥og«me
=argv[0];

77 
i
=1; i<
¨gc
; i++)

79 i‡(*
¨gv
[
i
]!='-')

81 i‡(
	`IS
("--"))

83 ++
i
;

84 i‡(
vîsi⁄
) ++version;

87 i‡(
	`IS
("-"))

89 i‡(
	`IS
("-l"))

90 ++
li°ög
;

91 i‡(
	`IS
("-o"))

93 
ouçut
=
¨gv
[++
i
];

94 i‡(
ouçut
==
NULL
 || *output==0 || (*output=='-' && output[1]!=0))

95 
	`ußge
("'-o'Çeedsárgument");

96 i‡(
	`IS
("-")Ë
ouçut
=
NULL
;

98 i‡(
	`IS
("-p"))

99 
dumpög
=0;

100 i‡(
	`IS
("-s"))

101 
°rùpög
=1;

102 i‡(
	`IS
("-v"))

103 ++
vîsi⁄
;

105 
	`ußge
(
¨gv
[
i
]);

107 i‡(
i
==
¨gc
 && (
li°ög
 || !
dumpög
))

109 
dumpög
=0;

110 
¨gv
[--
i
]=
Ouçut
;

112 i‡(
vîsi⁄
)

114 
	`¥ötf
("%s\n",
LUA_COPYRIGHT
);

115 i‡(
vîsi⁄
==
¨gc
-1Ë
	`exô
(
EXIT_SUCCESS
);

117  
i
;

118 
	}
}

120 
	#FUNCTION
 "(fun˘i⁄(Înd)();"

	)

122 c⁄° * 
	$ªadî
(
lua_Sèã
 *
L
, *
ud
, 
size_t
 *
size
)

124 
	`UNUSED
(
L
);

125 i‡((*(*)
ud
)--)

127 *
size
=(
FUNCTION
)-1;

128  
FUNCTION
;

132 *
size
=0;

133  
NULL
;

135 
	}
}

137 
	#t›rŸo
(
L
,
i
Ë
	`gë¥Ÿo
(L->
t›
+(i))

	)

139 c⁄° 
PrŸo
* 
	$comböe
(
lua_Sèã
* 
L
, 
n
)

141 i‡(
n
==1)

142  
	`t›rŸo
(
L
,-1);

145 
PrŸo
* 
f
;

146 
i
=
n
;

147 i‡(
	`lua_lﬂd
(
L
,
ªadî
,&
i
,"=(" 
PROGNAME
 ")",
NULL
)!=
LUA_OK
Ë
	`Áèl
(
	`lua_to°rög
(L,-1));

148 
f
=
	`t›rŸo
(
L
,-1);

149 
i
=0; i<
n
; i++)

151 
f
->
p
[
i
]=
	`t›rŸo
(
L
,i-
n
-1);

152 i‡(
f
->
p
[
i
]->
sizeupvÆues
>0Ëf->p[i]->
upvÆues
[0].
ö°ack
=0;

154 
f
->
sizñöeöfo
=0;

155  
f
;

157 
	}
}

159 
	$wrôî
(
lua_Sèã
* 
L
, c⁄° * 
p
, 
size_t
 
size
, * 
u
)

161 
	`UNUSED
(
L
);

162  (
	`fwrôe
(
p
,
size
,1,(
FILE
*)
u
)!=1) && (size!=0);

163 
	}
}

165 
	$pmaö
(
lua_Sèã
* 
L
)

167 
¨gc
=()
	`lua_toöãgî
(
L
,1);

168 ** 
¨gv
=(**)
	`lua_tou£rd©a
(
L
,2);

169 c⁄° 
PrŸo
* 
f
;

170 
i
;

171 i‡(!
	`lua_check°ack
(
L
,
¨gc
)Ë
	`Áèl
("too many input files");

172 
i
=0; i<
¨gc
; i++)

174 c⁄° * 
fûíame
=
	`IS
("-"Ë? 
NULL
 : 
¨gv
[
i
];

175 i‡(
	`luaL_lﬂdfûe
(
L
,
fûíame
)!=
LUA_OK
Ë
	`Áèl
(
	`lua_to°rög
(L,-1));

177 
f
=
	`comböe
(
L
,
¨gc
);

178 i‡(
li°ög
Ë
	`luaU_¥öt
(
f
,listing>1);

179 i‡(
dumpög
)

181 
FILE
* 
D
(
ouçut
==
NULL
Ë? 
°dout
 : 
	`f›í
(output,"wb");

182 i‡(
D
==
NULL
Ë
	`ˇ¬Ÿ
("open");

183 
	`lua_lock
(
L
);

184 
	`luaU_dump
(
L
,
f
,
wrôî
,
D
,
°rùpög
);

185 
	`lua_u∆ock
(
L
);

186 i‡(
	`„º‹
(
D
)Ë
	`ˇ¬Ÿ
("write");

187 i‡(
	`f˛o£
(
D
)Ë
	`ˇ¬Ÿ
("close");

190 
	}
}

192 
	$maö
(
¨gc
, * 
¨gv
[])

194 
lua_Sèã
* 
L
;

195 
i
=
	`dﬂrgs
(
¨gc
,
¨gv
);

196 
¨gc
-=
i
; 
¨gv
+=i;

197 i‡(
¨gc
<=0Ë
	`ußge
("no input files given");

198 
L
=
	`luaL_√w°©e
();

199 i‡(
L
==
NULL
Ë
	`Áèl
("cannot create state:ÇotÉnough memory");

200 
	`lua_pushcfun˘i⁄
(
L
,&
pmaö
);

201 
	`lua_pushöãgî
(
L
,
¨gc
);

202 
	`lua_pushlightu£rd©a
(
L
,
¨gv
);

203 i‡(
	`lua_pˇŒ
(
L
,2,0,0)!=
LUA_OK
Ë
	`Áèl
(
	`lua_to°rög
(L,-1));

204 
	`lua_˛o£
(
L
);

205  
EXIT_SUCCESS
;

206 
	}
}

214 
	~<˘y≥.h
>

215 
	~<°dio.h
>

217 
	#luac_c


	)

218 
	#LUA_CORE


	)

220 
	~"ldebug.h
"

221 
	~"lobje˘.h
"

222 
	~"l›codes.h
"

224 
	#VOID
(
p
Ë((c⁄° *)’))

	)

226 
	$PrötSåög
(c⁄° 
TSåög
* 
ts
)

228 c⁄° * 
s
=
	`gë°r
(
ts
);

229 
size_t
 
i
,
n
=
	`ts¶í
(
ts
);

230 
	`¥ötf
("%c",'"');

231 
i
=0; i<
n
; i++)

233 
c
=()()
s
[
i
];

234 
c
)

236 '"': 
	`¥ötf
("\\\""); ;

237 '\\': 
	`¥ötf
("\\\\"); ;

238 '\a': 
	`¥ötf
("\\a"); ;

239 '\b': 
	`¥ötf
("\\b"); ;

240 '\f': 
	`¥ötf
("\\f"); ;

241 '\n': 
	`¥ötf
("\\n"); ;

242 '\r': 
	`¥ötf
("\\r"); ;

243 '\t': 
	`¥ötf
("\\t"); ;

244 '\v': 
	`¥ötf
("\\v"); ;

245 : i‡(
	`i•röt
(
c
))

246 
	`¥ötf
("%c",
c
);

248 
	`¥ötf
("\\%03d",
c
);

251 
	`¥ötf
("%c",'"');

252 
	}
}

254 
	$PrötC⁄°™t
(c⁄° 
PrŸo
* 
f
, 
i
)

256 c⁄° 
TVÆue
* 
o
=&
f
->
k
[
i
];

257 
	`ây≥
(
o
))

259 
LUA_TNIL
:

260 
	`¥ötf
("nil");

262 
LUA_TBOOLEAN
:

263 
	`¥ötf
(
	`bvÆue
(
o
) ? "true" : "false");

265 
LUA_TNUMFLT
:

267 
buff
[100];

268 
	`•rötf
(
buff
,
LUA_NUMBER_FMT
,
	`ÊtvÆue
(
o
));

269 
	`¥ötf
("%s",
buff
);

270 i‡(
buff
[
	`°r•n
(buff,"-0123456789")]=='\0'Ë
	`¥ötf
(".0");

273 
LUA_TNUMINT
:

274 
	`¥ötf
(
LUA_INTEGER_FMT
,
	`ivÆue
(
o
));

276 
LUA_TSHRSTR
: 
LUA_TLNGSTR
:

277 
	`PrötSåög
(
	`tsvÆue
(
o
));

280 
	`¥ötf
("?Åy≥=%d",
	`ây≥
(
o
));

283 
	}
}

285 
	#UPVALNAME
(
x
Ë((
f
->
upvÆues
[x].
«me
Ë? 
	`gë°r
(f->upvÆues[x].«meË: "-")

	)

286 
	#MYK
(
x
Ë(-1-(x))

	)

288 
	$PrötCode
(c⁄° 
PrŸo
* 
f
)

290 c⁄° 
In°ru˘i⁄
* 
code
=
f
->code;

291 
pc
,
n
=
f
->
sizecode
;

292 
pc
=0;Öc<
n
;Öc++)

294 
In°ru˘i⁄
 
i
=
code
[
pc
];

295 
OpCode
 
o
=
	`GET_OPCODE
(
i
);

296 
a
=
	`GETARG_A
(
i
);

297 
b
=
	`GETARG_B
(
i
);

298 
c
=
	`GETARG_C
(
i
);

299 
ax
=
	`GETARG_Ax
(
i
);

300 
bx
=
	`GETARG_Bx
(
i
);

301 
sbx
=
	`GETARG_sBx
(
i
);

302 
löe
=
	`gëfun˛öe
(
f
,
pc
);

303 
	`¥ötf
("\t%d\t",
pc
+1);

304 i‡(
löe
>0Ë
	`¥ötf
("[%d]\t",line); printf("[-]\t");

305 
	`¥ötf
("%-9s\t",
luaP_›«mes
[
o
]);

306 
	`gëOpMode
(
o
))

308 
iABC
:

309 
	`¥ötf
("%d",
a
);

310 i‡(
	`gëBMode
(
o
)!=
OpArgN
Ë
	`¥ötf
(" %d",
	`ISK
(
b
Ë? (
	`MYK
(
	`INDEXK
(b))) : b);

311 i‡(
	`gëCMode
(
o
)!=
OpArgN
Ë
	`¥ötf
(" %d",
	`ISK
(
c
Ë? (
	`MYK
(
	`INDEXK
(c))) : c);

313 
iABx
:

314 
	`¥ötf
("%d",
a
);

315 i‡(
	`gëBMode
(
o
)==
OpArgK
Ë
	`¥ötf
(" %d",
	`MYK
(
bx
));

316 i‡(
	`gëBMode
(
o
)==
OpArgU
Ë
	`¥ötf
(" %d",
bx
);

318 
iAsBx
:

319 
	`¥ötf
("%d %d",
a
,
sbx
);

321 
iAx
:

322 
	`¥ötf
("%d",
	`MYK
(
ax
));

325 
o
)

327 
OP_LOADK
:

328 
	`¥ötf
("\t; "); 
	`PrötC⁄°™t
(
f
,
bx
);

330 
OP_GETUPVAL
:

331 
OP_SETUPVAL
:

332 
	`¥ötf
("\t; %s",
	`UPVALNAME
(
b
));

334 
OP_GETTABUP
:

335 
	`¥ötf
("\t; %s",
	`UPVALNAME
(
b
));

336 i‡(
	`ISK
(
c
)Ë{ 
	`¥ötf
(" "); 
	`PrötC⁄°™t
(
f
,
	`INDEXK
(c)); }

338 
OP_SETTABUP
:

339 
	`¥ötf
("\t; %s",
	`UPVALNAME
(
a
));

340 i‡(
	`ISK
(
b
)Ë{ 
	`¥ötf
(" "); 
	`PrötC⁄°™t
(
f
,
	`INDEXK
(b)); }

341 i‡(
	`ISK
(
c
)Ë{ 
	`¥ötf
(" "); 
	`PrötC⁄°™t
(
f
,
	`INDEXK
(c)); }

343 
OP_GETTABLE
:

344 
OP_SELF
:

345 i‡(
	`ISK
(
c
)Ë{ 
	`¥ötf
("\t; "); 
	`PrötC⁄°™t
(
f
,
	`INDEXK
(c)); }

347 
OP_SETTABLE
:

348 
OP_ADD
:

349 
OP_SUB
:

350 
OP_MUL
:

351 
OP_POW
:

352 
OP_DIV
:

353 
OP_IDIV
:

354 
OP_BAND
:

355 
OP_BOR
:

356 
OP_BXOR
:

357 
OP_SHL
:

358 
OP_SHR
:

359 
OP_EQ
:

360 
OP_LT
:

361 
OP_LE
:

362 i‡(
	`ISK
(
b
Ë|| ISK(
c
))

364 
	`¥ötf
("\t; ");

365 i‡(
	`ISK
(
b
)Ë
	`PrötC⁄°™t
(
f
,
	`INDEXK
(b)); 
	`¥ötf
("-");

366 
	`¥ötf
(" ");

367 i‡(
	`ISK
(
c
)Ë
	`PrötC⁄°™t
(
f
,
	`INDEXK
(c)); 
	`¥ötf
("-");

370 
OP_JMP
:

371 
OP_FORLOOP
:

372 
OP_FORPREP
:

373 
OP_TFORLOOP
:

374 
	`¥ötf
("\t;Åÿ%d",
sbx
+
pc
+2);

376 
OP_CLOSURE
:

377 
	`¥ötf
("\t; %p",
	`VOID
(
f
->
p
[
bx
]));

379 
OP_SETLIST
:

380 i‡(
c
==0Ë
	`¥ötf
("\t; %d",()
code
[++
pc
]); printf("\t; %d",c);

382 
OP_EXTRAARG
:

383 
	`¥ötf
("\t; "); 
	`PrötC⁄°™t
(
f
,
ax
);

388 
	`¥ötf
("\n");

390 
	}
}

392 
	#SS
(
x
Ë((x==1)?"":"s")

	)

393 
	#S
(
x
Ë()(x),
	`SS
(x)

	)

395 
	$PrötHódî
(c⁄° 
PrŸo
* 
f
)

397 c⁄° * 
s
=
f
->
sour˚
 ? 
	`gë°r
(f->source) : "=?";

398 i‡(*
s
=='@' || *s=='=')

399 
s
++;

400 i‡(*
s
==
LUA_SIGNATURE
[0])

401 
s
="(bstring)";

403 
s
="(string)";

404 
	`¥ötf
("\n%s <%s:%d,%d> (%d instruction%sát %p)\n",

405 (
f
->
löedeföed
==0)?"maö":"fun˘i⁄",
s
,

406 
f
->
löedeföed
,f->
œ°löedeföed
,

407 
	`S
(
f
->
sizecode
),
	`VOID
(f));

408 
	`¥ötf
("%d%sÖaram%s, %d slot%s, %d upvalue%s, ",

409 ()(
f
->
num∑øms
),f->
is_v¨¨g
?"+":"",
	`SS
(f->numparams),

410 
	`S
(
f
->
max°acksize
),S(f->
sizeupvÆues
));

411 
	`¥ötf
("%dÜocal%s, %d constant%s, %d function%s\n",

412 
	`S
(
f
->
sizñocv¨s
),S(f->
sizek
),S(f->
sizï
));

413 
	}
}

415 
	$PrötDebug
(c⁄° 
PrŸo
* 
f
)

417 
i
,
n
;

418 
n
=
f
->
sizek
;

419 
	`¥ötf
("c⁄°™t†(%dËf‹ %p:\n",
n
,
	`VOID
(
f
));

420 
i
=0; i<
n
; i++)

422 
	`¥ötf
("\t%d\t",
i
+1);

423 
	`PrötC⁄°™t
(
f
,
i
);

424 
	`¥ötf
("\n");

426 
n
=
f
->
sizñocv¨s
;

427 
	`¥ötf
("loˇl†(%dËf‹ %p:\n",
n
,
	`VOID
(
f
));

428 
i
=0; i<
n
; i++)

430 
	`¥ötf
("\t%d\t%s\t%d\t%d\n",

431 
i
,
	`gë°r
(
f
->
locv¨s
[i].
v¨«me
),f->locv¨s[i].
°¨çc
+1,f->locv¨s[i].
ídpc
+1);

433 
n
=
f
->
sizeupvÆues
;

434 
	`¥ötf
("upvÆue†(%dËf‹ %p:\n",
n
,
	`VOID
(
f
));

435 
i
=0; i<
n
; i++)

437 
	`¥ötf
("\t%d\t%s\t%d\t%d\n",

438 
i
,
	`UPVALNAME
(i),
f
->
upvÆues
[i].
ö°ack
,f->upvÆues[i].
idx
);

440 
	}
}

442 
	$PrötFun˘i⁄
(c⁄° 
PrŸo
* 
f
, 
fuŒ
)

444 
i
,
n
=
f
->
sizï
;

445 
	`PrötHódî
(
f
);

446 
	`PrötCode
(
f
);

447 i‡(
fuŒ
Ë
	`PrötDebug
(
f
);

448 
i
=0; i<
n
; i++Ë
	`PrötFun˘i⁄
(
f
->
p
[i],
fuŒ
);

449 
	}
}

	@lua/src/luaconf.h

8 #i‚de‡
luac⁄f_h


9 
	#luac⁄f_h


	)

11 
	~<limôs.h
>

12 
	~<°ddef.h
>

50 #i‡!
deföed
(
LUA_USE_C89
Ë&& deföed(
_WIN32
Ë&& !deföed(
_WIN32_WCE
)

51 
	#LUA_USE_WINDOWS


	)

55 #i‡
deföed
(
LUA_USE_WINDOWS
)

56 
	#LUA_DL_DLL


	)

57 
	#LUA_USE_C89


	)

61 #i‡
deföed
(
LUA_USE_LINUX
)

62 
	#LUA_USE_POSIX


	)

63 
	#LUA_USE_DLOPEN


	)

64 
	#LUA_USE_READLINE


	)

68 #i‡
deföed
(
LUA_USE_MACOSX
)

69 
	#LUA_USE_POSIX


	)

70 
	#LUA_USE_DLOPEN


	)

71 
	#LUA_USE_READLINE


	)

80 #i‡
deföed
(
LUA_USE_C89
Ë&& !deföed(
LUA_USE_WINDOWS
)

81 
	#LUA_C89_NUMBERS


	)

90 #i‡((
INT_MAX
 >> 15) >> 15) >= 1

91 
	#LUAI_BITSINT
 32

	)

94 
	#LUAI_BITSINT
 16

	)

109 
	#LUA_INT_INT
 1

	)

110 
	#LUA_INT_LONG
 2

	)

111 
	#LUA_INT_LONGLONG
 3

	)

114 
	#LUA_FLOAT_FLOAT
 1

	)

115 
	#LUA_FLOAT_DOUBLE
 2

	)

116 
	#LUA_FLOAT_LONGDOUBLE
 3

	)

118 #i‡
deföed
(
LUA_32BITS
)

122 #i‡
LUAI_BITSINT
 >= 32

123 
	#LUA_INT_TYPE
 
LUA_INT_INT


	)

125 
	#LUA_INT_TYPE
 
LUA_INT_LONG


	)

127 
	#LUA_FLOAT_TYPE
 
LUA_FLOAT_FLOAT


	)

129 #ñi‡
deföed
(
LUA_C89_NUMBERS
)

133 
	#LUA_INT_TYPE
 
LUA_INT_LONG


	)

134 
	#LUA_FLOAT_TYPE
 
LUA_FLOAT_DOUBLE


	)

142 #i‡!
deföed
(
LUA_INT_TYPE
)

143 
	#LUA_INT_TYPE
 
LUA_INT_LONGLONG


	)

146 #i‡!
deföed
(
LUA_FLOAT_TYPE
)

147 
	#LUA_FLOAT_TYPE
 
LUA_FLOAT_DOUBLE


	)

170 
	#LUA_VDIR
 
LUA_VERSION_MAJOR
 "." 
LUA_VERSION_MINOR


	)

171 #i‡
deföed
(
_WIN32
)

176 
	#LUA_LDIR
 "!\\lua\\"

	)

177 
	#LUA_CDIR
 "!\\"

	)

178 
	#LUA_SHRDIR
 "!\\..\\sh¨e\\lua\\" 
LUA_VDIR
 "\\"

	)

179 
	#LUA_PATH_DEFAULT
 \

180 
LUA_LDIR
"?.lua;" LUA_LDIR"?\\init.lua;" \

181 
LUA_CDIR
"?.lua;" LUA_CDIR"?\\init.lua;" \

182 
LUA_SHRDIR
"?.lua;" LUA_SHRDIR"?\\init.lua;" \

183 ".\\?.lua;" ".\\?\\öô.lua"

	)

184 
	#LUA_CPATH_DEFAULT
 \

185 
LUA_CDIR
"?.dll;" \

186 
LUA_CDIR
"..\\lib\\lua\\" 
LUA_VDIR
 "\\?.dll;" \

187 
LUA_CDIR
"lﬂdÆl.dŒ;" ".\\?.dŒ"

	)

191 
	#LUA_ROOT
 "/u§/loˇl/"

	)

192 
	#LUA_LDIR
 
LUA_ROOT
 "sh¨e/lua/" 
LUA_VDIR
 "/"

	)

193 
	#LUA_CDIR
 
LUA_ROOT
 "lib/lua/" 
LUA_VDIR
 "/"

	)

194 
	#LUA_PATH_DEFAULT
 \

195 
LUA_LDIR
"?.lua;" LUA_LDIR"?/init.lua;" \

196 
LUA_CDIR
"?.lua;" LUA_CDIR"?/init.lua;" \

197 "./?.lua;" "./?/öô.lua"

	)

198 
	#LUA_CPATH_DEFAULT
 \

199 
LUA_CDIR
"?.so;" LUA_CDIR"lﬂdÆl.so;" "./?.so"

	)

208 #i‡
deföed
(
_WIN32
)

209 
	#LUA_DIRSEP
 "\\"

	)

211 
	#LUA_DIRSEP
 "/"

	)

232 #i‡
deföed
(
LUA_BUILD_AS_DLL
)

234 #i‡
deföed
(
LUA_CORE
Ë|| deföed(
LUA_LIB
)

235 
	#LUA_API
 
	`__de˛•ec
(
dŒexp‹t
)

	)

237 
	#LUA_API
 
	`__de˛•ec
(
dŒimp‹t
)

	)

242 
	#LUA_API
 

	)

248 
	#LUALIB_API
 
LUA_API


	)

249 
	#LUAMOD_API
 
LUALIB_API


	)

266 #i‡
deföed
(
__GNUC__
Ë&& ((__GNUC__*100 + 
__GNUC_MINOR__
) >= 302) && \

267 
	$deföed
(
__ELF__
)

268 
	#LUAI_FUNC
 
	`__©åibuã__
((
	`visibûôy
("hiddí"))Ë

	)

270 
	#LUAI_FUNC
 

	)

273 
	#LUAI_DDEC
 
LUAI_FUNC


	)

274 
	#LUAI_DDEF


	)

291 #i‡
	`deföed
(
LUA_COMPAT_5_2
)

297 
	#LUA_COMPAT_MATHLIB


	)

302 
	#LUA_COMPAT_BITLIB


	)

307 
	#LUA_COMPAT_IPAIRS


	)

314 
	#LUA_COMPAT_APIINTCASTS


	)

319 #i‡
	`deföed
(
LUA_COMPAT_5_1
)

322 
	#LUA_COMPAT_MATHLIB


	)

323 
	#LUA_COMPAT_APIINTCASTS


	)

329 
	#LUA_COMPAT_UNPACK


	)

335 
	#LUA_COMPAT_LOADERS


	)

341 
	#lua_˝ˇŒ
(
L
,
f
,
u
) \

342 (
	`lua_pushcfun˘i⁄
(
L
, (
f
)), \

343 
	`lua_pushlightu£rd©a
(
L
,(
u
)), \

344 
	`lua_pˇŒ
(
L
,1,0,0))

	)

351 
	#LUA_COMPAT_LOG10


	)

357 
	#LUA_COMPAT_LOADSTRING


	)

362 
	#LUA_COMPAT_MAXN


	)

369 
	#lua_°æí
(
L
,
i
Ë
	`lua_øwÀn
(L, (i))

	)

371 
	#lua_objÀn
(
L
,
i
Ë
	`lua_øwÀn
(L, (i))

	)

373 
	#lua_equÆ
(
L
,
idx1
,
idx2
Ë
	`lua_com∑ª
(L,(idx1),(idx2),
LUA_OPEQ
)

	)

374 
	#lua_Às°h™
(
L
,
idx1
,
idx2
Ë
	`lua_com∑ª
(L,(idx1),(idx2),
LUA_OPLT
)

	)

380 
	#LUA_COMPAT_MODULE


	)

422 
	#l_Êo‹
(
x
Ë(
	`l_m©h›
(
Êo‹
)(x))

	)

424 
	#lua_numbî2°r
(
s
,
sz
,
n
Ë
	`l_•rötf
((s), sz, 
LUA_NUMBER_FMT
, (n))

	)

434 
	#lua_numbîtoöãgî
(
n
,
p
) \

435 ((
n
Ë>(
LUA_NUMBER
)(
LUA_MININTEGER
) && \

436 (
n
Ë< -(
LUA_NUMBER
)(
LUA_MININTEGER
) && \

437 (*(
p
Ë(
LUA_INTEGER
)(
n
), 1))

	)

442 #i‡
LUA_FLOAT_TYPE
 =
LUA_FLOAT_FLOAT


444 
	#LUA_NUMBER
 

	)

446 
	#l_m©hlim
(
n
Ë(
FLT_
##n)

	)

448 
	#LUAI_UACNUMBER
 

	)

450 
	#LUA_NUMBER_FRMLEN
 ""

	)

451 
	#LUA_NUMBER_FMT
 "%.7g"

	)

453 
	#l_m©h›
(
›
Ë›##
f


	)

455 
	#lua_°r2numbî
(
s
,
p
Ë
	`°πof
((s), (p))

	)

458 #ñi‡
LUA_FLOAT_TYPE
 =
LUA_FLOAT_LONGDOUBLE


460 
	#LUA_NUMBER
 

	)

462 
	#l_m©hlim
(
n
Ë(
LDBL_
##n)

	)

464 
	#LUAI_UACNUMBER
 

	)

466 
	#LUA_NUMBER_FRMLEN
 "L"

	)

467 
	#LUA_NUMBER_FMT
 "%.19Lg"

	)

469 
	#l_m©h›
(
›
Ë›##
l


	)

471 
	#lua_°r2numbî
(
s
,
p
Ë
	`°πﬁd
((s), (p))

	)

473 #ñi‡
LUA_FLOAT_TYPE
 =
LUA_FLOAT_DOUBLE


475 
	#LUA_NUMBER
 

	)

477 
	#l_m©hlim
(
n
Ë(
DBL_
##n)

	)

479 
	#LUAI_UACNUMBER
 

	)

481 
	#LUA_NUMBER_FRMLEN
 ""

	)

482 
	#LUA_NUMBER_FMT
 "%.14g"

	)

484 
	#l_m©h›
(
›
Ë
	)
op

486 
	#lua_°r2numbî
(
s
,
p
Ë
	`°πod
((s), (p))

	)

513 
	#LUA_INTEGER_FMT
 "%" 
LUA_INTEGER_FRMLEN
 "d"

	)

514 
	#lua_öãgî2°r
(
s
,
sz
,
n
Ë
	`l_•rötf
((s), sz, 
LUA_INTEGER_FMT
, (n))

	)

516 
	#LUAI_UACINT
 
LUA_INTEGER


	)

522 
	#LUA_UNSIGNED
 
LUAI_UACINT


	)

527 #i‡
LUA_INT_TYPE
 =
LUA_INT_INT


529 
	#LUA_INTEGER
 

	)

530 
	#LUA_INTEGER_FRMLEN
 ""

	)

532 
	#LUA_MAXINTEGER
 
INT_MAX


	)

533 
	#LUA_MININTEGER
 
INT_MIN


	)

535 #ñi‡
LUA_INT_TYPE
 =
LUA_INT_LONG


537 
	#LUA_INTEGER
 

	)

538 
	#LUA_INTEGER_FRMLEN
 "l"

	)

540 
	#LUA_MAXINTEGER
 
LONG_MAX


	)

541 
	#LUA_MININTEGER
 
LONG_MIN


	)

543 #ñi‡
LUA_INT_TYPE
 =
LUA_INT_LONGLONG


546 #i‡
	`deföed
(
LLONG_MAX
)

549 
	#LUA_INTEGER
 

	)

550 
	#LUA_INTEGER_FRMLEN
 "Œ"

	)

552 
	#LUA_MAXINTEGER
 
LLONG_MAX


	)

553 
	#LUA_MININTEGER
 
LLONG_MIN


	)

555 #ñi‡
	`deföed
(
LUA_USE_WINDOWS
)

558 
	#LUA_INTEGER
 
__öt64


	)

559 
	#LUA_INTEGER_FRMLEN
 "I64"

	)

561 
	#LUA_MAXINTEGER
 
_I64_MAX


	)

562 
	#LUA_MININTEGER
 
_I64_MIN


	)

590 #i‡!
	`deföed
(
LUA_USE_C89
)

591 
	#l_•rötf
(
s
,
sz
,
f
,
i
Ë
	`¢¥ötf
(s,sz,f,i)

	)

593 
	#l_•rötf
(
s
,
sz
,
f
,
i
Ë(()(sz), 
	`•rötf
(s,f,i))

	)

603 #i‡!
	`deföed
(
LUA_USE_C89
)

604 
	#lua_°rx2numbî
(
s
,
p
Ë
	`lua_°r2numbî
(s,p)

	)

614 #i‡!
	`deföed
(
LUA_USE_C89
)

615 
	#lua_numbî2°rx
(
L
,
b
,
sz
,
f
,
n
Ë(()L, 
	`l_•rötf
(b,sz,f,n))

	)

625 #i‡
	`deföed
(
LUA_USE_C89
Ë|| (deföed(
HUGE_VAL
Ë&& !deföed(
HUGE_VALF
))

626 #unde‡
l_m©h›


627 #unde‡
lua_°r2numbî


628 
	#l_m©h›
(
›
Ë(
lua_Numbî
)›

	)

629 
	#lua_°r2numbî
(
s
,
p
Ë((
lua_Numbî
)
	`°πod
((s), (p)))

	)

639 
	#LUA_KCONTEXT
 
±rdiff_t


	)

641 #i‡!
	`deföed
(
LUA_USE_C89
Ë&& deföed(
__STDC_VERSION__
) && \

642 
__STDC_VERSION__
 >= 199901L

643 
	~<°döt.h
>

644 #i‡
	`deföed
(
INTPTR_MAX
)

645 #unde‡
LUA_KCONTEXT


646 
	#LUA_KCONTEXT
 
öçå_t


	)

656 #i‡!
	`deföed
(
lua_gëloˇÀde˝oöt
)

657 
	#lua_gëloˇÀde˝oöt
(Ë(
	`loˇÀc⁄v
()->
decimÆ_poöt
[0])

	)

683 #i‡
	`deföed
(
LUA_USE_APICHECK
)

684 
	~<as£π.h
>

685 
	#luai_≠icheck
(
l
,
e
Ë
	`as£π
”)

	)

705 #i‡
LUAI_BITSINT
 >= 32

706 
	#LUAI_MAXSTACK
 1000000

	)

708 
	#LUAI_MAXSTACK
 15000

	)

717 
	#LUA_EXTRASPACE
 ((*))

	)

725 
	#LUA_IDSIZE
 60

	)

735 #i‡
	`deföed
(
LUA_FLOAT_LONGDOUBLE
)

736 
	#LUAL_BUFFERSIZE
 8192

	)

738 
	#LUAL_BUFFERSIZE
 (()(0x80 * (*Ë* (
lua_I¡egî
)))

	)

749 
	#LUA_QL
(
x
Ë"'" x "'"

	)

750 
	#LUA_QS
 
	`LUA_QL
("%s")

	)

	@lua/src/lualib.h

8 #i‚de‡
luÆib_h


9 
	#luÆib_h


	)

11 
	~"lua.h
"

15 
LUAMOD_API
 (
lua›í_ba£
Ë(
lua_Sèã
 *
L
);

17 
	#LUA_COLIBNAME
 "c‹outöe"

	)

18 
LUAMOD_API
 (
lua›í_c‹outöe
Ë(
lua_Sèã
 *
L
);

20 
	#LUA_TABLIBNAME
 "èbÀ"

	)

21 
LUAMOD_API
 (
lua›í_èbÀ
Ë(
lua_Sèã
 *
L
);

23 
	#LUA_IOLIBNAME
 "io"

	)

24 
LUAMOD_API
 (
lua›í_io
Ë(
lua_Sèã
 *
L
);

26 
	#LUA_OSLIBNAME
 "os"

	)

27 
LUAMOD_API
 (
lua›í_os
Ë(
lua_Sèã
 *
L
);

29 
	#LUA_STRLIBNAME
 "°rög"

	)

30 
LUAMOD_API
 (
lua›í_°rög
Ë(
lua_Sèã
 *
L
);

32 
	#LUA_UTF8LIBNAME
 "utf8"

	)

33 
LUAMOD_API
 (
lua›í_utf8
Ë(
lua_Sèã
 *
L
);

35 
	#LUA_BITLIBNAME
 "bô32"

	)

36 
LUAMOD_API
 (
lua›í_bô32
Ë(
lua_Sèã
 *
L
);

38 
	#LUA_MATHLIBNAME
 "m©h"

	)

39 
LUAMOD_API
 (
lua›í_m©h
Ë(
lua_Sèã
 *
L
);

41 
	#LUA_DBLIBNAME
 "debug"

	)

42 
LUAMOD_API
 (
lua›í_debug
Ë(
lua_Sèã
 *
L
);

44 
	#LUA_LOADLIBNAME
 "∑ckage"

	)

45 
LUAMOD_API
 (
lua›í_∑ckage
Ë(
lua_Sèã
 *
L
);

49 
LUALIB_API
 (
luaL_›ílibs
Ë(
lua_Sèã
 *
L
);

53 #i‡!
	`deföed
(
lua_as£π
)

54 
	#lua_as£π
(
x
Ë(()0)

	)

	@lua/src/lundump.c

7 
	#lundump_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"ldebug.h
"

18 
	~"ldo.h
"

19 
	~"lfunc.h
"

20 
	~"lmem.h
"

21 
	~"lobje˘.h
"

22 
	~"l°rög.h
"

23 
	~"lundump.h
"

24 
	~"lzio.h
"

27 #i‡!
deföed
(
luai_vîifycode
)

28 
	#luai_vîifycode
(
L
,
b
,
f
Ë

	)

33 
lua_Sèã
 *
	mL
;

34 
ZIO
 *
	mZ
;

35 c⁄° *
	m«me
;

36 } 
	tLﬂdSèã
;

39 
l_n‹ë
 
	$îr‹
(
LﬂdSèã
 *
S
, c⁄° *
why
) {

40 
	`luaO_pushf°rög
(
S
->
L
, "%s: %†¥ecompûed chunk", S->
«me
, 
why
);

41 
	`luaD_throw
(
S
->
L
, 
LUA_ERRSYNTAX
);

42 
	}
}

49 
	#LﬂdVe˘‹
(
S
,
b
,
n
Ë
	`LﬂdBlock
(S,b,“)*((b)[0]))

	)

51 
	$LﬂdBlock
 (
LﬂdSèã
 *
S
, *
b
, 
size_t
 
size
) {

52 i‡(
	`luaZ_ªad
(
S
->
Z
, 
b
, 
size
) != 0)

53 
	`îr‹
(
S
, "truncated");

54 
	}
}

57 
	#LﬂdV¨
(
S
,
x
Ë
	`LﬂdVe˘‹
(S,&x,1)

	)

60 
lu_byã
 
	$LﬂdByã
 (
LﬂdSèã
 *
S
) {

61 
lu_byã
 
x
;

62 
	`LﬂdV¨
(
S
, 
x
);

63  
x
;

64 
	}
}

67 
	$LﬂdI¡
 (
LﬂdSèã
 *
S
) {

68 
x
;

69 
	`LﬂdV¨
(
S
, 
x
);

70  
x
;

71 
	}
}

74 
lua_Numbî
 
	$LﬂdNumbî
 (
LﬂdSèã
 *
S
) {

75 
lua_Numbî
 
x
;

76 
	`LﬂdV¨
(
S
, 
x
);

77  
x
;

78 
	}
}

81 
lua_I¡egî
 
	$LﬂdI¡egî
 (
LﬂdSèã
 *
S
) {

82 
lua_I¡egî
 
x
;

83 
	`LﬂdV¨
(
S
, 
x
);

84  
x
;

85 
	}
}

88 
TSåög
 *
	$LﬂdSåög
 (
LﬂdSèã
 *
S
) {

89 
size_t
 
size
 = 
	`LﬂdByã
(
S
);

90 i‡(
size
 == 0xFF)

91 
	`LﬂdV¨
(
S
, 
size
);

92 i‡(
size
 == 0)

93  
NULL
;

94 i‡(--
size
 <
LUAI_MAXSHORTLEN
) {

95 
buff
[
LUAI_MAXSHORTLEN
];

96 
	`LﬂdVe˘‹
(
S
, 
buff
, 
size
);

97  
	`luaS_√wl°r
(
S
->
L
, 
buff
, 
size
);

100 
TSåög
 *
ts
 = 
	`luaS_¸óã g°robj
(
S
->
L
, 
size
);

101 
	`LﬂdVe˘‹
(
S
, 
	`gë°r
(
ts
), 
size
);

102  
ts
;

104 
	}
}

107 
	$LﬂdCode
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
) {

108 
n
 = 
	`LﬂdI¡
(
S
);

109 
f
->
code
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, 
In°ru˘i⁄
);

110 
f
->
sizecode
 = 
n
;

111 
	`LﬂdVe˘‹
(
S
, 
f
->
code
, 
n
);

112 
	}
}

115 
LﬂdFun˘i⁄
(
LﬂdSèã
 *
S
, 
PrŸo
 *
f
, 
TSåög
 *
psour˚
);

118 
	$LﬂdC⁄°™ts
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
) {

119 
i
;

120 
n
 = 
	`LﬂdI¡
(
S
);

121 
f
->
k
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, 
TVÆue
);

122 
f
->
sizek
 = 
n
;

123 
i
 = 0; i < 
n
; i++)

124 
	`£äûvÆue
(&
f
->
k
[
i
]);

125 
i
 = 0; i < 
n
; i++) {

126 
TVÆue
 *
o
 = &
f
->
k
[
i
];

127 
t
 = 
	`LﬂdByã
(
S
);

128 
t
) {

129 
LUA_TNIL
:

130 
	`£äûvÆue
(
o
);

132 
LUA_TBOOLEAN
:

133 
	`£tbvÆue
(
o
, 
	`LﬂdByã
(
S
));

135 
LUA_TNUMFLT
:

136 
	`£tÊtvÆue
(
o
, 
	`LﬂdNumbî
(
S
));

138 
LUA_TNUMINT
:

139 
	`£tivÆue
(
o
, 
	`LﬂdI¡egî
(
S
));

141 
LUA_TSHRSTR
:

142 
LUA_TLNGSTR
:

143 
	`£tsvÆue2n
(
S
->
L
, 
o
, 
	`LﬂdSåög
(S));

146 
	`lua_as£π
(0);

149 
	}
}

152 
	$LﬂdPrŸos
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
) {

153 
i
;

154 
n
 = 
	`LﬂdI¡
(
S
);

155 
f
->
p
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, 
PrŸo
 *);

156 
f
->
sizï
 = 
n
;

157 
i
 = 0; i < 
n
; i++)

158 
f
->
p
[
i
] = 
NULL
;

159 
i
 = 0; i < 
n
; i++) {

160 
f
->
p
[
i
] = 
	`luaF_√w¥Ÿo
(
S
->
L
);

161 
	`LﬂdFun˘i⁄
(
S
, 
f
->
p
[
i
], f->
sour˚
);

163 
	}
}

166 
	$LﬂdUpvÆues
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
) {

167 
i
, 
n
;

168 
n
 = 
	`LﬂdI¡
(
S
);

169 
f
->
upvÆues
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, 
UpvÆdesc
);

170 
f
->
sizeupvÆues
 = 
n
;

171 
i
 = 0; i < 
n
; i++)

172 
f
->
upvÆues
[
i
].
«me
 = 
NULL
;

173 
i
 = 0; i < 
n
; i++) {

174 
f
->
upvÆues
[
i
].
ö°ack
 = 
	`LﬂdByã
(
S
);

175 
f
->
upvÆues
[
i
].
idx
 = 
	`LﬂdByã
(
S
);

177 
	}
}

180 
	$LﬂdDebug
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
) {

181 
i
, 
n
;

182 
n
 = 
	`LﬂdI¡
(
S
);

183 
f
->
löeöfo
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, );

184 
f
->
sizñöeöfo
 = 
n
;

185 
	`LﬂdVe˘‹
(
S
, 
f
->
löeöfo
, 
n
);

186 
n
 = 
	`LﬂdI¡
(
S
);

187 
f
->
locv¨s
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, 
LocV¨
);

188 
f
->
sizñocv¨s
 = 
n
;

189 
i
 = 0; i < 
n
; i++)

190 
f
->
locv¨s
[
i
].
v¨«me
 = 
NULL
;

191 
i
 = 0; i < 
n
; i++) {

192 
f
->
locv¨s
[
i
].
v¨«me
 = 
	`LﬂdSåög
(
S
);

193 
f
->
locv¨s
[
i
].
°¨çc
 = 
	`LﬂdI¡
(
S
);

194 
f
->
locv¨s
[
i
].
ídpc
 = 
	`LﬂdI¡
(
S
);

196 
n
 = 
	`LﬂdI¡
(
S
);

197 
i
 = 0; i < 
n
; i++)

198 
f
->
upvÆues
[
i
].
«me
 = 
	`LﬂdSåög
(
S
);

199 
	}
}

202 
	$LﬂdFun˘i⁄
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
, 
TSåög
 *
psour˚
) {

203 
f
->
sour˚
 = 
	`LﬂdSåög
(
S
);

204 i‡(
f
->
sour˚
 =
NULL
)

205 
f
->
sour˚
 = 
psour˚
;

206 
f
->
löedeföed
 = 
	`LﬂdI¡
(
S
);

207 
f
->
œ°löedeföed
 = 
	`LﬂdI¡
(
S
);

208 
f
->
num∑øms
 = 
	`LﬂdByã
(
S
);

209 
f
->
is_v¨¨g
 = 
	`LﬂdByã
(
S
);

210 
f
->
max°acksize
 = 
	`LﬂdByã
(
S
);

211 
	`LﬂdCode
(
S
, 
f
);

212 
	`LﬂdC⁄°™ts
(
S
, 
f
);

213 
	`LﬂdUpvÆues
(
S
, 
f
);

214 
	`LﬂdPrŸos
(
S
, 
f
);

215 
	`LﬂdDebug
(
S
, 
f
);

216 
	}
}

219 
	$checklôîÆ
 (
LﬂdSèã
 *
S
, c⁄° *
s
, c⁄° *
msg
) {

220 
buff
[(
LUA_SIGNATURE
Ë+ (
LUAC_DATA
)];

221 
size_t
 
Àn
 = 
	`°æí
(
s
);

222 
	`LﬂdVe˘‹
(
S
, 
buff
, 
Àn
);

223 i‡(
	`memcmp
(
s
, 
buff
, 
Àn
) != 0)

224 
	`îr‹
(
S
, 
msg
);

225 
	}
}

228 
	$fchecksize
 (
LﬂdSèã
 *
S
, 
size_t
 
size
, c⁄° *
äame
) {

229 i‡(
	`LﬂdByã
(
S
Ë!
size
)

230 
	`îr‹
(
S
, 
	`luaO_pushf°rög
(S->
L
, "%†sizêmism©ch in", 
äame
));

231 
	}
}

234 
	#checksize
(
S
,
t
Ë
	`fchecksize
(S,—),#t)

	)

236 
	$checkHódî
 (
LﬂdSèã
 *
S
) {

237 
	`checklôîÆ
(
S
, 
LUA_SIGNATURE
 + 1, "notá");

238 i‡(
	`LﬂdByã
(
S
Ë!
LUAC_VERSION
)

239 
	`îr‹
(
S
, "version mismatch in");

240 i‡(
	`LﬂdByã
(
S
Ë!
LUAC_FORMAT
)

241 
	`îr‹
(
S
, "format mismatch in");

242 
	`checklôîÆ
(
S
, 
LUAC_DATA
, "corrupted");

243 
	`checksize
(
S
, );

244 
	`checksize
(
S
, 
size_t
);

245 
	`checksize
(
S
, 
In°ru˘i⁄
);

246 
	`checksize
(
S
, 
lua_I¡egî
);

247 
	`checksize
(
S
, 
lua_Numbî
);

248 i‡(
	`LﬂdI¡egî
(
S
Ë!
LUAC_INT
)

249 
	`îr‹
(
S
, "endianness mismatch in");

250 i‡(
	`LﬂdNumbî
(
S
Ë!
LUAC_NUM
)

251 
	`îr‹
(
S
, "float format mismatch in");

252 
	}
}

258 
LClosuª
 *
	$luaU_undump
(
lua_Sèã
 *
L
, 
ZIO
 *
Z
, c⁄° *
«me
) {

259 
LﬂdSèã
 
S
;

260 
LClosuª
 *
˛
;

261 i‡(*
«me
 == '@' || *name == '=')

262 
S
.
«me
 =Çame + 1;

263 i‡(*
«me
 =
LUA_SIGNATURE
[0])

264 
S
.
«me
 = "binary string";

266 
S
.
«me
 =Çame;

267 
S
.
L
 = L;

268 
S
.
Z
 = Z;

269 
	`checkHódî
(&
S
);

270 
˛
 = 
	`luaF_√wL˛osuª
(
L
, 
	`LﬂdByã
(&
S
));

271 
	`£t˛LvÆue
(
L
, L->
t›
, 
˛
);

272 
	`luaD_ö˘›
(
L
);

273 
˛
->
p
 = 
	`luaF_√w¥Ÿo
(
L
);

274 
	`LﬂdFun˘i⁄
(&
S
, 
˛
->
p
, 
NULL
);

275 
	`lua_as£π
(
˛
->
nupvÆues
 =˛->
p
->
sizeupvÆues
);

276 
	`luai_vîifycode
(
L
, 
buff
, 
˛
->
p
);

277  
˛
;

278 
	}
}

	@lua/src/lundump.h

7 #i‚de‡
lundump_h


8 
	#lundump_h


	)

10 
	~"Œimôs.h
"

11 
	~"lobje˘.h
"

12 
	~"lzio.h
"

16 
	#LUAC_DATA
 "\x19\x93\r\n\x1a\n"

	)

18 
	#LUAC_INT
 0x5678

	)

19 
	#LUAC_NUM
 
	`ˇ°_num
(370.5)

	)

21 
	#MYINT
(
s
Ë(s[0]-'0')

	)

22 
	#LUAC_VERSION
 (
	`MYINT
(
LUA_VERSION_MAJOR
)*16+MYINT(
LUA_VERSION_MINOR
))

	)

23 
	#LUAC_FORMAT
 0

	)

26 
LUAI_FUNC
 
LClosuª
* 
luaU_undump
 (
lua_Sèã
* 
L
, 
ZIO
* 
Z
, c⁄° * 
«me
);

29 
LUAI_FUNC
 
luaU_dump
 (
lua_Sèã
* 
L
, c⁄° 
PrŸo
* 
f
, 
lua_Wrôî
 
w
,

30 * 
d©a
, 
°rù
);

	@lua/src/lutf8lib.c

7 
	#lutf8lib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<as£π.h
>

14 
	~<limôs.h
>

15 
	~<°dlib.h
>

16 
	~<°rög.h
>

18 
	~"lua.h
"

20 
	~"œuxlib.h
"

21 
	~"luÆib.h
"

23 
	#MAXUNICODE
 0x10FFFF

	)

25 
	#isc⁄t
(
p
Ë((*’Ë& 0xC0Ë=0x80)

	)

30 
lua_I¡egî
 
	$u_po§ñ©
 (
lua_I¡egî
 
pos
, 
size_t
 
Àn
) {

31 i‡(
pos
 >= 0) Öos;

32 i‡(0u - (
size_t
)
pos
 > 
Àn
)  0;

33  (
lua_I¡egî
)
Àn
 + 
pos
 + 1;

34 
	}
}

40 c⁄° *
	$utf8_decode
 (c⁄° *
o
, *
vÆ
) {

41 c⁄° 
limôs
[] = {0xFF, 0x7F, 0x7FF, 0xFFFF};

42 c⁄° *
s
 = (c⁄° *)
o
;

43 
c
 = 
s
[0];

44 
ªs
 = 0;

45 i‡(
c
 < 0x80)

46 
ªs
 = 
c
;

48 
cou¡
 = 0;

49 
c
 & 0x40) {

50 
cc
 = 
s
[++
cou¡
];

51 i‡((
cc
 & 0xC0) != 0x80)

52  
NULL
;

53 
ªs
 = (ª†<< 6Ë| (
cc
 & 0x3F);

54 
c
 <<= 1;

56 
ªs
 |((
c
 & 0x7FË<< (
cou¡
 * 5));

57 i‡(
cou¡
 > 3 || 
ªs
 > 
MAXUNICODE
 ||Ñe†<
limôs
[count])

58  
NULL
;

59 
s
 +
cou¡
;

61 i‡(
vÆ
Ë*vÆ = 
ªs
;

62  (c⁄° *)
s
 + 1;

63 
	}
}

71 
	$utÊí
 (
lua_Sèã
 *
L
) {

72 
n
 = 0;

73 
size_t
 
Àn
;

74 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
Àn
);

75 
lua_I¡egî
 
posi
 = 
	`u_po§ñ©
(
	`luaL_›töãgî
(
L
, 2, 1), 
Àn
);

76 
lua_I¡egî
 
posj
 = 
	`u_po§ñ©
(
	`luaL_›töãgî
(
L
, 3, -1), 
Àn
);

77 
	`luaL_¨gcheck
(
L
, 1 <
posi
 && --posò<(
lua_I¡egî
)
Àn
, 2,

79 
	`luaL_¨gcheck
(
L
, --
posj
 < (
lua_I¡egî
)
Àn
, 3,

81 
posi
 <
posj
) {

82 c⁄° *
s1
 = 
	`utf8_decode
(
s
 + 
posi
, 
NULL
);

83 i‡(
s1
 =
NULL
) {

84 
	`lua_pushnû
(
L
);

85 
	`lua_pushöãgî
(
L
, 
posi
 + 1);

88 
posi
 = 
s1
 - 
s
;

89 
n
++;

91 
	`lua_pushöãgî
(
L
, 
n
);

93 
	}
}

100 
	$codïoöt
 (
lua_Sèã
 *
L
) {

101 
size_t
 
Àn
;

102 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
Àn
);

103 
lua_I¡egî
 
posi
 = 
	`u_po§ñ©
(
	`luaL_›töãgî
(
L
, 2, 1), 
Àn
);

104 
lua_I¡egî
 
po£
 = 
	`u_po§ñ©
(
	`luaL_›töãgî
(
L
, 3, 
posi
), 
Àn
);

105 
n
;

106 c⁄° *
£
;

107 
	`luaL_¨gcheck
(
L
, 
posi
 >= 1, 2, "out ofÑange");

108 
	`luaL_¨gcheck
(
L
, 
po£
 <(
lua_I¡egî
)
Àn
, 3, "out ofÑange");

109 i‡(
posi
 > 
po£
)  0;

110 i‡(
po£
 - 
posi
 >
INT_MAX
)

111  
	`luaL_îr‹
(
L
, "string sliceÅooÜong");

112 
n
 = ()(
po£
 - 
posi
) + 1;

113 
	`luaL_check°ack
(
L
, 
n
, "string sliceÅooÜong");

114 
n
 = 0;

115 
£
 = 
s
 + 
po£
;

116 
s
 +
posi
 - 1; s < 
£
;) {

117 
code
;

118 
s
 = 
	`utf8_decode
(s, &
code
);

119 i‡(
s
 =
NULL
)

120  
	`luaL_îr‹
(
L
, "invalid UTF-8 code");

121 
	`lua_pushöãgî
(
L
, 
code
);

122 
n
++;

124  
n
;

125 
	}
}

128 
	$pushutfch¨
 (
lua_Sèã
 *
L
, 
¨g
) {

129 
lua_I¡egî
 
code
 = 
	`luaL_checköãgî
(
L
, 
¨g
);

130 
	`luaL_¨gcheck
(
L
, 0 <
code
 && codê<
MAXUNICODE
, 
¨g
, "value out ofÑange");

131 
	`lua_pushf°rög
(
L
, "%U", ()
code
);

132 
	}
}

138 
	$utfch¨
 (
lua_Sèã
 *
L
) {

139 
n
 = 
	`lua_gët›
(
L
);

140 i‡(
n
 == 1)

141 
	`pushutfch¨
(
L
, 1);

143 
i
;

144 
luaL_Buf„r
 
b
;

145 
	`luaL_bufföô
(
L
, &
b
);

146 
i
 = 1; i <
n
; i++) {

147 
	`pushutfch¨
(
L
, 
i
);

148 
	`luaL_addvÆue
(&
b
);

150 
	`luaL_pushªsu…
(&
b
);

153 
	}
}

160 
	$byãoff£t
 (
lua_Sèã
 *
L
) {

161 
size_t
 
Àn
;

162 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
Àn
);

163 
lua_I¡egî
 
n
 = 
	`luaL_checköãgî
(
L
, 2);

164 
lua_I¡egî
 
posi
 = (
n
 >0Ë? 1 : 
Àn
 + 1;

165 
posi
 = 
	`u_po§ñ©
(
	`luaL_›töãgî
(
L
, 3,Öosi), 
Àn
);

166 
	`luaL_¨gcheck
(
L
, 1 <
posi
 && --posò<(
lua_I¡egî
)
Àn
, 3,

168 i‡(
n
 == 0) {

170 
posi
 > 0 && 
	`isc⁄t
(
s
 +Öosi))Öosi--;

173 i‡(
	`isc⁄t
(
s
 + 
posi
))

174 
	`luaL_îr‹
(
L
, "initialÖosition isá continuation byte");

175 i‡(
n
 < 0) {

176 
n
 < 0 && 
posi
 > 0) {

178 
posi
--;

179 } 
posi
 > 0 && 
	`isc⁄t
(
s
 +Öosi));

180 
n
++;

184 
n
--;

185 
n
 > 0 && 
posi
 < (
lua_I¡egî
)
Àn
) {

187 
posi
++;

188 } 
	`isc⁄t
(
s
 + 
posi
));

189 
n
--;

193 i‡(
n
 == 0)

194 
	`lua_pushöãgî
(
L
, 
posi
 + 1);

196 
	`lua_pushnû
(
L
);

198 
	}
}

201 
	$ôî_aux
 (
lua_Sèã
 *
L
) {

202 
size_t
 
Àn
;

203 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
Àn
);

204 
lua_I¡egî
 
n
 = 
	`lua_toöãgî
(
L
, 2) - 1;

205 i‡(
n
 < 0)

206 
n
 = 0;

207 i‡(
n
 < (
lua_I¡egî
)
Àn
) {

208 
n
++;

209 
	`isc⁄t
(
s
 + 
n
))Ç++;

211 i‡(
n
 >(
lua_I¡egî
)
Àn
)

214 
code
;

215 c⁄° *
√xt
 = 
	`utf8_decode
(
s
 + 
n
, &
code
);

216 i‡(
√xt
 =
NULL
 || 
	`isc⁄t
(next))

217  
	`luaL_îr‹
(
L
, "invalid UTF-8 code");

218 
	`lua_pushöãgî
(
L
, 
n
 + 1);

219 
	`lua_pushöãgî
(
L
, 
code
);

222 
	}
}

225 
	$ôî_codes
 (
lua_Sèã
 *
L
) {

226 
	`luaL_check°rög
(
L
, 1);

227 
	`lua_pushcfun˘i⁄
(
L
, 
ôî_aux
);

228 
	`lua_pushvÆue
(
L
, 1);

229 
	`lua_pushöãgî
(
L
, 0);

231 
	}
}

235 
	#UTF8PATT
 "[\0-\x7F\xC2-\xF4][\x80-\xBF]*"

	)

238 c⁄° 
luaL_Reg
 
	gfuncs
[] = {

239 {"off£t", 
byãoff£t
},

240 {"codïoöt", 
codïoöt
},

241 {"ch¨", 
utfch¨
},

242 {"Àn", 
utÊí
},

243 {"codes", 
ôî_codes
},

245 {"ch¨∑âîn", 
NULL
},

246 {
NULL
, NULL}

250 
LUAMOD_API
 
	$lua›í_utf8
 (
lua_Sèã
 *
L
) {

251 
	`luaL_√wlib
(
L
, 
funcs
);

252 
	`lua_pushl°rög
(
L
, 
UTF8PATT
, (UTF8PATT)/() - 1);

253 
	`lua_£tfõld
(
L
, -2, "charpattern");

255 
	}
}

	@lua/src/lvm.c

7 
	#lvm_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

12 
	~<Êﬂt.h
>

13 
	~<limôs.h
>

14 
	~<m©h.h
>

15 
	~<°dio.h
>

16 
	~<°dlib.h
>

17 
	~<°rög.h
>

19 
	~"lua.h
"

21 
	~"ldebug.h
"

22 
	~"ldo.h
"

23 
	~"lfunc.h
"

24 
	~"lgc.h
"

25 
	~"lobje˘.h
"

26 
	~"l›codes.h
"

27 
	~"l°©e.h
"

28 
	~"l°rög.h
"

29 
	~"…abÀ.h
"

30 
	~"…m.h
"

31 
	~"lvm.h
"

35 
	#MAXTAGLOOP
 2000

	)

44 #i‡!
deföed
(
l_ötfôsf
)

47 
	#NBM
 (
	`l_m©hlim
(
MANT_DIG
))

	)

56 #i‡((((
LUA_MAXINTEGER
 >> (
NBM
 / 4)) >> (NBM / 4)) >> (NBM / 4)) \

57 >> (
	gNBM
 - (3 * (NBM / 4)))) > 0

59 
	#l_ötfôsf
(
i
) \

60 (-((
lua_I¡egî
)1 << 
NBM
Ë<(
i
Ë&& (iË<(÷ua_I¡egî)1 << NBM))

	)

72 
	$luaV_t⁄umbî_
 (c⁄° 
TVÆue
 *
obj
, 
lua_Numbî
 *
n
) {

73 
TVÆue
 
v
;

74 i‡(
	`âisöãgî
(
obj
)) {

75 *
n
 = 
	`ˇ°_num
(
	`ivÆue
(
obj
));

78 i‡(
	`cvt2num
(
obj
) &&

79 
	`luaO_°r2num
(
	`svÆue
(
obj
), &
v
Ë=
	`v¶í
(obj) + 1) {

80 *
n
 = 
	`nvÆue
(&
v
);

85 
	}
}

94 
	$luaV_toöãgî
 (c⁄° 
TVÆue
 *
obj
, 
lua_I¡egî
 *
p
, 
mode
) {

95 
TVÆue
 
v
;

96 
agaö
:

97 i‡(
	`âisÊﬂt
(
obj
)) {

98 
lua_Numbî
 
n
 = 
	`ÊtvÆue
(
obj
);

99 
lua_Numbî
 
f
 = 
	`l_Êo‹
(
n
);

100 i‡(
n
 !
f
) {

101 i‡(
mode
 == 0)  0;

102 i‡(
mode
 > 1)

103 
f
 += 1;

105  
	`lua_numbîtoöãgî
(
f
, 
p
);

107 i‡(
	`âisöãgî
(
obj
)) {

108 *
p
 = 
	`ivÆue
(
obj
);

111 i‡(
	`cvt2num
(
obj
) &&

112 
	`luaO_°r2num
(
	`svÆue
(
obj
), &
v
Ë=
	`v¶í
(obj) + 1) {

113 
obj
 = &
v
;

114 
agaö
;

117 
	}
}

135 
	$f‹limô
 (c⁄° 
TVÆue
 *
obj
, 
lua_I¡egî
 *
p
,Üua_I¡egî 
°ï
,

136 *
°›now
) {

137 *
°›now
 = 0;

138 i‡(!
	`luaV_toöãgî
(
obj
, 
p
, (
°ï
 < 0 ? 2 : 1))) {

139 
lua_Numbî
 
n
;

140 i‡(!
	`t⁄umbî
(
obj
, &
n
))

142 i‡(
	`luai_num…
(0, 
n
)) {

143 *
p
 = 
LUA_MAXINTEGER
;

144 i‡(
°ï
 < 0Ë*
°›now
 = 1;

147 *
p
 = 
LUA_MININTEGER
;

148 i‡(
°ï
 >0Ë*
°›now
 = 1;

152 
	}
}

160 
	$luaV_föishgë
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, TVÆuê*
key
, 
StkId
 
vÆ
,

161 c⁄° 
TVÆue
 *
¶Ÿ
) {

162 
lo›
;

163 c⁄° 
TVÆue
 *
tm
;

164 
lo›
 = 0;Üo› < 
MAXTAGLOOP
;Üoop++) {

165 i‡(
¶Ÿ
 =
NULL
) {

166 
	`lua_as£π
(!
	`âi°abÀ
(
t
));

167 
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
t
, 
TM_INDEX
);

168 i‡(
	`âi¢û
(
tm
))

169 
	`luaG_ty≥îr‹
(
L
, 
t
, "index");

173 
	`lua_as£π
(
	`âi¢û
(
¶Ÿ
));

174 
tm
 = 
	`Á°tm
(
L
, 
	`hvÆue
(
t
)->
më©abÀ
, 
TM_INDEX
);

175 i‡(
tm
 =
NULL
) {

176 
	`£äûvÆue
(
vÆ
);

181 i‡(
	`âisfun˘i⁄
(
tm
)) {

182 
	`luaT_ˇŒTM
(
L
, 
tm
, 
t
, 
key
, 
vÆ
, 1);

185 
t
 = 
tm
;

186 i‡(
	`luaV_Á°gë
(
L
,
t
,
key
,
¶Ÿ
,
luaH_gë
)) {

187 
	`£tobj2s
(
L
, 
vÆ
, 
¶Ÿ
);

192 
	`luaG_ru√º‹
(
L
, "'__index' chainÅooÜong;ÖossibleÜoop");

193 
	}
}

203 
	$luaV_föish£t
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, TVÆuê*
key
,

204 
StkId
 
vÆ
, c⁄° 
TVÆue
 *
¶Ÿ
) {

205 
lo›
;

206 
lo›
 = 0;Üo› < 
MAXTAGLOOP
;Üoop++) {

207 c⁄° 
TVÆue
 *
tm
;

208 i‡(
¶Ÿ
 !
NULL
) {

209 
TabÀ
 *
h
 = 
	`hvÆue
(
t
);

210 
	`lua_as£π
(
	`âi¢û
(
¶Ÿ
));

211 
tm
 = 
	`Á°tm
(
L
, 
h
->
më©abÀ
, 
TM_NEWINDEX
);

212 i‡(
tm
 =
NULL
) {

213 i‡(
¶Ÿ
 =
luaO_nûobje˘
)

214 
¶Ÿ
 = 
	`luaH_√wkey
(
L
, 
h
, 
key
);

216 
	`£tobj2t
(
L
, 
	`ˇ°
(
TVÆue
 *, 
¶Ÿ
), 
vÆ
);

217 
	`övÆid©eTMˇche
(
h
);

218 
	`luaC_b¨rõrback
(
L
, 
h
, 
vÆ
);

224 i‡(
	`âi¢û
(
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
t
, 
TM_NEWINDEX
)))

225 
	`luaG_ty≥îr‹
(
L
, 
t
, "index");

228 i‡(
	`âisfun˘i⁄
(
tm
)) {

229 
	`luaT_ˇŒTM
(
L
, 
tm
, 
t
, 
key
, 
vÆ
, 0);

232 
t
 = 
tm
;

233 i‡(
	`luaV_Á°£t
(
L
, 
t
, 
key
, 
¶Ÿ
, 
luaH_gë
, 
vÆ
))

237 
	`luaG_ru√º‹
(
L
, "'__newindex' chainÅooÜong;ÖossibleÜoop");

238 
	}
}

248 
	$l_°rcmp
 (c⁄° 
TSåög
 *
ls
, c⁄° TSåög *
rs
) {

249 c⁄° *
l
 = 
	`gë°r
(
ls
);

250 
size_t
 
Œ
 = 
	`ts¶í
(
ls
);

251 c⁄° *
r
 = 
	`gë°r
(
rs
);

252 
size_t
 
Ã
 = 
	`ts¶í
(
rs
);

254 
ãmp
 = 
	`°rcﬁl
(
l
, 
r
);

255 i‡(
ãmp
 != 0)

256  
ãmp
;

258 
size_t
 
Àn
 = 
	`°æí
(
l
);

259 i‡(
Àn
 =
Ã
)

260  (
Àn
 =
Œ
) ? 0 : 1;

261 i‡(
Àn
 =
Œ
)

264 
Àn
++;

265 
l
 +
Àn
; 
Œ
 -Àn; 
r
 +Àn; 
Ã
 -=Üen;

268 
	}
}

281 
	$LTötÊﬂt
 (
lua_I¡egî
 
i
, 
lua_Numbî
 
f
) {

282 #i‡
	`deföed
(
l_ötfôsf
)

283 i‡(!
	`l_ötfôsf
(
i
)) {

284 i‡(
f
 >-
	`ˇ°_num
(
LUA_MININTEGER
))

286 i‡(
f
 > 
	`ˇ°_num
(
LUA_MININTEGER
))

287  (
i
 < 
	`ˇ°
(
lua_I¡egî
, 
f
));

292  
	`luai_num…
(
	`ˇ°_num
(
i
), 
f
);

293 
	}
}

300 
	$LEötÊﬂt
 (
lua_I¡egî
 
i
, 
lua_Numbî
 
f
) {

301 #i‡
	`deföed
(
l_ötfôsf
)

302 i‡(!
	`l_ötfôsf
(
i
)) {

303 i‡(
f
 >-
	`ˇ°_num
(
LUA_MININTEGER
))

305 i‡(
f
 >
	`ˇ°_num
(
LUA_MININTEGER
))

306  (
i
 <
	`ˇ°
(
lua_I¡egî
, 
f
));

311  
	`luai_numÀ
(
	`ˇ°_num
(
i
), 
f
);

312 
	}
}

318 
	$LTnum
 (c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
) {

319 i‡(
	`âisöãgî
(
l
)) {

320 
lua_I¡egî
 
li
 = 
	`ivÆue
(
l
);

321 i‡(
	`âisöãgî
(
r
))

322  
li
 < 
	`ivÆue
(
r
);

324  
	`LTötÊﬂt
(
li
, 
	`ÊtvÆue
(
r
));

327 
lua_Numbî
 
lf
 = 
	`ÊtvÆue
(
l
);

328 i‡(
	`âisÊﬂt
(
r
))

329  
	`luai_num…
(
lf
, 
	`ÊtvÆue
(
r
));

330 i‡(
	`luai_numi¢™
(
lf
))

333  !
	`LEötÊﬂt
(
	`ivÆue
(
r
), 
lf
);

335 
	}
}

341 
	$LEnum
 (c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
) {

342 i‡(
	`âisöãgî
(
l
)) {

343 
lua_I¡egî
 
li
 = 
	`ivÆue
(
l
);

344 i‡(
	`âisöãgî
(
r
))

345  
li
 <
	`ivÆue
(
r
);

347  
	`LEötÊﬂt
(
li
, 
	`ÊtvÆue
(
r
));

350 
lua_Numbî
 
lf
 = 
	`ÊtvÆue
(
l
);

351 i‡(
	`âisÊﬂt
(
r
))

352  
	`luai_numÀ
(
lf
, 
	`ÊtvÆue
(
r
));

353 i‡(
	`luai_numi¢™
(
lf
))

356  !
	`LTötÊﬂt
(
	`ivÆue
(
r
), 
lf
);

358 
	}
}

364 
	$luaV_Às°h™
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
) {

365 
ªs
;

366 i‡(
	`âi¢umbî
(
l
Ë&&Åti¢umbî(
r
))

367  
	`LTnum
(
l
, 
r
);

368 i‡(
	`âis°rög
(
l
Ë&&Åtis°rög(
r
))

369  
	`l_°rcmp
(
	`tsvÆue
(
l
),ÅsvÆue(
r
)) < 0;

370 i‡((
ªs
 = 
	`luaT_ˇŒ‹dîTM
(
L
, 
l
, 
r
, 
TM_LT
)) < 0)

371 
	`luaG_‹dîîr‹
(
L
, 
l
, 
r
);

372  
ªs
;

373 
	}
}

384 
	$luaV_Às£quÆ
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
) {

385 
ªs
;

386 i‡(
	`âi¢umbî
(
l
Ë&&Åti¢umbî(
r
))

387  
	`LEnum
(
l
, 
r
);

388 i‡(
	`âis°rög
(
l
Ë&&Åtis°rög(
r
))

389  
	`l_°rcmp
(
	`tsvÆue
(
l
),ÅsvÆue(
r
)) <= 0;

390 i‡((
ªs
 = 
	`luaT_ˇŒ‹dîTM
(
L
, 
l
, 
r
, 
TM_LE
)) >= 0)

391  
ªs
;

393 
L
->
ci
->
ˇŒ°©us
 |
CIST_LEQ
;

394 
ªs
 = 
	`luaT_ˇŒ‹dîTM
(
L
, 
r
, 
l
, 
TM_LT
);

395 
L
->
ci
->
ˇŒ°©us
 ^
CIST_LEQ
;

396 i‡(
ªs
 < 0)

397 
	`luaG_‹dîîr‹
(
L
, 
l
, 
r
);

398  !
ªs
;

400 
	}
}

407 
	$luaV_equÆobj
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t1
, c⁄° TVÆuê*
t2
) {

408 c⁄° 
TVÆue
 *
tm
;

409 i‡(
	`ây≥
(
t1
Ë!ây≥(
t2
)) {

410 i‡(
	`ânov
(
t1
Ë!ânov(
t2
Ë||Åäov—1Ë!
LUA_TNUMBER
)

413 
lua_I¡egî
 
i1
, 
i2
;

414  (
	`toöãgî
(
t1
, &
i1
Ë&&Åoöãgî(
t2
, &
i2
) && i1 == i2);

418 
	`ây≥
(
t1
)) {

419 
LUA_TNIL
:  1;

420 
LUA_TNUMINT
:  (
	`ivÆue
(
t1
Ë=ivÆue(
t2
));

421 
LUA_TNUMFLT
:  
	`luai_numeq
(
	`ÊtvÆue
(
t1
), f…vÆue(
t2
));

422 
LUA_TBOOLEAN
:  
	`bvÆue
(
t1
Ë=bvÆue(
t2
);

423 
LUA_TLIGHTUSERDATA
:  
	`pvÆue
(
t1
Ë=pvÆue(
t2
);

424 
LUA_TLCF
:  
	`fvÆue
(
t1
Ë=fvÆue(
t2
);

425 
LUA_TSHRSTR
:  
	`eqshr°r
(
	`tsvÆue
(
t1
),ÅsvÆue(
t2
));

426 
LUA_TLNGSTR
:  
	`luaS_eq g°r
(
	`tsvÆue
(
t1
),ÅsvÆue(
t2
));

427 
LUA_TUSERDATA
: {

428 i‡(
	`uvÆue
(
t1
Ë=uvÆue(
t2
))  1;

429 i‡(
L
 =
NULL
)  0;

430 
tm
 = 
	`Á°tm
(
L
, 
	`uvÆue
(
t1
)->
më©abÀ
, 
TM_EQ
);

431 i‡(
tm
 =
NULL
)

432 
tm
 = 
	`Á°tm
(
L
, 
	`uvÆue
(
t2
)->
më©abÀ
, 
TM_EQ
);

435 
LUA_TTABLE
: {

436 i‡(
	`hvÆue
(
t1
Ë=hvÆue(
t2
))  1;

437 i‡(
L
 =
NULL
)  0;

438 
tm
 = 
	`Á°tm
(
L
, 
	`hvÆue
(
t1
)->
më©abÀ
, 
TM_EQ
);

439 i‡(
tm
 =
NULL
)

440 
tm
 = 
	`Á°tm
(
L
, 
	`hvÆue
(
t2
)->
më©abÀ
, 
TM_EQ
);

444  
	`gcvÆue
(
t1
Ë=gcvÆue(
t2
);

446 i‡(
tm
 =
NULL
)

448 
	`luaT_ˇŒTM
(
L
, 
tm
, 
t1
, 
t2
, L->
t›
, 1);

449  !
	`l_isÁl£
(
L
->
t›
);

450 
	}
}

454 
	#to°rög
(
L
,
o
) \

455 (
	`âis°rög
(
o
Ë|| (
	`cvt2°r
(oË&& (
	`luaO_to°rög
(
L
, o), 1)))

	)

457 
	#i£m±y°r
(
o
Ë(
	`âisshr°rög
(oË&& 
	`tsvÆue
(o)->
shæí
 =0)

	)

460 
	$c›y2buff
 (
StkId
 
t›
, 
n
, *
buff
) {

461 
size_t
 
é
 = 0;

463 
size_t
 
l
 = 
	`v¶í
(
t›
 - 
n
);

464 
	`mem˝y
(
buff
 + 
é
, 
	`svÆue
(
t›
 - 
n
), 
l
 * ());

465 
é
 +
l
;

466 } --
n
 > 0);

467 
	}
}

474 
	$luaV_c⁄ˇt
 (
lua_Sèã
 *
L
, 
tŸÆ
) {

475 
	`lua_as£π
(
tŸÆ
 >= 2);

477 
StkId
 
t›
 = 
L
->top;

478 
n
 = 2;

479 i‡(!(
	`âis°rög
(
t›
-2Ë|| 
	`cvt2°r
—›-2)Ë|| !
	`to°rög
(
L
,Åop-1))

480 
	`luaT_åyböTM
(
L
, 
t›
-2,Å›-1,Å›-2, 
TM_CONCAT
);

481 i‡(
	`i£m±y°r
(
t›
 - 1))

482 
	`ˇ°_void
(
	`to°rög
(
L
, 
t›
 - 2));

483 i‡(
	`i£m±y°r
(
t›
 - 2)) {

484 
	`£tobjs2s
(
L
, 
t›
 - 2,Åop - 1);

488 
size_t
 
é
 = 
	`v¶í
(
t›
 - 1);

489 
TSåög
 *
ts
;

491 
n
 = 1;Ç < 
tŸÆ
 && 
	`to°rög
(
L
, 
t›
 -Ç - 1);Ç++) {

492 
size_t
 
l
 = 
	`v¶í
(
t›
 - 
n
 - 1);

493 i‡(
l
 >(
MAX_SIZE
/()Ë- 
é
)

494 
	`luaG_ru√º‹
(
L
, "stringÜength overflow");

495 
é
 +
l
;

497 i‡(
é
 <
LUAI_MAXSHORTLEN
) {

498 
buff
[
LUAI_MAXSHORTLEN
];

499 
	`c›y2buff
(
t›
, 
n
, 
buff
);

500 
ts
 = 
	`luaS_√wl°r
(
L
, 
buff
, 
é
);

503 
ts
 = 
	`luaS_¸óã g°robj
(
L
, 
é
);

504 
	`c›y2buff
(
t›
, 
n
, 
	`gë°r
(
ts
));

506 
	`£tsvÆue2s
(
L
, 
t›
 - 
n
, 
ts
);

508 
tŸÆ
 -
n
-1;

509 
L
->
t›
 -
n
-1;

510 } 
tŸÆ
 > 1);

511 
	}
}

517 
	$luaV_objÀn
 (
lua_Sèã
 *
L
, 
StkId
 
ø
, c⁄° 
TVÆue
 *
rb
) {

518 c⁄° 
TVÆue
 *
tm
;

519 
	`ây≥
(
rb
)) {

520 
LUA_TTABLE
: {

521 
TabÀ
 *
h
 = 
	`hvÆue
(
rb
);

522 
tm
 = 
	`Á°tm
(
L
, 
h
->
më©abÀ
, 
TM_LEN
);

523 i‡(
tm
) ;

524 
	`£tivÆue
(
ø
, 
	`luaH_gën
(
h
));

527 
LUA_TSHRSTR
: {

528 
	`£tivÆue
(
ø
, 
	`tsvÆue
(
rb
)->
shæí
);

531 
LUA_TLNGSTR
: {

532 
	`£tivÆue
(
ø
, 
	`tsvÆue
(
rb
)->
u
.
 gÀn
);

536 
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
rb
, 
TM_LEN
);

537 i‡(
	`âi¢û
(
tm
))

538 
	`luaG_ty≥îr‹
(
L
, 
rb
, "getÜength of");

542 
	`luaT_ˇŒTM
(
L
, 
tm
, 
rb
,Ñb, 
ø
, 1);

543 
	}
}

552 
lua_I¡egî
 
	$luaV_div
 (
lua_Sèã
 *
L
, 
lua_I¡egî
 
m
,Üua_I¡egî 
n
) {

553 i‡(
	`l_ˇ°S2U
(
n
) + 1u <= 1u) {

554 i‡(
n
 == 0)

555 
	`luaG_ru√º‹
(
L
, "attemptÅo divide by zero");

556  
	`öt›
(-, 0, 
m
);

559 
lua_I¡egî
 
q
 = 
m
 / 
n
;

560 i‡((
m
 ^ 
n
) < 0 && m %Ç != 0)

561 
q
 -= 1;

562  
q
;

564 
	}
}

572 
lua_I¡egî
 
	$luaV_mod
 (
lua_Sèã
 *
L
, 
lua_I¡egî
 
m
,Üua_I¡egî 
n
) {

573 i‡(
	`l_ˇ°S2U
(
n
) + 1u <= 1u) {

574 i‡(
n
 == 0)

575 
	`luaG_ru√º‹
(
L
, "attemptÅoÖerform 'n%%0'");

579 
lua_I¡egî
 
r
 = 
m
 % 
n
;

580 i‡(
r
 !0 && (
m
 ^ 
n
) < 0)

581 
r
 +
n
;

582  
r
;

584 
	}
}

588 
	#NBITS
 
	`ˇ°_öt
((
lua_I¡egî
Ë* 
CHAR_BIT
)

	)

593 
lua_I¡egî
 
	$luaV_shi·l
 (
lua_I¡egî
 
x
,Üua_I¡egî 
y
) {

594 i‡(
y
 < 0) {

595 i‡(
y
 <-
NBITS
)  0;

596  
	`öt›
(>>, 
x
, -
y
);

599 i‡(
y
 >
NBITS
)  0;

600  
	`öt›
(<<, 
x
, 
y
);

602 
	}
}

610 
LClosuª
 *
	$gëˇched
 (
PrŸo
 *
p
, 
UpVÆ
 **
ícup
, 
StkId
 
ba£
) {

611 
LClosuª
 *
c
 = 
p
->
ˇche
;

612 i‡(
c
 !
NULL
) {

613 
nup
 = 
p
->
sizeupvÆues
;

614 
UpvÆdesc
 *
uv
 = 
p
->
upvÆues
;

615 
i
;

616 
i
 = 0; i < 
nup
; i++) {

617 
TVÆue
 *
v
 = 
uv
[
i
].
ö°ack
 ? 
ba£
 + uv[i].
idx
 : 
ícup
[uv[i].idx]->v;

618 i‡(
c
->
upvÆs
[
i
]->
v
 != v)

619  
NULL
;

622  
c
;

623 
	}
}

632 
	$push˛osuª
 (
lua_Sèã
 *
L
, 
PrŸo
 *
p
, 
UpVÆ
 **
ícup
, 
StkId
 
ba£
,

633 
StkId
 
ø
) {

634 
nup
 = 
p
->
sizeupvÆues
;

635 
UpvÆdesc
 *
uv
 = 
p
->
upvÆues
;

636 
i
;

637 
LClosuª
 *
n˛
 = 
	`luaF_√wL˛osuª
(
L
, 
nup
);

638 
n˛
->
p
 =Ö;

639 
	`£t˛LvÆue
(
L
, 
ø
, 
n˛
);

640 
i
 = 0; i < 
nup
; i++) {

641 i‡(
uv
[
i
].
ö°ack
)

642 
n˛
->
upvÆs
[
i
] = 
	`luaF_födupvÆ
(
L
, 
ba£
 + 
uv
[i].
idx
);

644 
n˛
->
upvÆs
[
i
] = 
ícup
[
uv
[i].
idx
];

645 
n˛
->
upvÆs
[
i
]->
ªfcou¡
++;

648 i‡(!
	`isbœck
(
p
))

649 
p
->
ˇche
 = 
n˛
;

650 
	}
}

656 
	$luaV_föishOp
 (
lua_Sèã
 *
L
) {

657 
CÆlInfo
 *
ci
 = 
L
->ci;

658 
StkId
 
ba£
 = 
ci
->
u
.
l
.base;

659 
In°ru˘i⁄
 
ö°
 = *(
ci
->
u
.
l
.
ßvedpc
 - 1);

660 
OpCode
 
›
 = 
	`GET_OPCODE
(
ö°
);

661 
›
) {

662 
OP_ADD
: 
OP_SUB
: 
OP_MUL
: 
OP_DIV
: 
OP_IDIV
:

663 
OP_BAND
: 
OP_BOR
: 
OP_BXOR
: 
OP_SHL
: 
OP_SHR
:

664 
OP_MOD
: 
OP_POW
:

665 
OP_UNM
: 
OP_BNOT
: 
OP_LEN
:

666 
OP_GETTABUP
: 
OP_GETTABLE
: 
OP_SELF
: {

667 
	`£tobjs2s
(
L
, 
ba£
 + 
	`GETARG_A
(
ö°
), --L->
t›
);

670 
OP_LE
: 
OP_LT
: 
OP_EQ
: {

671 
ªs
 = !
	`l_isÁl£
(
L
->
t›
 - 1);

672 
L
->
t›
--;

673 i‡(
ci
->
ˇŒ°©us
 & 
CIST_LEQ
) {

674 
	`lua_as£π
(
›
 =
OP_LE
);

675 
ci
->
ˇŒ°©us
 ^
CIST_LEQ
;

676 
ªs
 = !res;

678 
	`lua_as£π
(
	`GET_OPCODE
(*
ci
->
u
.
l
.
ßvedpc
Ë=
OP_JMP
);

679 i‡(
ªs
 !
	`GETARG_A
(
ö°
))

680 
ci
->
u
.
l
.
ßvedpc
++;

683 
OP_CONCAT
: {

684 
StkId
 
t›
 = 
L
->top - 1;

685 
b
 = 
	`GETARG_B
(
ö°
);

686 
tŸÆ
 = 
	`ˇ°_öt
(
t›
 - 1 - (
ba£
 + 
b
));

687 
	`£tobj2s
(
L
, 
t›
 - 2,Åop);

688 i‡(
tŸÆ
 > 1) {

689 
L
->
t›
 =Åop - 1;

690 
	`luaV_c⁄ˇt
(
L
, 
tŸÆ
);

693 
	`£tobj2s
(
L
, 
ci
->
u
.
l
.
ba£
 + 
	`GETARG_A
(
ö°
), L->
t›
 - 1);

694 
L
->
t›
 = 
ci
->top;

697 
OP_TFORCALL
: {

698 
	`lua_as£π
(
	`GET_OPCODE
(*
ci
->
u
.
l
.
ßvedpc
Ë=
OP_TFORLOOP
);

699 
L
->
t›
 = 
ci
->top;

702 
OP_CALL
: {

703 i‡(
	`GETARG_C
(
ö°
) - 1 >= 0)

704 
L
->
t›
 = 
ci
->top;

707 
OP_TAILCALL
: 
OP_SETTABUP
: 
OP_SETTABLE
:

709 : 
	`lua_as£π
(0);

711 
	}
}

728 
	#RA
(
i
Ë(
ba£
+
	`GETARG_A
(i))

	)

729 
	#RB
(
i
Ë
	`check_exp
(
	`gëBMode
(
	`GET_OPCODE
(i)Ë=
OpArgR
, 
ba£
+
	`GETARG_B
(i))

	)

730 
	#RC
(
i
Ë
	`check_exp
(
	`gëCMode
(
	`GET_OPCODE
(i)Ë=
OpArgR
, 
ba£
+
	`GETARG_C
(i))

	)

731 
	#RKB
(
i
Ë
	`check_exp
(
	`gëBMode
(
	`GET_OPCODE
(i)Ë=
OpArgK
, \

732 
	`ISK
(
	`GETARG_B
(
i
)Ë? 
k
+
	`INDEXK
(GETARG_B(i)Ë: 
ba£
+GETARG_B(i))

	)

733 
	#RKC
(
i
Ë
	`check_exp
(
	`gëCMode
(
	`GET_OPCODE
(i)Ë=
OpArgK
, \

734 
	`ISK
(
	`GETARG_C
(
i
)Ë? 
k
+
	`INDEXK
(GETARG_C(i)Ë: 
ba£
+GETARG_C(i))

	)

738 
	#dojump
(
ci
,
i
,
e
) \

739 { 
a
 = 
	`GETARG_A
(
i
); \

740 i‡(
a
 !0Ë
	`luaF_˛o£
(
L
, 
ci
->
u
.
l
.
ba£
 +á - 1); \

741 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
Ë+ 
e
; }

	)

744 
	#d⁄extjump
(
ci
Ë{ 
i
 = *ci->
u
.
l
.
ßvedpc
; 
	`dojump
(ci, i, 1); }

	)

747 
	#PrŸe˘
(
x
Ë{ {x;}; 
ba£
 = 
ci
->
u
.
l
.ba£; }

	)

749 
	#checkGC
(
L
,
c
) \

750 { 
	`luaC_c⁄dGC
(
L
, L->
t›
 = (
c
), \

751 
	`PrŸe˘
(
L
->
t›
 = 
ci
->top)); \

752 
	`luai_thªadyõld
(
L
); }

	)

756 
	#vm„tch
() { \

757 
i
 = *(
ci
->
u
.
l
.
ßvedpc
++); \

758 i‡(
L
->
hookmask
 & (
LUA_MASKLINE
 | 
LUA_MASKCOUNT
)) \

759 
	`PrŸe˘
(
	`luaG_åa˚exec
(
L
)); \

760 
ø
 = 
	`RA
(
i
); \

761 
	`lua_as£π
(
ba£
 =
ci
->
u
.
l
.base); \

762 
	`lua_as£π
(
ba£
 <
L
->
t›
 && L->t› < L->
°ack
 + L->
°acksize
); \

763 }

	)

765 
	#vmdi•©ch
(
o
Ëo)

	)

766 
	#vmˇ£
(
l
Ël:

	)

767 
	#vmbªak
 

	)

774 
	#gëèbÀPrŸe˘ed
(
L
,
t
,
k
,
v
Ë{ c⁄° 
TVÆue
 *
¶Ÿ
; \

775 i‡(
	`luaV_Á°gë
(
L
,
t
,
k
,
¶Ÿ
,
luaH_gë
)Ë{ 
	`£tobj2s
(L, 
v
, slot); } \

776 
	`PrŸe˘
(
	`luaV_föishgë
(
L
,
t
,
k
,
v
,
¶Ÿ
)); }

	)

780 
	#£âabÀPrŸe˘ed
(
L
,
t
,
k
,
v
Ë{ c⁄° 
TVÆue
 *
¶Ÿ
; \

781 i‡(!
	`luaV_Á°£t
(
L
,
t
,
k
,
¶Ÿ
,
luaH_gë
,
v
)) \

782 
	`PrŸe˘
(
	`luaV_föish£t
(
L
,
t
,
k
,
v
,
¶Ÿ
)); }

	)

786 
	$luaV_execuã
 (
lua_Sèã
 *
L
) {

787 
CÆlInfo
 *
ci
 = 
L
->ci;

788 
LClosuª
 *
˛
;

789 
TVÆue
 *
k
;

790 
StkId
 
ba£
;

791 
ci
->
ˇŒ°©us
 |
CIST_FRESH
;

792 
√w‰ame
:

793 
	`lua_as£π
(
ci
 =
L
->ci);

794 
˛
 = 
	`˛LvÆue
(
ci
->
func
);

795 
k
 = 
˛
->
p
->k;

796 
ba£
 = 
ci
->
u
.
l
.base;

799 
In°ru˘i⁄
 
i
;

800 
StkId
 
ø
;

801 
	`vm„tch
();

802 
	`vmdi•©ch
 (
	`GET_OPCODE
(
i
)) {

803 
	`vmˇ£
(
OP_MOVE
) {

804 
	`£tobjs2s
(
L
, 
ø
, 
	`RB
(
i
));

805 
vmbªak
;

807 
	`vmˇ£
(
OP_LOADK
) {

808 
TVÆue
 *
rb
 = 
k
 + 
	`GETARG_Bx
(
i
);

809 
	`£tobj2s
(
L
, 
ø
, 
rb
);

810 
vmbªak
;

812 
	`vmˇ£
(
OP_LOADKX
) {

813 
TVÆue
 *
rb
;

814 
	`lua_as£π
(
	`GET_OPCODE
(*
ci
->
u
.
l
.
ßvedpc
Ë=
OP_EXTRAARG
);

815 
rb
 = 
k
 + 
	`GETARG_Ax
(*
ci
->
u
.
l
.
ßvedpc
++);

816 
	`£tobj2s
(
L
, 
ø
, 
rb
);

817 
vmbªak
;

819 
	`vmˇ£
(
OP_LOADBOOL
) {

820 
	`£tbvÆue
(
ø
, 
	`GETARG_B
(
i
));

821 i‡(
	`GETARG_C
(
i
)Ë
ci
->
u
.
l
.
ßvedpc
++;

822 
vmbªak
;

824 
	`vmˇ£
(
OP_LOADNIL
) {

825 
b
 = 
	`GETARG_B
(
i
);

827 
	`£äûvÆue
(
ø
++);

828 } 
b
--);

829 
vmbªak
;

831 
	`vmˇ£
(
OP_GETUPVAL
) {

832 
b
 = 
	`GETARG_B
(
i
);

833 
	`£tobj2s
(
L
, 
ø
, 
˛
->
upvÆs
[
b
]->
v
);

834 
vmbªak
;

836 
	`vmˇ£
(
OP_GETTABUP
) {

837 
TVÆue
 *
upvÆ
 = 
˛
->
upvÆs
[
	`GETARG_B
(
i
)]->
v
;

838 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

839 
	`gëèbÀPrŸe˘ed
(
L
, 
upvÆ
, 
rc
, 
ø
);

840 
vmbªak
;

842 
	`vmˇ£
(
OP_GETTABLE
) {

843 
StkId
 
rb
 = 
	`RB
(
i
);

844 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

845 
	`gëèbÀPrŸe˘ed
(
L
, 
rb
, 
rc
, 
ø
);

846 
vmbªak
;

848 
	`vmˇ£
(
OP_SETTABUP
) {

849 
TVÆue
 *
upvÆ
 = 
˛
->
upvÆs
[
	`GETARG_A
(
i
)]->
v
;

850 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

851 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

852 
	`£âabÀPrŸe˘ed
(
L
, 
upvÆ
, 
rb
, 
rc
);

853 
vmbªak
;

855 
	`vmˇ£
(
OP_SETUPVAL
) {

856 
UpVÆ
 *
uv
 = 
˛
->
upvÆs
[
	`GETARG_B
(
i
)];

857 
	`£tobj
(
L
, 
uv
->
v
, 
ø
);

858 
	`luaC_upvÆb¨rõr
(
L
, 
uv
);

859 
vmbªak
;

861 
	`vmˇ£
(
OP_SETTABLE
) {

862 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

863 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

864 
	`£âabÀPrŸe˘ed
(
L
, 
ø
, 
rb
, 
rc
);

865 
vmbªak
;

867 
	`vmˇ£
(
OP_NEWTABLE
) {

868 
b
 = 
	`GETARG_B
(
i
);

869 
c
 = 
	`GETARG_C
(
i
);

870 
TabÀ
 *
t
 = 
	`luaH_√w
(
L
);

871 
	`£thvÆue
(
L
, 
ø
, 
t
);

872 i‡(
b
 !0 || 
c
 != 0)

873 
	`luaH_ªsize
(
L
, 
t
, 
	`luaO_fb2öt
(
b
),ÜuaO_fb2öt(
c
));

874 
	`checkGC
(
L
, 
ø
 + 1);

875 
vmbªak
;

877 
	`vmˇ£
(
OP_SELF
) {

878 c⁄° 
TVÆue
 *
aux
;

879 
StkId
 
rb
 = 
	`RB
(
i
);

880 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

881 
TSåög
 *
key
 = 
	`tsvÆue
(
rc
);

882 
	`£tobjs2s
(
L
, 
ø
 + 1, 
rb
);

883 i‡(
	`luaV_Á°gë
(
L
, 
rb
, 
key
, 
aux
, 
luaH_gë°r
)) {

884 
	`£tobj2s
(
L
, 
ø
, 
aux
);

886 
	`PrŸe˘
(
	`luaV_föishgë
(
L
, 
rb
, 
rc
, 
ø
, 
aux
));

887 
vmbªak
;

889 
	`vmˇ£
(
OP_ADD
) {

890 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

891 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

892 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

893 i‡(
	`âisöãgî
(
rb
Ë&&Åtisöãgî(
rc
)) {

894 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);Üua_I¡egî 
ic
 = ivÆue(
rc
);

895 
	`£tivÆue
(
ø
, 
	`öt›
(+, 
ib
, 
ic
));

897 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

898 
	`£tÊtvÆue
(
ø
, 
	`luai_numadd
(
L
, 
nb
, 
nc
));

900 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_ADD
)); }

901 
vmbªak
;

903 
	`vmˇ£
(
OP_SUB
) {

904 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

905 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

906 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

907 i‡(
	`âisöãgî
(
rb
Ë&&Åtisöãgî(
rc
)) {

908 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);Üua_I¡egî 
ic
 = ivÆue(
rc
);

909 
	`£tivÆue
(
ø
, 
	`öt›
(-, 
ib
, 
ic
));

911 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

912 
	`£tÊtvÆue
(
ø
, 
	`luai_numsub
(
L
, 
nb
, 
nc
));

914 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_SUB
)); }

915 
vmbªak
;

917 
	`vmˇ£
(
OP_MUL
) {

918 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

919 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

920 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

921 i‡(
	`âisöãgî
(
rb
Ë&&Åtisöãgî(
rc
)) {

922 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);Üua_I¡egî 
ic
 = ivÆue(
rc
);

923 
	`£tivÆue
(
ø
, 
	`öt›
(*, 
ib
, 
ic
));

925 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

926 
	`£tÊtvÆue
(
ø
, 
	`luai_nummul
(
L
, 
nb
, 
nc
));

928 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_MUL
)); }

929 
vmbªak
;

931 
	`vmˇ£
(
OP_DIV
) {

932 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

933 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

934 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

935 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

936 
	`£tÊtvÆue
(
ø
, 
	`luai_numdiv
(
L
, 
nb
, 
nc
));

938 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_DIV
)); }

939 
vmbªak
;

941 
	`vmˇ£
(
OP_BAND
) {

942 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

943 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

944 
lua_I¡egî
 
ib
;Üua_I¡egî 
ic
;

945 i‡(
	`toöãgî
(
rb
, &
ib
Ë&&Åoöãgî(
rc
, &
ic
)) {

946 
	`£tivÆue
(
ø
, 
	`öt›
(&, 
ib
, 
ic
));

948 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_BAND
)); }

949 
vmbªak
;

951 
	`vmˇ£
(
OP_BOR
) {

952 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

953 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

954 
lua_I¡egî
 
ib
;Üua_I¡egî 
ic
;

955 i‡(
	`toöãgî
(
rb
, &
ib
Ë&&Åoöãgî(
rc
, &
ic
)) {

956 
	`£tivÆue
(
ø
, 
	`öt›
(|, 
ib
, 
ic
));

958 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_BOR
)); }

959 
vmbªak
;

961 
	`vmˇ£
(
OP_BXOR
) {

962 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

963 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

964 
lua_I¡egî
 
ib
;Üua_I¡egî 
ic
;

965 i‡(
	`toöãgî
(
rb
, &
ib
Ë&&Åoöãgî(
rc
, &
ic
)) {

966 
	`£tivÆue
(
ø
, 
	`öt›
(^, 
ib
, 
ic
));

968 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_BXOR
)); }

969 
vmbªak
;

971 
	`vmˇ£
(
OP_SHL
) {

972 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

973 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

974 
lua_I¡egî
 
ib
;Üua_I¡egî 
ic
;

975 i‡(
	`toöãgî
(
rb
, &
ib
Ë&&Åoöãgî(
rc
, &
ic
)) {

976 
	`£tivÆue
(
ø
, 
	`luaV_shi·l
(
ib
, 
ic
));

978 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_SHL
)); }

979 
vmbªak
;

981 
	`vmˇ£
(
OP_SHR
) {

982 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

983 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

984 
lua_I¡egî
 
ib
;Üua_I¡egî 
ic
;

985 i‡(
	`toöãgî
(
rb
, &
ib
Ë&&Åoöãgî(
rc
, &
ic
)) {

986 
	`£tivÆue
(
ø
, 
	`luaV_shi·l
(
ib
, -
ic
));

988 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_SHR
)); }

989 
vmbªak
;

991 
	`vmˇ£
(
OP_MOD
) {

992 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

993 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

994 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

995 i‡(
	`âisöãgî
(
rb
Ë&&Åtisöãgî(
rc
)) {

996 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);Üua_I¡egî 
ic
 = ivÆue(
rc
);

997 
	`£tivÆue
(
ø
, 
	`luaV_mod
(
L
, 
ib
, 
ic
));

999 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

1000 
lua_Numbî
 
m
;

1001 
	`luai_nummod
(
L
, 
nb
, 
nc
, 
m
);

1002 
	`£tÊtvÆue
(
ø
, 
m
);

1004 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_MOD
)); }

1005 
vmbªak
;

1007 
	`vmˇ£
(
OP_IDIV
) {

1008 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

1009 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

1010 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

1011 i‡(
	`âisöãgî
(
rb
Ë&&Åtisöãgî(
rc
)) {

1012 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);Üua_I¡egî 
ic
 = ivÆue(
rc
);

1013 
	`£tivÆue
(
ø
, 
	`luaV_div
(
L
, 
ib
, 
ic
));

1015 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

1016 
	`£tÊtvÆue
(
ø
, 
	`luai_numidiv
(
L
, 
nb
, 
nc
));

1018 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_IDIV
)); }

1019 
vmbªak
;

1021 
	`vmˇ£
(
OP_POW
) {

1022 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

1023 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

1024 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

1025 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

1026 
	`£tÊtvÆue
(
ø
, 
	`luai_numpow
(
L
, 
nb
, 
nc
));

1028 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_POW
)); }

1029 
vmbªak
;

1031 
	`vmˇ£
(
OP_UNM
) {

1032 
TVÆue
 *
rb
 = 
	`RB
(
i
);

1033 
lua_Numbî
 
nb
;

1034 i‡(
	`âisöãgî
(
rb
)) {

1035 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);

1036 
	`£tivÆue
(
ø
, 
	`öt›
(-, 0, 
ib
));

1038 i‡(
	`t⁄umbî
(
rb
, &
nb
)) {

1039 
	`£tÊtvÆue
(
ø
, 
	`luai_numunm
(
L
, 
nb
));

1042 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
,Ñb, 
ø
, 
TM_UNM
));

1044 
vmbªak
;

1046 
	`vmˇ£
(
OP_BNOT
) {

1047 
TVÆue
 *
rb
 = 
	`RB
(
i
);

1048 
lua_I¡egî
 
ib
;

1049 i‡(
	`toöãgî
(
rb
, &
ib
)) {

1050 
	`£tivÆue
(
ø
, 
	`öt›
(^, ~
	`l_ˇ°S2U
(0), 
ib
));

1053 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
,Ñb, 
ø
, 
TM_BNOT
));

1055 
vmbªak
;

1057 
	`vmˇ£
(
OP_NOT
) {

1058 
TVÆue
 *
rb
 = 
	`RB
(
i
);

1059 
ªs
 = 
	`l_isÁl£
(
rb
);

1060 
	`£tbvÆue
(
ø
, 
ªs
);

1061 
vmbªak
;

1063 
	`vmˇ£
(
OP_LEN
) {

1064 
	`PrŸe˘
(
	`luaV_objÀn
(
L
, 
ø
, 
	`RB
(
i
)));

1065 
vmbªak
;

1067 
	`vmˇ£
(
OP_CONCAT
) {

1068 
b
 = 
	`GETARG_B
(
i
);

1069 
c
 = 
	`GETARG_C
(
i
);

1070 
StkId
 
rb
;

1071 
L
->
t›
 = 
ba£
 + 
c
 + 1;

1072 
	`PrŸe˘
(
	`luaV_c⁄ˇt
(
L
, 
c
 - 
b
 + 1));

1073 
ø
 = 
	`RA
(
i
);

1074 
rb
 = 
ba£
 + 
b
;

1075 
	`£tobjs2s
(
L
, 
ø
, 
rb
);

1076 
	`checkGC
(
L
, (
ø
 >
rb
 ?Ña + 1 :Ñb));

1077 
L
->
t›
 = 
ci
->top;

1078 
vmbªak
;

1080 
	`vmˇ£
(
OP_JMP
) {

1081 
	`dojump
(
ci
, 
i
, 0);

1082 
vmbªak
;

1084 
	`vmˇ£
(
OP_EQ
) {

1085 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

1086 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

1087 
	`PrŸe˘
(

1088 i‡(
	`luaV_equÆobj
(
L
, 
rb
, 
rc
Ë!
	`GETARG_A
(
i
))

1089 
ci
->
u
.
l
.
ßvedpc
++;

1091 
	`d⁄extjump
(
ci
);

1093 
vmbªak
;

1095 
	`vmˇ£
(
OP_LT
) {

1096 
	`PrŸe˘
(

1097 i‡(
	`luaV_Às°h™
(
L
, 
	`RKB
(
i
), 
	`RKC
(i)Ë!
	`GETARG_A
(i))

1098 
ci
->
u
.
l
.
ßvedpc
++;

1100 
	`d⁄extjump
(
ci
);

1102 
vmbªak
;

1104 
	`vmˇ£
(
OP_LE
) {

1105 
	`PrŸe˘
(

1106 i‡(
	`luaV_Às£quÆ
(
L
, 
	`RKB
(
i
), 
	`RKC
(i)Ë!
	`GETARG_A
(i))

1107 
ci
->
u
.
l
.
ßvedpc
++;

1109 
	`d⁄extjump
(
ci
);

1111 
vmbªak
;

1113 
	`vmˇ£
(
OP_TEST
) {

1114 i‡(
	`GETARG_C
(
i
Ë? 
	`l_isÁl£
(
ø
) : !l_isfalse(ra))

1115 
ci
->
u
.
l
.
ßvedpc
++;

1117 
	`d⁄extjump
(
ci
);

1118 
vmbªak
;

1120 
	`vmˇ£
(
OP_TESTSET
) {

1121 
TVÆue
 *
rb
 = 
	`RB
(
i
);

1122 i‡(
	`GETARG_C
(
i
Ë? 
	`l_isÁl£
(
rb
) : !l_isfalse(rb))

1123 
ci
->
u
.
l
.
ßvedpc
++;

1125 
	`£tobjs2s
(
L
, 
ø
, 
rb
);

1126 
	`d⁄extjump
(
ci
);

1128 
vmbªak
;

1130 
	`vmˇ£
(
OP_CALL
) {

1131 
b
 = 
	`GETARG_B
(
i
);

1132 
ƒesu…s
 = 
	`GETARG_C
(
i
) - 1;

1133 i‡(
b
 !0Ë
L
->
t›
 = 
ø
+b;

1134 i‡(
	`luaD_¥eˇŒ
(
L
, 
ø
, 
ƒesu…s
)) {

1135 i‡(
ƒesu…s
 >= 0)

1136 
L
->
t›
 = 
ci
->top;

1137 
	`PrŸe˘
(()0);

1140 
ci
 = 
L
->ci;

1141 
√w‰ame
;

1143 
vmbªak
;

1145 
	`vmˇ£
(
OP_TAILCALL
) {

1146 
b
 = 
	`GETARG_B
(
i
);

1147 i‡(
b
 !0Ë
L
->
t›
 = 
ø
+b;

1148 
	`lua_as£π
(
	`GETARG_C
(
i
Ë- 1 =
LUA_MULTRET
);

1149 i‡(
	`luaD_¥eˇŒ
(
L
, 
ø
, 
LUA_MULTRET
)) {

1150 
	`PrŸe˘
(()0);

1154 
CÆlInfo
 *
nci
 = 
L
->
ci
;

1155 
CÆlInfo
 *
oci
 = 
nci
->
¥evious
;

1156 
StkId
 
nfunc
 = 
nci
->
func
;

1157 
StkId
 
ofunc
 = 
oci
->
func
;

1159 
StkId
 
lim
 = 
nci
->
u
.
l
.
ba£
 + 
	`gë¥Ÿo
(
nfunc
)->
num∑øms
;

1160 
aux
;

1162 i‡(
˛
->
p
->
sizï
 > 0Ë
	`luaF_˛o£
(
L
, 
oci
->
u
.
l
.
ba£
);

1164 
aux
 = 0; 
nfunc
 +áux < 
lim
;áux++)

1165 
	`£tobjs2s
(
L
, 
ofunc
 + 
aux
, 
nfunc
 +áux);

1166 
oci
->
u
.
l
.
ba£
 = 
ofunc
 + (
nci
->u.l.ba£ - 
nfunc
);

1167 
oci
->
t›
 = 
L
->t› = 
ofunc
 + (L->t› - 
nfunc
);

1168 
oci
->
u
.
l
.
ßvedpc
 = 
nci
->u.l.savedpc;

1169 
oci
->
ˇŒ°©us
 |
CIST_TAIL
;

1170 
ci
 = 
L
->cò
oci
;

1171 
	`lua_as£π
(
L
->
t›
 =
oci
->
u
.
l
.
ba£
 + 
	`gë¥Ÿo
(
ofunc
)->
max°acksize
);

1172 
√w‰ame
;

1174 
vmbªak
;

1176 
	`vmˇ£
(
OP_RETURN
) {

1177 
b
 = 
	`GETARG_B
(
i
);

1178 i‡(
˛
->
p
->
sizï
 > 0Ë
	`luaF_˛o£
(
L
, 
ba£
);

1179 
b
 = 
	`luaD_posˇŒ
(
L
, 
ci
, 
ø
, (b !0 ? b - 1 : 
	`ˇ°_öt
(L->
t›
 -Ña)));

1180 i‡(
ci
->
ˇŒ°©us
 & 
CIST_FRESH
)

1183 
ci
 = 
L
->ci;

1184 i‡(
b
Ë
L
->
t›
 = 
ci
->top;

1185 
	`lua_as£π
(
	`isLua
(
ci
));

1186 
	`lua_as£π
(
	`GET_OPCODE
(*((
ci
)->
u
.
l
.
ßvedpc
 - 1)Ë=
OP_CALL
);

1187 
√w‰ame
;

1190 
	`vmˇ£
(
OP_FORLOOP
) {

1191 i‡(
	`âisöãgî
(
ø
)) {

1192 
lua_I¡egî
 
°ï
 = 
	`ivÆue
(
ø
 + 2);

1193 
lua_I¡egî
 
idx
 = 
	`öt›
(+, 
	`ivÆue
(
ø
), 
°ï
);

1194 
lua_I¡egî
 
limô
 = 
	`ivÆue
(
ø
 + 1);

1195 i‡((0 < 
°ï
Ë? (
idx
 <
limô
) : (limit <= idx)) {

1196 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
);

1197 
	`chgivÆue
(
ø
, 
idx
);

1198 
	`£tivÆue
(
ø
 + 3, 
idx
);

1202 
lua_Numbî
 
°ï
 = 
	`ÊtvÆue
(
ø
 + 2);

1203 
lua_Numbî
 
idx
 = 
	`luai_numadd
(
L
, 
	`ÊtvÆue
(
ø
), 
°ï
);

1204 
lua_Numbî
 
limô
 = 
	`ÊtvÆue
(
ø
 + 1);

1205 i‡(
	`luai_num…
(0, 
°ï
Ë? 
	`luai_numÀ
(
idx
, 
limô
)

1206 : 
	`luai_numÀ
(
limô
, 
idx
)) {

1207 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
);

1208 
	`chgÊtvÆue
(
ø
, 
idx
);

1209 
	`£tÊtvÆue
(
ø
 + 3, 
idx
);

1212 
vmbªak
;

1214 
	`vmˇ£
(
OP_FORPREP
) {

1215 
TVÆue
 *
öô
 = 
ø
;

1216 
TVÆue
 *
∂imô
 = 
ø
 + 1;

1217 
TVÆue
 *
p°ï
 = 
ø
 + 2;

1218 
lua_I¡egî
 
ûimô
;

1219 
°›now
;

1220 i‡(
	`âisöãgî
(
öô
Ë&&Åtisöãgî(
p°ï
) &&

1221 
	`f‹limô
(
∂imô
, &
ûimô
, 
	`ivÆue
(
p°ï
), &
°›now
)) {

1223 
lua_I¡egî
 
öôv
 = (
°›now
 ? 0 : 
	`ivÆue
(
öô
));

1224 
	`£tivÆue
(
∂imô
, 
ûimô
);

1225 
	`£tivÆue
(
öô
, 
	`öt›
(-, 
öôv
, 
	`ivÆue
(
p°ï
)));

1228 
lua_Numbî
 
nöô
;Üua_Numbî 
∆imô
;Üua_Numbî 
n°ï
;

1229 i‡(!
	`t⁄umbî
(
∂imô
, &
∆imô
))

1230 
	`luaG_ru√º‹
(
L
, "'for'Üimit must beáÇumber");

1231 
	`£tÊtvÆue
(
∂imô
, 
∆imô
);

1232 i‡(!
	`t⁄umbî
(
p°ï
, &
n°ï
))

1233 
	`luaG_ru√º‹
(
L
, "'for' step must beáÇumber");

1234 
	`£tÊtvÆue
(
p°ï
, 
n°ï
);

1235 i‡(!
	`t⁄umbî
(
öô
, &
nöô
))

1236 
	`luaG_ru√º‹
(
L
, "'for' initial value must beáÇumber");

1237 
	`£tÊtvÆue
(
öô
, 
	`luai_numsub
(
L
, 
nöô
, 
n°ï
));

1239 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
);

1240 
vmbªak
;

1242 
	`vmˇ£
(
OP_TFORCALL
) {

1243 
StkId
 
cb
 = 
ø
 + 3;

1244 
	`£tobjs2s
(
L
, 
cb
+2, 
ø
+2);

1245 
	`£tobjs2s
(
L
, 
cb
+1, 
ø
+1);

1246 
	`£tobjs2s
(
L
, 
cb
, 
ø
);

1247 
L
->
t›
 = 
cb
 + 3;

1248 
	`PrŸe˘
(
	`luaD_ˇŒ
(
L
, 
cb
, 
	`GETARG_C
(
i
)));

1249 
L
->
t›
 = 
ci
->top;

1250 
i
 = *(
ci
->
u
.
l
.
ßvedpc
++);

1251 
ø
 = 
	`RA
(
i
);

1252 
	`lua_as£π
(
	`GET_OPCODE
(
i
Ë=
OP_TFORLOOP
);

1253 
l_tf‹lo›
;

1255 
	`vmˇ£
(
OP_TFORLOOP
) {

1256 
l_tf‹lo›
:

1257 i‡(!
	`âi¢û
(
ø
 + 1)) {

1258 
	`£tobjs2s
(
L
, 
ø
,Ña + 1);

1259 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
);

1261 
vmbªak
;

1263 
	`vmˇ£
(
OP_SETLIST
) {

1264 
n
 = 
	`GETARG_B
(
i
);

1265 
c
 = 
	`GETARG_C
(
i
);

1266 
œ°
;

1267 
TabÀ
 *
h
;

1268 i‡(
n
 =0Ë¿
	`ˇ°_öt
(
L
->
t›
 - 
ø
) - 1;

1269 i‡(
c
 == 0) {

1270 
	`lua_as£π
(
	`GET_OPCODE
(*
ci
->
u
.
l
.
ßvedpc
Ë=
OP_EXTRAARG
);

1271 
c
 = 
	`GETARG_Ax
(*
ci
->
u
.
l
.
ßvedpc
++);

1273 
h
 = 
	`hvÆue
(
ø
);

1274 
œ°
 = ((
c
-1)*
LFIELDS_PER_FLUSH
Ë+ 
n
;

1275 i‡(
œ°
 > 
h
->
sizóºay
)

1276 
	`luaH_ªsizóºay
(
L
, 
h
, 
œ°
);

1277 ; 
n
 > 0;Ç--) {

1278 
TVÆue
 *
vÆ
 = 
ø
+
n
;

1279 
	`luaH_£töt
(
L
, 
h
, 
œ°
--, 
vÆ
);

1280 
	`luaC_b¨rõrback
(
L
, 
h
, 
vÆ
);

1282 
L
->
t›
 = 
ci
->top;

1283 
vmbªak
;

1285 
	`vmˇ£
(
OP_CLOSURE
) {

1286 
PrŸo
 *
p
 = 
˛
->p->p[
	`GETARG_Bx
(
i
)];

1287 
LClosuª
 *
n˛
 = 
	`gëˇched
(
p
, 
˛
->
upvÆs
, 
ba£
);

1288 i‡(
n˛
 =
NULL
)

1289 
	`push˛osuª
(
L
, 
p
, 
˛
->
upvÆs
, 
ba£
, 
ø
);

1291 
	`£t˛LvÆue
(
L
, 
ø
, 
n˛
);

1292 
	`checkGC
(
L
, 
ø
 + 1);

1293 
vmbªak
;

1295 
	`vmˇ£
(
OP_VARARG
) {

1296 
b
 = 
	`GETARG_B
(
i
) - 1;

1297 
j
;

1298 
n
 = 
	`ˇ°_öt
(
ba£
 - 
ci
->
func
Ë- 
˛
->
p
->
num∑øms
 - 1;

1299 i‡(
n
 < 0)

1300 
n
 = 0;

1301 i‡(
b
 < 0) {

1302 
b
 = 
n
;

1303 
	`PrŸe˘
(
	`luaD_check°ack
(
L
, 
n
));

1304 
ø
 = 
	`RA
(
i
);

1305 
L
->
t›
 = 
ø
 + 
n
;

1307 
j
 = 0; j < 
b
 && j < 
n
; j++)

1308 
	`£tobjs2s
(
L
, 
ø
 + 
j
, 
ba£
 - 
n
 + j);

1309 ; 
j
 < 
b
; j++)

1310 
	`£äûvÆue
(
ø
 + 
j
);

1311 
vmbªak
;

1313 
	`vmˇ£
(
OP_EXTRAARG
) {

1314 
	`lua_as£π
(0);

1315 
vmbªak
;

1319 
	}
}

	@lua/src/lvm.h

7 #i‚de‡
lvm_h


8 
	#lvm_h


	)

11 
	~"ldo.h
"

12 
	~"lobje˘.h
"

13 
	~"…m.h
"

16 #i‡!
deföed
(
LUA_NOCVTN2S
)

17 
	#cvt2°r
(
o
Ë
	`âi¢umbî
(o)

	)

19 
	#cvt2°r
(
o
Ë0

	)

23 #i‡!
deföed
(
LUA_NOCVTS2N
)

24 
	#cvt2num
(
o
Ë
	`âis°rög
(o)

	)

26 
	#cvt2num
(
o
Ë0

	)

35 #i‡!
deföed
(
LUA_FLOORN2I
)

36 
	#LUA_FLOORN2I
 0

	)

40 
	#t⁄umbî
(
o
,
n
) \

41 (
	`âisÊﬂt
(
o
Ë? (*(
n
Ë
	`ÊtvÆue
(o), 1Ë: 
	`luaV_t⁄umbî_
(o,n))

	)

43 
	#toöãgî
(
o
,
i
) \

44 (
	`âisöãgî
(
o
Ë? (*(
i
Ë
	`ivÆue
(o), 1Ë: 
	`luaV_toöãgî
(o,i,
LUA_FLOORN2I
))

	)

46 
	#öt›
(
›
,
v1
,
v2
Ë
	`l_ˇ°U2S
(
	`l_ˇ°S2U
(v1Ë›Ü_ˇ°S2U(v2))

	)

48 
	#luaV_øwequÆobj
(
t1
,
t2
Ë
	`luaV_equÆobj
(
NULL
,t1,t2)

	)

58 
	#luaV_Á°gë
(
L
,
t
,
k
,
¶Ÿ
,
f
) \

59 (!
	`âi°abÀ
(
t
) \

60 ? (
¶Ÿ
 = 
NULL
, 0) \

61 : (
¶Ÿ
 = 
	`f
(
	`hvÆue
(
t
), 
k
), \

62 !
	`âi¢û
(
¶Ÿ
))Ë

	)

67 
	#luaV_gëèbÀ
(
L
,
t
,
k
,
v
Ë{ c⁄° 
TVÆue
 *
¶Ÿ
; \

68 i‡(
	`luaV_Á°gë
(
L
,
t
,
k
,
¶Ÿ
,
luaH_gë
)Ë{ 
	`£tobj2s
(L, 
v
, slot); } \

69 
	`luaV_föishgë
(
L
,
t
,
k
,
v
,
¶Ÿ
); }

	)

80 
	#luaV_Á°£t
(
L
,
t
,
k
,
¶Ÿ
,
f
,
v
) \

81 (!
	`âi°abÀ
(
t
) \

82 ? (
¶Ÿ
 = 
NULL
, 0) \

83 : (
¶Ÿ
 = 
	`f
(
	`hvÆue
(
t
), 
k
), \

84 
	`âi¢û
(
¶Ÿ
) ? 0 \

85 : (
	`luaC_b¨rõrback
(
L
, 
	`hvÆue
(
t
), 
v
), \

86 
	`£tobj2t
(
L
, 
	`ˇ°
(
TVÆue
 *,
¶Ÿ
), 
v
), \

87 1)))

	)

90 
	#luaV_£âabÀ
(
L
,
t
,
k
,
v
Ë{ c⁄° 
TVÆue
 *
¶Ÿ
; \

91 i‡(!
	`luaV_Á°£t
(
L
,
t
,
k
,
¶Ÿ
,
luaH_gë
,
v
)) \

92 
	`luaV_föish£t
(
L
,
t
,
k
,
v
,
¶Ÿ
); }

	)

96 
LUAI_FUNC
 
luaV_equÆobj
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t1
, c⁄° TVÆuê*
t2
);

97 
LUAI_FUNC
 
luaV_Às°h™
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
);

98 
LUAI_FUNC
 
luaV_Às£quÆ
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
);

99 
LUAI_FUNC
 
luaV_t⁄umbî_
 (c⁄° 
TVÆue
 *
obj
, 
lua_Numbî
 *
n
);

100 
LUAI_FUNC
 
luaV_toöãgî
 (c⁄° 
TVÆue
 *
obj
, 
lua_I¡egî
 *
p
, 
mode
);

101 
LUAI_FUNC
 
luaV_föishgë
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, TVÆuê*
key
,

102 
StkId
 
vÆ
, c⁄° 
TVÆue
 *
¶Ÿ
);

103 
LUAI_FUNC
 
luaV_föish£t
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, TVÆuê*
key
,

104 
StkId
 
vÆ
, c⁄° 
TVÆue
 *
¶Ÿ
);

105 
LUAI_FUNC
 
luaV_föishOp
 (
lua_Sèã
 *
L
);

106 
LUAI_FUNC
 
luaV_execuã
 (
lua_Sèã
 *
L
);

107 
LUAI_FUNC
 
luaV_c⁄ˇt
 (
lua_Sèã
 *
L
, 
tŸÆ
);

108 
LUAI_FUNC
 
lua_I¡egî
 
luaV_div
 (
lua_Sèã
 *
L
,Üua_I¡egî 
x
,Üua_I¡egî 
y
);

109 
LUAI_FUNC
 
lua_I¡egî
 
luaV_mod
 (
lua_Sèã
 *
L
,Üua_I¡egî 
x
,Üua_I¡egî 
y
);

110 
LUAI_FUNC
 
lua_I¡egî
 
luaV_shi·l
 (lua_I¡egî 
x
,Üua_I¡egî 
y
);

111 
LUAI_FUNC
 
luaV_objÀn
 (
lua_Sèã
 *
L
, 
StkId
 
ø
, c⁄° 
TVÆue
 *
rb
);

	@lua/src/lzio.c

7 
	#lzio_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"Œimôs.h
"

18 
	~"lmem.h
"

19 
	~"l°©e.h
"

20 
	~"lzio.h
"

23 
	$luaZ_fûl
 (
ZIO
 *
z
) {

24 
size_t
 
size
;

25 
lua_Sèã
 *
L
 = 
z
->L;

26 c⁄° *
buff
;

27 
	`lua_u∆ock
(
L
);

28 
buff
 = 
z
->
	`ªadî
(
L
, z->
d©a
, &
size
);

29 
	`lua_lock
(
L
);

30 i‡(
buff
 =
NULL
 || 
size
 == 0)

31  
EOZ
;

32 
z
->
n
 = 
size
 - 1;

33 
z
->
p
 = 
buff
;

34  
	`ˇ°_uch¨
(*(
z
->
p
++));

35 
	}
}

38 
	$luaZ_öô
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, 
lua_Ródî
 
ªadî
, *
d©a
) {

39 
z
->
L
 = L;

40 
z
->
ªadî
 =Ñeader;

41 
z
->
d©a
 = data;

42 
z
->
n
 = 0;

43 
z
->
p
 = 
NULL
;

44 
	}
}

48 
size_t
 
	$luaZ_ªad
 (
ZIO
 *
z
, *
b
, 
size_t
 
n
) {

49 
n
) {

50 
size_t
 
m
;

51 i‡(
z
->
n
 == 0) {

52 i‡(
	`luaZ_fûl
(
z
Ë=
EOZ
)

53  
n
;

55 
z
->
n
++;

56 
z
->
p
--;

59 
m
 = (
n
 <
z
->n) ?Ç : z->n;

60 
	`mem˝y
(
b
, 
z
->
p
, 
m
);

61 
z
->
n
 -
m
;

62 
z
->
p
 +
m
;

63 
b
 = (*)b + 
m
;

64 
n
 -
m
;

67 
	}
}

	@lua/src/lzio.h

8 #i‚de‡
lzio_h


9 
	#lzio_h


	)

11 
	~"lua.h
"

13 
	~"lmem.h
"

16 
	#EOZ
 (-1Ë

	)

18 
Zio
 
	tZIO
;

20 
	#zgëc
(
z
Ë(((z)->
n
--)>0 ? 
	`ˇ°_uch¨
(*(z)->
p
++Ë: 
	`luaZ_fûl
(z))

	)

23 
	sMbuf„r
 {

24 *
	mbuf„r
;

25 
size_t
 
	mn
;

26 
size_t
 
	mbuffsize
;

27 } 
	tMbuf„r
;

29 
	#luaZ_öôbuf„r
(
L
, 
buff
Ë((buff)->
buf„r
 = 
NULL
, (buff)->
buffsize
 = 0)

	)

31 
	#luaZ_buf„r
(
buff
Ë((buff)->
buf„r
)

	)

32 
	#luaZ_sizebuf„r
(
buff
Ë((buff)->
buffsize
)

	)

33 
	#luaZ_bufÊí
(
buff
Ë((buff)->
n
)

	)

35 
	#luaZ_buf‰emove
(
buff
,
i
Ë((buff)->
n
 -(i))

	)

36 
	#luaZ_ª£tbuf„r
(
buff
Ë((buff)->
n
 = 0)

	)

39 
	#luaZ_ªsizebuf„r
(
L
, 
buff
, 
size
) \

40 ((
buff
)->
buf„r
 = 
	`luaM_ªÆlocvch¨
(
L
, (buff)->buffer, \

41 (
buff
)->
buffsize
, 
size
), \

42 (
buff
)->
buffsize
 = 
size
)

	)

44 
	#luaZ_‰ìbuf„r
(
L
, 
buff
Ë
	`luaZ_ªsizebuf„r
(L, buff, 0)

	)

47 
LUAI_FUNC
 
luaZ_öô
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, 
lua_Ródî
 
ªadî
,

48 *
d©a
);

49 
LUAI_FUNC
 
size_t
 
luaZ_ªad
 (
ZIO
* 
z
, *
b
, size_à
n
);

55 
	sZio
 {

56 
size_t
 
	mn
;

57 c⁄° *
	mp
;

58 
lua_Ródî
 
	mªadî
;

59 *
	md©a
;

60 
lua_Sèã
 *
	mL
;

64 
LUAI_FUNC
 
luaZ_fûl
 (
ZIO
 *
z
);

	@pipe_demo.c

1 
	~<°dio.h
>

2 
	~<uni°d.h
>

3 
	~<°dlib.h
>

4 
	#mk°r
(
s1
, 
s2
Ës1 ## 
	)
s2

5 
	#°rô
(
s
Ë#s

	)

7 
	$maö
(){

8 
chûd_B
, 
chûd_A
;

9 
pùefds
[2];

10 *
¨gs1
[] = {"/bin/wc", 0};

11 *
¨gs2
[] = {"/usr/bin/ls", 0};

12 
	`pùe
(
pùefds
);

14 if(!(
chûd_B
 = 
	`f‹k
())){

15 
	`˛o£
(
pùefds
[1]);

16 
	`˛o£
(0);

17 
	`dup2
(
pùefds
[0], 0);

18 
	`˛o£
(
pùefds
[0]);

19 
	`execve
("/u§/bö/wc", 
¨gs1
, 0);

20 
	`¥ötf
("pid %d: Iám back, somëhög i†wr⁄g\n", 
	`gëpid
());

23 
	`˛o£
(
pùefds
[0]);

25 if(!(
chûd_A
 = 
	`f‹k
())){

26 
	`˛o£
(1);

27 
	`dup2
(
pùefds
[1], 1);

28 
	`˛o£
(
pùefds
[1]);

29 
	`execve
("/bö/ls", 
¨gs2
, 0);

30 
	`¥ötf
("pid %d: Iám back, somëhög i†wr⁄g\n", 
	`gëpid
());

32 
	`˛o£
(
pùefds
[1]);

33  
	`waô4
(-1, 0, 0, 0) != -1) ;

34 
	`¥ötf
("Done\n");

37 
	}
}

	@t.c

1 
	~<°dio.h
>

2 
	~"toch¨.h
"

3 
	$maö
(){

4 *
íd±r
 = 0;

5 
a
 = 
	`°πﬁ
("sdÁbc", &
íd±r
, 10);

6 
	`¥ötf
("%s\n", 
	`gëív
("HOME"));

9 
	}
}

	@t.cn

	@tcp.cn

4 
	~<√t/t˝.h
>

5 
	~<löux/skbuff.h
>

7 
¥öt_t˝msg
(
sk_buff
 *
skb
);

13 ÂèëËµ∑ËÄÖ
	m_
Á≠âÂæÖÁ°ÆËÆ§,

14 Â∫îÁ≠îËÄÖ
	m_
Á≠âÂæÖÁ°ÆËÆ§,

16 ÂëäÈÄÄËÄÖ
	m_
Á≠âÂæÖÁ°ÆËÆ§,

17 ÂêéÈÄÄËÄÖ
	m_
Á≠âÂæÖÁ°ÆËÆ§,

18 ÂëäÈÄÄËÄÖ
	m_
‰øùÁïô‰æ¶Âê¨

22 
	sc⁄√˘
{

23 
u32
 
	mmyù
;

24 
u32
 
	mhisù
;

25 
u16
 
	mmyp‹t
;

26 
u16
 
	mhi•‹t
;

27 
	m°©e
;

28 
u32
 
	m√xt_£q
;

29 
u32
 
	m√xt_ack
;

33 
	gc⁄√˘
 *ËøûÊé•Ë°®;

35 
c⁄√˘
 *

36 
_c⁄√˘i⁄_lookup
(
u32
 
hisù
, 
u16
 
hi•‹t
, u32 
myù
, u16 
myp‹t
);

37 
c⁄√˘
 *

38 
_c⁄√˘i⁄_¸óã
(
u32
 
hisù
, 
u16
 
hi•‹t
, u32 
myù
, u16 
myp‹t
);

39 
c⁄√˘
 * 
c⁄√˘i⁄_lookup
(
sk_buff
 * 
comî
);

41 
	$t˝_œyî_ªcv
(
sk_buff
 *
comî
){

42 
t˝hdr
 *t˝hd∏
comî
->tcphdr;

43 
c⁄√˘
 *c⁄√˘ = 
	`c⁄√˘i⁄_lookup
(
comî
);

44 
	`as£π
(
t˝hdr
->
Êag_r°
 == 0);

45 if(!
c⁄√˘
){

46 
c⁄√˘
 = 
	`c⁄√˘i⁄_¸óã
();

47 if(
t˝hdr
->
Êags
 =
TCP_FLAG_SYN
){

49 
c⁄√˘
->
°©e
 = ÂèëËµ∑ËÄÖ
_
Á≠âÂæÖÁ°ÆËÆ§;

52 
ign‹e
;

55 if(
c⁄√˘
->
°©e
 == ËøûÊé•‰∏çÂ≠òÂú®){

56 
ign‹e
;

58 if(
c⁄√˘
->
°©e
 =ÂèëËµ∑ËÄÖ
_
Á≠âÂæÖÁ°ÆËÆ§){

59 if(
t˝hdr
->
ack
 =
c⁄√˘
->
√xt_£q
 &&

60 
t˝hdr
->
Êags
 =
TCP_FLAG_SYN
 | 
TCP_FLAG_ACK
 ){

68 
c⁄√˘
->
°©e
 = ËøûÊé•Â∑≤Âª∫Á´ã;

70 
ign‹e
;

72 if(
c⁄√˘
->
°©e
 =Â∫îÁ≠îËÄÖ
_
Á≠âÂæÖÁ°ÆËÆ§){

73 if(
t˝hdr
->
Êags
 = 
TCP_FLAG_ACK
 && 
c⁄√˘
->
√xt_£q
 =t˝hdr->
ack
){

74 
c⁄√˘
->
°©e
 = ËøûÊé•Â∑≤Âª∫Á´ã;

76 
ign‹e
;

78 if(
c⁄√˘
->
°©e
 == ËøûÊé•Â∑≤Âª∫Á´ã){

79 
	`as£π
(
t˝hdr
->
Êag_ack
);

80 if(
t˝hdr
->
Êags
 =
TCP_FLAG_FIN
){

82 
c⁄√˘
->
°©e
 = ÂêéÈÄÄËÄÖ
_
Á≠âÂæÖÁ°ÆËÆ§;

84 
ign‹e
;

86 if(
c⁄√˘
->
°©e
 =ÂëäÈÄÄËÄÖ
_
Á≠âÂæÖÁ°ÆËÆ§){

87 if(
t˝hdr
->
Êag_ack
){

88 
c⁄√˘
->
°©e
 = ÂëäÈÄÄËÄÖ
_
‰øùÁïô‰æ¶Âê¨;

89 if(
t˝hdr
->
Êag_fö
){

91 
c⁄√˘
->
°©e
 = ËøûÊé•‰∏çÂ≠òÂú®;

94 
ign‹e
;

97 if(
c⁄√˘
->
°©e
 =ÂëäÈÄÄËÄÖ
_
‰øùÁïô‰æ¶Âê¨){

98 if(
t˝hdr
->
Êag_syn
){

100 
c⁄√˘
->
°©e
 = ËøûÊé•‰∏çÂ≠òÂú®;

102 
ign‹e
;

105 if(
c⁄√˘
->
°©e
 =ÂêéÈÄÄËÄÖ
_
Á≠âÂæÖÁ°ÆËÆ§){

106 if(
t˝hdr
->
Êags
 =
TCP_FLAG_ACK
){

107 
c⁄√˘
->
°©e
 = ËøûÊé•‰∏çÂ≠òÂú®;

109 
ign‹e
;

111 
	`as£π
(0);

114 
ign‹e
:

116 
	`¥öt_t˝msg
(
comî
);

117 
	}
}

119 
	$¥öt_t˝msg
(
sk_buff
 *
skb
){

121 
	}
}

122 
c⁄√˘
 *

123 
	$__c⁄√˘i⁄_lookup
(
u32
 
hisù
, 
u16
 
hi•‹t
, u32 
myù
, u16 
myp‹t
){

126 
	}
}

129 
c⁄√˘
 * 
	$c⁄√˘i⁄_lookup
(
sk_buff
 * 
comî
){

130  
	`__c⁄√˘i⁄_lookup
(
comî
->
ùhdr
->
myù
, comî->
t˝hdr
->
myp‹t
,

131 
comî
->
ùhdr
->
yourù
, comî->
t˝hdr
->
youΩ‹t
);

132 
	}
}

134 
c⁄√˘
 *

135 
	$_c⁄√˘i⁄_¸óã
(
u32
 
hisù
, 
u16
 
hi•‹t
, u32 
myù
, u16 
myp‹t
){

138 
	}
}

141 
c⁄√˘
 *

142 
	$c⁄√˘i⁄_¸óã
(
sk_buff
 *
comî
){

143  
	`_c⁄√˘i⁄_¸óã
(
comî
->
ùhdr
->
myù
, comî->
t˝hdr
->
myp‹t
,

144 
comî
->
ùhdr
->
yourù
, comî->
t˝hdr
->
youΩ‹t
);

145 
	}
}

147 
	$öô_t˝
(){

148 ËøûÊé•Ë°® = 
	`°©ic_Æloc
( (*), ËøûÊé•Ë°®Èïø);

149 
	}
}

	@tochar.h

2 
	mASCII_a
 = 'a',

3 
	mASCII_b
,

4 
	mASCII_c
,

5 
	mASCII_d
,

6 
	mASCII_e
,

7 
	mASCII_f
,

8 
	mASCII_g
,

9 
	mASCII_h
,

10 
	mASCII_i
,

11 
	mASCII_j
,

12 
	mASCII_k
,

13 
	mASCII_l
,

14 
	mASCII_m
,

15 
	mASCII_n
,

16 
	mASCII_o
,

17 
	mASCII_p
,

18 
	mASCII_q
,

19 
	mASCII_r
,

20 
	mASCII_s
,

21 
	mASCII_t
,

22 
	mASCII_u
,

23 
	mASCII_v
,

24 
	mASCII_w
,

25 
	mASCII_x
,

26 
	mASCII_y
,

27 
	mASCII_z
,

29 
	mASCII_A
 = 'A',

30 
	mASCII_B
,

31 
	mASCII_C
,

32 
	mASCII_D
,

33 
	mASCII_E
,

34 
	mASCII_F
,

35 
	mASCII_G
,

36 
	mASCII_H
,

37 
	mASCII_I
,

38 
	mASCII_J
,

39 
	mASCII_K
,

40 
	mASCII_L
,

41 
	mASCII_M
,

42 
	mASCII_N
,

43 
	mASCII_O
,

44 
	mASCII_P
,

45 
	mASCII_Q
,

46 
	mASCII_R
,

47 
	mASCII_S
,

48 
	mASCII_T
,

49 
	mASCII_U
,

50 
	mASCII_V
,

51 
	mASCII_W
,

52 
	mASCII_X
,

53 
	mASCII_Y
,

54 
	mASCII_Z
,

56 
	mASCII_0
 = '0',

57 
	mASCII_1
,

58 
	mASCII_2
,

59 
	mASCII_3
,

60 
	mASCII_4
,

61 
	mASCII_5
,

62 
	mASCII_6
,

63 
	mASCII_7
,

64 
	mASCII_9
,

66 
	mASCII_$
 = '$',

69 
	#toch¨
(
x
Ë(
ASCII_
 ## x)

	)

	@utils.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~"utûs.h
"

5 
	~<˘y≥.h
>

6 
	$Def_¨r_dñ
()

7 
	$Def_¨r_dñ2
()

9 
	$Def_¨r_dñ
()

10 
	$Def_¨r_dñ2
()

12 
	$öt_¨r_a
(*
¨r
, 
N
, 
©
, 
Àn
){

13 
√wÀn
 = 
	`__öt_¨r_a
(
¨r
, 
N
, 
©
, 
Àn
);

14 *
√w¨ó
 = 
¨r
 + 
©
 + 1;

15  
i
 = 0; i < 
Àn
; i++Ë
√w¨ó
[i] = 0;

16  
√wÀn
;

17 
	}
}

19 
	$ch¨_¨r_a
(*
¨r
, 
N
, 
©
, *
¢ù≥t
, 
¢ù≥t_Àn
){

20 
√wÀn
 = 
	`__ch¨_¨r_a
(
¨r
, 
N
, 
©
, 
¢ù≥t_Àn
);

21 
	`°∫˝y
(
¨r
 + 
©
 + 1, 
¢ù≥t
, 
¢ù≥t_Àn
);

22  
√wÀn
;

23 
	}
}

25 
	$ch¨_¨r_i
(*
¨r
, 
N
, 
©
, *
¢ù≥t
, 
¢ù≥t_Àn
){

26  
	`ch¨_¨r_a
(
¨r
, 
N
, 
©
-1, 
¢ù≥t
, 
¢ù≥t_Àn
);

27 
	}
}

29 
	$¥öt_ök_n°r
(*
°r
, 
cﬁ‹©
){

30 *
cuº
 = 
°r
;

31 *
cuº
 && *curr!= '\n'){

32 *
f‹m©
 = "%c";

33 if(
cuº
 - 
°r
 =
cﬁ‹©
Ë
f‹m©
 = 
	`CC_BG_RED
(%
c
);

34 
	`¥ötf
(
f‹m©
, *
cuº
);

35 
cuº
++;

38 
	}
}

40 *
	$mÆloc0
(
size
){

41 *
±r
 = 
	`mÆloc
(
size
);

42 
	`mem£t
(
±r
, 0, 
size
);

43  
±r
;

44 
	}
}

48 *
	$°rch¨
–*
hay°ack
, 
√edÀ
){

49  *
hay°ack
 != 0){

50 if–*
hay°ack
 =
√edÀ
 )  haystack;

51 
hay°ack
++;

54 
	}
}

56 *
	$°∫ch¨
–*
hay°ack
, 
√edÀ
){

57  *
hay°ack
 != '\n'){

58 if–*
hay°ack
 =
√edÀ
 )  haystack;

59 
hay°ack
++;

62 
	}
}

63 
	$°æí_ex
(*
°r
, *
group
){

64 *
cuº
 = 
°r
;

66 *
cuº
 !0 && 
	`°rch¨
(
group
, *curr) == 0){

67 
cuº
++;

69  
cuº
 - 
°r
;

70 
	}
}

74 *
	$ni˚_ascii_£rül
(*
°r
, 
ª∂a˚r
){

75 *
cuº
 = 
°r
-1;

76 *++
cuº
){

77 if(!
	`is•a˚
(*
cuº
)) ;

78 *
cuº
 = 
ª∂a˚r
;

80  
°r
;

81 
	}
}

87 
	$±r_¨r_a
(*
_löes
, 
a·î
, 
˚Œƒ
){

88 **
löes
 = 
_löes
;

89 **
cuº
 = 
löes
 + 
a·î
 + 1;

90 *
cuº
){

91 
cuº
++;

93 
cuº
 > &
löes
[
a·î
]){

94 
cuº
[
˚Œƒ
] = curr[0];

95 
cuº
--;

97 
cuº
++;

98 
cuº
 <&
löes
[
a·î
 + 
˚Œƒ
]){

99 *
cuº
 = 0;

100 
cuº
++;

102 
	}
}

104 
	$öt_¨r_a
(*
¨r
, 
a·î
, 
˚Œƒ
){

105 
i
 = 
a·î
 + 1;

106 
¨r
[
i
]) i++;

107 
i
 > 
a·î
){

108 
¨r
[
i
+
˚Œƒ
] =árr[i];

109 
i
--;

111 
i
++;

112 
i
 <
a·î
 + 
˚Œƒ
){

113 
¨r
[
i
] = 0;

114 
i
++;

116 
	}
}

117 
	$±r_¨r_dñ
(*
_¨r
, 
m
, 
n
){

118 **
¨r
 =árr;

119 
i
 = 
m
; i <=
n
; i++){

120 
¨r
[
m
] =áº[
n
+1];

122 
	}
}

123 
	$öt_¨r_dñ
(*
¨r
, 
m
, 
n
){

124 
i
 = 
m
; i <=
n
; i++){

125 
¨r
[
m
] =áº[
n
+1];

127 
	}
}

130 
	$è°e_digô
(*
©
){

131 *
l
 = 
©
;

132  *
l
 >= '0' && *l <= '9')Ü--;

133 
l
++;

134  
	`©oi
(
l
);

135 
	}
}

140 *
gë_right_si°î
();

141 *
gë_À·_brŸhî
();

142 *
gë_right_brŸhî
();

144 * 
	$gë_À·_si°î
(*
¨r
, 
x
, 
Àn
){

145 if(
x
 < 
¨r
[0])  0;

146 
i
 = 0; i < 
Àn
; i++){

147 if(
¨r
[
i
] > 
x
)  (*)&arr[i-1];

149  (*)&
¨r
[
Àn
-1];

150 
	}
}

152 *
	$°∫°r
(* 
s1
, * 
s2
, 
n
)

154 
backup
 = 
s1
[
n
];

155 
s1
[
n
] = 0;

156 *
©
 = 
	`°r°r
(
s1
, 
s2
);

157 
s1
[
n
] = 
backup
;

158  
©
;

159 
	}
}

162 
	$°r_shl
(*
°r
, 
off£t
){

163 * 
to
 = 
°r
 - 
off£t
;

164 
i
 = 0;

165 
°r
[
i
]){

166 
to
[
i
] = 
°r
[i];

167 
i
++;

169 
to
[
i
] = 0;

170 
	}
}

171 
	$°r_dñ2
(*
a
, *
b
){

172 
	`°r_shl
(
b
 + 1, b - 
a
 + 1);

173  
b
-
a
+1;

174 
	}
}

180 
	$N°r_shl
(*
©
, 
off£t
, 
N
){

181 * 
to
 =
©
 - 
off£t
;

182 
i
 = 0; i < 
N
; i++){

183 
to
[
i
] = 
©
[i];

186 
	}
}

194 
	$N°r_dñ2
(*
°r
, *
a
, *
b
, 
N
){

195 
	`N°r_shl
(
b
 + 1, b - 
a
 + 1, 
N
);

196  
b
-
a
+1;

197 
	}
}

204 
	$N°r_shr
(*
°r
, 
off£t
, 
Àngth
){

205 *
èû
 = 
°r
 + 
Àngth
 ;

206 *
cuº
 = 
èû
; cuº >
°r
; curr--){

207 
cuº
[
off£t
] = curr[0];

209 
	}
}

214 
	$N°r_shr_©
(*
°r
, 
©
, 
off£t
, 
whﬁe_Àn
){

215 *
s
 = 
°r
 + 
©
;

216 
	`N°r_shr
(
s
, 
off£t
, 
whﬁe_Àn
 - 
©
);

217 
	}
}

	@utils.h

1 #i‚de‡
UTILS_H


2 
	#UTILS_H


	)

3 #unde‡
boﬁ


4 
	#boﬁ
 

	)

5 
	#Ál£
 0

	)

6 
	#åue
 1

	)

9 
	#Def_¨r_dñ
(
ty≥
)\

10 
ty≥
##
	`_¨r_dñ
—y≥ *
¨r
,
N
, 
©
, 
Àn
){\

11 
c›y_Àn
 = 
N
 - (
©
+1Ë- (
Àn
-1);\

12 
i
 = 
©
; i <át+
c›y_Àn
; i++){\

13 
¨r
[
i
] =áº[ò+ 
Àn
];\

15  
N
 - 
Àn
;\

16 }

	)

17 
	#Def_¨r_dñ2
(
ty≥
)\

18 
ty≥
##
	`_¨r_dñ2
—y≥ *
¨r
, 
N
, 
m
, 
n
){\

19 
c›y_Àn
 = 
N
 - (
n
+1);\

20 
ty≥
 *
de°
 = 
¨r
 + 
m
;\

21 
ty≥
 *
§c
 = 
¨r
 + 
n
 + 1;\

22 
i
 = 0; i < 
c›y_Àn
; i++){\

23 
de°
[
i
] = 
§c
[i];\

25  
N
 - (
n
 - 
m
 + 1);\

26 }

	)

28 
	#Def_¨r_a
(
ty≥
)\

29 
ölöe
 
__
##
ty≥
##
	`_¨r_a
—y≥ *
¨r
,
N
, 
©
, 
Àn
){\

30 
i
 = 
N
-1; i > 
©
; i--){\

31 
¨r
[
i
 + 
Àn
] =árr[i];\

33  
N
 + 
Àn
;\

34 }

	)

42 
öt_¨r_dñ
(*
¨r
, 
N
, 
©
, 
Àn
);

43 
öt_¨r_dñ2
(*
¨r
, 
N
, 
m
, 
n
);

45 
	$Def_¨r_a
()

46 
	`öt_¨r_a
(*
¨r
, 
N
, 
©
, 
Àn
);

48 
ölöe
 
	$pch¨_¨r_dñ
(**
¨r
, 
N
, 
©
, 
Àn
){

49  
	`öt_¨r_dñ
((*)
¨r
, 
N
, 
©
, 
Àn
);

50 
	}
}

51 
ölöe
 
	$pch¨_¨r_dñ2
(**
¨r
, 
N
, 
m
, 
n
)

52 {  
	`öt_¨r_dñ2
((*)
¨r
, 
N
, 
m
, 
n
); 
	}
}

54 
ölöe
 
	$pch¨_¨r_a
(**
¨r
, 
N
, 
©
, 
Àn
)

55 {  
	`öt_¨r_a
((*)
¨r
, 
N
, 
©
, 
Àn
); 
	}
}

58 
ch¨_¨r_dñ
(*
¨r
, 
N
, 
©
, 
Àn
);

59 
ch¨_¨r_dñ2
(*
¨r
, 
N
, 
m
, 
n
);

60 
	$Def_¨r_a
()

61 
	`ch¨_¨r_a
(*
¨r
, 
N
, 
©
, *
¢ù≥t
, 
¢ù≥t_Àn
);

62 
	`ch¨_¨r_i
(*
¨r
, 
N
, 
©
, *
¢ù≥t
, 
¢ù≥t_Àn
);

66 
ölöe
 
	$ch¨_¨r_dñN
(*
¨r
, 
N
, 
©
, 
Àn
){

67 
√wÀn
 = 
	`ch¨_¨r_dñ
(
¨r
, 
N
, 
©
, 
Àn
);

68 
¨r
[
√wÀn
] = '\n';

69  
√wÀn
;

70 
	}
}

72 
ölöe
 
	$ch¨_¨r_dñ2N
(*
¨r
, 
N
, 
m
, 
n
){

73 
√wÀn
 = 
	`ch¨_¨r_dñ2
(
¨r
, 
N
, 
m
, 
n
);

74 
¨r
[
√wÀn
] = '\n';

75  
√wÀn
;

76 
	}
}

78 
ölöe
 
	$ch¨_¨r_aN
(*
¨r
, 
N
, 
©
, *
¢ù≥t
, 
¢ù≥t_Àn
){

79 
√wÀn
 = 
	`ch¨_¨r_a
(
¨r
, 
N
 ,
©
, 
¢ù≥t
, 
¢ù≥t_Àn
);

80 
¨r
[
√wÀn
] = '\n';

81  
√wÀn
;

82 
	}
}

84 
ölöe
 
	$ch¨_¨r_iN
(*
¨r
, 
N
, 
©
, *
¢ù≥t
, 
¢ù≥t_Àn
){

85 
√wÀn
 = 
	`ch¨_¨r_i
(
¨r
, 
N
 ,
©
, 
¢ù≥t
, 
¢ù≥t_Àn
);

86 
¨r
[
√wÀn
] = '\n';

87  
√wÀn
;

88 
	}
}

90 *
mÆloc0
(
size
);

91 *
°rch¨
–*
hay°ack
, 
√edÀ
);

92 *
°∫ch¨
–*
hay°ack
, 
√edÀ
);

93 
°æí_ex
(*
°r
, *
group
);

94 
	#__CC_N
 "\033[0m"

	)

95 
	#CC_RED
(
s
Ë"\033[0;31m" #†
__CC_N


	)

96 
	#CC_BG_RED
(
s
Ë"\033[42m" #†
__CC_N


	)

108 
¥öt_ök_n°r
(*
°r
, 
cﬁ‹©
);

109 
è°e_digô
(*
©
);

110 * 
°∫°r
 (*
hay°ack
, *
√edÀ
, 
hay°ack_Àn
);

111 *
ni˚_ascii_£rül
(*
°r
, 
ª∂a˚r
);

	@vi.c

1 
	#_DEFAULT_SOURCE


	)

58 
	~"toch¨.h
"

59 
	~<˘y≥.h
>

60 
	~"vi.h
"

61 
	~<uni°d.h
>

62 
	~<sys/ty≥s.h
>

63 
	~<sys/°©.h
>

64 
	~<f˙é.h
>

65 
	~<°rög.h
>

66 
	g__sûít
=1;

67 *
	gvi_›s1_9
 = "123456789";

68 * 
	gvi_move_›s
 = "hjkl0$^W%";

69 * 
	gvi_∑ú_°r
 = "()[]{}<>";

70 * 
	gvi_∑ú_°r2
 = ")(][}{><";

72 
vi_≠≥nd_ß„
(
vi
*vi, *
§c
, 
§˛í
);

74 
ölöe
 
	$__ex∑nd_löe
(
l
, 
size
, **
löes
, *
size_of_löe
){

75 
löes
[
l
] = 
	`ªÆloc
÷öes[l], 
size
);

76 
size_of_löe
[
l
] = 
size
;

77 
	}
}

82 
ölöe
 
	$__vi_ex∑nd_löe
(
vi
 *vi, 
l
, 
size
){

83 
	`__ex∑nd_löe
(
l
, 
size
, 
vi
->
löes
, vi->
size_of_löe
);

84 
	}
}

87 
ölöe
 
	$vi_ex∑nd_ylöe
(
vi
 *vi, 
l
, 
size
){

88 
	`__ex∑nd_löe
(
l
, 
size
, 
vi
->
ylöes
, vi->
size_of_ylöe
);

89 
	}
}

97 
	$vi_ö£π_©
(
vi
 *vi, 
l
, *
©
, *
§c
, 
§˛í
){

98 *
löe
 = 
vi
->
löes
[
l
];

99 
	`ch¨_¨r_iN
(
löe
, 
	`VI_CURRL_LEN
(
vi
), 
	`VI_CURR_OFFSET
(vi), 
§c
, 
§˛í
);

103 
vi
->
Àn_of_löes
[
l
] +
§˛í
;

104 
	}
}

105 
	$vi_≠≥nd_©
(
vi
 *vi, 
l
, *
©
, *
§c
, 
§˛í
){

106 
	`vi_ö£π_©
(
vi
, 
l
, 
©
+1, 
§c
, 
§˛í
);

107 
	}
}

114 
	$vi_ö£π
(
vi
*vi, *
§c
, 
§˛í
){

115 if(
§˛í
 == 0) ;

117 
	`vi_ö£π_©
(
vi
, vi->
cuºl
, vi->
cuº
, 
§c
, 
§˛í
);

119 
vi
->
cuº
 +
§˛í
 - 1;

120 
	}
}

122 
boﬁ
 
	$vi_e_
(
vi
 *vi){

123 *
ﬁdcuº
 = 
vi
->
cuº
;

124 
ﬁdcuºl
 = 
vi
->
cuºl
;

126 
boﬁ
 
ªt
 = 
	`vi_e
(
vi
);

127 if(
vi
->
cuºl
 !
ﬁdcuºl
){

128 
vi
->
cuº
 = 
ﬁdcuº
;

129 
vi
->
cuºl
 = 
ﬁdcuºl
;

130  
Ál£
;

132  
ªt
;

133 
	}
}

134 
boﬁ
 
	$vi_b_
(
vi
 *vi){

135 *
ﬁdcuº
 = 
vi
->
cuº
;

136 
ﬁdcuºl
 = 
vi
->
cuºl
;

138 
boﬁ
 
ªt
 = 
	`vi_b
(
vi
);

139 if(
vi
->
cuºl
 !
ﬁdcuºl
){

140 
vi
->
cuº
 = 
ﬁdcuº
;

141 
vi
->
cuºl
 = 
ﬁdcuºl
;

142  
Ál£
;

144  
ªt
;

145 
	}
}

146 
boﬁ
 
	$vi_B_
(
vi
 *vi){

147 *
ﬁdcuº
 = 
vi
->
cuº
;

148 
ﬁdcuºl
 = 
vi
->
cuºl
;

150 
boﬁ
 
ªt
 = 
	`vi_B
(
vi
);

151 if(
vi
->
cuºl
 !
ﬁdcuºl
){

152 
vi
->
cuº
 = 
ﬁdcuº
;

153 
vi
->
cuºl
 = 
ﬁdcuºl
;

154  
Ál£
;

156  
ªt
;

157 
	}
}

158 
boﬁ
 
	$vi_E_
(
vi
 *vi){

159 *
ﬁdcuº
 = 
vi
->
cuº
;

160 
ﬁdcuºl
 = 
vi
->
cuºl
;

162 
boﬁ
 
ªt
 = 
	`vi_E
(
vi
);

163 if(
vi
->
cuºl
 !
ﬁdcuºl
){

164 
vi
->
cuº
 = 
ﬁdcuº
;

165 
vi
->
cuºl
 = 
ﬁdcuºl
;

166  
Ál£
;

168  
ªt
;

169 
	}
}

170 
boﬁ
 
	$vi_W_
(
vi
 *vi){

171 *
ﬁdcuº
 = 
vi
->
cuº
;

172 
ﬁdcuºl
 = 
vi
->
cuºl
;

174 
boﬁ
 
ªt
 = 
	`vi_W
(
vi
);

175 if(
vi
->
cuºl
 !
ﬁdcuºl
){

176 
vi
->
cuº
 = 
ﬁdcuº
;

177 
vi
->
cuºl
 = 
ﬁdcuºl
;

178  
Ál£
;

180  
ªt
;

181 
	}
}

182 
boﬁ
 
	$vi_w_
(
vi
 *vi){

183 *
ﬁdcuº
 = 
vi
->
cuº
;

184 
ﬁdcuºl
 = 
vi
->
cuºl
;

186 
boﬁ
 
ªt
 = 
	`vi_w
(
vi
);

187 if(
vi
->
cuºl
 !
ﬁdcuºl
){

188 
vi
->
cuº
 = 
ﬁdcuº
;

189 
vi
->
cuºl
 = 
ﬁdcuºl
;

190  
Ál£
;

192  
ªt
;

193 
	}
}

195 
	$Def_vi_›
(
w
)

196 
	$Def_vi_›
(
W
)

197 
	$Def_vi_›
(
E
)

198 
	$Def_vi_›
(
B
)

199 
	$Def_vi_›
(
b
)

200 
	$Def_vi_›
(
e
)

208 
	$¥ïro˚ss
(*
›s
){

209 
Àn
 = 
	`°æí
(
›s
);

210 *
cuº
 = 
›s
;

211 *
èû
 = 
›s
 + 
Àn
 - 1;

212 *
cuº
){

213 
righéí
 = 
èû
 - 
cuº
 + 1 + 1;

214 *
cuº
){

217 if(
cuº
[1] == '<') curr[0] = '<';

218 if(
cuº
[1] == '>') curr[0] = '>';

219 
	`as£π
(0 && "unimplemented yet");

220 
	`ch¨_¨r_dñ
(
cuº
, 
righéí
, 1, 1);

226 if–
	`°∫ˇ£cmp
(
cuº
, "<CR>", 4) == 0){

227 
	`ch¨_¨r_dñ
(
cuº
, 
righéí
, 1, 3);

228 
cuº
[0] = 
ASCII_CR
;

230 if–
	`°∫ˇ£cmp
(
cuº
, "<ESC>", 5) == 0){

231 
	`ch¨_¨r_dñ
(
cuº
, 
righéí
, 1, 4);

232 
cuº
[0] = 
ASCII_ESC
;

234 
	`as£π
(0 && "unknown key");

240 
cuº
++;

242 
	}
}

248 
	s›£q
{

250 
	mvÆue
;

251 
	mbyã
[4];

253 
	mtŸÀn
;

263 
›£q
 
	$è°e_›£q
(
vi
 *vi){

264 *
cuº›
 = 
vi
->
›s
 + vi->
›_id
;

265 
›£q
 opseq;

267 
›£q
.
vÆue
 = *
cuº›
;

268 *
cuº›
){

272 if(
vi
->
v_begö
){

273 
›£q
.
tŸÀn
 = 1;

277 
›£q
.
byã
[1] = 
cuº›
[1];

278 if(
cuº›
[1] == currop[0]){

279 
›£q
.
tŸÀn
 = 2;

282 
cuº›
[1]){

284 
›£q
.
tŸÀn
 = 3; ;

285 'w': 
	`as£π
(0);

289 
›£q
.
tŸÀn
 = 2; ;

291 
›£q
.
tŸÀn
 = -1; ;

301 
›£q
.
tŸÀn
 = 2; ;

310 if(
cuº›
[1] == '|'){

311 
›£q
.
byã
[1] = '|';

312 
›£q
.
tŸÀn
 = 2;

314 
›£q
.
tŸÀn
 = 1;

334 
ASCII_ESC
:

335 
›£q
.
tŸÀn
 = 1; ;

341 *
c⁄ã¡
 = 
cuº›
 + 1;

342 
Àn
 = 
	`°æí_ex
(
c⁄ã¡
, 
STR_ESC
);

343 
›£q
.
tŸÀn
 = 1 + 
Àn
;

344 if(
c⁄ã¡
[
Àn
] =
ASCII_ESC
Ë
›£q
.
tŸÀn
 += 1;

353 *
∑âîn
 = 
cuº›
 + 1;

354 
Àn
 = 
	`°æí_ex
(
∑âîn
, 
STR_CR
);

356 
›£q
.
tŸÀn
 = 1 + 
Àn
 + 1;

361 
›£q
.
tŸÀn
 = 0; ;

363 
›£q
.
tŸÀn
 = -1; ;

365  
›£q
;

366 
	}
}

372 
	$è°e_cou¡
(*
›£q
, **
íd±r
){

373 if(
›£q
[0] == '0')  1;

374 if(
›£q
[0] == '-')  1;

375 if(
›£q
[0] =
ASCII_DEL
)  0;

377 
cou¡
 = 
	`°πﬁ
(
›£q
, 
íd±r
, 10);

378 if(
cou¡
 == 0)  1;

379  
cou¡
;

380 
	}
}

383 
	#SEQ
(
a
, 
b
Ë–
	`toch¨
◊Ë+ (Åoch¨(bË<< 8 ))

	)

400 
boﬁ
 
	$vi_n‹mÆ
(
vi
 *vi, *
›s
){

401 
Àn
;

402 
boﬁ
 
ok
;

404 
	`¥ïro˚ss
(
›s
);

406 
vi
->
›s
 = ops;

407 
vi
->
›_id
 = 0;

411 
vi
->
›s
[vi->
›_id
]){

412 *
cuº›
 = 
vi
->
›s
 + vi->
›_id
;

413 
N
 = 
	`è°e_cou¡
(
cuº›
, &currop);

414 
vi
->
›_id
 = 
cuº›
 - vi->
›s
;

417 
›£q
 op£q
	`è°e_›£q
(
vi
);

418 if(
›£q
.
tŸÀn
 == -1){

419 
ok
 = 
Ál£
;

420 
out
;;

423 if(
N
 < 1 ) 
èke_ef„˘_d⁄e
;

425 
èke_ef„˘
:

426 
ok
 = 1;

427 
›£q
.
vÆue
){

429 
ok
 = 
	`vi_d
(
vi
); ;

430 
	`SEQ
(
d
, 
f
):

431 
ok
 = 
	`vi_df
(
vi
, 
cuº›
[2]); ;

432 
	`SEQ
(
d
, d):

433 
	`vi_dd
(
vi
); ;

434 
	`SEQ
(
d
, 
W
):

435 
ok
 = 
	`vi_dW
(
vi
); ;

436 
	`SEQ
(
d
, 0):

437 
	`vi_d0
(
vi
); ;

438 
	`SEQ
(
d
, 
$
):

439 
	`vi_d$
(
vi
); ;

441 'y': 
ok
 = 
	`vi_y
(
vi
); ;

442 
	`SEQ
(
y
, 
f
):

443 
ok
 = 
	`vi_yf
(
vi
, 
cuº›
[2]); ;

444 
	`SEQ
(
y
, y):

445 
	`vi_yy
(
vi
); ;

446 
	`SEQ
(
y
, 
W
):

447 
ok
 = 
	`vi_yW
(
vi
); ;

448 
	`SEQ
(
y
, 
w
): 
	`as£π
(0);

449 
	`SEQ
(
y
, 0):

450 
	`vi_y0
(
vi
); ;

451 
	`SEQ
(
y
, 
$
):

452 
	`vi_y$
(
vi
); ;

456 
ok
 = 
	`vi_W_
(
vi
); ;

458 
ok
 = 
	`vi_w_
(
vi
); ;

460 
ok
 = 
	`vi_B_
(
vi
); ;

462 
ok
 = 
	`vi_b_
(
vi
); ;

464 
ok
 = 
	`vi_E_
(
vi
); ;

466 
ok
 = 
	`vi_e_
(
vi
); ;

468 'W': 
ok
 = 
	`vi_W
(
vi
); ;

469 'w': 
ok
 = 
	`vi_w
(
vi
); ;

470 'B': 
ok
 = 
	`vi_B
(
vi
); ;

471 'E': 
ok
 = 
	`vi_E
(
vi
); ;

472 'e': 
ok
 = 
	`vi_e
(
vi
); ;

473 'b': 
ok
 = 
	`vi_b
(
vi
); ;

475 'f': 
ok
 = 
	`vi_f
(
vi
, 
cuº›
[1]); ;

476 'F': 
ok
 = 
	`vi_F
(
vi
, 
cuº›
[1]); ;

477 'm': 
ok
 = 
	`vi_m
(
vi
, 
cuº›
[1]); ;

478 '`': 
ok
 = 
	`vi_tom
(
vi
, 
cuº›
[1]); ;

480 'v': 
	`vi_v
(
vi
); ;

481 'G': 
	`vi_G
(
vi
); ;

482 'p': 
ok
 = 
	`vi_p
(
vi
); ;

483 'x': 
	`vi_x
(
vi
); ;

485 '0': 
	`vi_0
(
vi
); ;

486 '$': 
	`vi_$
(
vi
); ;

487 'h': 
ok
 = 
	`vi_h
(
vi
); ;

488 'j': 
ok
 = 
	`vi_j
(
vi
); ;

489 'k': 
ok
 = 
	`vi_k
(
vi
); ;

490 'l': 
ok
 = 
	`vi_l
(
vi
); ;

491 '^': 
ok
 = 
	`vi_x‹
(
vi
); ;

492 '%': 
ok
 = 
	`vi_≥r˚¡
(
vi
); ;

494 'n': 
ok
 = 
	`vi_n
(
vi
); ;

495 'N': 
ok
 = 
	`vi_N
(
vi
); ;

496 
ASCII_ESC
: ;

498 'o': 
	`vi_o
(
vi
);

499 'i': 
Àn
 = 
	`vi_i
(
vi
, 
cuº›
 + 1); 
ö£π_d⁄e
;

500 'a': 
Àn
 = 
	`vi_a
(
vi
, 
cuº›
 + 1); 
ö£π_d⁄e
;

501 
ö£π_d⁄e
:

502 if(
Àn
 < 0Ë
ok
 = 
Ál£
;

507 
ok
 = 
	`vi_£¨ch_fow¨d
(
vi
, 
cuº›
 + 1);

510 
ok
 = 
	`vi_£¨ch_backw¨d
(
vi
, 
cuº›
 + 1);

515 
	`as£π
(0);

516 : 
ok
 = 
Ál£
;

519 
èke_ef„˘_d⁄e
:

520 if(!
ok
Ë
out
;

521 
N
 --;

522 if(
N
 >1Ë
èke_ef„˘
;

524 
vi
->
›_id
 +
›£q
.
tŸÀn
;

527 
out
:

528 if(!
__sûít
Ë
	`vi_¥öt
(
vi
, 
ok
);

529  
ok
;

530 
	}
}

535 
boﬁ
 
	$vi_tom
(
vi
 *vi, 
rid
){

536 if(
	`vi_mvÆid
(
vi
, 
rid
)){

537 
m¨k_ªgi°î
 *
r
 = &
vi
->
m_ªgs
[
rid
];

538 
	`as£π
(
r
->
cuºl
 >0 &&Ñ->cuº»<
vi
->
lmax
);

539 
	`as£π
(
r
->
cuºoff
 >0 &&Ñ->cuºof‡<
	`VI_CURRL_LEN
(
vi
));

540 
vi
->
cuºl
 = 
r
->currl;

541 
vi
->
cuº
 = vi->
löes
[vi->
cuºl
] + 
r
->
cuºoff
;

542  
åue
;

544 
	`as£π
(0);

545  
Ál£
;

546 
	}
}

556 
boﬁ
 
	$vi_m
(
vi
 *vi, 
rid
){

557 if(
rid
 >= 'a' &&Ñid <= 'z'){

558 
vi
->
m_ªgs
[
rid
].
cuºl
 = vi->currl;

559 
vi
->
m_ªgs
[
rid
].
cuºoff
 = 
	`VI_CURR_OFFSET
(vi);

560  
åue
;

562  
Ál£
;

563 
	}
}

565 
	$vi_$
(
vi
 * vi){

566 if(
	`VI_CURRL_LEN
(
vi
)){

567 
vi
->
cuº
 = vi->
löes
[vi->
cuºl
] + vi->
Àn_of_löe
[vi->currl] - 1;

569 
	}
}

570 
	$vi_0
(
vi
 *vi){

571 if(
	`VI_CURRL_LEN
(
vi
)){

572 
vi
->
cuº
 = vi->
löes
[vi->
cuºl
];

574 
	}
}

576 
boﬁ
 
	$vi_x
(
vi
 *vi){

577 if(!
vi
->
v_begö
){

578 
	`vi_v
(
vi
);

580 
	`vi_d
(
vi
);

582 
	}
}

586 
boﬁ
 
	$vi_≥r˚¡
(
vi
*vi){

587 *
ô
 = 
	`°rch¨
(
vi_∑ú_°r
, 
vi
->
cuº
[0]);

588 if(
ô
){

589 
buddy
 = 
vi_∑ú_°r2
[ 
ô
 - 
vi_∑ú_°r
];

590 
ô_ƒ
 = 0;

591 
buddy_ƒ
 = 0;

593 
°¨t
 = 
	`VI_CURR_OFFSET
(
vi
);

594 
i
 = 
vi
->
cuºl
; i <vi->
lmax
; i++){

595 *
löe
 = 
vi
->
löes
[
i
];

596 
j
 = 
°¨t
; j < 
vi
->
Àn_of_löe
[
i
]; j++){

597 if(
löe
[
j
] =*
ô
Ë
ô_ƒ
++;

598 if(
löe
[
j
] =
buddy
){

599 
buddy_ƒ
++;

600 if(
buddy_ƒ
 =
ô_ƒ
){

601 
vi
->
cuºl
 = 
i
;

602 
vi
->
cuº
 = &
löe
[
j
];

603  
åue
;

608 
°¨t
 = 0;

611  
Ál£
;

612 
	}
}

626 
boﬁ
 
	$vi_w
(
vi
 *vi){

627 *
cuº
 = 
vi
->curr;

628 
cuºl
 = 
vi
->currl;

630 *
¥ev
 = 
vi
->
cuº
;

631 if(!
	`vi_L_
(
vi
)) ;

632 if(!
	`__IS_BLANK
(
vi
->
cuº
[0]Ë&& !
	`__IS_CWORD
(vi->cuº[0])Ë 
åue
;

633 if(
	`__IS_CWORD
(
vi
->
cuº
[0]Ë&& !__IS_CWORD(*
¥ev
)Ë 
åue
;

635 
vi
->
cuºl
 = currl;

636 
vi
->
cuº
 = curr;

637  
Ál£
;

638 
	}
}

640 
boﬁ
 
	$vi_b
(
vi
*vi){

641 *
ﬁdcuº
 = 
vi
->
cuº
;

642 
ﬁdcuºl
 = 
vi
->
cuºl
;

644 
	`vi_H_
(
vi
)){

645 *
cuº
 = 
vi
->curr;

646 if(!
	`__IS_CWORD
(*
cuº
Ë&& !
	`__IS_BLANK
(*cuº)Ë 
åue
;

647 if(
	`__IS_CWORD
(*
cuº
Ë&& !__IS_CWORD–
	`vi_smñŒ
(
vi
ËËË 
åue
;

650 
vi
->
cuºl
 = 
ﬁdcuºl
;

651 
vi
->
cuº
 = 
ﬁdcuº
;

652  
Ál£
;

653 
	}
}

655 
boﬁ
 
	$vi_e
(
vi
 *vi){

656 *
ﬁdcuº
 = 
vi
->
cuº
;

657 
ﬁdcuºl
 = 
vi
->
cuºl
;

659 
	`vi_L_
(
vi
)){

660 *
cuº
 = 
vi
->curr;

661 if(!
	`__IS_CWORD
(*
cuº
Ë&& !
	`__IS_BLANK
(*cuº)Ë 
åue
;

662 if(
	`__IS_CWORD
(*
cuº
Ë&& !__IS_CWORD(
	`vi_smñÃ
(
vi
))Ë 
åue
;

665 
vi
->
cuº
 = 
ﬁdcuº
;

666 
vi
->
cuºl
 = 
ﬁdcuºl
;

667  
Ál£
;

668 
	}
}

675 
boﬁ
 
	$vi_W
(
vi
 *vi){

676 *
cuº
 = 
vi
->curr;

677 
cuºl
 = 
vi
->currl;

679 
¥ev
 = 
vi
->
cuº
[0];

680 if(
	`vi_L_
(
vi
Ë=
Ál£
) ;

681 if(
	`°rch¨
(
c⁄°_vi_bœnkch¨s
, 
¥ev
Ë&& såch¨(c⁄°_vi_bœnkch¨s, 
vi
->
cuº
[0]Ë=0Ë 
åue
;

686 
vi
->
cuºl
 = currl;

687 
vi
->
cuº
 = curr;

688  
Ál£
;

689 
	}
}

692 
	$vi_E
(
vi
 *vi){

693 
cuºl
 = 
vi
->currl;

694 *
cuº
 = 
vi
->curr;

695 
	`vi_L_
(
vi
);

697 if(
	`vi_L_
(
vi
Ë=
Ál£
) ;

698 if(
	`°rch¨
(
c⁄°_vi_bœnkch¨s
, 
vi
->
cuº
[0]) && !strchar(const_vi_blankchars, vi->curr[-1])){

699 
	`vi_H_
(
vi
);

700  
åue
;

703 
vi
->
cuºl
 = currl;

704 
vi
->
cuº
 = curr;

705  
Ál£
;

706 
	}
}

723 
boﬁ
 
	$vi_f_ex
(
vi
 *vi, *
group
, 
Êags
){

724 
	`as£π
((
Êags
 & 
	`VI_FLAG
(
ML
)) == 0);

726 *
cuº
 = (
	`VI_FLAG
(cuºË& 
Êags
Ë? 
vi
->curr : vi->curr + 1;

728 if(
	`°rch¨
(
group
, *
cuº
)){

729 
vi
->
cuº
 = curr;

730  
åue
;

732 if(*
cuº
 =
EOL
){

733  
Ál£
;

736 
cuº
++;

740 
	}
}

742 
vi
* 
	$vi_√w
–*
°r
){

743 
vi
 *vò
	`mÆloc
( ( vi ) );

744 
	`vi_£t
–
vi
, 
°r
 );

745  
vi
;

746 
	}
}

748 
vi
 * 
	$vi_öô
(
vi
 *vi){

749 
vi
->
löes
 = 
	`mÆloc0
(1024 * (*));

750 
vi
->
size_of_löe
 = 
	`mÆloc0
(1024 * ());

751 
vi
->
Àn_of_löe
 = 
	`mÆloc0
(1024 * ());

753 
vi
->
ylöes
 = 
	`mÆloc0
(
VI_YLINE_MAX
 * (*));

754 
vi
->
size_of_ylöe
 = 
	`mÆloc0
(
VI_YLINE_MAX
 * ());

755 
vi
->
Àn_of_ylöe
 = 
	`mÆloc0
(
VI_YLINE_MAX
 * ());

757 
vi
->
m_ªgs
 = 
	`mÆloc0
(128 * (
m¨k_ªgi°î
));

758 
vi
->
˛ùbﬂrd_buf
 = 
	`mÆloc
(1024);

759 
vi
->
˛ùöfo
 = 
	`ˇŒoc
(1, (
vi_˛ùöfo
));

760 
vi
->
˛ùöfo
->
ylmax
 = -1;

761  
vi
;

762 
	}
}

768 
	$vi_£t
–
vi
* vi, c⁄° *
°r
 ){

769 
vi
->
°r
 = str;

771 
cuºl
 = 0;

772 *
cuº
 = (*)
°r
;

774 
löe_Àn
 = 
	`°æí_ex
(
cuº
, "\n");

775 
	`VI_LINE_MK
(
vi
, 
cuºl
, 
cuº
, 
löe_Àn
);

777 
cuº
 +
löe_Àn
;

778 if(*
cuº
 == 0) ;

780 
cuº
++;

781 
cuºl
++;

784 
vi
->
v_begö
=0;

785 
vi
->
v_begöl
=-1;

786 
vi
->
˛ùöfo
->
ylmax
=-1;

787 
vi
->
cuºl
 = 0;

788 
vi
->
cuº
=vi->
löes
[0];

789 
vi
->
lmax
=
cuºl
;

790 
vi
->
Êags
=0;

791 
	`vi_ª£t_m_ªgs
(
vi
);

792 
	}
}

797 
	$vi_f
–
vi
 *vi, 
to
, ... ){

798 *
©
 = 
	`°∫ch¨
(
vi
->
cuº
+1, 
to
);

799 if(
©
){

800 
vi
->
cuº
 = 
©
;

803  
Ál£
;

804 
	}
}

814 
	$vi_jmp•a˚_ex
(
vi
 *vi, 
c⁄åﬁ
){

815 
°©e
;

816 
cuºl
 = 
vi
->currl;

817 *
cuº
 = 
	`jmp_•a˚
(
vi
->curr);

818 if(*
cuº
 == '\n'){

819 if(
	`VI_FLAG
(
ML
Ë& 
c⁄åﬁ
){

821 if(
cuºl
 =
vi
->
lmax
){

822  
	`VI_FLAG
(
mìt0
);

824 
cuº
 = 
	`jmp_•a˚
(
vi
->
löes
[++
cuºl
]);

825 }*
cuº
 == '\n');

827 
vi
->
cuº
 = curr;

828 
vi
->
cuºl
 = currl;

829  
	`VI_FLAG
(
SUCCESS
);

832 
°©e
 = 0; 
	`__SET_STATE
(
mìä
);

833  
°©e
;

836 if(
cuº
 !
vi
->curr){

837 
vi
->
cuº
 = curr;

838  
	`VI_FLAG
(
SUCCESS
);

841  
	`VI_FLAG
(
cuº
);

843  
__DO_NOT_COMPLAIN
;

844 
	}
}

849 
	$vi_jmp•a˚
(
vi
 *vi){

850 *
cuº
 = 
	`jmp_•a˚
(
vi
->curr);

851 if(*
cuº
 == '\n'){

852 
vi
->
_î∫o
 = 
E_mìä
;

853  
Ál£
;

855 if(
cuº
 =
vi
->curr){

856 
vi
->
_î∫o
 = 
E_cuº
;

857  
Ál£
;

860 
vi
->
cuº
 = curr;

861  
åue
;

863  
__DO_NOT_COMPLAIN
;

864 
	}
}

873 *
	$jmp_•a˚
–*
°r
 ){

875 *
cuº
 = 
°r
;

877  *
cuº
 =0 || 
	`°rch¨
(" \t", *curr) ){

878 
cuº
++;

879 if–*
cuº
 == '\n')  curr;

881  
cuº
;

882 
	}
}

888 
boﬁ
 
	$vi_jmp•a˚_r
(
vi
 *vi){

889 if(!
	`is•a˚
(
vi
->
cuº
[0])){

890  
	`VI_FLAG
(
cuº
Ë| VI_FLAG(
SUCCESS
);

892 
vi
->
cuº
 >vi->
löes
[vi->
cuºl
]){

893 if(!
	`is•a˚
(
vi
->
cuº
[0])Ë 
	`VI_FLAG
(
SUCCESS
);

894 
vi
->
cuº
--;

896 
vi
->
cuº
++;

898 
	}
}

900 
boﬁ
 
	$vi_a˘ive
(
vi
 *
v
){

901 i‡(
v
->
mod
 =
VI_MOD_BUSY
){

902 
	`as£π
(0 && "active failed");

905 
v
->
mod
 = 
VI_MOD_BUSY
;

906 
vim
 = 
v
;

908 
	}
}

910 
boﬁ
 
	$vi_dr›
(
vi
 *
v
){

911 if(
v
->
mod
 =
VI_MOD_FREE
){

912 
	`as£π
(0 && "already free");

915 
vim
 = 0;

916 
v
->
mod
 = 
VI_MOD_FREE
;

918 
	}
}

920 
	~<ªgex.h
>

927 
boﬁ
 
	$vi_£¨ch_backw¨d
(
vi
 *vi, *
∑âîn
){

928 
	`as£π
–
	`°æí
(
∑âîn
Ë< 
VI_REGEX_LEN
);

929 if(
∑âîn
 !
vi
->
œ°_£¨ch
Ë
	`°r˝y
( vi->last_search,Öattern);

931 
îr
;

932 
ªgex_t
 
ªg
;

933 
nm
 = 256;

934 
ªgm©ch_t
 
m©chs
[
nm
];

935 
îrmsg
[128] = "error buf";

937 if–(
îr
 = 
	`ªgcomp
(&
ªg
, 
∑âîn
, 
REG_EXTENDED
)) != 0){

938 
	`ªgîr‹
(
îr
, &
ªg
, 
îrmsg
, (errmsg));

939 
	`Ârötf
(
°dîr
, "%s:∑âî¿'%s'\n", 
îrmsg
, 
∑âîn
);

940  
Ál£
;

943 
l
 = 
vi
->
cuºl
;Ü >= 0;Ü--){

944 *
bem©ch
 = 
vi
->
löes
[
l
];

945 *
íd
 = 
l
 =
vi
->
cuºl
 ? vi->
cuº
 :

946 &
vi
->
löes
[
l
][vi->
Àn_of_löe
[l]];

947 
backup
 = *
íd
;

948 *
íd
 = 0;

949 
îr
 = 
	`ªgexec
(&
ªg
, 
bem©ch
, 
nm
, 
m©chs
, 0);

950 *
íd
 = 
backup
;

951 if(
îr
) ;

954 
i
;

955 
i
 = 0; i < 
nm
; i++){

956 if(
m©chs
[
i
].
rm_so
 == -1) ;

957 if(
l
 =
vi
->
cuºl
 && 
m©chs
[
i
].
rm_so
 > 
	`VI_CURR_OFFSET
(vi)){

961 
i
--;

962 
vi
->
cuº
 = 
bem©ch
 + 
m©chs
[
i
].
rm_so
;

963 
vi
->
cuºl
 = 
l
;

964  
åue
;

966  
Ál£
;

967 
	}
}

970 
boﬁ
 
	$vi_£¨ch_fow¨d
(
vi
 *vi, *
∑âîn
){

971 
	`as£π
–
	`°æí
(
∑âîn
Ë< 
VI_REGEX_LEN
);

972 if(
∑âîn
 !
vi
->
œ°_£¨ch
Ë
	`°r˝y
( vi->last_search,Öattern);

974 
îr
;

975 
ªgex_t
 
ªg
;

976 
nm
 = 256;

977 
ªgm©ch_t
 
m©chs
[
nm
];

978 
îrmsg
[128] = "error buf";

980 if–(
îr
 = 
	`ªgcomp
(&
ªg
, 
∑âîn
, 
REG_EXTENDED
)) != 0){

981 
	`ªgîr‹
(
îr
, &
ªg
, 
îrmsg
, (errmsg));

982 
	`Ârötf
(
°dîr
, "%s:∑âî¿'%s'\n", 
îrmsg
, 
∑âîn
);

983  
Ál£
;

986 
l
 = 
vi
->
cuºl
;Ü <vi->
lmax
;Ü++){

987 *
bem©ch
 = 
l
 =
vi
->
cuºl
 ? vi->
cuº
 : vi->
löes
[l];

989 
vi
->
löes
[
l
][ vi->
Àn_of_löe
[l] ] = 0;

990 
îr
 = 
	`ªgexec
(&
ªg
, 
bem©ch
, 
nm
, 
m©chs
, 0);

991 
vi
->
löes
[
l
][ vi->
Àn_of_löe
[l] ] = 
EOL
;

992 if(
îr
) ;

995 
vi
->
cuº
 = 
bem©ch
 + 
m©chs
[0].
rm_so
;

996 
vi
->
cuºl
 = 
l
;

997  
åue
;

999  
Ál£
;

1000 
	}
}

1007 
boﬁ
 
	$vi_n
(
vi
 *vi){

1008 if(
vi
->
œ°_£¨ch
[0] =0Ë 
Ál£
;

1010 
‹igöl
 = 
vi
->
cuºl
;

1011 *
‹igö
 = 
vi
->
cuº
;

1012 
boﬁ
 
ok
 = 
	`vi_£¨ch_fow¨d
(
vi
, vi->
œ°_£¨ch
);

1014 if(!
ok
Ë 
Ál£
;

1015 if(
‹igö
 =
vi
->
cuº
){

1016 if–
	`vi_lg
(
vi
Ë=
Ál£
)  false;

1017 
ok
 = 
	`vi_£¨ch_fow¨d
(
vi
, vi->
œ°_£¨ch
);

1018 if(!
ok
) {

1019 
vi
->
cuºl
 = 
‹igöl
;

1020 
vi
->
cuº
 = 
‹igö
;

1021  
Ál£
;

1025  
åue
;

1026 
	}
}

1028 
boﬁ
 
	$vi_N
(
vi
 *vi){

1029  
	`vi_£¨ch_backw¨d
(
vi
, vi->
œ°_£¨ch
);

1030 
	}
}

1038 
	$vi_dñ_wôhö
(
vi
 *vi){

1039 
	`as£π
(
vi
->
cuº
 =vi->
v_hód
 || vi->cuº =vi->
v_èû
);

1042 
Àn
 = 
	`ch¨_¨r_dñ2N
(
vi
->
löes
[vi->
cuºl
], 
	`VI_CURRL_LEN
(vi), 
	`V_HEAD_OFFSET
(vi), 
	`V_TAIL_OFFSET
(vi));

1043 
vi
->
Àn_of_löes
[vi->
cuºl
] = 
Àn
;

1045 
vi
->
cuº
 = vi->
v_hód
;

1046 
cuºl_Àn
 = 
	`VI_CURRL_LEN
(
vi
);

1047 
	`as£π
(
cuºl_Àn
 >
	`VI_CURR_OFFSET
(
vi
));

1048 if(
cuºl_Àn
 && cuºl_À¿=
	`VI_CURR_OFFSET
(
vi
) ){

1049 
vi
->
cuº
--;

1052 
	}
}

1057 
	$vi_dñ_a¸oss
(
vi
 *vi){

1059 
m
 = 
vi
->
v_m
;

1060 
n
 = 
vi
->
v_n
;

1065 
vi
->
Àn_of_löe
[
m
] = 
	`V_START_OFFSET
(vi);

1066 
vi
->
löes
[
m
][vi->
Àn_of_löe
[m]] = '\n';

1067 
	`VI_LINE_I_SAFE
(
vi
, 
m
, 
	`V_START_OFFSET
(vi), vi->
v_èû
+1, vi->
Àn_of_löe
[
n
] - 
	`V_TAIL_LEN
(vi));

1069 
	`VI_DEL_LINES
(
vi
, 
m
+1, 
n
-m);

1071 
vi
->
cuºl
 = 
m
;

1072 
vi
->
cuº
 = vi->
v_°¨t
;

1074 
	}
}

1076 
	$vi_y_wôhö
(
vi
 *vi){

1077 
	`VI_YLINE_MK
(
vi
, 0, vi->
v_°¨t
, vi->
v_èû
 - vi->
v_hód
 + 1);

1079 
vi
->
˛ùöfo
->
ylmax
 = 0;

1080 
	}
}

1082 
	$vi_y_a¸oss
(
vi
* vi){

1083 
m
 = 
vi
->
v_m
;

1084 
n
 = 
vi
->
v_n
;

1086 
ylmax
 = 
n
 - 
m
;

1087 
	`VI_YLINE_MK
(
vi
, 0, vi->
v_hód
, vi->
Àn_of_löes
[
m
]-
	`V_HEAD_LEN
(vi) + 1);

1088 
i
 = 1; i <
ylmax
-1; i++){

1089 
	`VI_YLINE_MK
(
vi
, 
i
, vi->
löes
[
m
 + i], vi->
Àn_of_löes
[m + i]);

1093 
	`VI_YLINE_MK
(
vi
, 
ylmax
, vi->
löes
[
n
], 
	`V_TAIL_LEN
(vi));

1095 
vi
->
˛ùöfo
->
ylmax
 = ylmax;

1096 
	}
}

1098 
	$vi_∑°e_yy
(
vi
 *vi){

1099 
	`as£π
(
vi
->
˛ùöfo
->
yy
 = 1);

1101 
	`VI_A_LINES
(
vi
, vi->
cuºl
, vi->
˛ùöfo
->
ylmax
+1);

1102 
i
 = 0; i <
vi
->
˛ùöfo
->
ylmax
; i++){

1103 
	`VI_LINE_MK
(
vi
, vi->
cuºl
+1+
i
, vi->
ylöes
[i], vi->
Àn_of_ylöe
[i]);

1107 
vi
->
cuºl
++;

1108 
vi
->
cuº
 = vi->
löes
[vi->
cuºl
];

1109 
	}
}

1111 
	$vi_∑°e_löe
(
vi
 *vi){

1113 if(
	`VI_CURRL_LEN
(
vi
) == 0){

1114 
	`vi_ö£π_ß„
(
vi
, vi->
ylöes
[0], vi->
Àn_of_ylöe
[0]);

1117 
	`vi_≠≥nd_ß„
(
vi
, vi->
ylöes
[0], vi->
Àn_of_ylöe
[0]);

1118 
	}
}

1120 
	$vi_∑°e_löes
(
vi
 *vi){

1121 
cuºl
 = 
vi
->currl;

1123 
m
 = 
vi
->
cuºl
;

1124 
n
 = 
vi
->
cuºl
 + vi->
˛ùöfo
->
ylmax
;

1128 
	`VI_A_LINES
(
vi
, 
cuºl
, 
n
-
m
);

1133 
i
 = 1; i <
vi
->
˛ùöfo
->
ylmax
; i++ ){

1134 
	`VI_LINE_I_SAFE
(
vi
, 
m
 + 
i
, 0, vi->
ylöes
[i], vi->
Àn_of_ylöe
[i]);

1139 
	`VI_LINE_A_SAFE
(
vi
, 
n
, vi->
Àn_of_löes
[n] - 1, vi->
cuº
+1, vi->
Àn_of_löe
[
cuºl
] - 
	`VI_CURR_LEN
(vi) + 1);

1143 
vi
->
Àn_of_löes
[
m
] = 
	`VI_CURR_LEN
(vi);

1144 
	`vi_≠≥nd_©_ß„
(
vi
, vi->
cuºl
, vi->
cuº
, vi->
ylöes
[0], vi->
Àn_of_ylöe
[0]);

1146 
	}
}

1150 
	$vi_dñ_löes
(
vi
 * vi){

1152 
	`as£π
(0);

1153 
	}
}

1167 
boﬁ
 
	$vi_d
(
vi
 *vi){

1168 
boﬁ
 
ok
 = 
	`vi_y
(
vi
);

1169 if(!
ok
Ë 
Ál£
;

1171 if(
vi
->
v_m
 =vi->
v_n
){

1172 
	`vi_dñ_wôhö
(
vi
);

1175 
	`vi_dñ_a¸oss
(
vi
);

1177  
åue
;

1178 
	}
}

1185 
	$vi_y
(
vi
 *vi){

1186 if(!
vi
->
v_begö
)  0;

1187 
vi
->
˛ùöfo
->
yy
 = 0;

1188 
	`vi_mk_hód_èû
(
vi
);

1189 
	`vi_mk_mn
(
vi
);

1190 if(
vi
->
v_begöl
 =vi->
cuºl
){

1191 
	`vi_y_wôhö
(
vi
);

1195 
	`vi_y_a¸oss
(
vi
);

1198 
	`vi_v
(
vi
);

1200 
	}
}

1210 
	$vi_p
(
vi
 *vi){

1211 if(
vi
->
˛ùöfo
->
ylmax
 < 0 )  0;

1216 if(
vi
->
˛ùöfo
->
yy
){

1217 
	`vi_∑°e_yy
(
vi
);

1218  
åue
;

1220 if(
vi
->
˛ùöfo
->
ylmax
 == 0){

1221 
	`vi_∑°e_löe
(
vi
);

1224 
	`vi_∑°e_löes
(
vi
);

1229  
åue
;

1230 
	}
}

1237 
	$vi_ªquúe_Œí
(
vi
 *vi, 
l
, 
size
){

1238 if(
vi
->
size_of_löe
[
l
] < 
size
){

1239 
cuºoff
 = 
	`VI_CURR_OFFSET
(
vi
);

1240 
	`__vi_ex∑nd_löe
(
vi
, 
l
, 
size
 * 2);

1241 if(
l
 =
vi
->
cuºl
Ëvi->
cuº
 = vi->
löes
[l] + 
cuºoff
;

1243 
	}
}

1249 
	$vi_ö£π_ß„
(
vi
*vi, *
§c
, 
§˛í
){

1250 
	`vi_ªquúe_Œí
(
vi
, vi->
cuºl
, 
	`VI_CURRL_LEN
(viË+ 
§˛í
 + 1);

1251 
	`vi_ö£π
(
vi
, 
§c
, 
§˛í
);

1252 
	}
}

1257 
	$vi_≠≥nd_ß„
(
vi
*vi, *
§c
, 
§˛í
){

1258 
	`as£π
(
	`VI_CURR_LEN
(
vi
Ë<
	`VI_CURRL_LEN
(vi));

1259 
vi
->
cuº
++;

1260 
	`vi_ö£π_ß„
(
vi
, 
§c
, 
§˛í
);

1261 
	}
}

1265 
	$vi_≠≥nd
(
vi
 *vi, *
§c
, 
§˛í
){

1266 
vi
->
cuº
++;

1267 
	`vi_ö£π
(
vi
, 
§c
, 
§˛í
);

1268 
	}
}

1272 
	$vi_mk_mn
(
vi
 *vi){

1273 
	`as£π
(
vi
->
v_begöl
 != -1);

1275 
vi
->
v_m
 = vi->
v_begöl
;

1276 
vi
->
v_n
 = vi->
cuºl
;

1277 if(
vi
->
v_m
 > vi->
v_n
Ë
	`EXCHG_INT
(vi->v_m, vi->v_n);

1278 
	}
}

1280 
	$vi_mk_hód_èû
(
vi
 *vi){

1281 
	`as£π
(
vi
->
v_begö
 != 0);

1283 
vi
->
v_hód
 = vi->
v_begö
 ;

1284 
vi
->
v_èû
 = vi->
cuº
;

1285 if(
vi
->
v_begöl
 > vi->
cuºl
Ë
	`EXCHG_PTR
(vi->
v_hód
, vi->
v_èû
);

1286 if(
vi
->
v_begöl
 =vi->
cuºl
){

1287 if(
vi
->
v_hód
 > vi->
v_èû
Ë
	`EXCHG_PTR
(vi->v_head, vi->v_tail);

1290 
	}
}

1299 
	$VI_LINE_A_SAFE
(
vi
 *vi, 
l
, 
©
, *
§c
, 
§˛í
){

1300 
	`vi_ªquúe_Œí
(
vi
, 
l
, vi->
Àn_of_löe
[l] + 
§˛í
+1);

1301 
	`vi_≠≥nd_©
(
vi
, 
l
, vi->
löes
[l] + 
©
, 
§c
, 
§˛í
);

1302 
	}
}

1305 
	$VI_LINE_I_SAFE
(
vi
 *vi, 
l
, 
©
, *
§c
, 
§˛í
){

1306 
	`vi_ªquúe_Œí
(
vi
, 
l
, vi->
Àn_of_löe
[l] + 
§˛í
+1);

1307 
	`vi_ö£π_©
(
vi
, 
l
, vi->
löes
[l] + 
©
, 
§c
, 
§˛í
);

1308 
	}
}

1310 
	$vi_≠≥nd_©_ß„
(
vi
 *vi, 
l
, *
©
, *
§c
, 
§˛í
){

1311 
	`vi_ªquúe_Œí
(
vi
, 
l
, vi->
Àn_of_löe
[l]+
§˛í
+1);

1312 
	`vi_≠≥nd_©
(
vi
, 
l
, 
©
, 
§c
, 
§˛í
);

1313 
	}
}

1315 
	$vi_ö£π_©_ß„
(
vi
 *vi, 
l
, *
©
, *
§c
, 
§˛í
){

1316 
	`vi_ªquúe_Œí
(
vi
, 
l
, vi->
Àn_of_löe
[l]+
§˛í
+1);

1317 
	`vi_ö£π_©
(
vi
, 
l
, 
©
, 
§c
, 
§˛í
);

1318 
	}
}

1321 
	$VI_YLINE_MK
(
vi
 *vi, 
l
, *
§c
, 
§˛í
){

1322 
size
 = 
§˛í
 + 1;

1323 if(
vi
->
size_of_ylöe
[
l
] < 
size
){

1324 
vi
->
ylöes
[
l
] = 
	`ªÆloc
(vi->ylöes[l], 
size
);

1325 
vi
->
size_of_ylöe
[
l
] = 
size
;

1327 
	`°∫˝y
(
vi
->
ylöes
[
l
], 
§c
, 
§˛í
);

1328 
vi
->
ylöes
[
l
][
§˛í
] = '\n';

1329 
vi
->
Àn_of_ylöe
[
l
] = 
§˛í
;

1330 
	}
}

1332 
	$VI_LINE_MK
(
vi
 *vi, 
l
, *
§c
, 
§˛í
){

1333 
size
 = 
§˛í
 + 1;

1334 if(
vi
->
size_of_löe
[
l
] < 
size
){

1335 
vi
->
löes
[
l
] = 
	`ªÆloc
(vi->löes[l], 
size
);

1336 
vi
->
size_of_löe
[
l
] = 
size
;

1338 
	`°∫˝y
(
vi
->
löes
[
l
], 
§c
, 
§˛í
);

1339 
vi
->
löes
[
l
][
§˛í
] = '\n';

1340 
vi
->
Àn_of_löe
[
l
] = 
§˛í
;

1341 
	}
}

1344 
	$vi_¥öt2
(
vi
*vi){

1345 
i
 = 0; i <
vi
->
lmax
; i++){

1346 
	`¥ötf
("%.*s", 
vi
->
Àn_of_löe
[
i
], vi->
löes
[i]);

1347 if(
vi
->
lmax
 !
i
Ë
	`putch¨
('\n');

1349 
	}
}

1350 
	$vi_¥öt
(
vi
*vi, 
n‹mÆ_ªt
){

1353 
w
[16] = {7, 13, 13, 8};

1354 
	`¥ötf
("\n%-*s%-*s%-*s%-*s%-*s\n", 
w
[0], "currl", w[1], "line", w[2], "curr",w[3], "normal", w[4], "op_id");

1355 
	`¥ötf
("%-*d%-*p%-*p%-*d%-*d\n", 
w
[0], 
vi
->
cuºl
,w[1], vi->
löes
[vi->cuºl], w[2], vi->
cuº
, w[3], 
n‹mÆ_ªt
,w[4], vi->
›_id
);

1356 
	`¥ötf
("%-*d%-*p%-*d%-*d%-*s\n", 
w
[0], 
	`VI_CURRL_LEN
(
vi
),w[1], vi->
löes
[vi->
cuºl
], w[2], vi->
cuº
[0], w[3], 
n‹mÆ_ªt
, w[4], vi->
›s
+vi->
›_id
);

1357 
	`¥ötf
("%-*d%-*p%-*.*s%-*d|%-*s\n", 
w
[0], 
	`VI_CURRL_LEN
(
vi
),w[1], vi->
löes
[vi->
cuºl
], w[2], 
	`°æí_ex
(vi->
cuº
, "\n"), vi->cuº, w[3], 
n‹mÆ_ªt
, w[4], vi->
›s
);

1359 
	`putch¨
('\n');

1360 
i
 = 0; i <
vi
->
lmax
; i++){

1361 *
¥efix
 = 
i
 =
vi
->
cuºl
 ? "@" : ">";

1362 
	`¥ötf
("%s", 
¥efix
);

1364 if(
vi
->
cuºl
 =
i
){

1365 
	`¥öt_ök_n°r
(
vi
->
löes
[
i
], vi->
cuº
 - vi->lines[i]);

1367 
	`¥ötf
("%.*s", 
vi
->
Àn_of_löe
[
i
], vi->
löes
[i]);

1368 
	`putch¨
('\n');

1370 
	}
}

1372 
	$vi_v
(
vi
 * vi){

1373 if(
vi
->
v_begö
 == 0){

1374 
vi
->
v_begö
 = vi->
cuº
;

1375 
vi
->
v_begöl
 = vi->
cuºl
;

1378 
vi
->
v_begö
 = 0;

1379 
vi
->
v_begöl
 = -1;

1380 
	}
}

1381 
	$vi_ídv
(
vi
 *vi){

1382 
vi
->
v_begö
 = 0;

1383 
vi
->
v_begöl
 = -1;

1384 
	}
}

1387 
	$vi_yy
(
vi
*vi){

1388 
vi
->
˛ùöfo
->
yy
 = 1;

1390 
	`VI_YLINE_MK
(
vi
, 0, vi->
löes
[vi->
cuºl
], vi->
Àn_of_löes
[vi->currl]);

1393 
vi
->
˛ùöfo
->
ylmax
 = 0;

1394 
	}
}

1398 
	$vi_dd
(
vi
 *vi){

1399 
	`vi_yy
(
vi
);

1400 
	`VI_DEL_LINES
(
vi
, vi->
cuºl
, 1);

1402 if(
vi
->
cuºl
 > vi->
lmax
) vi->currl = vi->lmax;

1403 
vi
->
cuº
 = vi->
löes
[vi->
cuºl
];

1404 
	}
}

1408 
boﬁ
 
	$vi_dW
(
vi
 *vi){

1409 
	`vi_v
(
vi
);

1410 
ok
 = 
	`vi_E
(
vi
);

1411 if(
ok
){

1412 
	`vi_d
(
vi
);

1413  
ok
;

1415  
Ál£
;

1416 
	}
}

1417 
	$vi_yW
(
vi
 *vi){

1418 
	`as£π
(0);

1419 
	}
}

1421 
	$vi_cc
(
vi
 *vi){

1423 
	}
}

1424 
	$vi_cw
(
vi
 *vi){

1426 
	}
}

1430 
boﬁ
 
	$vi_B
(
vi
 *vi){

1431 *
ﬁdcuº
 = 
vi
->
cuº
;

1432 
ﬁdcuºl
 = 
vi
->
cuºl
;

1433 if(!
	`vi_H_
(
vi
)Ë 
Ál£
;

1435 *
behöd
 = 
vi
->
cuº
;

1436 
	`vi_H_
(
vi
)){

1437 if(
	`__IS_BLANK
(
vi
->
cuº
[0]Ë&& !__IS_BLANK(*
behöd
)){

1438 
	`vi_L_
(
vi
);

1439  
åue
;

1441 
behöd
 = 
vi
->
cuº
;

1445 if(!
	`__IS_BLANK
(
vi
->
cuº
[0])Ë 
åue
;

1447 
vi
->
cuº
 = 
ﬁdcuº
;

1448 
vi
->
cuºl
 = 
ﬁdcuºl
;

1449  
Ál£
;

1450 
	}
}

1455 
	$vi_d0
(
vi
 *vi){

1456 
	`vi_v
(
vi
);

1457 
	`vi_0
(
vi
);

1458 
	`vi_d
(
vi
);

1459 
	}
}

1460 
	$vi_y0
(
vi
 *vi){

1461 
	`vi_v
(
vi
);

1462 
	`vi_0
(
vi
);

1463 
	`vi_y
(
vi
);

1464 
	}
}

1465 
	$vi_d$
(
vi
 *vi){

1466 
	`vi_v
(
vi
);

1467 
	`vi_$
(
vi
);

1468 
	`vi_d
(
vi
);

1469 
	}
}

1470 
	$vi_y$
(
vi
 *vi){

1471 
	`vi_v
(
vi
);

1472 
	`vi_$
(
vi
);

1473 
	`vi_y
(
vi
);

1474 
	}
}

1475 
boﬁ
 
	$vi_df
(
vi
 *vi, 
èrgë
){

1476 
	`vi_v
(
vi
);

1477 
boﬁ
 
ok
 = 
	`vi_f
(
vi
, 
èrgë
);

1478 if(
ok
){

1479 
	`vi_d
(
vi
);

1483 
	`vi_v
(
vi
);

1484  
Ál£
;

1487  
__DO_NOT_COMPLAIN
;

1488 
	}
}

1489 
boﬁ
 
	$vi_yf
(
vi
 *vi, 
èrgë
){

1490 
	`vi_v
(
vi
);

1491 
boﬁ
 
ok
 = 
	`vi_f
(
vi
, 
èrgë
);

1492 if(
ok
){

1493 
	`vi_y
(
vi
);

1497 
	`vi_v
(
vi
);

1498  
Ál£
;

1500  
__DO_NOT_COMPLAIN
;

1501 
	}
}

1504 
	$vi_›_d
(
vi
 *vi){

1505 if(
vi
->
v_begö
){

1506 
vi
->
›_id
++;

1507  
	`vi_d
(
vi
);

1509 
›
 = 
vi
->
›s
[vi->
›_id
 + 1];

1510 
°©e
 = 
	`VI_FLAG
(
SUCCESS
);

1511 
›
){

1512 'd': 
	`vi_dd
(
vi
); 
mv2
;

1513 'W': 
°©e
 = 
	`vi_dW
(
vi
); 
mv2
;

1514 'w': 
	`as£π
(0); 
mv2
;

1515 '0': 
	`vi_d0
(
vi
); 
mv2
;

1516 '$': 
	`vi_d$
(
vi
); 
mv2
;

1517 
mv2
: 
vi
->
›_id
 += 2;

1519 'f': 
°©e
 = 
	`vi_df
(
vi
, vi->
›s
[vi->
›_id
+2]);

1520 
vi
->
›_id
 += 3;

1523 
°©e
 = 0;

1526 
°©e
 = 0;

1528  
°©e
;

1529 
	}
}

1531 
	$vi_›_y
(
vi
 *vi){

1532 if(
vi
->
v_begö
){

1533 
vi
->
›_id
++;

1534  
	`vi_y
(
vi
);

1536 
›
 = 
vi
->
›s
[vi->
›_id
 + 1];

1537 
°©e
 = 
	`VI_FLAG
(
SUCCESS
);

1538 
›
){

1539 'y': 
	`vi_yy
(
vi
); 
mv2
;

1540 'W': 
°©e
 = 
	`vi_yW
(
vi
);
mv2
;

1541 'w': 
	`as£π
(0);
mv2
;

1542 '0': 
	`vi_y0
(
vi
);
mv2
;

1543 '$': 
	`vi_y$
(
vi
);
mv2
;

1544 
mv2
: 
vi
->
›_id
 += 2;

1546 'f': 
°©e
 = 
	`vi_yf
(
vi
, vi->
›s
[vi->
›_id
+2]);

1547 
vi
->
›_id
 += 3;

1549 
°©e
 = 0;

1552 
°©e
 = 0;

1554  
°©e
;

1555 
	}
}

1558 
	$vi_fûesize
(
vi
* vi){

1559 
fûesize
 = 0;

1560 
l
 = 0;Ü <
vi
->
lmax
;Ü++){

1561 
fûesize
 +(
vi
->
Àn_of_löe
[
l
] + 1);

1565  
fûesize
;

1566 
	}
}

1568 *
	$vi_˛ùbﬂrd
(
vi
 *vi, *
buf
){

1569 if(!
buf
Ëbu‡
vi
->
˛ùbﬂrd_buf
;

1571 *
cuº
 = 
buf
;

1572 
l
 = 0;Ü <
vi
->
˛ùöfo
->
ylmax
;Ü++){

1573 
	`mem˝y
(
cuº
, 
vi
->
ylöes
[
l
], vi->
Àn_of_ylöe
[l]+1);

1574 
cuº
 +(
vi
->
Àn_of_ylöe
[
l
] + 1);

1576 if(
cuº
 > 
buf
){

1577 
cuº
[-1] = 0;

1579  
buf
;

1581 
	}
}

1584 *
	$vi_out
(
vi
 * vi, *
buf
){

1585 
fûesize
 = 
	`vi_fûesize
(
vi
);

1586 if(!
buf
){

1587 
buf
 = 
	`mÆloc
(
fûesize
);

1589 *
cuº
 = 
buf
;

1590 
l
 = 0;Ü <
vi
->
lmax
;Ü++){

1591 
	`mem˝y
(
cuº
, 
vi
->
löes
[
l
], vi->
Àn_of_löe
[l]+1);

1592 
cuº
 +(
vi
->
Àn_of_löe
[
l
] + 1);

1594 
	`as£π
(
cuº
 - 
buf
 =
fûesize
);

1595 if(
cuº
 > 
buf
){

1596 
cuº
[-1] = 0;

1598  
buf
;

1599 
	}
}

1602 
boﬁ
 
	$vi_›í
(
vi
 *vi, *
fûï©h
){

1603 
fd
 = 
	`›í
(
fûï©h
, 
O_RDONLY
);

1604 if(
fd
 == -1){

1605  
Ál£
;

1606 } 
	`as£π
(
fd
 != -1);

1607 
fûesize
 = 
	`l£ek
(
fd
, 0, 
SEEK_END
);

1608 
	`l£ek
(
fd
, 0, 
SEEK_SET
);

1609 *
buf
 = 
	`mÆloc
(
fûesize
 );

1610 
byãs
 = 
	`ªad
(
fd
, 
buf
, 
fûesize
);

1611 
	`˛o£
(
fd
);

1612 if(
byãs
 !
fûesize
){

1613  
Ál£
;

1615 
	`as£π
(
buf
[
fûesize
-1] == '\n');

1616 
buf
[
fûesize
-1] = 0;

1617 
	`vi_£t
(
vi
, 
buf
);

1619 
	`‰ì
(
buf
);

1620 
vi
->
fûï©h
 = filepath;

1622  
åue
;

1623 
	}
}

1631 
boﬁ
 
	$vi_wrôe
(
vi
*vi, *
fûï©h
){

1632 if(!
fûï©h
Ëfûï©h = 
vi
->filepath;

1633 if(!
fûï©h
Ë 
Ál£
;

1634 
fd
 = 
	`›í
(
fûï©h
, 
O_RDWR
|
O_CREAT
|
O_TRUNC
, 0777); if(fd == -1)  0;

1635 
fûesize
 = 
	`vi_fûesize
(
vi
);

1636 *
buf
 = 
	`vi_out
(
vi
, 0); 
	`as£π
(buf);

1638 
byãs
 = 
	`wrôe
(
fd
, 
buf
, 
fûesize
-1);

1639 
	`˛o£
(
fd
);

1640 
	`‰ì
(
buf
);

1642 if(
byãs
 !
fûesize
 - 1){

1643  
Ál£
;

1645  
åue
;

1646 
	}
}

1648 
	$vi_libøry_öô
(){

1649 
vim
 = 
	`mÆloc
((
vi
));

1650 
	`vi_öô
(
vim
);

1651 
	`vi_£t
(
vim
, "");

1652 
	}
}

1654 
	$vi_è°e_digô
(
vi
*vi){

1655  
	`è°e_digô
(
vi
->
cuº
);

1656 
	}
}

1657 
boﬁ
 
	$vi_F
(
vi
 *vi, 
c
){

1658 *
cuº
 = 
vi
->curr - 1;

1659 
cuº
 >
vi
->
löes
[vi->
cuºl
]){

1660 if(*
cuº
 =
c
){

1661 
vi
->
cuº
 = curr;

1662  
åue
;

1664 
cuº
--;

1666  
Ál£
;

1667 
	}
}

1681 
boﬁ
 
	$vi_föd
(
vi
 *vi, * 
°r
, 
Êags
){

1682 *
ﬁdcuº
 = 
vi
->
cuº
;

1683 
ﬁdcuºl
 = 
vi
->
cuºl
;

1684 
£¨ch_‰om_foŸ
:

1685 
vi
->
cuº
 = 
	`°∫°r
(vi->cuº, 
°r
, vi->
Àn_of_löe
[vi->
cuºl
] - 
	`VI_CURR_LEN
(vi) + 1);

1686 !
vi
->
cuº
){

1687 
vi
->
cuºl
++;

1688 if(
vi
->
cuºl
 > vi->
lmax
){

1689 
vi
->
cuº
 = 
ﬁdcuº
;

1690 
vi
->
cuºl
 = 
ﬁdcuºl
;

1693 
vi
->
cuº
 = 
	`°∫°r
–vi->
löes
[vi->
cuºl
], 
°r
, vi->
Àn_of_löe
[vi->currl] );

1696 if(
	`VI_FLAG
(
cw‹d
Ë& 
Êags
){

1697 *
goodcuº
 =
vim
->
cuº
;

1698 
boﬁ
 
l_bad
 = 
	`__IS_CWORD
(
	`vi_smñŒ
(
vi
));

1699 
vim
->
cuº
 +
	`°æí
(
°r
) - 1;

1700 
boﬁ
 
r_bad
 = 
	`__IS_CWORD
(
	`vi_smñÃ
(
vi
));

1701 if(
l_bad
 || 
r_bad
){

1702 
	`vi_L_
(
vi
);

1703 
£¨ch_‰om_foŸ
;

1705 
vim
->
cuº
 = 
goodcuº
;

1709 if(
	`VI_FLAG
(
noquŸe
Ë& 
Êags
){

1710 if(
	`vi_öquŸe
(
vi
)){

1711 
	`vi_L_
(
vi
);

1712 
£¨ch_‰om_foŸ
;

1716 if(
	`VI_FLAG
(
œzy
Ë& 
Êags
){

1717 
vi
->
cuº
 = 
ﬁdcuº
;

1718 
vi
->
cuºl
 = 
ﬁdcuºl
;

1720  
åue
;

1721 
	}
}

1729 
	$vi_smñŒ
(
vi
 *vi){

1730 if(
vi
->
cuº
 =vi->
löes
[vi->
cuºl
] ){

1731 if(
vi
->
cuºl
 == 0)  -1;

1734  
vi
->
cuº
[-1];

1735 
	}
}

1741 
	$vi_smñÃ
(
vi
 *vi){

1742 if(
	`VI_CURRL_LEN
(
vi
Ë+ 1 =
	`VI_CURR_LEN
(vi)){

1743 if(
vi
->
cuºl
 =vi->
lmax
)  -1;

1744  
vi
->
löes
[vi->
cuºl
 + 1][0];

1747  
vi
->
cuº
[1];

1748 
	}
}

1750 
	$vi_gg
(
vi
 *vi){

1751 
vi
->
cuºl
 = 0;

1752 
vi
->
cuº
 = vi->
löes
[vi->
cuºl
];

1753 
	}
}

1755 
	$vi_G
(
vi
 *vi){

1756 
vi
->
cuºl
 = vi->
lmax
;

1757 
vi
->
cuº
 = vi->
löes
[vi->
cuºl
];

1758 
	}
}

1762 
boﬁ
 
	$vi_Gn
(
vi
 *vi, 
de°l
){

1763 if(
de°l
 < 0 || de°»> 
vi
->
lmax
Ë 
Ál£
;

1765 
vi
->
cuºl
 = 
de°l
;

1766 
vi
->
cuº
 = vi->
löes
[vi->
cuºl
];

1768 
	}
}

1772 
boﬁ
 
	$vi_öquŸe
(
vi
 *vi){

1773 
dq_com∂ëe
 = 1;

1774 
q_com∂ëe
 = 1;

1775 *
cuº
 = 
vi
->
löes
[vi->
cuºl
]; curr < vi->curr; curr++){

1776 if(*
cuº
 ='"'Ë
dq_com∂ëe
 = !dq_complete;

1777 if(*
cuº
 ='\''Ë
q_com∂ëe
 = !q_complete;

1779  !(
dq_com∂ëe
 && 
q_com∂ëe
);

1780 
	}
}

1782 
	$vi_ª£t_m_ªgs
(
vi
 *vi){

1783 
i
 = 'a'; i <= 'z'; i++){

1784 
vi
->
m_ªgs
[
i
].
cuºl
 = -1;

1785 
vi
->
m_ªgs
[
i
].
cuºoff
 = -1;

1787 
	}
}

1790 
	$vi_sh¨e_˛ùbﬂrd
(
vi
 *vi, vò*
vi2
){

1791 
vi2
->
ylöes_fix
 = vi2->
ylöes
;

1792 
vi2
->
Àn_of_ylöe_fix
 = vi2->
Àn_of_ylöe
;

1793 
vi2
->
size_of_ylöe_fix
 = vi2->
size_of_ylöe
;

1794 
vi2
->
˛ùöfo_fix
 = vi2->
˛ùöfo
;

1796 
vi2
->
ylöes
 = 
vi
->ylines;

1797 
vi2
->
Àn_of_ylöe
 = 
vi
->len_of_yline;

1798 
vi2
->
size_of_ylöe
 = 
vi
->size_of_yline;

1799 
vi2
->
˛ùöfo
 = 
vi
->clipinfo;

1800 
	}
}

1802 
boﬁ
 
	$vi_mìt_em±ylöe
(
vi
 *vi){

1803  
vi
->
Àn_of_löe
[vi->
cuºl
] == 0;

1804 
	}
}

1806 
boﬁ
 
	$vi_mìt_•a˚löe
(
vi
 *vi){

1807 
i
 = 0; i < 
vi
->
Àn_of_löe
[vi->
cuºl
]; i++){

1808 if(!
	`is•a˚
–
vi
->
löes
[vi->
cuºl
][
i
])Ë 
Ál£
;

1810  
åue
;

1811 
	}
}

	@vi.h

1 #i‚de‡
VI_H


2 
	#VI_H


	)

4 
	~<°dio.h
>

5 
	~<as£π.h
>

6 
	~<°dlib.h
>

7 
	~<°rög.h
>

8 
	~"utûs.h
"

9 
	#a§t
 
as£π


10 íum{

	)

11 
	mE_mìä
 = 1,

12 
	mE_cuº
,

14 
	#STR_EOL
 "\n"

	)

15 
	#EOL
 '\n'

	)

16 
	#STR_QUOT
 "'\""

	)

22 
	mASCII_CR
 = 1,

23 
	mASCII_ESC
 = 2,

24 
	mASCII_DEL
 = 127,

27 
	#STR_CR
 (([]){
ASCII_CR
, 0})

	)

28 
	#STR_ESC_CR
 (([]){
ASCII_ESC
, 
ASCII_CR
, '\n', 0})

	)

30 
	#STR_ESC
 (([]){
ASCII_ESC
, 0})

	)

33 
	#VI_CURRL_TAIL
(
vi
Ë(vi->
löes
[vi->
cuºl
] + vi->
Àn_of_löe
[vi->cuºl] -1)

	)

34 
	#VI_CURRL_END
(
vi
Ë(vi->
löes
[vi->
cuºl
] + vi->
Àn_of_löe
[vi->cuºl])

	)

35 
	#VI_CURRL_LEN
(
vi
Ë(vi->
Àn_of_löe
[vi->
cuºl
])

	)

36 
	#VI_CURRL_LIMIT
(
vi
Ë(vi->
Àn_of_löe
[vi->
cuºl
] - 1)

37 
	#VI_CURR_OFFSET
(
vi
Ë(vi->
cuº
 - vi->
löes
[vi->
cuºl
])

	)

38 
	#VI_CURR_LEN
(
vi
Ë(
	`VI_CURR_OFFSET
(viË+ 1)

	)

39 
	#VI_CURR_LENr
(
vi
Ë(vi->
Àn_of_löe
[vi->
cuºl
] - 
	`VI_CURR_LEN
(vi))

	)

40 
	#VI_CURR_LENR
(
vi
Ë(vi->
Àn_of_löe
[vi->
cuºl
] - 
	`VI_CURR_LEN
(viË+ 1)

	)

42 
	#V_HEAD_OFFSET
(
vi
Ë(vi->
v_hód
 - vi->
löes
[vi->
v_m
])

	)

43 
	#V_HEAD_LEN
(
vi
Ë(
	`V_HEAD_OFFSET
(viË+ 1)

	)

44 
	#V_TAIL_OFFSET
(
vi
Ë(vi->
v_èû
 - vi->
löes
[vi->
v_n
])

	)

45 
	#V_TAIL_LEN
(
vi
Ë(
	`V_TAIL_OFFSET
(viË+ 1)

	)

46 
	#V_START_OFFSET
(
vi
Ë
	`V_HEAD_OFFSET
(vi)

	)

47 
	#V_START_LEN
(
vi
Ë
	`V_HEAD_LEN
(vi)

	)

49 
	#__DO_NOT_COMPLAIN
 0x123

	)

50 
	#EXCHG_PTR
(
a
, 
b
Ëdo{*
tmp
 =á;á = (*)b; b =Åmp;} 0)

	)

51 
	#EXCHG_INT
(
a
, 
b
Ëdo{
tmp
 =á;á = b; b =Åmp;} 0)

	)

54 
	#Def_vi_›
(
x
)\

55 
ölöe
 
boﬁ
 
vi_›_
##
	`x
 (
vi
*vi){\

56 
vi
->
›_id
++;\

57 if(
vi
->
›s
[vi->
›_id
] == '|'){\

58 
vi
->
›_id
++;\

59  
vi_
##
x
##
	`_
(
vi
);\

61  
vi_
##
	`x
(
vi
);\

62 }

	)

80 
	#VI_F_CURR
 1

	)

81 
	#VI_YLINE_MAX
 1024

	)

83 
	m__VI_FLAG_SUCCESS
,

84 
	m__VI_FLAG_W0
,

85 
	m__VI_FLAG_mìt0
,

86 
	m__VI_FLAG_mìä
,

87 
	m__VI_FLAG_cuº
,

88 
	m__VI_FLAG_ML
,

89 
	m__VI_FLAG_yy
,

90 
	m__VI_FLAG_œzy
,

91 
	m__VI_FLAG_cw‹d
,

92 
	m__VI_FLAG_noquŸe


94 
	#VI_SET_FLAG
(
x
, 
vi
Ë(vi->
Êags
 |
	`VI_FLAG
(x))

	)

95 
	#VI_CLEAR_FLAG
(
x
, 
vi
Ë(vi->
Êags
 &(~
	`VI_FLAG
(x)))

	)

96 
	#VI_TEST_FLAG
(
x
, 
vi
Ë(vi->
Êags
 & 
	`VI_FLAG
(x))

	)

97 
	#VI_FLAG
(
x
Ë
	`VI_MK_FLAG
(x, 1)

	)

98 
	#VI_MK_FLAG
(
x
, 
b
Ë((bË<< (
__VI_FLAG_
##x))

	)

100 
	#__SET_STATE
(
x
Ë(
°©e
 |
	`VI_FLAG
(x))

	)

101 
	#__CLEAR_STATE
(
x
Ë(
°©e
 &(~
	`VI_FLAG
(x)))

	)

102 
	#__TEST_STATE
(
x
Ë(
°©e
 & 
	`VI_FLAG
(x))

	)

103 
	#__WR_STATE
(
x
, 
b
Ë(
°©e
 |
	`VI_MK_FLAG
(x, b))

	)

105 
	mVI_MOD_FREE
,

106 
	mVI_MOD_BUSY


108 
	sm¨k_ªgi°î
{

109 
	mcuºl
;

110 
	mcuºoff
;

112 
	svi_˛ùöfo
{

113 
	myy
;

114 
	mylmax
;

116 
	svi
{

117 *
	m˛ùbﬂrd_buf
;

118 *
	mfûï©h
;

119 c⁄° *
	m°r
;

120 
	mcuºl
;

121 *
	mcuº
;

122 
	mv_begöl
;

123 *
	mv_begö
;

124 
	mv_m
; 
	mv_n
;

125 uni⁄{*
	mv_hód
; *
	mv_°¨t
;};

126 *
	mv_èû
;

130 **
	mlöes
;

131 uni⁄{*
	mÀn_of_löe
; *
	mÀn_of_löes
;};

132 uni⁄{*
	msize_of_löe
;*
	msize_of_löes
;};

133 
	mlmax
;

135 
	mmod
;

136 
	mÊags
;

138 **
	mylöes
;

139 uni⁄{*
	msize_of_ylöe
;*
	msize_of_ylöes
;};

140 uni⁄{*
	mÀn_of_ylöe
;*
	mÀn_of_ylöes
;};

141 
m¨k_ªgi°î
 *
	mm_ªgs
;

142 
	mªp
;

143 *
	m›s
;

144 
	m›_id
;

145 
	m_î∫o
;

146 
vi_˛ùöfo
 * 
	m˛ùöfo
;

147 **
	mylöes_fix
;

148 *
	mÀn_of_ylöe_fix
;

149 *
	msize_of_ylöe_fix
;

150 
vi_˛ùöfo
 *
	m˛ùöfo_fix
;

151 
	#VI_REGEX_LEN
 128

	)

152 
	mœ°_£¨ch
[
VI_REGEX_LEN
];

154 
VI_LINE_MK
(
vi
 *vi, 
l
, *
§c
, 
§˛í
);

156 
	$VI_A_LINES
(
vi
 *vi, 
l
, 
 um
){

157 
	`pch¨_¨r_a
(
vi
->
löes
, vi->
lmax
+1, 
l
, 
 um
);

158 
	`öt_¨r_a
(
vi
->
size_of_löe
, vi->
lmax
+1, 
l
, 
 um
);

159 
	`öt_¨r_a
(
vi
->
Àn_of_löe
, vi->
lmax
+1, 
l
, 
 um
);

161 
i
 = 
l
+1; i<ˆ+
 um
; i++){

162 
	`VI_LINE_MK
(
vi
, 
i
, "", 0);

164 
vi
->
lmax
 +
 um
;

165 
	}
}

166 
ölöe
 
	$vi_o
(
vi
*vi){

167 
	`VI_A_LINES
(
vi
, vi->
cuºl
, 1);

168 
vi
->
cuºl
++;

169 
vi
->
cuº
 = vi->
löes
[vi->
cuºl
];

170 
	}
}

171 
vi_$
(
vi
 * vi);

172 
vi_0
(
vi
 *vi);

173 
boﬁ
 
vi_≥r˚¡
(
vi
*vi);

175 
vi_y
(
vi
 *vi);

176 
boﬁ
 
vi_n‹mÆ
(
vi
 *vi, *
›
);

177 
boﬁ
 
vi_tom¨k
(
vi
 *vi, 
rid
);

178 
boﬁ
 
vi_m¨k
(
vi
 *vi, 
rid
);

179 
vi
* 
vi_√w
–*
°r
);

180 
vi
 * 
vi_öô
(vi *vi);

181 
vi_£t
–
vi
* vi, c⁄° *
°r
 );

182 
vi_f
–
vi
 *vi, 
to
, ... );

183 
boﬁ
 
vi_jmp•a˚
(
vi
 *vi);

184 
boﬁ
 
vi_jmp•a˚_r
(
vi
 *vi);

185 *
jmp_•a˚
–*
°r
 );

186 
boﬁ
 
vi_a˘ive
(
vi
 *
v
);

187 
boﬁ
 
vi_dr›
(
vi
 *
v
);

188 
vi_dñ_wôhö
(
vi
 *vi);

189 
vi_dñ_a¸oss
(
vi
 *vi);

190 
vi_c›y_wôhö
(
vi
 *vi);

191 
vi_c›y_a¸oss
(
vi
* vi);

192 
vi_∑°e_löe
(
vi
 *vi);

193 
vi_∑°e_löes
(
vi
 *vi);

194 
vi_dñ_löes
(
vi
 * vi);

195 
vi_dñëe
(
vi
 *vi);

196 
vi_c›y
(
vi
 *vi);

197 
vi_p
(
vi
 *vi);

198 
vi_mk_mn
(
vi
 *vi);

199 
VI_LINE_A_SAFE
(
vi
 *vi, 
l
, 
©
, *
§c
, 
§˛í
);

200 
VI_LINE_I_SAFE
(
vi
 *vi, 
l
, 
©
, *
§c
, 
§˛í
);

201 
vi_≠≥nd_©_ß„
(
vi
 *vi, 
l
, *
©
, *
§c
, 
§˛í
);

202 
vi_ö£π_©_ß„
(
vi
 *vi, 
l
, *
©
, *
§c
, 
§˛í
);

203 
VI_YLINE_MK
(
vi
 *vi, 
l
, *
§c
, 
§˛í
);

204 
boﬁ
 
vi_x
(
vi
 *vi);

205 
vi_mk_hód_èû
(
vi
 *vi);

206 
vi
 *
	gvim
;

207 *
	gvi_›s1_9
 ;

208 * 
	gvi_move_›s
;

209 * 
	gvi_∑ú_°r
;

210 * 
	gvi_∑ú_°r2
 ;

211 
vi_ö£π_ß„
(
vi
*vi, *
§c
, 
§˛í
);

212 
vi_jmp•a˚_ex
(
vi
 *vi, 
c⁄åﬁ
);

213 
vi_f_ex
(
vi
*vi, *
group
, 
Êags
);

214 
vi_¥öt
(
vi
*vi, );

215 
ölöe
 
	$vi_r
(
vi
 *vi, 
√w
){

216 
vi
->
cuº
[0] = 
√w
;

217 
	}
}

218 
ölöe
 
boﬁ
 
	$vi_h
(
vi
 *vi){

219 if(
	`VI_CURR_OFFSET
(
vi
) >= 1){

220 
vi
->
cuº
--;

221  
åue
;

223  
Ál£
;

224 
	}
}

225 
ölöe
 
boﬁ
 
	$vi_l
(
vi
 *vi){

226 if(
	`VI_CURR_LEN
(
vi
Ë< 
	`VI_CURRL_LEN
(vi)){

227 
vi
->
cuº
++;

228  
åue
;

230  
Ál£
;

231 
	}
}

233 
ölöe
 
	$__vi_jk_chgcuº
(
vi
 *vi, 
√wl
){

234 
√xéí
 = 
vi
->
Àn_of_löes
[
√wl
];

235 
√woff£t
;

236 if(
√xéí
 >
	`VI_CURR_LEN
(
vi
)Ë
√woff£t
 = VI_CURR_LEN(vi) - 1;

237 if(
√xéí
Ë
√woff£t
 =Çextlen - 1;

238 
√woff£t
 = 0;

240 
vi
->
cuº
 = vi->
löes
[
√wl
] + 
√woff£t
;

241 
	}
}

242 
ölöe
 
boﬁ
 
	$vi_j
(
vi
 *vi){

243 if(
vi
->
cuºl
 < vi->
lmax
){

244 
	`__vi_jk_chgcuº
(
vi
, vi->
cuºl
 + 1);

245 
vi
->
cuºl
++;

246  
åue
;

248  
Ál£
;

249 
	}
}

250 
ölöe
 
boﬁ
 
	$vi_k
(
vi
 *vi){

251 if(
vi
->
cuºl
 > 0){

252 
	`__vi_jk_chgcuº
(
vi
, vi->
cuºl
 - 1);

253 
vi
->
cuºl
--;

254  
åue
;

256  
Ál£
;

257 
	}
}

258 
vi_yy
(
vi
*vi);

259 
	$VI_DEL_LINES
(
vi
 *vi, 
l
, 
 um
){

260 
	`as£π
(
l
 + 
 um
 -1 <
vi
->
lmax
);

261 
i
 = 
l
; i <Ü + 
 um
; i++){

262 if(
vi
->
löes
[
i
]Ë
	`‰ì
(vi->lines[i]);

265 
	`pch¨_¨r_dñ
(
vi
->
löes
, vi->
lmax
 + 1, 
l
, 
 um
);

266 
	`öt_¨r_dñ
(
vi
->
size_of_löe
, vi->
lmax
+1, 
l
, 
 um
);

267 
	`öt_¨r_dñ
(
vi
->
Àn_of_löe
, vi->
lmax
+1, 
l
, 
 um
);

268 
vi
->
lmax
 -
 um
;

269 
	}
}

270 
vi_dd
(
vi
 *vi);

277 
vi_E
(
vi
 *vi);

278 
vi_d$
(
vi
 *vi);

279 
vi_d0
(
vi
 *vi);

280 
boﬁ
 
vi_tom
(
vi
 *vi, 
rid
);

281 
boﬁ
 
vi_m
(
vi
 *vi, 
rid
);

282 
vi_d
(
vi
 *vi);

283 
vi_›_d
(
vi
 *vi);

284 
vi_›_y
(
vi
 *vi);

285 
vi_v
(
vi
 * vi);

295 
ölöe
 
	$vi_i
(
vi
*vi, *
c⁄ã¡
){

296 
Àn
 = 
	`°æí_ex
(
c⁄ã¡
, 
STR_ESC_CR
);

297 
	`vi_ö£π_ß„
(
vi
, 
c⁄ã¡
, 
Àn
);

299 if(
c⁄ã¡
[
Àn
] =
ASCII_CR
 || content[len] == '\n'){

300 *
bªak_©
 = 
vi
->
cuº
 + 1;

301 
æí
 = 
	`VI_CURRL_END
(
vi
Ë- 
bªak_©
;

302 
	`vi_o
(
vi
);

303 if(
æí
Ë
	`vi_i
(
vi
, 
bªak_©
);

304 
	`vi_0
(
vi
);

306 *
bªak_©
 = 
EOL
;

307 
vi
->
Àn_of_löe
[vi->
cuºl
 - 1] -
æí
;

309 
Àn
 +
	`vi_i
(
vi
, 
c⁄ã¡
 +Üen + 1) + 1;

311  
Àn
;

312 
	}
}

316 
ölöe
 
	$vi_a
(
vi
 *vi, *
c⁄ã¡
){

317 if–
	`VI_CURRL_LEN
(
vi
Ë!0 ){ 
	`a§t
(
	`VI_CURR_LEN
(vi) <= VI_CURRL_LEN(vi));

318 
vi
->
cuº
++;

320 
	`a§t
–
	`VI_CURR_OFFSET
(
vi
) == 0);

321  
	`vi_i
(
vi
, 
c⁄ã¡
);

322 
	}
}

323 
ölöe
 
	$vi_$0
(
vi
 *vi){

324 
vi
->
cuº
 = vi->
löes
[vi->
cuºl
] + 
	`VI_CURRL_LEN
(vi);

325 
	}
}

327 
vi_yW
(
vi
 *vi);

328 
boﬁ
 
vi_W
(
vi
 *vi);

330 
boﬁ
 
vi_wrôe
(
vi
*vi, *
fûï©h
);

331 
boﬁ
 
vi_›í
(
vi
 *vi, *
fûï©h
);

332 *
vi_out
(
vi
 * vi, *
buf
);

333 
vi_fûesize
(
vi
* vi);

334 
vi_libøry_öô
();

335 
	g__sûít
;

337 
ölöe
 * 
	$__VI_NEXT
(
vi
 *vi, 
cuºl
, *
cuº
){

338 if(
cuº
[0] != '\n'){

339  
cuº
 + 1;

341 if(
cuºl
 < 
vi
->
lmax
)

342  
vi
->
löes
[
cuºl
 + 1];

344 
	}
}

347 
ölöe
 
	$__VI_NEXT_SET
(
vi
 *vi, *
pcuºl
, **
pcuº
){

348 
cuºl
 = *
pcuºl
;

349 *
cuº
 = *
pcuº
;

350 if(
cuº
[0] != '\n'){

351 (*
pcuº
) ++;

353 if(
cuºl
 < 
vi
->
lmax
)

355 *
pcuºl
 = 
cuºl
 + 1;

356 (*
pcuº
Ë
vi
->
löes
[
cuºl
 + 1];

358 
	`as£π
(0);

359 
	}
}

360 
ölöe
 * 
	$__vi_√xt
(
vi
 *vi, 
cuºl
, *
cuº
){

361 if(
cuº
[1] != '\n')  curr + 1;

362 i‡(
cuºl
 < 
vi
->
lmax
Ë vi->
löes
[currl + 1];

364  (*)
__DO_NOT_COMPLAIN
;

365 
	}
}

369 
ölöe
 
boﬁ
 
	$vi_lg
(
vi
 *vi){

370 if(
vi
->
cuº
 >
	`VI_CURRL_TAIL
(vi)){

371 if(
vi
->
cuºl
 =vi->
lmax
Ë 
Ál£
;

373 
vi
->
cuºl
++;

374 
vi
->
cuº
 = vi->
löes
[vi->
cuºl
];

378 
vi
->
cuº
++;

380  
åue
;

381 
	}
}

383 
ölöe
 
boﬁ
 
	$vi_H_
(
vi
 *vi){

384 if(
vi
->
cuº
 > vi->
löes
[vi->
cuºl
]){

385 
vi
->
cuº
--;

386  
åue
;

388 if(
vi
->
cuºl
 > 0){

389 
vi
->
cuºl
--;

390 
vi
->
cuº
 = vi->
löes
[vi->
cuºl
] + vi->
Àn_of_löe
[vi->currl];

391  
åue
;

393  
Ál£
;

394 
	}
}

410 
ölöe
 
boﬁ
 
	$vi_L_
(
vi
 *vi){

411 if(
vi
->
cuº
[0] == '\n'){

412 if(
vi
->
lmax
 =vi->
cuºl
){

413  
Ál£
;

416 
vi
->
cuºl
++;

417 
vi
->
cuº
 = vi->
löes
[vi->
cuºl
];

418  
åue
;

421 
vi
->
cuº
++;

422  
åue
;

423 
	}
}

425 *
	gc⁄°_vi_bœnkch¨s
 = "\t \n";

426 
ölöe
 
boﬁ
 
	$vi_is_©_bœnk
(
vi
 *vi){

427  ()
	`°rch¨
(
c⁄°_vi_bœnkch¨s
, 
vi
->
cuº
[0]);

428 
	}
}

429 
vi_è°e_digô
(
vi
*vi);

432 *
vi_˛ùbﬂrd
(
vi
 *vi, *
buf
);

433 
ölöe
 
boﬁ
 
	$vi_x‹
(
vi
*vi){

434 
	`vi_0
(
vi
);

435 
ok
 = 
	`vi_jmp•a˚
(
vi
);

436  (
ok
 || 
vi
->
_î∫o
 =
E_cuº
);

437 
	}
}

438 
ölöe
 
boﬁ
 
	$vi_‹x
(
vi
*vi){

439 
	`vi_$
(
vi
);

440  
	`vi_jmp•a˚_r
(
vi
);

441 
	}
}

442 
ölöe
 
boﬁ
 
	$__IS_BLANK
(
c
){

443  ()
	`°rch¨
(
c⁄°_vi_bœnkch¨s
, 
c
);

444 
	}
}

449 
ölöe
 
boﬁ
 
	$__IS_CWORD
(
c
){

450 if–(
c
 >'a' && c <'z'Ë|| (¯>'A' && c <'Z'Ë|| (¯>'0' && c<'9'Ë|| (¯='_')Ë 
åue
;

451  
Ál£
;

452 
	}
}

453 
ölöe
 
boﬁ
 
	$vi_mvÆid
(
vi
 *vi, 
rid
){

454 if(
rid
 < 'a' ||Ñid > 'z')  0;

455  
vi
->
m_ªgs
[
rid
].
cuºl
 >= 0;

456 
	}
}

457 
ölöe
 *
	$vi_mcuº
(
vi
 *vi, 
rid
){

458 if(!
	`vi_mvÆid
(
vi
, 
rid
)){

459 
	`as£π
(
Ál£
);

462 
m¨k_ªgi°î
 *
r
 = 
vi
->
m_ªgs
 + 
rid
;

463 
	`as£π
(
r
->
cuºl
 <
vi
->
lmax
 &&Ñ->
cuºoff
 <vi->
Àn_of_löe
[r->currl]);

464  
vi
->
löes
[
r
->
cuºl
] +Ñ->
cuºoff
;

465 
	}
}

467 
boﬁ
 
vi_B
(
vi
 *vi);

471 
boﬁ
 
vi_F
(
vi
 *vi, 
c
);

472 
vi_ídv
(
vi
 *vi);

473 
vi_föd
(
vi
 *vi, * 
°r
, 
Êags
);

474 
vi_gg
(
vi
 *vi);

475 
boﬁ
 
vi_ö°r
(
vi
 *vi);

476 
boﬁ
 
vi_w
(
vi
 *vi);

477 
vi_smñŒ
(
vi
 *vi);

478 
vi_smñÃ
(
vi
 *vi);

479 
boﬁ
 
vi_öquŸe
(
vi
 *vi);

480 
vi_ª£t_m_ªgs
(
vi
 *vi);

481 
vi_G
(
vi
 *vi);

482 
boﬁ
 
vi_Gn
(
vi
 *vi, 
de°l
);

483 
vi_sh¨e_˛ùbﬂrd
(
vi
 *vi, vò*
vi2
);

484 
boﬁ
 
vi_b_
(
vi
 *vi);

485 
boﬁ
 
vi_B_
(
vi
 *vi);

486 
boﬁ
 
vi_E_
(
vi
 *vi);

487 
boﬁ
 
vi_W_
(
vi
 *vi);

488 
boﬁ
 
vi_w_
(
vi
 *vi);

489 
boﬁ
 
vi_b
(
vi
*vi);

490 
boﬁ
 
vi_e_
(
vi
 *vi);

491 
boﬁ
 
vi_e
(
vi
 *vi);

492 
boﬁ
 
vi_mìt_em±ylöe
(
vi
 *vi);

493 
boﬁ
 
vi_mìt_•a˚löe
(
vi
 *vi);

494 
boﬁ
 
vi_£¨ch_fow¨d
(
vi
 *vi, *
∑âîn
);

495 
boﬁ
 
vi_£¨ch_backw¨d
(
vi
 *vi, *
∑âîn
);

496 
boﬁ
 
vi_N
(
vi
 *vi);

497 
boﬁ
 
vi_n
(
vi
 *vi);

499 
boﬁ
 
vi_df
(
vi
 *vi, 
èrgë
);

500 
boﬁ
 
vi_dW
(
vi
 *vi);

502 
boﬁ
 
vi_yf
(
vi
 *vi, 
èrgë
);

503 
vi_y0
(
vi
 *vi);

504 
vi_y$
(
vi
 *vi);

	@vim.c

1 
	~<°io.h
>

2 
	svi
{

3 *
	m°r
;

4 *
	mcuº
;

6 
	$vi_öô
–
vi
 *
v
 ){

8 
	}
}

10 
	$vi_£t
–
vi
 *
v
, *
°r
 ){

11 
v
.
°r
 = v.
cuº
 = str;

12 
	}
}

13 
	$vi_w
–
vi
 *
v
 ){

15 
	}
}

	@vim.h

1 #i‚de‡
VIM_H


2 
	#VIM_H


	)

3 
ölöe
 
	$vim_f_ex
(*
group
, 
Êags
){

4  
	`vi_f_ex
(
vim
, 
group
, 
Êags
);

5 
	}
}

6 
ölöe
 
	$vim_föd
(*
°r
, 
Êags
){

7  
	`vi_föd
(
vim
, 
°r
, 
Êags
);

8 
	}
}

10 
ölöe
 
	$vim_tom
(
rid
){

11 
	`vi_tom
(
vim
, 
rid
);

12 
	}
}

13 
ölöe
 
	$vim_£t
(*
°r
 ){

14 
	`vi_£t
–
vim
, 
°r
 );

15 
	}
}

17 
ölöe
 
boﬁ
 
	$vim_jmp•a˚
(){

18  
	`vi_jmp•a˚
(
vim
);

19 
	}
}

20 
ölöe
 
	$vim_gg
(){

21 
	`vi_gg
(
vim
);

22 
	}
}

23 
ölöe
 
boﬁ
 
	$vim_w
(){

24  
	`vi_w
(
vim
);

25 
	}
}

26 
ölöe
 
boﬁ
 
	$vim_W
(){

27  
	`vi_W
(
vim
);

28 
	}
}

29 
ölöe
 
boﬁ
 
	$vim_l
(){

30  
	`vi_l
(
vim
);

31 
	}
}

33 
ölöe
 
boﬁ
 
	$vim_j
(){

34  
	`vi_j
(
vim
);

35 
	}
}

37 
ölöe
 
boﬁ
 
	$vim_h
(){

38  
	`vi_h
(
vim
);

39 
	}
}

41 
ölöe
 
boﬁ
 
	$vim_≥r˚¡
(){

42  
	`vi_≥r˚¡
(
vim
);

43 
	}
}

45 
ölöe
 
boﬁ
 
	$vim_x‹
(){

46  
	`vi_x‹
(
vim
);

47 
	}
}

49 
ölöe
 
	$vim_0
(){

50  
	`vi_0
(
vim
);

51 
	}
}

53 
ölöe
 
boﬁ
 
	$vim_‹x
(){

54  
	`vi_‹x
(
vim
);

55 
	}
}

56 
ölöe
 
	$vim_$
(){

57 
	`vi_$
(
vim
);

58 
	}
}

61 
ölöe
 
	$vim_jmp•a˚_ex
–
c⁄åﬁ
){

62  
	`vi_jmp•a˚_ex
(
vim
, 
c⁄åﬁ
);

63 
	}
}

65 
ölöe
 
boﬁ
 
	$vim_m
–
rid
){

66  
	`vi_m
(
vim
, 
rid
);

67 
	}
}

69 
ölöe
 
	$vim_r
–
√w
){

70 
	`vi_r
(
vim
, 
√w
);

71 
	}
}

73 
ölöe
 
	$vim_f
–
èrgë
){

74  
	`vi_f
(
vim
, 
èrgë
);

75 
	}
}

77 
ölöe
 
	$vim_i
(*
°r
){

78 
	`vi_i
(
vim
, 
°r
);

79 
	}
}

81 
ölöe
 
	$vim_a
(*
°r
){

82 
	`vi_a
(
vim
, 
°r
);

83 
	}
}

85 
ölöe
 
	$vim_n‹mÆ
(*
›s
){

86 
	`vi_n‹mÆ
(
vim
, 
›s
);

87 
	}
}

89 
ölöe
 
	$vim_out
(*
buf
){

90 
	`vi_out
(
vim
, 
buf
);

91 
	}
}

93 
ölöe
 
boﬁ
 
	$vim_wrôe
(*
fûíame
){

94  
	`vi_wrôe
(
vim
, 
fûíame
);

95 
	}
}

97 
ölöe
 
boﬁ
 
	$vim_›í
(*
fûï©h
){

98  
	`vi_›í
(
vim
, 
fûï©h
);

99 
	}
}

101 
ölöe
 
	$vim_x
(){

102 
	`vi_x
(
vim
);

103 
	}
}

105 
ölöe
 
	$vim_G
(){

106 
	`vi_G
(
vim
);

107 
	}
}

109 
ölöe
 
boﬁ
 
	$vim_Gn
(
de°l
){

110  
	`vi_Gn
(
vim
, 
de°l
);

111 
	}
}

113 
ölöe
 
	$vim_v
(){

114 
	`vi_v
(
vim
);

115 
	}
}

117 
ölöe
 
boﬁ
 
	$vim_mìt_em±ylöe
(){

118  
	`vi_mìt_em±ylöe
(
vim
);

119 
	}
}

121 
ölöe
 
boﬁ
 
	$vim_mìt_•a˚löe
(){

122  
	`vi_mìt_•a˚löe
(
vim
);

123 
	}
}

125 
ölöe
 
boﬁ
 
	$vim_p
(){

126  
	`vi_p
(
vim
);

127 
	}
}

129 
ölöe
 
boﬁ
 
	$vim_d
(){

130  
	`vi_d
(
vim
);

131 
	}
}

133 
ölöe
 
boﬁ
 
	$vim_y
(){

134  
	`vi_y
(
vim
);

135 
	}
}

	@word.h

1 
	söãΩ_ôem
{

2 *
	mchöe£
;

3 *
	míglish
;

5 c⁄° 
öãΩ_ôem
 
	göãΩ
[] ={

21 
	#INTERP_TBL_LEN
 ((
öãΩ
Ë/ (
öãΩ_ôem
))

	)

24 
	#UTF8_HASHTBL_LEN
 1024

	)

25 
	#UTF8_HASHTBL_LEN2
 16

	)

26 
	gutf8_hashtbl
[ 
UTF8_HASHTBL_LEN
 ][ 
UTF8_HASHTBL_LEN2
 ];

28 c⁄° *
	gpöyö_of
[] = {

25579 
	#PINYIN_TBL_LEN
 ((
pöyö_of
Ë/ (*))

	)

	@
1
.
0
79
1144
file.c
file.h
han2pinyin.c
lfs/src/lfs.c
lfs/src/lfs.h
lsh.c
lsh.h
lua/src/lapi.c
lua/src/lapi.h
lua/src/lauxlib.c
lua/src/lauxlib.h
lua/src/lbaselib.c
lua/src/lbitlib.c
lua/src/lcode.c
lua/src/lcode.h
lua/src/lcorolib.c
lua/src/lctype.c
lua/src/lctype.h
lua/src/ldblib.c
lua/src/ldebug.c
lua/src/ldebug.h
lua/src/ldo.c
lua/src/ldo.h
lua/src/ldump.c
lua/src/lfunc.c
lua/src/lfunc.h
lua/src/lgc.c
lua/src/lgc.h
lua/src/linit.c
lua/src/liolib.c
lua/src/llex.c
lua/src/llex.h
lua/src/llimits.h
lua/src/lmathlib.c
lua/src/lmem.c
lua/src/lmem.h
lua/src/loadlib.c
lua/src/lobject.c
lua/src/lobject.h
lua/src/lopcodes.c
lua/src/lopcodes.h
lua/src/loslib.c
lua/src/lparser.c
lua/src/lparser.h
lua/src/lprefix.h
lua/src/lstate.c
lua/src/lstate.h
lua/src/lstring.c
lua/src/lstring.h
lua/src/lstrlib.c
lua/src/ltable.c
lua/src/ltable.h
lua/src/ltablib.c
lua/src/ltm.c
lua/src/ltm.h
lua/src/lua.c
lua/src/lua.h
lua/src/luac.c
lua/src/luaconf.h
lua/src/lualib.h
lua/src/lundump.c
lua/src/lundump.h
lua/src/lutf8lib.c
lua/src/lvm.c
lua/src/lvm.h
lua/src/lzio.c
lua/src/lzio.h
pipe_demo.c
t.c
t.cn
tcp.cn
tochar.h
utils.c
utils.h
vi.c
vi.h
vim.c
vim.h
word.h

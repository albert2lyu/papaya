!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
1	lua/doc/manual.html	/^<h1>1 &ndash; <a name="1">Introduction<\/a><\/h1>$/;"	a
2	lua/doc/manual.html	/^<h1>2 &ndash; <a name="2">Basic Concepts<\/a><\/h1>$/;"	a
2.1	lua/doc/manual.html	/^<h2>2.1 &ndash; <a name="2.1">Values and Types<\/a><\/h2>$/;"	a
2.2	lua/doc/manual.html	/^<h2>2.2 &ndash; <a name="2.2">Environments and the Global Environment<\/a><\/h2>$/;"	a
2.3	lua/doc/manual.html	/^<h2>2.3 &ndash; <a name="2.3">Error Handling<\/a><\/h2>$/;"	a
2.4	lua/doc/manual.html	/^<h2>2.4 &ndash; <a name="2.4">Metatables and Metamethods<\/a><\/h2>$/;"	a
2.5	lua/doc/manual.html	/^<h2>2.5 &ndash; <a name="2.5">Garbage Collection<\/a><\/h2>$/;"	a
2.5.1	lua/doc/manual.html	/^<h3>2.5.1 &ndash; <a name="2.5.1">Garbage-Collection Metamethods<\/a><\/h3>$/;"	a
2.5.2	lua/doc/manual.html	/^<h3>2.5.2 &ndash; <a name="2.5.2">Weak Tables<\/a><\/h3>$/;"	a
2.6	lua/doc/manual.html	/^<h2>2.6 &ndash; <a name="2.6">Coroutines<\/a><\/h2>$/;"	a
3	lua/doc/manual.html	/^<h1>3 &ndash; <a name="3">The Language<\/a><\/h1>$/;"	a
3.1	lua/doc/manual.html	/^<h2>3.1 &ndash; <a name="3.1">Lexical Conventions<\/a><\/h2>$/;"	a
3.2	lua/doc/manual.html	/^<h2>3.2 &ndash; <a name="3.2">Variables<\/a><\/h2>$/;"	a
3.3	lua/doc/manual.html	/^<h2>3.3 &ndash; <a name="3.3">Statements<\/a><\/h2>$/;"	a
3.3.1	lua/doc/manual.html	/^<h3>3.3.1 &ndash; <a name="3.3.1">Blocks<\/a><\/h3>$/;"	a
3.3.2	lua/doc/manual.html	/^<h3>3.3.2 &ndash; <a name="3.3.2">Chunks<\/a><\/h3>$/;"	a
3.3.3	lua/doc/manual.html	/^<h3>3.3.3 &ndash; <a name="3.3.3">Assignment<\/a><\/h3>$/;"	a
3.3.4	lua/doc/manual.html	/^<h3>3.3.4 &ndash; <a name="3.3.4">Control Structures<\/a><\/h3><p>$/;"	a
3.3.5	lua/doc/manual.html	/^<h3>3.3.5 &ndash; <a name="3.3.5">For Statement<\/a><\/h3>$/;"	a
3.3.6	lua/doc/manual.html	/^<h3>3.3.6 &ndash; <a name="3.3.6">Function Calls as Statements<\/a><\/h3><p>$/;"	a
3.3.7	lua/doc/manual.html	/^<h3>3.3.7 &ndash; <a name="3.3.7">Local Declarations<\/a><\/h3><p>$/;"	a
3.4	lua/doc/manual.html	/^<h2>3.4 &ndash; <a name="3.4">Expressions<\/a><\/h2>$/;"	a
3.4.1	lua/doc/manual.html	/^<h3>3.4.1 &ndash; <a name="3.4.1">Arithmetic Operators<\/a><\/h3><p>$/;"	a
3.4.10	lua/doc/manual.html	/^<h3>3.4.10 &ndash; <a name="3.4.10">Function Calls<\/a><\/h3><p>$/;"	a
3.4.11	lua/doc/manual.html	/^<h3>3.4.11 &ndash; <a name="3.4.11">Function Definitions<\/a><\/h3>$/;"	a
3.4.2	lua/doc/manual.html	/^<h3>3.4.2 &ndash; <a name="3.4.2">Bitwise Operators<\/a><\/h3><p>$/;"	a
3.4.3	lua/doc/manual.html	/^<h3>3.4.3 &ndash; <a name="3.4.3">Coercions and Conversions<\/a><\/h3><p>$/;"	a
3.4.4	lua/doc/manual.html	/^<h3>3.4.4 &ndash; <a name="3.4.4">Relational Operators<\/a><\/h3><p>$/;"	a
3.4.5	lua/doc/manual.html	/^<h3>3.4.5 &ndash; <a name="3.4.5">Logical Operators<\/a><\/h3><p>$/;"	a
3.4.6	lua/doc/manual.html	/^<h3>3.4.6 &ndash; <a name="3.4.6">Concatenation<\/a><\/h3><p>$/;"	a
3.4.7	lua/doc/manual.html	/^<h3>3.4.7 &ndash; <a name="3.4.7">The Length Operator<\/a><\/h3>$/;"	a
3.4.8	lua/doc/manual.html	/^<h3>3.4.8 &ndash; <a name="3.4.8">Precedence<\/a><\/h3><p>$/;"	a
3.4.9	lua/doc/manual.html	/^<h3>3.4.9 &ndash; <a name="3.4.9">Table Constructors<\/a><\/h3><p>$/;"	a
3.5	lua/doc/manual.html	/^<h2>3.5 &ndash; <a name="3.5">Visibility Rules<\/a><\/h2>$/;"	a
4	lua/doc/manual.html	/^<h1>4 &ndash; <a name="4">The Application Program Interface<\/a><\/h1>$/;"	a
4.1	lua/doc/manual.html	/^<h2>4.1 &ndash; <a name="4.1">The Stack<\/a><\/h2>$/;"	a
4.2	lua/doc/manual.html	/^<h2>4.2 &ndash; <a name="4.2">Stack Size<\/a><\/h2>$/;"	a
4.3	lua/doc/manual.html	/^<h2>4.3 &ndash; <a name="4.3">Valid and Acceptable Indices<\/a><\/h2>$/;"	a
4.4	lua/doc/manual.html	/^<h2>4.4 &ndash; <a name="4.4">C Closures<\/a><\/h2>$/;"	a
4.5	lua/doc/manual.html	/^<h2>4.5 &ndash; <a name="4.5">Registry<\/a><\/h2>$/;"	a
4.6	lua/doc/manual.html	/^<h2>4.6 &ndash; <a name="4.6">Error Handling in C<\/a><\/h2>$/;"	a
4.7	lua/doc/manual.html	/^<h2>4.7 &ndash; <a name="4.7">Handling Yields in C<\/a><\/h2>$/;"	a
4.8	lua/doc/manual.html	/^<h2>4.8 &ndash; <a name="4.8">Functions and Types<\/a><\/h2>$/;"	a
4.9	lua/doc/manual.html	/^<h2>4.9 &ndash; <a name="4.9">The Debug Interface<\/a><\/h2>$/;"	a
5	lua/doc/manual.html	/^<h1>5 &ndash; <a name="5">The Auxiliary Library<\/a><\/h1>$/;"	a
5.1	lua/doc/manual.html	/^<h2>5.1 &ndash; <a name="5.1">Functions and Types<\/a><\/h2>$/;"	a
6	lua/doc/manual.html	/^<h1>6 &ndash; <a name="6">Standard Libraries<\/a><\/h1>$/;"	a
6.1	lua/doc/manual.html	/^<h2>6.1 &ndash; <a name="6.1">Basic Functions<\/a><\/h2>$/;"	a
6.10	lua/doc/manual.html	/^<h2>6.10 &ndash; <a name="6.10">The Debug Library<\/a><\/h2>$/;"	a
6.2	lua/doc/manual.html	/^<h2>6.2 &ndash; <a name="6.2">Coroutine Manipulation<\/a><\/h2>$/;"	a
6.3	lua/doc/manual.html	/^<h2>6.3 &ndash; <a name="6.3">Modules<\/a><\/h2>$/;"	a
6.4	lua/doc/manual.html	/^<h2>6.4 &ndash; <a name="6.4">String Manipulation<\/a><\/h2>$/;"	a
6.4.1	lua/doc/manual.html	/^<h3>6.4.1 &ndash; <a name="6.4.1">Patterns<\/a><\/h3>$/;"	a
6.4.2	lua/doc/manual.html	/^<h3>6.4.2 &ndash; <a name="6.4.2">Format Strings for Pack and Unpack<\/a><\/h3>$/;"	a
6.5	lua/doc/manual.html	/^<h2>6.5 &ndash; <a name="6.5">UTF-8 Support<\/a><\/h2>$/;"	a
6.6	lua/doc/manual.html	/^<h2>6.6 &ndash; <a name="6.6">Table Manipulation<\/a><\/h2>$/;"	a
6.7	lua/doc/manual.html	/^<h2>6.7 &ndash; <a name="6.7">Mathematical Functions<\/a><\/h2>$/;"	a
6.8	lua/doc/manual.html	/^<h2>6.8 &ndash; <a name="6.8">Input and Output Facilities<\/a><\/h2>$/;"	a
6.9	lua/doc/manual.html	/^<h2>6.9 &ndash; <a name="6.9">Operating System Facilities<\/a><\/h2>$/;"	a
7	lua/doc/manual.html	/^<h1>7 &ndash; <a name="7">Lua Standalone<\/a><\/h1>$/;"	a
8	lua/doc/manual.html	/^<h1>8 &ndash; <a name="8">Incompatibilities with the Previous Version<\/a><\/h1>$/;"	a
8.1	lua/doc/manual.html	/^<h2>8.1 &ndash; <a name="8.1">Changes in the Language<\/a><\/h2>$/;"	a
8.2	lua/doc/manual.html	/^<h2>8.2 &ndash; <a name="8.2">Changes in the Libraries<\/a><\/h2>$/;"	a
8.3	lua/doc/manual.html	/^<h2>8.3 &ndash; <a name="8.3">Changes in the API<\/a><\/h2>$/;"	a
9	lua/doc/manual.html	/^<h1>9 &ndash; <a name="9">The Complete Syntax of Lua<\/a><\/h1>$/;"	a
ALL	lua/src/Makefile	/^ALL= all$/;"	m
ALLONES	lua/src/lbitlib.c	37;"	d	file:
ALL_A	lua/src/Makefile	/^ALL_A= $(LUA_A)$/;"	m
ALL_O	lua/src/Makefile	/^ALL_O= $(BASE_O) $(LUA_O) $(LUAC_O)$/;"	m
ALL_T	lua/src/Makefile	/^ALL_T= $(LUA_A) $(LUA_T) $(LUAC_T)$/;"	m
ALPHABIT	lua/src/lctype.h	39;"	d
AR	lua/src/Makefile	/^AR= ar rcu$/;"	m
ARGC_MAX	lsh.h	22;"	d
ASCII_$	tochar.h	/^	ASCII_$ = '$',$/;"	e	enum:__anon3
ASCII_0	tochar.h	/^	ASCII_0 = '0',$/;"	e	enum:__anon3
ASCII_1	tochar.h	/^	ASCII_1, $/;"	e	enum:__anon3
ASCII_2	tochar.h	/^	ASCII_2, $/;"	e	enum:__anon3
ASCII_3	tochar.h	/^	ASCII_3, $/;"	e	enum:__anon3
ASCII_4	tochar.h	/^	ASCII_4, $/;"	e	enum:__anon3
ASCII_5	tochar.h	/^	ASCII_5, $/;"	e	enum:__anon3
ASCII_6	tochar.h	/^	ASCII_6, $/;"	e	enum:__anon3
ASCII_7	tochar.h	/^	ASCII_7, $/;"	e	enum:__anon3
ASCII_9	tochar.h	/^	ASCII_9, $/;"	e	enum:__anon3
ASCII_A	tochar.h	/^	ASCII_A = 'A',$/;"	e	enum:__anon3
ASCII_B	tochar.h	/^	ASCII_B,$/;"	e	enum:__anon3
ASCII_C	tochar.h	/^	ASCII_C,$/;"	e	enum:__anon3
ASCII_CR	vi.h	/^	ASCII_CR = 1,$/;"	e	enum:__anon27
ASCII_D	tochar.h	/^	ASCII_D,$/;"	e	enum:__anon3
ASCII_DEL	vi.h	/^	ASCII_DEL = 127,$/;"	e	enum:__anon27
ASCII_E	tochar.h	/^	ASCII_E,$/;"	e	enum:__anon3
ASCII_ESC	vi.h	/^	ASCII_ESC = 2,$/;"	e	enum:__anon27
ASCII_F	tochar.h	/^	ASCII_F,$/;"	e	enum:__anon3
ASCII_G	tochar.h	/^	ASCII_G,$/;"	e	enum:__anon3
ASCII_H	tochar.h	/^	ASCII_H,$/;"	e	enum:__anon3
ASCII_I	tochar.h	/^	ASCII_I,$/;"	e	enum:__anon3
ASCII_J	tochar.h	/^	ASCII_J,$/;"	e	enum:__anon3
ASCII_K	tochar.h	/^	ASCII_K,$/;"	e	enum:__anon3
ASCII_L	tochar.h	/^	ASCII_L,$/;"	e	enum:__anon3
ASCII_M	tochar.h	/^	ASCII_M,$/;"	e	enum:__anon3
ASCII_N	tochar.h	/^	ASCII_N,$/;"	e	enum:__anon3
ASCII_O	tochar.h	/^	ASCII_O,$/;"	e	enum:__anon3
ASCII_P	tochar.h	/^	ASCII_P,$/;"	e	enum:__anon3
ASCII_Q	tochar.h	/^	ASCII_Q,$/;"	e	enum:__anon3
ASCII_R	tochar.h	/^	ASCII_R,$/;"	e	enum:__anon3
ASCII_S	tochar.h	/^	ASCII_S,$/;"	e	enum:__anon3
ASCII_T	tochar.h	/^	ASCII_T,$/;"	e	enum:__anon3
ASCII_U	tochar.h	/^	ASCII_U,$/;"	e	enum:__anon3
ASCII_V	tochar.h	/^	ASCII_V,$/;"	e	enum:__anon3
ASCII_W	tochar.h	/^	ASCII_W,$/;"	e	enum:__anon3
ASCII_X	tochar.h	/^	ASCII_X,$/;"	e	enum:__anon3
ASCII_Y	tochar.h	/^	ASCII_Y,$/;"	e	enum:__anon3
ASCII_Z	tochar.h	/^	ASCII_Z,$/;"	e	enum:__anon3
ASCII_a	tochar.h	/^	ASCII_a = 'a',$/;"	e	enum:__anon3
ASCII_b	tochar.h	/^	ASCII_b,$/;"	e	enum:__anon3
ASCII_c	tochar.h	/^	ASCII_c,$/;"	e	enum:__anon3
ASCII_d	tochar.h	/^	ASCII_d,$/;"	e	enum:__anon3
ASCII_e	tochar.h	/^	ASCII_e,$/;"	e	enum:__anon3
ASCII_f	tochar.h	/^	ASCII_f,$/;"	e	enum:__anon3
ASCII_g	tochar.h	/^	ASCII_g,$/;"	e	enum:__anon3
ASCII_h	tochar.h	/^	ASCII_h,$/;"	e	enum:__anon3
ASCII_i	tochar.h	/^	ASCII_i,$/;"	e	enum:__anon3
ASCII_j	tochar.h	/^	ASCII_j,$/;"	e	enum:__anon3
ASCII_k	tochar.h	/^	ASCII_k,$/;"	e	enum:__anon3
ASCII_l	tochar.h	/^	ASCII_l,$/;"	e	enum:__anon3
ASCII_m	tochar.h	/^	ASCII_m,$/;"	e	enum:__anon3
ASCII_n	tochar.h	/^	ASCII_n,$/;"	e	enum:__anon3
ASCII_o	tochar.h	/^	ASCII_o,$/;"	e	enum:__anon3
ASCII_p	tochar.h	/^	ASCII_p,$/;"	e	enum:__anon3
ASCII_q	tochar.h	/^	ASCII_q,$/;"	e	enum:__anon3
ASCII_r	tochar.h	/^	ASCII_r,$/;"	e	enum:__anon3
ASCII_s	tochar.h	/^	ASCII_s,$/;"	e	enum:__anon3
ASCII_t	tochar.h	/^	ASCII_t,$/;"	e	enum:__anon3
ASCII_u	tochar.h	/^	ASCII_u,$/;"	e	enum:__anon3
ASCII_v	tochar.h	/^	ASCII_v,$/;"	e	enum:__anon3
ASCII_w	tochar.h	/^	ASCII_w,$/;"	e	enum:__anon3
ASCII_x	tochar.h	/^	ASCII_x,$/;"	e	enum:__anon3
ASCII_y	tochar.h	/^	ASCII_y,$/;"	e	enum:__anon3
ASCII_z	tochar.h	/^	ASCII_z,$/;"	e	enum:__anon3
AUXMARK	lua/src/loadlib.c	670;"	d	file:
BASE_O	lua/src/Makefile	/^BASE_O= $(CORE_O) $(LIB_O) $(MYOBJS)$/;"	m
BASIC_STACK_SIZE	lua/src/lstate.h	50;"	d
BITRK	lua/src/lopcodes.h	134;"	d
BIT_ISCOLLECTABLE	lua/src/lobject.h	63;"	d
BLACKBIT	lua/src/lgc.h	80;"	d
BinOpr	lua/src/lcode.h	/^typedef enum BinOpr {$/;"	g
BinOpr	lua/src/lcode.h	/^} BinOpr;$/;"	t	typeref:enum:BinOpr
BlockCnt	lua/src/lparser.c	/^typedef struct BlockCnt {$/;"	s	file:
BlockCnt	lua/src/lparser.c	/^} BlockCnt;$/;"	t	typeref:struct:BlockCnt	file:
CAP_POSITION	lua/src/lstrlib.c	211;"	d	file:
CAP_UNFINISHED	lua/src/lstrlib.c	210;"	d	file:
CC	lua/src/Makefile	/^CC= gcc -std=gnu99$/;"	m
CC_BG_RED	utils.h	96;"	d
CC_RED	utils.h	95;"	d
CClosure	lua/src/lobject.h	/^typedef struct CClosure {$/;"	s
CClosure	lua/src/lobject.h	/^} CClosure;$/;"	t	typeref:struct:CClosure
CFLAGS	lua/src/Makefile	/^CFLAGS= -O2 -Wall -Wextra -DLUA_COMPAT_5_2 $(SYSCFLAGS) $(MYCFLAGS)$/;"	m
CIST_FRESH	lua/src/lstate.h	101;"	d
CIST_HOOKED	lua/src/lstate.h	100;"	d
CIST_HOOKYIELD	lua/src/lstate.h	105;"	d
CIST_LEQ	lua/src/lstate.h	106;"	d
CIST_LUA	lua/src/lstate.h	99;"	d
CIST_OAH	lua/src/lstate.h	98;"	d
CIST_TAIL	lua/src/lstate.h	104;"	d
CIST_YPCALL	lua/src/lstate.h	103;"	d
CLIBS	lua/src/loadlib.c	/^static const int CLIBS = 0;$/;"	v	file:
CMD_SYNTAX_BAD	lsh.c	863;"	d	file:
CONFIG	lfs/Makefile	/^CONFIG= .\/config$/;"	m
CORE_O	lua/src/Makefile	/^CORE_O=	lapi.o lcode.o lctype.o ldebug.o ldo.o ldump.o lfunc.o lgc.o llex.o \\$/;"	m
CREATE_ABC	lua/src/lopcodes.h	116;"	d
CREATE_ABx	lua/src/lopcodes.h	121;"	d
CREATE_Ax	lua/src/lopcodes.h	125;"	d
CallInfo	lua/src/lstate.h	/^typedef struct CallInfo {$/;"	s
CallInfo	lua/src/lstate.h	/^} CallInfo;$/;"	t	typeref:struct:CallInfo
CallS	lua/src/lapi.c	/^struct CallS {  \/* data to 'f_call' *\/$/;"	s	file:
Closure	lua/src/lobject.h	/^typedef union Closure {$/;"	u
Closure	lua/src/lobject.h	/^} Closure;$/;"	t	typeref:union:Closure
ClosureHeader	lua/src/lobject.h	/^  ClosureHeader;$/;"	m	struct:CClosure
ClosureHeader	lua/src/lobject.h	/^  ClosureHeader;$/;"	m	struct:LClosure
ClosureHeader	lua/src/lobject.h	443;"	d
CommonHeader	lua/src/lobject.h	/^  CommonHeader;$/;"	m	struct:GCObject
CommonHeader	lua/src/lobject.h	/^  CommonHeader;$/;"	m	struct:Proto
CommonHeader	lua/src/lobject.h	/^  CommonHeader;$/;"	m	struct:TString
CommonHeader	lua/src/lobject.h	/^  CommonHeader;$/;"	m	struct:Table
CommonHeader	lua/src/lobject.h	/^  CommonHeader;$/;"	m	struct:Udata
CommonHeader	lua/src/lobject.h	79;"	d
CommonHeader	lua/src/lstate.h	/^  CommonHeader;$/;"	m	struct:lua_State
ConsControl	lua/src/lparser.c	/^struct ConsControl {$/;"	s	file:
DIGITBIT	lua/src/lctype.h	40;"	d
DIR_METATABLE	lfs/src/lfs.c	104;"	d	file:
DLMSG	lua/src/loadlib.c	250;"	d	file:
Def_arr_a	utils.h	28;"	d
Def_arr_del	utils.h	9;"	d
Def_arr_del2	utils.h	17;"	d
DumpBlock	lua/src/ldump.c	/^static void DumpBlock (const void *b, size_t size, DumpState *D) {$/;"	f	file:
DumpByte	lua/src/ldump.c	/^static void DumpByte (int y, DumpState *D) {$/;"	f	file:
DumpCode	lua/src/ldump.c	/^static void DumpCode (const Proto *f, DumpState *D) {$/;"	f	file:
DumpConstants	lua/src/ldump.c	/^static void DumpConstants (const Proto *f, DumpState *D) {$/;"	f	file:
DumpDebug	lua/src/ldump.c	/^static void DumpDebug (const Proto *f, DumpState *D) {$/;"	f	file:
DumpFunction	lua/src/ldump.c	/^static void DumpFunction (const Proto *f, TString *psource, DumpState *D) {$/;"	f	file:
DumpHeader	lua/src/ldump.c	/^static void DumpHeader (DumpState *D) {$/;"	f	file:
DumpInt	lua/src/ldump.c	/^static void DumpInt (int x, DumpState *D) {$/;"	f	file:
DumpInteger	lua/src/ldump.c	/^static void DumpInteger (lua_Integer x, DumpState *D) {$/;"	f	file:
DumpLiteral	lua/src/ldump.c	37;"	d	file:
DumpNumber	lua/src/ldump.c	/^static void DumpNumber (lua_Number x, DumpState *D) {$/;"	f	file:
DumpProtos	lua/src/ldump.c	/^static void DumpProtos (const Proto *f, DumpState *D) {$/;"	f	file:
DumpState	lua/src/ldump.c	/^} DumpState;$/;"	t	typeref:struct:__anon17	file:
DumpString	lua/src/ldump.c	/^static void DumpString (const TString *s, DumpState *D) {$/;"	f	file:
DumpUpvalues	lua/src/ldump.c	/^static void DumpUpvalues (const Proto *f, DumpState *D) {$/;"	f	file:
DumpVar	lua/src/ldump.c	49;"	d	file:
DumpVector	lua/src/ldump.c	35;"	d	file:
Dyndata	lua/src/lparser.h	/^typedef struct Dyndata {$/;"	s
Dyndata	lua/src/lparser.h	/^} Dyndata;$/;"	t	typeref:struct:Dyndata
EMPTY_UNTIL_EOL	lsh.c	862;"	d	file:
EOFMARK	lua/src/lua.c	280;"	d	file:
EOL	vi.h	15;"	d
EOZ	lua/src/lzio.h	16;"	d
ERRFUNC	lua/src/loadlib.c	320;"	d	file:
ERRLIB	lua/src/loadlib.c	319;"	d	file:
ERRORSTACKSIZE	lua/src/ldo.c	174;"	d	file:
EXCHG_INT	vi.h	51;"	d
EXCHG_PTR	vi.h	50;"	d
EXTRA_STACK	lua/src/lstate.h	47;"	d
E_curr	vi.h	/^	E_curr,$/;"	e	enum:__anon26
E_meetn	vi.h	/^	E_meetn = 1,$/;"	e	enum:__anon26
FILE_H	file.h	2;"	d
FINALIZEDBIT	lua/src/lgc.h	81;"	d
FIRST_RESERVED	lua/src/llex.h	14;"	d
FLAGS	lua/src/lstrlib.c	899;"	d	file:
FUNCTION	lua/src/luac.c	120;"	d	file:
Ftypes	lua/src/lstrlib.c	/^typedef union Ftypes {$/;"	u	file:
Ftypes	lua/src/lstrlib.c	/^} Ftypes;$/;"	t	typeref:union:Ftypes	file:
FuncState	lua/src/lparser.h	/^typedef struct FuncState {$/;"	s
FuncState	lua/src/lparser.h	/^} FuncState;$/;"	t	typeref:struct:FuncState
G	lua/src/lstate.h	186;"	d
GCFINALIZECOST	lua/src/lgc.c	45;"	d	file:
GCObject	lua/src/lobject.h	/^struct GCObject {$/;"	s
GCObject	lua/src/lobject.h	/^typedef struct GCObject GCObject;$/;"	t	typeref:struct:GCObject
GCSTEPSIZE	lua/src/lgc.h	32;"	d
GCSWEEPCOST	lua/src/lgc.c	39;"	d	file:
GCSWEEPMAX	lua/src/lgc.c	42;"	d	file:
GCSatomic	lua/src/lgc.h	40;"	d
GCScallfin	lua/src/lgc.h	45;"	d
GCSinsideatomic	lua/src/lgc.c	33;"	d	file:
GCSpause	lua/src/lgc.h	46;"	d
GCSpropagate	lua/src/lgc.h	39;"	d
GCSswpallgc	lua/src/lgc.h	41;"	d
GCSswpend	lua/src/lgc.h	44;"	d
GCSswpfinobj	lua/src/lgc.h	42;"	d
GCSswptobefnz	lua/src/lgc.h	43;"	d
GCTM	lua/src/lgc.c	/^static void GCTM (lua_State *L, int propagateerrors) {$/;"	f	file:
GCUnion	lua/src/lstate.h	/^union GCUnion {$/;"	u
GCdebt	lua/src/lstate.h	/^  l_mem GCdebt;  \/* bytes allocated not yet compensated by the collector *\/$/;"	m	struct:global_State
GCestimate	lua/src/lstate.h	/^  lu_mem GCestimate;  \/* an estimate of the non-garbage memory in use *\/$/;"	m	struct:global_State
GCmemtrav	lua/src/lstate.h	/^  lu_mem GCmemtrav;  \/* memory traversed by the GC *\/$/;"	m	struct:global_State
GETARG_A	lua/src/lopcodes.h	97;"	d
GETARG_Ax	lua/src/lopcodes.h	109;"	d
GETARG_B	lua/src/lopcodes.h	100;"	d
GETARG_Bx	lua/src/lopcodes.h	106;"	d
GETARG_C	lua/src/lopcodes.h	103;"	d
GETARG_sBx	lua/src/lopcodes.h	112;"	d
GET_OPCODE	lua/src/lopcodes.h	89;"	d
GMatchState	lua/src/lstrlib.c	/^typedef struct GMatchState {$/;"	s	file:
GMatchState	lua/src/lstrlib.c	/^} GMatchState;$/;"	t	typeref:struct:GMatchState	file:
HOOKKEY	lua/src/ldblib.c	/^static const int HOOKKEY = 0;$/;"	v	file:
Header	lua/src/lstrlib.c	/^typedef struct Header {$/;"	s	file:
Header	lua/src/lstrlib.c	/^} Header;$/;"	t	typeref:struct:Header	file:
INDEXK	lua/src/lopcodes.h	140;"	d
INSTALL	lua/Makefile	/^INSTALL= install -p$/;"	m
INSTALL_BIN	lua/Makefile	/^INSTALL_BIN= $(INSTALL_TOP)\/bin$/;"	m
INSTALL_CMOD	lua/Makefile	/^INSTALL_CMOD= $(INSTALL_TOP)\/lib\/lua\/$V$/;"	m
INSTALL_DATA	lua/Makefile	/^INSTALL_DATA= $(INSTALL) -m 0644$/;"	m
INSTALL_EXEC	lua/Makefile	/^INSTALL_EXEC= $(INSTALL) -m 0755$/;"	m
INSTALL_INC	lua/Makefile	/^INSTALL_INC= $(INSTALL_TOP)\/include$/;"	m
INSTALL_LIB	lua/Makefile	/^INSTALL_LIB= $(INSTALL_TOP)\/lib$/;"	m
INSTALL_LMOD	lua/Makefile	/^INSTALL_LMOD= $(INSTALL_TOP)\/share\/lua\/$V$/;"	m
INSTALL_MAN	lua/Makefile	/^INSTALL_MAN= $(INSTALL_TOP)\/man\/man1$/;"	m
INSTALL_TOP	lua/Makefile	/^INSTALL_TOP= \/usr\/local$/;"	m
INTERP_TBL_LEN	word.h	21;"	d
IOPREF_LEN	lua/src/liolib.c	136;"	d	file:
IO_INPUT	lua/src/liolib.c	137;"	d	file:
IO_OUTPUT	lua/src/liolib.c	138;"	d	file:
IO_PREFIX	lua/src/liolib.c	135;"	d	file:
IS	lua/src/luac.c	70;"	d	file:
ISK	lua/src/lopcodes.h	137;"	d
IdxT	lua/src/ltablib.c	/^typedef unsigned int IdxT;$/;"	t	file:
Instruction	lua/src/llimits.h	/^typedef unsigned int Instruction;$/;"	t
Instruction	lua/src/llimits.h	/^typedef unsigned long Instruction;$/;"	t
KGC_EMERGENCY	lua/src/lstate.h	55;"	d
KGC_NORMAL	lua/src/lstate.h	54;"	d
KOption	lua/src/lstrlib.c	/^typedef enum KOption {$/;"	g	file:
KOption	lua/src/lstrlib.c	/^} KOption;$/;"	t	typeref:enum:KOption	file:
Kchar	lua/src/lstrlib.c	/^  Kchar,	\/* fixed-length strings *\/$/;"	e	enum:KOption	file:
Kfloat	lua/src/lstrlib.c	/^  Kfloat,	\/* floating-point numbers *\/$/;"	e	enum:KOption	file:
Kint	lua/src/lstrlib.c	/^  Kint,		\/* signed integers *\/$/;"	e	enum:KOption	file:
Knop	lua/src/lstrlib.c	/^  Knop		\/* no-op (configuration or spaces) *\/$/;"	e	enum:KOption	file:
Kpaddalign	lua/src/lstrlib.c	/^  Kpaddalign,	\/* padding for alignment *\/$/;"	e	enum:KOption	file:
Kpadding	lua/src/lstrlib.c	/^  Kpadding,	\/* padding *\/$/;"	e	enum:KOption	file:
Kstring	lua/src/lstrlib.c	/^  Kstring,	\/* strings with prefixed length *\/$/;"	e	enum:KOption	file:
Kuint	lua/src/lstrlib.c	/^  Kuint,	\/* unsigned integers *\/$/;"	e	enum:KOption	file:
Kzstr	lua/src/lstrlib.c	/^  Kzstr,	\/* zero-terminated strings *\/$/;"	e	enum:KOption	file:
L	lsh.c	/^lua_State *L;$/;"	v
L	lua/src/lauxlib.h	/^  lua_State *L;$/;"	m	struct:luaL_Buffer
L	lua/src/ldump.c	/^  lua_State *L;$/;"	m	struct:__anon17	file:
L	lua/src/llex.h	/^  struct lua_State *L;$/;"	m	struct:LexState	typeref:struct:LexState::lua_State
L	lua/src/lstrlib.c	/^  lua_State *L;$/;"	m	struct:Header	file:
L	lua/src/lstrlib.c	/^  lua_State *L;$/;"	m	struct:MatchState	file:
L	lua/src/lundump.c	/^  lua_State *L;$/;"	m	struct:__anon4	file:
L	lua/src/lzio.h	/^  lua_State *L;			\/* Lua state (for reader) *\/$/;"	m	struct:Zio
LClosure	lua/src/lobject.h	/^typedef struct LClosure {$/;"	s
LClosure	lua/src/lobject.h	/^} LClosure;$/;"	t	typeref:struct:LClosure
LDFLAGS	lua/src/Makefile	/^LDFLAGS= $(SYSLDFLAGS) $(MYLDFLAGS)$/;"	m
LEVELS1	lua/src/lauxlib.c	37;"	d	file:
LEVELS2	lua/src/lauxlib.c	38;"	d	file:
LEintfloat	lua/src/lvm.c	/^static int LEintfloat (lua_Integer i, lua_Number f) {$/;"	f	file:
LEnum	lua/src/lvm.c	/^static int LEnum (const TValue *l, const TValue *r) {$/;"	f	file:
LFIELDS_PER_FLUSH	lua/src/lopcodes.h	292;"	d
LFS_EXPORT	lfs/src/lfs.h	18;"	d
LFS_EXPORT	lfs/src/lfs.h	23;"	d
LFS_LIBNAME	lfs/src/lfs.c	70;"	d	file:
LFS_MAXPATHLEN	lfs/src/lfs.c	100;"	d	file:
LFS_MAXPATHLEN	lfs/src/lfs.c	96;"	d	file:
LFS_VERSION	lfs/src/lfs.c	69;"	d	file:
LG	lua/src/lstate.c	/^typedef struct LG {$/;"	s	file:
LG	lua/src/lstate.c	/^} LG;$/;"	t	typeref:struct:LG	file:
LHS_assign	lua/src/lparser.c	/^struct LHS_assign {$/;"	s	file:
LIBS	lua/src/Makefile	/^LIBS= -lm $(SYSLIBS) $(MYLIBS)$/;"	m
LIB_FAIL	lua/src/loadlib.c	246;"	d	file:
LIB_FAIL	lua/src/loadlib.c	247;"	d	file:
LIB_FAIL	lua/src/loadlib.c	95;"	d	file:
LIB_O	lua/src/Makefile	/^LIB_O=	lauxlib.o lbaselib.o lbitlib.o lcorolib.o ldblib.o liolib.o \\$/;"	m
LL	lua/src/lobject.c	478;"	d	file:
LOCK_METATABLE	lfs/src/lfs.c	115;"	d	file:
LSH_CMD_MAX	lsh.h	27;"	d
LSH_H	lsh.h	2;"	d
LSH_MOD_CMD	lsh.h	/^	LSH_MOD_CMD,$/;"	e	enum:__anon1
LSH_MOD_LUA	lsh.h	/^	LSH_MOD_LUA,$/;"	e	enum:__anon1
LSH_MOD_VI	lsh.h	/^	LSH_MOD_VI$/;"	e	enum:__anon1
LSTAT_FUNC	lfs/src/lfs.c	126;"	d	file:
LSTAT_FUNC	lfs/src/lfs.c	133;"	d	file:
LStream	lua/src/liolib.c	/^typedef luaL_Stream LStream;$/;"	t	file:
LTintfloat	lua/src/lvm.c	/^static int LTintfloat (lua_Integer i, lua_Number f) {$/;"	f	file:
LTnum	lua/src/lvm.c	/^static int LTnum (const TValue *l, const TValue *r) {$/;"	f	file:
LUAC_DATA	lua/src/lundump.h	16;"	d
LUAC_FORMAT	lua/src/lundump.h	23;"	d
LUAC_INT	lua/src/lundump.h	18;"	d
LUAC_NUM	lua/src/lundump.h	19;"	d
LUAC_O	lua/src/Makefile	/^LUAC_O=	luac.o$/;"	m
LUAC_T	lua/src/Makefile	/^LUAC_T=	luac$/;"	m
LUAC_VERSION	lua/src/lundump.h	22;"	d
LUAI_BITSINT	lua/src/luaconf.h	91;"	d
LUAI_BITSINT	lua/src/luaconf.h	94;"	d
LUAI_DDEC	lua/src/luaconf.h	273;"	d
LUAI_DDEF	lua/src/luaconf.h	274;"	d
LUAI_FUNC	lua/src/luaconf.h	268;"	d
LUAI_FUNC	lua/src/luaconf.h	270;"	d
LUAI_GCMUL	lua/src/lstate.c	36;"	d	file:
LUAI_GCPAUSE	lua/src/lstate.c	32;"	d	file:
LUAI_HASHLIMIT	lua/src/lstring.c	33;"	d	file:
LUAI_MAXCCALLS	lua/src/llimits.h	153;"	d
LUAI_MAXSHORTLEN	lua/src/llimits.h	177;"	d
LUAI_MAXSTACK	lua/src/luaconf.h	706;"	d
LUAI_MAXSTACK	lua/src/luaconf.h	708;"	d
LUAI_THROW	lua/src/ldo.c	58;"	d	file:
LUAI_THROW	lua/src/ldo.c	66;"	d	file:
LUAI_THROW	lua/src/ldo.c	73;"	d	file:
LUAI_TRY	lua/src/ldo.c	59;"	d	file:
LUAI_TRY	lua/src/ldo.c	67;"	d	file:
LUAI_TRY	lua/src/ldo.c	74;"	d	file:
LUAI_UACINT	lua/src/luaconf.h	516;"	d
LUAI_UACNUMBER	lua/src/luaconf.h	448;"	d
LUAI_UACNUMBER	lua/src/luaconf.h	464;"	d
LUAI_UACNUMBER	lua/src/luaconf.h	479;"	d
LUALIB_API	lua/src/luaconf.h	248;"	d
LUAL_BUFFERSIZE	lua/src/luaconf.h	736;"	d
LUAL_BUFFERSIZE	lua/src/luaconf.h	738;"	d
LUAL_NUMSIZES	lua/src/lauxlib.h	29;"	d
LUAL_PACKPADBYTE	lua/src/lstrlib.c	1105;"	d	file:
LUAMOD_API	lua/src/luaconf.h	249;"	d
LUA_A	lua/src/Makefile	/^LUA_A=	liblua.a$/;"	m
LUA_API	lua/src/luaconf.h	235;"	d
LUA_API	lua/src/luaconf.h	237;"	d
LUA_API	lua/src/luaconf.h	242;"	d
LUA_AUTHORS	lua/src/lua.h	27;"	d
LUA_BITLIBNAME	lua/src/lualib.h	35;"	d
LUA_C89_NUMBERS	lua/src/luaconf.h	81;"	d
LUA_CDIR	lua/src/luaconf.h	177;"	d
LUA_CDIR	lua/src/luaconf.h	193;"	d
LUA_COLIBNAME	lua/src/lualib.h	17;"	d
LUA_COMPAT_APIINTCASTS	lua/src/luaconf.h	314;"	d
LUA_COMPAT_APIINTCASTS	lua/src/luaconf.h	323;"	d
LUA_COMPAT_BITLIB	lua/src/luaconf.h	302;"	d
LUA_COMPAT_IPAIRS	lua/src/luaconf.h	307;"	d
LUA_COMPAT_LOADERS	lua/src/luaconf.h	335;"	d
LUA_COMPAT_LOADSTRING	lua/src/luaconf.h	357;"	d
LUA_COMPAT_LOG10	lua/src/luaconf.h	351;"	d
LUA_COMPAT_MATHLIB	lua/src/luaconf.h	297;"	d
LUA_COMPAT_MATHLIB	lua/src/luaconf.h	322;"	d
LUA_COMPAT_MAXN	lua/src/luaconf.h	362;"	d
LUA_COMPAT_MODULE	lua/src/luaconf.h	380;"	d
LUA_COMPAT_UNPACK	lua/src/luaconf.h	329;"	d
LUA_COPYRIGHT	lua/src/lua.h	26;"	d
LUA_CORE	lua/src/lapi.c	8;"	d	file:
LUA_CORE	lua/src/lcode.c	8;"	d	file:
LUA_CORE	lua/src/lctype.c	8;"	d	file:
LUA_CORE	lua/src/ldebug.c	8;"	d	file:
LUA_CORE	lua/src/ldo.c	8;"	d	file:
LUA_CORE	lua/src/ldump.c	8;"	d	file:
LUA_CORE	lua/src/lfunc.c	8;"	d	file:
LUA_CORE	lua/src/lgc.c	8;"	d	file:
LUA_CORE	lua/src/llex.c	8;"	d	file:
LUA_CORE	lua/src/lmem.c	8;"	d	file:
LUA_CORE	lua/src/lobject.c	8;"	d	file:
LUA_CORE	lua/src/lopcodes.c	8;"	d	file:
LUA_CORE	lua/src/lparser.c	8;"	d	file:
LUA_CORE	lua/src/lstate.c	8;"	d	file:
LUA_CORE	lua/src/lstring.c	8;"	d	file:
LUA_CORE	lua/src/ltable.c	8;"	d	file:
LUA_CORE	lua/src/ltm.c	8;"	d	file:
LUA_CORE	lua/src/luac.c	218;"	d	file:
LUA_CORE	lua/src/luac.c	8;"	d	file:
LUA_CORE	lua/src/lundump.c	8;"	d	file:
LUA_CORE	lua/src/lvm.c	8;"	d	file:
LUA_CORE	lua/src/lzio.c	8;"	d	file:
LUA_CPATH	lfs/Makefile	/^	LUA_CPATH=.\/src\/?.so lua tests\/test.lua$/;"	m
LUA_CPATHVARVERSION	lua/src/loadlib.c	42;"	d	file:
LUA_CPATH_DEFAULT	lua/src/luaconf.h	184;"	d
LUA_CPATH_DEFAULT	lua/src/luaconf.h	198;"	d
LUA_CPATH_VAR	lua/src/loadlib.c	36;"	d	file:
LUA_CSUBSEP	lua/src/loadlib.c	74;"	d	file:
LUA_DBLIBNAME	lua/src/lualib.h	41;"	d
LUA_DIRSEP	lua/src/luaconf.h	209;"	d
LUA_DIRSEP	lua/src/luaconf.h	211;"	d
LUA_DL_DLL	lua/src/luaconf.h	56;"	d
LUA_ENV	lua/src/llex.h	18;"	d
LUA_ERRERR	lua/src/lua.h	53;"	d
LUA_ERRFILE	lua/src/lauxlib.h	20;"	d
LUA_ERRGCMM	lua/src/lua.h	52;"	d
LUA_ERRMEM	lua/src/lua.h	51;"	d
LUA_ERRRUN	lua/src/lua.h	49;"	d
LUA_ERRSYNTAX	lua/src/lua.h	50;"	d
LUA_EXEC_DIR	lua/src/loadlib.c	60;"	d	file:
LUA_EXTRASPACE	lua/src/luaconf.h	717;"	d
LUA_FILEHANDLE	lua/src/lauxlib.h	182;"	d
LUA_FLOAT_DOUBLE	lua/src/luaconf.h	115;"	d
LUA_FLOAT_FLOAT	lua/src/luaconf.h	114;"	d
LUA_FLOAT_LONGDOUBLE	lua/src/luaconf.h	116;"	d
LUA_FLOAT_TYPE	lua/src/luaconf.h	127;"	d
LUA_FLOAT_TYPE	lua/src/luaconf.h	134;"	d
LUA_FLOAT_TYPE	lua/src/luaconf.h	147;"	d
LUA_FLOORN2I	lua/src/lvm.h	36;"	d
LUA_GCCOLLECT	lua/src/lua.h	304;"	d
LUA_GCCOUNT	lua/src/lua.h	305;"	d
LUA_GCCOUNTB	lua/src/lua.h	306;"	d
LUA_GCISRUNNING	lua/src/lua.h	310;"	d
LUA_GCRESTART	lua/src/lua.h	303;"	d
LUA_GCSETPAUSE	lua/src/lua.h	308;"	d
LUA_GCSETSTEPMUL	lua/src/lua.h	309;"	d
LUA_GCSTEP	lua/src/lua.h	307;"	d
LUA_GCSTOP	lua/src/lua.h	302;"	d
LUA_HOOKCALL	lua/src/lua.h	402;"	d
LUA_HOOKCOUNT	lua/src/lua.h	405;"	d
LUA_HOOKLINE	lua/src/lua.h	404;"	d
LUA_HOOKRET	lua/src/lua.h	403;"	d
LUA_HOOKTAILCALL	lua/src/lua.h	406;"	d
LUA_IDSIZE	lua/src/luaconf.h	725;"	d
LUA_IGMARK	lua/src/loadlib.c	63;"	d	file:
LUA_INITVARVERSION	lua/src/lua.c	40;"	d	file:
LUA_INIT_VAR	lua/src/lua.c	37;"	d	file:
LUA_INTEGER	lua/src/luaconf.h	529;"	d
LUA_INTEGER	lua/src/luaconf.h	537;"	d
LUA_INTEGER	lua/src/luaconf.h	549;"	d
LUA_INTEGER	lua/src/luaconf.h	558;"	d
LUA_INTEGER_FMT	lua/src/luaconf.h	513;"	d
LUA_INTEGER_FRMLEN	lua/src/luaconf.h	530;"	d
LUA_INTEGER_FRMLEN	lua/src/luaconf.h	538;"	d
LUA_INTEGER_FRMLEN	lua/src/luaconf.h	550;"	d
LUA_INTEGER_FRMLEN	lua/src/luaconf.h	559;"	d
LUA_INT_INT	lua/src/luaconf.h	109;"	d
LUA_INT_LONG	lua/src/luaconf.h	110;"	d
LUA_INT_LONGLONG	lua/src/luaconf.h	111;"	d
LUA_INT_TYPE	lua/src/luaconf.h	123;"	d
LUA_INT_TYPE	lua/src/luaconf.h	125;"	d
LUA_INT_TYPE	lua/src/luaconf.h	133;"	d
LUA_INT_TYPE	lua/src/luaconf.h	143;"	d
LUA_IOLIBNAME	lua/src/lualib.h	23;"	d
LUA_KCONTEXT	lua/src/luaconf.h	639;"	d
LUA_KCONTEXT	lua/src/luaconf.h	645;"	d
LUA_KCONTEXT	lua/src/luaconf.h	646;"	d
LUA_LDIR	lua/src/luaconf.h	176;"	d
LUA_LDIR	lua/src/luaconf.h	192;"	d
LUA_LIB	lua/src/lauxlib.c	8;"	d	file:
LUA_LIB	lua/src/lbaselib.c	8;"	d	file:
LUA_LIB	lua/src/lbitlib.c	8;"	d	file:
LUA_LIB	lua/src/lcorolib.c	8;"	d	file:
LUA_LIB	lua/src/ldblib.c	8;"	d	file:
LUA_LIB	lua/src/linit.c	9;"	d	file:
LUA_LIB	lua/src/liolib.c	8;"	d	file:
LUA_LIB	lua/src/lmathlib.c	8;"	d	file:
LUA_LIB	lua/src/loadlib.c	12;"	d	file:
LUA_LIB	lua/src/loslib.c	8;"	d	file:
LUA_LIB	lua/src/lstrlib.c	8;"	d	file:
LUA_LIB	lua/src/ltablib.c	8;"	d	file:
LUA_LIB	lua/src/lutf8lib.c	8;"	d	file:
LUA_LLE_FLAGS	lua/src/loadlib.c	188;"	d	file:
LUA_LOADLIBNAME	lua/src/lualib.h	44;"	d
LUA_LSUBSEP	lua/src/loadlib.c	78;"	d	file:
LUA_MASKCALL	lua/src/lua.h	412;"	d
LUA_MASKCOUNT	lua/src/lua.h	415;"	d
LUA_MASKLINE	lua/src/lua.h	414;"	d
LUA_MASKRET	lua/src/lua.h	413;"	d
LUA_MATHLIBNAME	lua/src/lualib.h	38;"	d
LUA_MAXCAPTURES	lua/src/lstrlib.c	34;"	d	file:
LUA_MAXINPUT	lua/src/lua.c	33;"	d	file:
LUA_MAXINTEGER	lua/src/luaconf.h	532;"	d
LUA_MAXINTEGER	lua/src/luaconf.h	540;"	d
LUA_MAXINTEGER	lua/src/luaconf.h	552;"	d
LUA_MAXINTEGER	lua/src/luaconf.h	561;"	d
LUA_MINBUFFER	lua/src/llimits.h	205;"	d
LUA_MININTEGER	lua/src/luaconf.h	533;"	d
LUA_MININTEGER	lua/src/luaconf.h	541;"	d
LUA_MININTEGER	lua/src/luaconf.h	553;"	d
LUA_MININTEGER	lua/src/luaconf.h	562;"	d
LUA_MINSTACK	lua/src/lua.h	79;"	d
LUA_MULTRET	lua/src/lua.h	34;"	d
LUA_NBITS	lua/src/lbitlib.c	28;"	d	file:
LUA_NOREF	lua/src/lauxlib.h	69;"	d
LUA_NUMBER	lua/src/luaconf.h	444;"	d
LUA_NUMBER	lua/src/luaconf.h	460;"	d
LUA_NUMBER	lua/src/luaconf.h	475;"	d
LUA_NUMBER_FMT	lua/src/luaconf.h	451;"	d
LUA_NUMBER_FMT	lua/src/luaconf.h	467;"	d
LUA_NUMBER_FMT	lua/src/luaconf.h	482;"	d
LUA_NUMBER_FRMLEN	lua/src/luaconf.h	450;"	d
LUA_NUMBER_FRMLEN	lua/src/luaconf.h	466;"	d
LUA_NUMBER_FRMLEN	lua/src/luaconf.h	481;"	d
LUA_NUMTAGS	lua/src/lua.h	74;"	d
LUA_O	lua/src/Makefile	/^LUA_O=	lua.o$/;"	m
LUA_OFSEP	lua/src/loadlib.c	86;"	d	file:
LUA_OK	lua/src/lua.h	47;"	d
LUA_OPADD	lua/src/lua.h	196;"	d
LUA_OPBAND	lua/src/lua.h	203;"	d
LUA_OPBNOT	lua/src/lua.h	209;"	d
LUA_OPBOR	lua/src/lua.h	204;"	d
LUA_OPBXOR	lua/src/lua.h	205;"	d
LUA_OPDIV	lua/src/lua.h	201;"	d
LUA_OPEQ	lua/src/lua.h	213;"	d
LUA_OPIDIV	lua/src/lua.h	202;"	d
LUA_OPLE	lua/src/lua.h	215;"	d
LUA_OPLT	lua/src/lua.h	214;"	d
LUA_OPMOD	lua/src/lua.h	199;"	d
LUA_OPMUL	lua/src/lua.h	198;"	d
LUA_OPPOW	lua/src/lua.h	200;"	d
LUA_OPSHL	lua/src/lua.h	206;"	d
LUA_OPSHR	lua/src/lua.h	207;"	d
LUA_OPSUB	lua/src/lua.h	197;"	d
LUA_OPUNM	lua/src/lua.h	208;"	d
LUA_OSLIBNAME	lua/src/lualib.h	26;"	d
LUA_PATHSUFFIX	lua/src/loadlib.c	39;"	d	file:
LUA_PATHVARVERSION	lua/src/loadlib.c	41;"	d	file:
LUA_PATH_DEFAULT	lua/src/luaconf.h	179;"	d
LUA_PATH_DEFAULT	lua/src/luaconf.h	194;"	d
LUA_PATH_MARK	lua/src/loadlib.c	57;"	d	file:
LUA_PATH_SEP	lua/src/loadlib.c	54;"	d	file:
LUA_PATH_VAR	lua/src/loadlib.c	32;"	d	file:
LUA_POF	lua/src/loadlib.c	83;"	d	file:
LUA_PROGNAME	lua/src/lua.c	29;"	d	file:
LUA_PROMPT	lua/src/lua.c	24;"	d	file:
LUA_PROMPT2	lua/src/lua.c	25;"	d	file:
LUA_QL	lua/src/luaconf.h	749;"	d
LUA_QS	lua/src/luaconf.h	750;"	d
LUA_REFNIL	lua/src/lauxlib.h	70;"	d
LUA_REGISTRYINDEX	lua/src/lua.h	42;"	d
LUA_RELEASE	lua/src/lua.h	25;"	d
LUA_RIDX_GLOBALS	lua/src/lua.h	84;"	d
LUA_RIDX_LAST	lua/src/lua.h	85;"	d
LUA_RIDX_MAINTHREAD	lua/src/lua.h	83;"	d
LUA_ROOT	lua/src/luaconf.h	191;"	d
LUA_SHRDIR	lua/src/luaconf.h	178;"	d
LUA_SIGNATURE	lua/src/lua.h	31;"	d
LUA_STRFTIMEOPTIONS	lua/src/loslib.c	45;"	d	file:
LUA_STRFTIMEOPTIONS	lua/src/loslib.c	47;"	d	file:
LUA_STRFTIMEOPTIONS	lua/src/loslib.c	49;"	d	file:
LUA_STRLIBNAME	lua/src/lualib.h	29;"	d
LUA_T	lua/src/Makefile	/^LUA_T=	lua$/;"	m
LUA_TABLIBNAME	lua/src/lualib.h	20;"	d
LUA_TBOOLEAN	lua/src/lua.h	65;"	d
LUA_TCCL	lua/src/lobject.h	49;"	d
LUA_TDEADKEY	lua/src/lobject.h	23;"	d
LUA_TFUNCTION	lua/src/lua.h	70;"	d
LUA_TLCF	lua/src/lobject.h	48;"	d
LUA_TLCL	lua/src/lobject.h	47;"	d
LUA_TLIGHTUSERDATA	lua/src/lua.h	66;"	d
LUA_TLNGSTR	lua/src/lobject.h	54;"	d
LUA_TMPNAMBUFSIZE	lua/src/loslib.c	115;"	d	file:
LUA_TMPNAMBUFSIZE	lua/src/loslib.c	130;"	d	file:
LUA_TMPNAMTEMPLATE	lua/src/loslib.c	118;"	d	file:
LUA_TNIL	lua/src/lua.h	64;"	d
LUA_TNONE	lua/src/lua.h	62;"	d
LUA_TNUMBER	lua/src/lua.h	67;"	d
LUA_TNUMFLT	lua/src/lobject.h	58;"	d
LUA_TNUMINT	lua/src/lobject.h	59;"	d
LUA_TOTALTAGS	lua/src/lobject.h	28;"	d
LUA_TPROTO	lua/src/lobject.h	22;"	d
LUA_TSHRSTR	lua/src/lobject.h	53;"	d
LUA_TSTRING	lua/src/lua.h	68;"	d
LUA_TTABLE	lua/src/lua.h	69;"	d
LUA_TTHREAD	lua/src/lua.h	72;"	d
LUA_TUSERDATA	lua/src/lua.h	71;"	d
LUA_UNSIGNED	lua/src/luaconf.h	522;"	d
LUA_USE_C89	lua/src/luaconf.h	57;"	d
LUA_USE_CTYPE	lua/src/lctype.h	23;"	d
LUA_USE_CTYPE	lua/src/lctype.h	26;"	d
LUA_USE_DLOPEN	lua/src/luaconf.h	63;"	d
LUA_USE_DLOPEN	lua/src/luaconf.h	70;"	d
LUA_USE_POSIX	lua/src/luaconf.h	62;"	d
LUA_USE_POSIX	lua/src/luaconf.h	69;"	d
LUA_USE_READLINE	lua/src/luaconf.h	64;"	d
LUA_USE_READLINE	lua/src/luaconf.h	71;"	d
LUA_USE_WINDOWS	lua/src/luaconf.h	51;"	d
LUA_UTF8LIBNAME	lua/src/lualib.h	32;"	d
LUA_VDIR	lua/src/luaconf.h	170;"	d
LUA_VERSION	lua/src/lua.h	24;"	d
LUA_VERSION_MAJOR	lua/src/lua.h	19;"	d
LUA_VERSION_MINOR	lua/src/lua.h	20;"	d
LUA_VERSION_NUM	lfs/src/lfs.c	68;"	d	file:
LUA_VERSION_NUM	lua/src/lua.h	21;"	d
LUA_VERSION_RELEASE	lua/src/lua.h	22;"	d
LUA_YIELD	lua/src/lua.h	48;"	d
LX	lua/src/lstate.c	/^typedef struct LX {$/;"	s	file:
LX	lua/src/lstate.c	/^} LX;$/;"	t	typeref:struct:LX	file:
L_ESC	lua/src/lstrlib.c	238;"	d	file:
L_MAXDATEFIELD	lua/src/loslib.c	236;"	d	file:
L_MAXLENNUM	lua/src/liolib.c	379;"	d	file:
L_MAXLENNUM	lua/src/lobject.c	248;"	d	file:
L_MODEEXT	lua/src/liolib.c	36;"	d	file:
L_NBFD	lua/src/lstrlib.c	827;"	d	file:
L_RANDMAX	lua/src/lmathlib.c	30;"	d	file:
L_RANDMAX	lua/src/lmathlib.c	34;"	d	file:
L_STRFTIMEC89	lua/src/loslib.c	34;"	d	file:
L_STRFTIMEC99	lua/src/loslib.c	37;"	d	file:
L_STRFTIMEWIN	lua/src/loslib.c	41;"	d	file:
L_Umaxalign	lua/src/llimits.h	/^typedef LUAI_USER_ALIGNMENT_T L_Umaxalign;$/;"	t
L_Umaxalign	lua/src/llimits.h	/^} L_Umaxalign;$/;"	t	typeref:union:__anon22
Labeldesc	lua/src/lparser.h	/^typedef struct Labeldesc {$/;"	s
Labeldesc	lua/src/lparser.h	/^} Labeldesc;$/;"	t	typeref:struct:Labeldesc
Labellist	lua/src/lparser.h	/^typedef struct Labellist {$/;"	s
Labellist	lua/src/lparser.h	/^} Labellist;$/;"	t	typeref:struct:Labellist
LexState	lua/src/llex.h	/^typedef struct LexState {$/;"	s
LexState	lua/src/llex.h	/^} LexState;$/;"	t	typeref:struct:LexState
LoadBlock	lua/src/lundump.c	/^static void LoadBlock (LoadState *S, void *b, size_t size) {$/;"	f	file:
LoadByte	lua/src/lundump.c	/^static lu_byte LoadByte (LoadState *S) {$/;"	f	file:
LoadCode	lua/src/lundump.c	/^static void LoadCode (LoadState *S, Proto *f) {$/;"	f	file:
LoadConstants	lua/src/lundump.c	/^static void LoadConstants (LoadState *S, Proto *f) {$/;"	f	file:
LoadDebug	lua/src/lundump.c	/^static void LoadDebug (LoadState *S, Proto *f) {$/;"	f	file:
LoadF	lua/src/lauxlib.c	/^typedef struct LoadF {$/;"	s	file:
LoadF	lua/src/lauxlib.c	/^} LoadF;$/;"	t	typeref:struct:LoadF	file:
LoadFunction	lua/src/lundump.c	/^static void LoadFunction (LoadState *S, Proto *f, TString *psource) {$/;"	f	file:
LoadInt	lua/src/lundump.c	/^static int LoadInt (LoadState *S) {$/;"	f	file:
LoadInteger	lua/src/lundump.c	/^static lua_Integer LoadInteger (LoadState *S) {$/;"	f	file:
LoadNumber	lua/src/lundump.c	/^static lua_Number LoadNumber (LoadState *S) {$/;"	f	file:
LoadProtos	lua/src/lundump.c	/^static void LoadProtos (LoadState *S, Proto *f) {$/;"	f	file:
LoadS	lua/src/lauxlib.c	/^typedef struct LoadS {$/;"	s	file:
LoadS	lua/src/lauxlib.c	/^} LoadS;$/;"	t	typeref:struct:LoadS	file:
LoadState	lua/src/lundump.c	/^} LoadState;$/;"	t	typeref:struct:__anon4	file:
LoadString	lua/src/lundump.c	/^static TString *LoadString (LoadState *S) {$/;"	f	file:
LoadUpvalues	lua/src/lundump.c	/^static void LoadUpvalues (LoadState *S, Proto *f) {$/;"	f	file:
LoadVar	lua/src/lundump.c	57;"	d	file:
LoadVector	lua/src/lundump.c	49;"	d	file:
LocVar	lua/src/lobject.h	/^typedef struct LocVar {$/;"	s
LocVar	lua/src/lobject.h	/^} LocVar;$/;"	t	typeref:struct:LocVar
MASK	lua/src/lctype.h	46;"	d
MASK0	lua/src/lopcodes.h	83;"	d
MASK1	lua/src/lopcodes.h	80;"	d
MAXABITS	lua/src/ltable.c	46;"	d	file:
MAXALIGN	lua/src/lstrlib.c	1134;"	d	file:
MAXARGLINE	lua/src/liolib.c	331;"	d	file:
MAXARG_A	lua/src/lopcodes.h	74;"	d
MAXARG_Ax	lua/src/lopcodes.h	68;"	d
MAXARG_Ax	lua/src/lopcodes.h	70;"	d
MAXARG_B	lua/src/lopcodes.h	75;"	d
MAXARG_Bx	lua/src/lopcodes.h	60;"	d
MAXARG_Bx	lua/src/lopcodes.h	63;"	d
MAXARG_C	lua/src/lopcodes.h	76;"	d
MAXARG_sBx	lua/src/lopcodes.h	61;"	d
MAXARG_sBx	lua/src/lopcodes.h	64;"	d
MAXASIZE	lua/src/ltable.c	47;"	d	file:
MAXBY10	lua/src/lobject.c	296;"	d	file:
MAXCCALLS	lua/src/lstrlib.c	234;"	d	file:
MAXHBITS	lua/src/ltable.c	55;"	d	file:
MAXINDEXRK	lua/src/lopcodes.h	142;"	d
MAXINTSIZE	lua/src/lstrlib.c	1109;"	d	file:
MAXLASTD	lua/src/lobject.c	297;"	d	file:
MAXNUMBER2STR	lua/src/lobject.c	365;"	d	file:
MAXREGS	lua/src/lcode.c	33;"	d	file:
MAXSIGDIG	lua/src/lobject.c	187;"	d	file:
MAXSIZE	lua/src/lstrlib.c	48;"	d	file:
MAXTAGLOOP	lua/src/lvm.c	35;"	d	file:
MAXUNICODE	lua/src/lutf8lib.c	23;"	d	file:
MAXUPVAL	lua/src/lfunc.h	29;"	d
MAXVARS	lua/src/lparser.c	34;"	d	file:
MAX_FORMAT	lua/src/lstrlib.c	904;"	d	file:
MAX_INT	lua/src/llimits.h	51;"	d
MAX_ITEM	lua/src/lstrlib.c	895;"	d	file:
MAX_LMEM	lua/src/llimits.h	48;"	d
MAX_LUMEM	lua/src/llimits.h	46;"	d
MAX_SIZE	lua/src/llimits.h	42;"	d
MAX_SIZET	lua/src/llimits.h	39;"	d
MAX_SIZET	lua/src/lstrlib.c	46;"	d	file:
MC	lua/src/lstrlib.c	1115;"	d	file:
MEMERRMSG	lua/src/lstring.c	25;"	d	file:
MINSIZEARRAY	lua/src/lmem.c	45;"	d	file:
MINSTRTABSIZE	lua/src/llimits.h	188;"	d
MKDIR	lua/Makefile	/^MKDIR= mkdir -p$/;"	m
MYCFLAGS	lua/src/Makefile	/^MYCFLAGS=$/;"	m
MYINT	lua/src/lundump.h	21;"	d
MYK	lua/src/luac.c	286;"	d	file:
MYLDFLAGS	lua/src/Makefile	/^MYLDFLAGS=$/;"	m
MYLIBS	lua/src/Makefile	/^MYLIBS=$/;"	m
MYOBJS	lua/src/Makefile	/^MYOBJS=$/;"	m
MatchState	lua/src/lstrlib.c	/^typedef struct MatchState {$/;"	s	file:
MatchState	lua/src/lstrlib.c	/^} MatchState;$/;"	t	typeref:struct:MatchState	file:
Mbuffer	lua/src/lzio.h	/^typedef struct Mbuffer {$/;"	s
Mbuffer	lua/src/lzio.h	/^} Mbuffer;$/;"	t	typeref:struct:Mbuffer
NB	lua/src/lstrlib.c	1112;"	d	file:
NBITS	lua/src/lvm.c	588;"	d	file:
NBM	lua/src/lvm.c	47;"	d	file:
NILCONSTANT	lua/src/lobject.h	120;"	d
NONVALIDVALUE	lua/src/lapi.c	40;"	d	file:
NO_JUMP	lua/src/lcode.h	20;"	d
NO_REG	lua/src/lopcodes.h	151;"	d
NUM_OPCODES	lua/src/lopcodes.h	235;"	d
NUM_RESERVED	lua/src/llex.h	40;"	d
Node	lua/src/lobject.h	/^typedef struct Node {$/;"	s
Node	lua/src/lobject.h	/^} Node;$/;"	t	typeref:struct:Node
OBJS	lfs/Makefile	/^OBJS= src\/$T.o$/;"	m
OPR_ADD	lua/src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_AND	lua/src/lcode.h	/^  OPR_AND, OPR_OR,$/;"	e	enum:BinOpr
OPR_BAND	lua/src/lcode.h	/^  OPR_BAND, OPR_BOR, OPR_BXOR,$/;"	e	enum:BinOpr
OPR_BNOT	lua/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_BOR	lua/src/lcode.h	/^  OPR_BAND, OPR_BOR, OPR_BXOR,$/;"	e	enum:BinOpr
OPR_BXOR	lua/src/lcode.h	/^  OPR_BAND, OPR_BOR, OPR_BXOR,$/;"	e	enum:BinOpr
OPR_CONCAT	lua/src/lcode.h	/^  OPR_CONCAT,$/;"	e	enum:BinOpr
OPR_DIV	lua/src/lcode.h	/^  OPR_DIV,$/;"	e	enum:BinOpr
OPR_EQ	lua/src/lcode.h	/^  OPR_EQ, OPR_LT, OPR_LE,$/;"	e	enum:BinOpr
OPR_GE	lua/src/lcode.h	/^  OPR_NE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_GT	lua/src/lcode.h	/^  OPR_NE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_IDIV	lua/src/lcode.h	/^  OPR_IDIV,$/;"	e	enum:BinOpr
OPR_LE	lua/src/lcode.h	/^  OPR_EQ, OPR_LT, OPR_LE,$/;"	e	enum:BinOpr
OPR_LEN	lua/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_LT	lua/src/lcode.h	/^  OPR_EQ, OPR_LT, OPR_LE,$/;"	e	enum:BinOpr
OPR_MINUS	lua/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_MOD	lua/src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_MUL	lua/src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_NE	lua/src/lcode.h	/^  OPR_NE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_NOBINOPR	lua/src/lcode.h	/^  OPR_NOBINOPR$/;"	e	enum:BinOpr
OPR_NOT	lua/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_NOUNOPR	lua/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_OR	lua/src/lcode.h	/^  OPR_AND, OPR_OR,$/;"	e	enum:BinOpr
OPR_POW	lua/src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_SHL	lua/src/lcode.h	/^  OPR_SHL, OPR_SHR,$/;"	e	enum:BinOpr
OPR_SHR	lua/src/lcode.h	/^  OPR_SHL, OPR_SHR,$/;"	e	enum:BinOpr
OPR_SUB	lua/src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OP_ADD	lua/src/lopcodes.h	/^OP_ADD,\/*	A B C	R(A) := RK(B) + RK(C)				*\/$/;"	e	enum:__anon18
OP_BAND	lua/src/lopcodes.h	/^OP_BAND,\/*	A B C	R(A) := RK(B) & RK(C)				*\/$/;"	e	enum:__anon18
OP_BNOT	lua/src/lopcodes.h	/^OP_BNOT,\/*	A B	R(A) := ~R(B)					*\/$/;"	e	enum:__anon18
OP_BOR	lua/src/lopcodes.h	/^OP_BOR,\/*	A B C	R(A) := RK(B) | RK(C)				*\/$/;"	e	enum:__anon18
OP_BXOR	lua/src/lopcodes.h	/^OP_BXOR,\/*	A B C	R(A) := RK(B) ~ RK(C)				*\/$/;"	e	enum:__anon18
OP_CALL	lua/src/lopcodes.h	/^OP_CALL,\/*	A B C	R(A), ... ,R(A+C-2) := R(A)(R(A+1), ... ,R(A+B-1)) *\/$/;"	e	enum:__anon18
OP_CLOSURE	lua/src/lopcodes.h	/^OP_CLOSURE,\/*	A Bx	R(A) := closure(KPROTO[Bx])			*\/$/;"	e	enum:__anon18
OP_CONCAT	lua/src/lopcodes.h	/^OP_CONCAT,\/*	A B C	R(A) := R(B).. ... ..R(C)			*\/$/;"	e	enum:__anon18
OP_DIV	lua/src/lopcodes.h	/^OP_DIV,\/*	A B C	R(A) := RK(B) \/ RK(C)				*\/$/;"	e	enum:__anon18
OP_EQ	lua/src/lopcodes.h	/^OP_EQ,\/*	A B C	if ((RK(B) == RK(C)) ~= A) then pc++		*\/$/;"	e	enum:__anon18
OP_EXTRAARG	lua/src/lopcodes.h	/^OP_EXTRAARG\/*	Ax	extra (larger) argument for previous opcode	*\/$/;"	e	enum:__anon18
OP_FORLOOP	lua/src/lopcodes.h	/^OP_FORLOOP,\/*	A sBx	R(A)+=R(A+2);$/;"	e	enum:__anon18
OP_FORPREP	lua/src/lopcodes.h	/^OP_FORPREP,\/*	A sBx	R(A)-=R(A+2); pc+=sBx				*\/$/;"	e	enum:__anon18
OP_GETTABLE	lua/src/lopcodes.h	/^OP_GETTABLE,\/*	A B C	R(A) := R(B)[RK(C)]				*\/$/;"	e	enum:__anon18
OP_GETTABUP	lua/src/lopcodes.h	/^OP_GETTABUP,\/*	A B C	R(A) := UpValue[B][RK(C)]			*\/$/;"	e	enum:__anon18
OP_GETUPVAL	lua/src/lopcodes.h	/^OP_GETUPVAL,\/*	A B	R(A) := UpValue[B]				*\/$/;"	e	enum:__anon18
OP_IDIV	lua/src/lopcodes.h	/^OP_IDIV,\/*	A B C	R(A) := RK(B) \/\/ RK(C)				*\/$/;"	e	enum:__anon18
OP_JMP	lua/src/lopcodes.h	/^OP_JMP,\/*	A sBx	pc+=sBx; if (A) close all upvalues >= R(A - 1)	*\/$/;"	e	enum:__anon18
OP_LE	lua/src/lopcodes.h	/^OP_LE,\/*	A B C	if ((RK(B) <= RK(C)) ~= A) then pc++		*\/$/;"	e	enum:__anon18
OP_LEN	lua/src/lopcodes.h	/^OP_LEN,\/*	A B	R(A) := length of R(B)				*\/$/;"	e	enum:__anon18
OP_LOADBOOL	lua/src/lopcodes.h	/^OP_LOADBOOL,\/*	A B C	R(A) := (Bool)B; if (C) pc++			*\/$/;"	e	enum:__anon18
OP_LOADK	lua/src/lopcodes.h	/^OP_LOADK,\/*	A Bx	R(A) := Kst(Bx)					*\/$/;"	e	enum:__anon18
OP_LOADKX	lua/src/lopcodes.h	/^OP_LOADKX,\/*	A 	R(A) := Kst(extra arg)				*\/$/;"	e	enum:__anon18
OP_LOADNIL	lua/src/lopcodes.h	/^OP_LOADNIL,\/*	A B	R(A), R(A+1), ..., R(A+B) := nil		*\/$/;"	e	enum:__anon18
OP_LT	lua/src/lopcodes.h	/^OP_LT,\/*	A B C	if ((RK(B) <  RK(C)) ~= A) then pc++		*\/$/;"	e	enum:__anon18
OP_MOD	lua/src/lopcodes.h	/^OP_MOD,\/*	A B C	R(A) := RK(B) % RK(C)				*\/$/;"	e	enum:__anon18
OP_MOVE	lua/src/lopcodes.h	/^OP_MOVE,\/*	A B	R(A) := R(B)					*\/$/;"	e	enum:__anon18
OP_MUL	lua/src/lopcodes.h	/^OP_MUL,\/*	A B C	R(A) := RK(B) * RK(C)				*\/$/;"	e	enum:__anon18
OP_NEWTABLE	lua/src/lopcodes.h	/^OP_NEWTABLE,\/*	A B C	R(A) := {} (size = B,C)				*\/$/;"	e	enum:__anon18
OP_NOT	lua/src/lopcodes.h	/^OP_NOT,\/*	A B	R(A) := not R(B)				*\/$/;"	e	enum:__anon18
OP_POW	lua/src/lopcodes.h	/^OP_POW,\/*	A B C	R(A) := RK(B) ^ RK(C)				*\/$/;"	e	enum:__anon18
OP_RETURN	lua/src/lopcodes.h	/^OP_RETURN,\/*	A B	return R(A), ... ,R(A+B-2)	(see note)	*\/$/;"	e	enum:__anon18
OP_SELF	lua/src/lopcodes.h	/^OP_SELF,\/*	A B C	R(A+1) := R(B); R(A) := R(B)[RK(C)]		*\/$/;"	e	enum:__anon18
OP_SETLIST	lua/src/lopcodes.h	/^OP_SETLIST,\/*	A B C	R(A)[(C-1)*FPF+i] := R(A+i), 1 <= i <= B	*\/$/;"	e	enum:__anon18
OP_SETTABLE	lua/src/lopcodes.h	/^OP_SETTABLE,\/*	A B C	R(A)[RK(B)] := RK(C)				*\/$/;"	e	enum:__anon18
OP_SETTABUP	lua/src/lopcodes.h	/^OP_SETTABUP,\/*	A B C	UpValue[A][RK(B)] := RK(C)			*\/$/;"	e	enum:__anon18
OP_SETUPVAL	lua/src/lopcodes.h	/^OP_SETUPVAL,\/*	A B	UpValue[B] := R(A)				*\/$/;"	e	enum:__anon18
OP_SHL	lua/src/lopcodes.h	/^OP_SHL,\/*	A B C	R(A) := RK(B) << RK(C)				*\/$/;"	e	enum:__anon18
OP_SHR	lua/src/lopcodes.h	/^OP_SHR,\/*	A B C	R(A) := RK(B) >> RK(C)				*\/$/;"	e	enum:__anon18
OP_SUB	lua/src/lopcodes.h	/^OP_SUB,\/*	A B C	R(A) := RK(B) - RK(C)				*\/$/;"	e	enum:__anon18
OP_TAILCALL	lua/src/lopcodes.h	/^OP_TAILCALL,\/*	A B C	return R(A)(R(A+1), ... ,R(A+B-1))		*\/$/;"	e	enum:__anon18
OP_TEST	lua/src/lopcodes.h	/^OP_TEST,\/*	A C	if not (R(A) <=> C) then pc++			*\/$/;"	e	enum:__anon18
OP_TESTSET	lua/src/lopcodes.h	/^OP_TESTSET,\/*	A B C	if (R(B) <=> C) then R(A) := R(B) else pc++	*\/$/;"	e	enum:__anon18
OP_TFORCALL	lua/src/lopcodes.h	/^OP_TFORCALL,\/*	A C	R(A+3), ... ,R(A+2+C) := R(A)(R(A+1), R(A+2));	*\/$/;"	e	enum:__anon18
OP_TFORLOOP	lua/src/lopcodes.h	/^OP_TFORLOOP,\/*	A sBx	if R(A+1) ~= nil then { R(A)=R(A+1); pc += sBx }*\/$/;"	e	enum:__anon18
OP_UNM	lua/src/lopcodes.h	/^OP_UNM,\/*	A B	R(A) := -R(B)					*\/$/;"	e	enum:__anon18
OP_VARARG	lua/src/lopcodes.h	/^OP_VARARG,\/*	A B	R(A), R(A+1), ..., R(A+B-2) = vararg		*\/$/;"	e	enum:__anon18
OUTPUT	lua/src/luac.c	29;"	d	file:
OpArgK	lua/src/lopcodes.h	/^  OpArgK   \/* argument is a constant or register\/constant *\/$/;"	e	enum:OpArgMask
OpArgMask	lua/src/lopcodes.h	/^enum OpArgMask {$/;"	g
OpArgN	lua/src/lopcodes.h	/^  OpArgN,  \/* argument is not used *\/$/;"	e	enum:OpArgMask
OpArgR	lua/src/lopcodes.h	/^  OpArgR,  \/* argument is a register or a jump offset *\/$/;"	e	enum:OpArgMask
OpArgU	lua/src/lopcodes.h	/^  OpArgU,  \/* argument is used *\/$/;"	e	enum:OpArgMask
OpCode	lua/src/lopcodes.h	/^} OpCode;$/;"	t	typeref:enum:__anon18
OpMode	lua/src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx};  \/* basic instruction format *\/$/;"	g
Output	lua/src/luac.c	/^static char Output[]={ OUTPUT };	\/* default output file name *\/$/;"	v	file:
PATH_ITEM_MAX	lsh.h	19;"	d
PATH_MAX	lsh.h	15;"	d
PATH_MAX	lsh.h	16;"	d
PAUSEADJ	lua/src/lgc.c	59;"	d	file:
PI	lua/src/lmathlib.c	22;"	d	file:
PI	lua/src/lmathlib.c	23;"	d	file:
PINYIN_LEN	han2pinyin.c	92;"	d	file:
PINYIN_TBL_LEN	word.h	25579;"	d
PLAT	lua/Makefile	/^PLAT= none$/;"	m
PLAT	lua/src/Makefile	/^PLAT= none$/;"	m
PLATS	lua/Makefile	/^PLATS= aix bsd c89 freebsd generic linux macosx mingw posix solaris$/;"	m
PLATS	lua/src/Makefile	/^PLATS= aix bsd c89 freebsd generic linux macosx mingw posix solaris$/;"	m
POS	lua/src/lobject.c	482;"	d	file:
POS_A	lua/src/lopcodes.h	47;"	d
POS_Ax	lua/src/lopcodes.h	51;"	d
POS_B	lua/src/lopcodes.h	49;"	d
POS_Bx	lua/src/lopcodes.h	50;"	d
POS_C	lua/src/lopcodes.h	48;"	d
POS_OP	lua/src/lopcodes.h	46;"	d
PRE	lua/src/lobject.c	481;"	d	file:
PRINTBIT	lua/src/lctype.h	41;"	d
PROGNAME	lua/src/luac.c	28;"	d	file:
Pfunc	lua/src/ldo.h	/^typedef void (*Pfunc) (lua_State *L, void *ud);$/;"	t
PrintCode	lua/src/luac.c	/^static void PrintCode(const Proto* f)$/;"	f	file:
PrintConstant	lua/src/luac.c	/^static void PrintConstant(const Proto* f, int i)$/;"	f	file:
PrintDebug	lua/src/luac.c	/^static void PrintDebug(const Proto* f)$/;"	f	file:
PrintFunction	lua/src/luac.c	/^static void PrintFunction(const Proto* f, int full)$/;"	f	file:
PrintHeader	lua/src/luac.c	/^static void PrintHeader(const Proto* f)$/;"	f	file:
PrintString	lua/src/luac.c	/^static void PrintString(const TString* ts)$/;"	f	file:
Protect	lua/src/lvm.c	747;"	d	file:
Proto	lua/src/lobject.h	/^typedef struct Proto {$/;"	s
Proto	lua/src/lobject.h	/^} Proto;$/;"	t	typeref:struct:Proto
R	lua/Makefile	/^R= $V.3$/;"	m
RA	lua/src/lvm.c	728;"	d	file:
RANLIB	lua/src/Makefile	/^RANLIB= ranlib$/;"	m
RANLIMIT	lua/src/ltablib.c	274;"	d	file:
RB	lua/src/lvm.c	729;"	d	file:
RC	lua/src/lvm.c	730;"	d	file:
RESERVED	lua/src/llex.h	/^enum RESERVED {$/;"	g
RESERVEDSLOT	lua/src/lbaselib.c	308;"	d	file:
RETS	lua/src/lobject.c	480;"	d	file:
RKASK	lua/src/lopcodes.h	145;"	d
RKB	lua/src/lvm.c	731;"	d	file:
RKC	lua/src/lvm.c	733;"	d	file:
RM	lua/Makefile	/^RM= rm -f$/;"	m
RM	lua/src/Makefile	/^RM= rm -f$/;"	m
RN	lua/src/liolib.c	/^} RN;$/;"	t	typeref:struct:__anon25	file:
S	lua/src/luac.c	393;"	d	file:
SEQ	vi.c	383;"	d	file:
SETARG_A	lua/src/lopcodes.h	98;"	d
SETARG_Ax	lua/src/lopcodes.h	110;"	d
SETARG_B	lua/src/lopcodes.h	101;"	d
SETARG_Bx	lua/src/lopcodes.h	107;"	d
SETARG_C	lua/src/lopcodes.h	104;"	d
SETARG_sBx	lua/src/lopcodes.h	113;"	d
SET_OPCODE	lua/src/lopcodes.h	90;"	d
SIZELENMOD	lua/src/lstrlib.c	818;"	d	file:
SIZETIMEFMT	lua/src/loslib.c	279;"	d	file:
SIZE_A	lua/src/lopcodes.h	41;"	d
SIZE_Ax	lua/src/lopcodes.h	42;"	d
SIZE_B	lua/src/lopcodes.h	39;"	d
SIZE_Bx	lua/src/lopcodes.h	40;"	d
SIZE_C	lua/src/lopcodes.h	38;"	d
SIZE_OP	lua/src/lopcodes.h	44;"	d
SPACEBIT	lua/src/lctype.h	42;"	d
SPACECHARS	lua/src/lbaselib.c	46;"	d	file:
SPECIALS	lua/src/lstrlib.c	239;"	d	file:
SParser	lua/src/ldo.c	/^struct SParser {  \/* data to 'f_parser' *\/$/;"	s	file:
SRCS	lfs/Makefile	/^SRCS= src\/$T.c$/;"	m
SS	lua/src/luac.c	392;"	d	file:
STAT_FUNC	lfs/src/lfs.c	125;"	d	file:
STAT_FUNC	lfs/src/lfs.c	132;"	d	file:
STAT_STRUCT	lfs/src/lfs.c	120;"	d	file:
STAT_STRUCT	lfs/src/lfs.c	123;"	d	file:
STAT_STRUCT	lfs/src/lfs.c	131;"	d	file:
STEPMULADJ	lua/src/lgc.c	52;"	d	file:
STRCACHE_M	lua/src/llimits.h	199;"	d
STRCACHE_N	lua/src/llimits.h	198;"	d
STR_CR	vi.h	27;"	d
STR_EOL	vi.h	14;"	d
STR_ESC	vi.h	30;"	d
STR_ESC_CR	vi.h	28;"	d
STR_QUOT	vi.h	16;"	d
SYSCFLAGS	lua/src/Makefile	/^SYSCFLAGS=$/;"	m
SYSLDFLAGS	lua/src/Makefile	/^SYSLDFLAGS=$/;"	m
SYSLIBS	lua/src/Makefile	/^SYSLIBS=$/;"	m
SZINT	lua/src/lstrlib.c	1118;"	d	file:
S_ISBLK	lfs/src/lfs.c	629;"	d	file:
S_ISCHR	lfs/src/lfs.c	626;"	d	file:
S_ISDIR	lfs/src/lfs.c	611;"	d	file:
S_ISFIFO	lfs/src/lfs.c	623;"	d	file:
S_ISLNK	lfs/src/lfs.c	617;"	d	file:
S_ISREG	lfs/src/lfs.c	614;"	d	file:
S_ISSOCK	lfs/src/lfs.c	620;"	d	file:
SemInfo	lua/src/llex.h	/^} SemInfo;  \/* semantics information *\/$/;"	t	typeref:union:__anon5
StkId	lua/src/lobject.h	/^typedef TValue *StkId;  \/* index to stack elements *\/$/;"	t
T	lfs/Makefile	/^T= lfs$/;"	m
TAB_L	lua/src/ltablib.c	29;"	d	file:
TAB_R	lua/src/ltablib.c	27;"	d	file:
TAB_RW	lua/src/ltablib.c	30;"	d	file:
TAB_W	lua/src/ltablib.c	28;"	d	file:
TK_AND	lua/src/llex.h	/^  TK_AND = FIRST_RESERVED, TK_BREAK,$/;"	e	enum:RESERVED
TK_BREAK	lua/src/llex.h	/^  TK_AND = FIRST_RESERVED, TK_BREAK,$/;"	e	enum:RESERVED
TK_CONCAT	lua/src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_DBCOLON	lua/src/llex.h	/^  TK_DBCOLON, TK_EOS,$/;"	e	enum:RESERVED
TK_DO	lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_DOTS	lua/src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_ELSE	lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_ELSEIF	lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_END	lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_EOS	lua/src/llex.h	/^  TK_DBCOLON, TK_EOS,$/;"	e	enum:RESERVED
TK_EQ	lua/src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_FALSE	lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_FLT	lua/src/llex.h	/^  TK_FLT, TK_INT, TK_NAME, TK_STRING$/;"	e	enum:RESERVED
TK_FOR	lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_FUNCTION	lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_GE	lua/src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_GOTO	lua/src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_IDIV	lua/src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_IF	lua/src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_IN	lua/src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_INT	lua/src/llex.h	/^  TK_FLT, TK_INT, TK_NAME, TK_STRING$/;"	e	enum:RESERVED
TK_LE	lua/src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_LOCAL	lua/src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_NAME	lua/src/llex.h	/^  TK_FLT, TK_INT, TK_NAME, TK_STRING$/;"	e	enum:RESERVED
TK_NE	lua/src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_NIL	lua/src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_NOT	lua/src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_OR	lua/src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_REPEAT	lua/src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_RETURN	lua/src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_SHL	lua/src/llex.h	/^  TK_SHL, TK_SHR,$/;"	e	enum:RESERVED
TK_SHR	lua/src/llex.h	/^  TK_SHL, TK_SHR,$/;"	e	enum:RESERVED
TK_STRING	lua/src/llex.h	/^  TK_FLT, TK_INT, TK_NAME, TK_STRING$/;"	e	enum:RESERVED
TK_THEN	lua/src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_TRUE	lua/src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_UNTIL	lua/src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_WHILE	lua/src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TKey	lua/src/lobject.h	/^typedef union TKey {$/;"	u
TKey	lua/src/lobject.h	/^} TKey;$/;"	t	typeref:union:TKey
TMS	lua/src/ltm.h	/^} TMS;$/;"	t	typeref:enum:__anon9
TM_ADD	lua/src/ltm.h	/^  TM_ADD,$/;"	e	enum:__anon9
TM_BAND	lua/src/ltm.h	/^  TM_BAND,$/;"	e	enum:__anon9
TM_BNOT	lua/src/ltm.h	/^  TM_BNOT,$/;"	e	enum:__anon9
TM_BOR	lua/src/ltm.h	/^  TM_BOR,$/;"	e	enum:__anon9
TM_BXOR	lua/src/ltm.h	/^  TM_BXOR,$/;"	e	enum:__anon9
TM_CALL	lua/src/ltm.h	/^  TM_CALL,$/;"	e	enum:__anon9
TM_CONCAT	lua/src/ltm.h	/^  TM_CONCAT,$/;"	e	enum:__anon9
TM_DIV	lua/src/ltm.h	/^  TM_DIV,$/;"	e	enum:__anon9
TM_EQ	lua/src/ltm.h	/^  TM_EQ,  \/* last tag method with fast access *\/$/;"	e	enum:__anon9
TM_GC	lua/src/ltm.h	/^  TM_GC,$/;"	e	enum:__anon9
TM_IDIV	lua/src/ltm.h	/^  TM_IDIV,$/;"	e	enum:__anon9
TM_INDEX	lua/src/ltm.h	/^  TM_INDEX,$/;"	e	enum:__anon9
TM_LE	lua/src/ltm.h	/^  TM_LE,$/;"	e	enum:__anon9
TM_LEN	lua/src/ltm.h	/^  TM_LEN,$/;"	e	enum:__anon9
TM_LT	lua/src/ltm.h	/^  TM_LT,$/;"	e	enum:__anon9
TM_MOD	lua/src/ltm.h	/^  TM_MOD,$/;"	e	enum:__anon9
TM_MODE	lua/src/ltm.h	/^  TM_MODE,$/;"	e	enum:__anon9
TM_MUL	lua/src/ltm.h	/^  TM_MUL,$/;"	e	enum:__anon9
TM_N	lua/src/ltm.h	/^  TM_N		\/* number of elements in the enum *\/$/;"	e	enum:__anon9
TM_NEWINDEX	lua/src/ltm.h	/^  TM_NEWINDEX,$/;"	e	enum:__anon9
TM_POW	lua/src/ltm.h	/^  TM_POW,$/;"	e	enum:__anon9
TM_SHL	lua/src/ltm.h	/^  TM_SHL,$/;"	e	enum:__anon9
TM_SHR	lua/src/ltm.h	/^  TM_SHR,$/;"	e	enum:__anon9
TM_SUB	lua/src/ltm.h	/^  TM_SUB,$/;"	e	enum:__anon9
TM_UNM	lua/src/ltm.h	/^  TM_UNM,$/;"	e	enum:__anon9
TO_BIN	lua/Makefile	/^TO_BIN= lua luac$/;"	m
TO_INC	lua/Makefile	/^TO_INC= lua.h luaconf.h lualib.h lauxlib.h lua.hpp$/;"	m
TO_LIB	lua/Makefile	/^TO_LIB= liblua.a$/;"	m
TO_MAN	lua/Makefile	/^TO_MAN= lua.1 luac.1$/;"	m
TString	lua/src/lobject.h	/^typedef struct TString {$/;"	s
TString	lua/src/lobject.h	/^} TString;$/;"	t	typeref:struct:TString
TValue	lua/src/lobject.h	/^} TValue;$/;"	t	typeref:struct:lua_TValue
TValuefields	lua/src/lobject.h	/^    TValuefields;$/;"	m	struct:TKey::__anon8
TValuefields	lua/src/lobject.h	/^  TValuefields;$/;"	m	struct:lua_TValue
TValuefields	lua/src/lobject.h	110;"	d
Table	lua/src/lobject.h	/^typedef struct Table {$/;"	s
Table	lua/src/lobject.h	/^} Table;$/;"	t	typeref:struct:Table
Token	lua/src/llex.h	/^typedef struct Token {$/;"	s
Token	lua/src/llex.h	/^} Token;$/;"	t	typeref:struct:Token
UARRAY_LEN	han2pinyin.c	90;"	d	file:
UBox	lua/src/lauxlib.c	/^typedef struct UBox {$/;"	s	file:
UBox	lua/src/lauxlib.c	/^} UBox;$/;"	t	typeref:struct:UBox	file:
UNARY_PRIORITY	lua/src/lparser.c	1040;"	d	file:
UNUSED	lua/src/llimits.h	106;"	d
UPVALNAME	lua/src/luac.c	285;"	d	file:
UTF8BUFFSZ	lua/src/lobject.h	531;"	d
UTF8PATT	lua/src/lutf8lib.c	235;"	d	file:
UTF8_HASHTBL_LEN	word.h	24;"	d
UTF8_HASHTBL_LEN2	word.h	25;"	d
UTILS_H	utils.h	2;"	d
UTString	lua/src/lobject.h	/^typedef union UTString {$/;"	u
UTString	lua/src/lobject.h	/^} UTString;$/;"	t	typeref:union:UTString
UUdata	lua/src/lobject.h	/^typedef union UUdata {$/;"	u
UUdata	lua/src/lobject.h	/^} UUdata;$/;"	t	typeref:union:UUdata
Udata	lua/src/lobject.h	/^typedef struct Udata {$/;"	s
Udata	lua/src/lobject.h	/^} Udata;$/;"	t	typeref:struct:Udata
UnOpr	lua/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	g
UnOpr	lua/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	t	typeref:enum:UnOpr
UpVal	lua/src/lfunc.h	/^struct UpVal {$/;"	s
UpVal	lua/src/lobject.h	/^typedef struct UpVal UpVal;$/;"	t	typeref:struct:UpVal
Upvaldesc	lua/src/lobject.h	/^typedef struct Upvaldesc {$/;"	s
Upvaldesc	lua/src/lobject.h	/^} Upvaldesc;$/;"	t	typeref:struct:Upvaldesc
V	lua/Makefile	/^V= 5.3$/;"	m
VCALL	lua/src/lparser.h	/^  VCALL,  \/* expression is a function call; info = instruction pc *\/$/;"	e	enum:__anon13
VFALSE	lua/src/lparser.h	/^  VFALSE,  \/* constant false *\/$/;"	e	enum:__anon13
VIM_H	vim.h	2;"	d
VINDEXED	lua/src/lparser.h	/^  VINDEXED,  \/* indexed variable;$/;"	e	enum:__anon13
VI_A_LINES	vi.h	/^static void VI_A_LINES(struct vi *vi, int l, int lnum){$/;"	f
VI_CLEAR_FLAG	vi.h	95;"	d
VI_CURRL_END	vi.h	34;"	d
VI_CURRL_LEN	vi.h	35;"	d
VI_CURRL_LIMIT	vi.h	36;"	d
VI_CURRL_TAIL	vi.h	33;"	d
VI_CURR_LEN	vi.h	38;"	d
VI_CURR_LENR	vi.h	40;"	d
VI_CURR_LENr	vi.h	39;"	d
VI_CURR_OFFSET	vi.h	37;"	d
VI_DEL_LINES	vi.h	/^static void VI_DEL_LINES(struct vi *vi, int l, int lnum){$/;"	f
VI_FLAG	vi.h	97;"	d
VI_F_CURR	vi.h	80;"	d
VI_H	vi.h	2;"	d
VI_LINE_A_SAFE	vi.c	/^void VI_LINE_A_SAFE(struct vi *vi, int l, int  at, char *src, int srclen){$/;"	f
VI_LINE_I_SAFE	vi.c	/^void VI_LINE_I_SAFE(struct vi *vi, int l, int at, char *src, int srclen){$/;"	f
VI_LINE_MK	vi.c	/^void VI_LINE_MK(struct vi *vi, int l, char *src, int srclen){$/;"	f
VI_MK_FLAG	vi.h	98;"	d
VI_MOD_BUSY	vi.h	/^	VI_MOD_BUSY$/;"	e	enum:__anon29
VI_MOD_FREE	vi.h	/^	VI_MOD_FREE,$/;"	e	enum:__anon29
VI_REGEX_LEN	vi.h	151;"	d
VI_SET_FLAG	vi.h	94;"	d
VI_TEST_FLAG	vi.h	96;"	d
VI_YLINE_MAX	vi.h	81;"	d
VI_YLINE_MK	vi.c	/^void VI_YLINE_MK(struct vi *vi, int l, char *src, int srclen){$/;"	f
VJMP	lua/src/lparser.h	/^  VJMP,  \/* expression is a test\/comparison;$/;"	e	enum:__anon13
VK	lua/src/lparser.h	/^  VK,  \/* constant in 'k'; info = index of constant in 'k' *\/$/;"	e	enum:__anon13
VKFLT	lua/src/lparser.h	/^  VKFLT,  \/* floating constant; nval = numerical float value *\/$/;"	e	enum:__anon13
VKINT	lua/src/lparser.h	/^  VKINT,  \/* integer constant; nval = numerical integer value *\/$/;"	e	enum:__anon13
VLOCAL	lua/src/lparser.h	/^  VLOCAL,  \/* local variable; info = local register *\/$/;"	e	enum:__anon13
VNIL	lua/src/lparser.h	/^  VNIL,  \/* constant nil *\/$/;"	e	enum:__anon13
VNONRELOC	lua/src/lparser.h	/^  VNONRELOC,  \/* expression has its value in a fixed register;$/;"	e	enum:__anon13
VOID	lua/src/luac.c	224;"	d	file:
VRELOCABLE	lua/src/lparser.h	/^  VRELOCABLE,  \/* expression can put result in any register;$/;"	e	enum:__anon13
VTRUE	lua/src/lparser.h	/^  VTRUE,  \/* constant true *\/$/;"	e	enum:__anon13
VUPVAL	lua/src/lparser.h	/^  VUPVAL,  \/* upvalue variable; info = index of upvalue in 'upvalues' *\/$/;"	e	enum:__anon13
VVARARG	lua/src/lparser.h	/^  VVARARG  \/* vararg expression; info = instruction pc *\/$/;"	e	enum:__anon13
VVOID	lua/src/lparser.h	/^  VVOID,  \/* when 'expdesc' describes the last expression a list,$/;"	e	enum:__anon13
V_HEAD_LEN	vi.h	43;"	d
V_HEAD_OFFSET	vi.h	42;"	d
V_START_LEN	vi.h	47;"	d
V_START_OFFSET	vi.h	46;"	d
V_TAIL_LEN	vi.h	45;"	d
V_TAIL_OFFSET	vi.h	44;"	d
Value	lua/src/lobject.h	/^typedef union Value {$/;"	u
Value	lua/src/lobject.h	/^} Value;$/;"	t	typeref:union:Value
Vardesc	lua/src/lparser.h	/^typedef struct Vardesc {$/;"	s
Vardesc	lua/src/lparser.h	/^} Vardesc;$/;"	t	typeref:struct:Vardesc
WHITE0BIT	lua/src/lgc.h	78;"	d
WHITE1BIT	lua/src/lgc.h	79;"	d
WHITEBITS	lua/src/lgc.h	84;"	d
XDIGITBIT	lua/src/lctype.h	43;"	d
Z	lua/src/lundump.c	/^  ZIO *Z;$/;"	m	struct:__anon4	file:
ZIO	lua/src/lzio.h	/^typedef struct Zio ZIO;$/;"	t	typeref:struct:Zio
Zio	lua/src/lzio.h	/^struct Zio {$/;"	s
_ASSIGN_VATTR	lsh.h	34;"	d
_BSD_SOURCE	han2pinyin.c	8;"	d	file:
_BSD_SOURCE	lsh.c	13;"	d	file:
_CRT_SECURE_NO_WARNINGS	lua/src/lprefix.h	39;"	d
_DEFAULT_SOURCE	vi.c	1;"	d	file:
_FILE_OFFSET_BITS	lfs/src/lfs.c	25;"	d	file:
_FILE_OFFSET_BITS	lua/src/lprefix.h	27;"	d
_LARGEFILE64_SOURCE	lfs/src/lfs.c	33;"	d	file:
_LARGEFILE_SOURCE	lua/src/lprefix.h	26;"	d
_LARGE_FILES	lfs/src/lfs.c	27;"	d	file:
_O_BINARY	lfs/src/lfs.c	129;"	d	file:
_O_TEXT	lfs/src/lfs.c	128;"	d	file:
_XOPEN_SOURCE	lua/src/lprefix.h	17;"	d
_XOPEN_SOURCE	lua/src/lprefix.h	19;"	d
__ASSIGN_FATTR	lsh.h	32;"	d
__CC_N	utils.h	94;"	d
__CLEAR_STATE	vi.h	101;"	d
__DO_NOT_COMPLAIN	vi.h	49;"	d
__IS_BLANK	vi.h	/^static inline bool __IS_BLANK(char c){$/;"	f
__IS_CWORD	vi.h	/^static inline bool __IS_CWORD(char c){$/;"	f
__SET_STATE	vi.h	100;"	d
__TEST_STATE	vi.h	102;"	d
__VI_FLAG_ML	vi.h	/^	__VI_FLAG_ML,$/;"	e	enum:__anon28
__VI_FLAG_SUCCESS	vi.h	/^	__VI_FLAG_SUCCESS,$/;"	e	enum:__anon28
__VI_FLAG_W0	vi.h	/^	__VI_FLAG_W0,$/;"	e	enum:__anon28
__VI_FLAG_curr	vi.h	/^	__VI_FLAG_curr,$/;"	e	enum:__anon28
__VI_FLAG_cword	vi.h	/^	__VI_FLAG_cword,$/;"	e	enum:__anon28
__VI_FLAG_lazy	vi.h	/^	__VI_FLAG_lazy,$/;"	e	enum:__anon28
__VI_FLAG_meet0	vi.h	/^	__VI_FLAG_meet0,$/;"	e	enum:__anon28
__VI_FLAG_meetn	vi.h	/^	__VI_FLAG_meetn,	\/*vi里不存在meet0的说法,vi buf里不许出现'\\0'*\/$/;"	e	enum:__anon28
__VI_FLAG_noquote	vi.h	/^	__VI_FLAG_noquote$/;"	e	enum:__anon28
__VI_FLAG_yy	vi.h	/^	__VI_FLAG_yy,$/;"	e	enum:__anon28
__VI_NEXT	vi.h	/^static inline char * __VI_NEXT(struct vi *vi, int currl, char *curr){$/;"	f
__VI_NEXT_SET	vi.h	/^static inline void __VI_NEXT_SET(struct vi *vi, int *pcurrl, char **pcurr){$/;"	f
__WR_STATE	vi.h	103;"	d
__call_run_cmdline	lsh.c	/^static int __call_run_cmdline(lua_State *L){$/;"	f	file:
__call_vi_B	lsh.c	/^int __call_vi_B(lua_State *L){$/;"	f
__call_vi_E	lsh.c	/^int __call_vi_E(lua_State *L){$/;"	f
__call_vi_Gn	lsh.c	/^int __call_vi_Gn(lua_State *L){$/;"	f
__call_vi_W	lsh.c	/^int __call_vi_W(lua_State *L){$/;"	f
__call_vi_clipboard	lsh.c	/^int __call_vi_clipboard(lua_State *L){$/;"	f
__call_vi_endv	lsh.c	/^int __call_vi_endv(lua_State *L){$/;"	f
__call_vi_find	lsh.c	/^int __call_vi_find(lua_State *L){$/;"	f
__call_vi_h	lsh.c	/^int __call_vi_h(lua_State *L){$/;"	f
__call_vi_j	lsh.c	/^int __call_vi_j(lua_State *L){$/;"	f
__call_vi_k	lsh.c	/^int __call_vi_k(lua_State *L){$/;"	f
__call_vi_l	lsh.c	/^int __call_vi_l(lua_State *L){$/;"	f
__call_vi_new	lsh.c	/^int __call_vi_new(lua_State *L){$/;"	f
__call_vi_normal	lsh.c	/^int __call_vi_normal(lua_State *L){$/;"	f
__call_vi_open	lsh.c	/^static int __call_vi_open(lua_State *L){$/;"	f	file:
__call_vi_out	lsh.c	/^static int __call_vi_out(lua_State *L){$/;"	f	file:
__call_vi_print	lsh.c	/^static int __call_vi_print(lua_State *L){$/;"	f	file:
__call_vi_set	lsh.c	/^int __call_vi_set(lua_State *L){	\/*stack: self str *\/$/;"	f
__call_vi_share_clipboard	lsh.c	/^int __call_vi_share_clipboard(lua_State *L){$/;"	f
__call_vi_taste_digit	lsh.c	/^static int __call_vi_taste_digit(lua_State *L){$/;"	f	file:
__call_vi_v	lsh.c	/^int __call_vi_v(lua_State *L){$/;"	f
__call_vi_write	lsh.c	/^static int __call_vi_write(lua_State *L){$/;"	f	file:
__call_vi_x	lsh.c	/^int __call_vi_x(lua_State *L){$/;"	f
__cmdcount	lsh.c	/^int __cmdcount;$/;"	v
__expand_line	vi.c	/^static inline void __expand_line(int l, int size, char **lines, int *size_of_line){$/;"	f	file:
__hide_prompt	lsh.c	/^static bool __hide_prompt = false;$/;"	v	file:
__lshmod	lsh.c	/^int __lshmod = LSH_MOD_LUA;$/;"	v
__lshprefixArr	lsh.c	/^char *__lshprefixArr[]={$/;"	v
__luavi	lsh.c	/^struct vi __luavi;$/;"	v	typeref:struct:vi
__onindex	lsh.c	/^int __onindex(lua_State *L){$/;"	f
__onindex_vi_currc	lsh.c	/^int __onindex_vi_currc(lua_State *L){	\/*stack: ud "currc" *\/$/;"	f
__onindex_vi_currl	lsh.c	/^int __onindex_vi_currl(lua_State *L){	\/*stack: ud "lmax" *\/$/;"	f
__onindex_vi_errno	lsh.c	/^int __onindex_vi_errno(lua_State *L){	\/*stack: ud "lmax" *\/$/;"	f
__onindex_vi_lmax	lsh.c	/^int __onindex_vi_lmax(lua_State *L){	\/*stack: ud "lmax" *\/$/;"	f
__silent	vi.c	/^int __silent=1;$/;"	v
__silent	vi.h	/^int __silent;$/;"	v
__vi_expand_line	vi.c	/^static inline void __vi_expand_line(struct vi *vi, int l, int size){$/;"	f	file:
__vi_jk_chgcurr	vi.h	/^static inline void __vi_jk_chgcurr(struct vi *vi,  int newl){$/;"	f
__vi_next	vi.h	/^static inline char* __vi_next(struct vi *vi, int currl, char *curr){$/;"	f
_argc	lsh.c	/^int _argc;$/;"	v
_argv	lsh.c	/^char* _argv[128];	\/*for usr process*\/$/;"	v
_errno	vi.h	/^	int _errno;$/;"	m	struct:vi
_file_info_	lfs/src/lfs.c	/^static int _file_info_ (lua_State *L, int (*st)(const char*, STAT_STRUCT*)) {$/;"	f	file:
_file_lock	lfs/src/lfs.c	/^static int _file_lock (lua_State *L, FILE *fh, const char *mode, const long start, long len, const char *funcname) {$/;"	f	file:
_push_function	lfs/src/lfs.c	/^typedef void (*_push_function) (lua_State *L, STAT_STRUCT *info);$/;"	t	file:
_stat_members	lfs/src/lfs.c	/^struct _stat_members {$/;"	s	file:
about	lua/doc/readme.html	/^<H2><A NAME="about">About Lua<\/A><\/H2>$/;"	a
active	lsh.c	/^	bool active;$/;"	m	struct:__anon35	file:
actvar	lua/src/lparser.h	/^  } actvar;$/;"	m	struct:Dyndata	typeref:struct:Dyndata::__anon16
add_s	lua/src/lstrlib.c	/^static void add_s (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	file:
add_value	lua/src/lstrlib.c	/^static void add_value (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	file:
addbuff	lua/src/lstate.c	77;"	d	file:
adddigit	lua/src/lstrlib.c	/^static lua_Number adddigit (char *buff, int n, lua_Number x) {$/;"	f	file:
addfield	lua/src/ltablib.c	/^static void addfield (lua_State *L, luaL_Buffer *b, lua_Integer i) {$/;"	f	file:
addk	lua/src/lcode.c	/^static int addk (FuncState *fs, TValue *key, TValue *v) {$/;"	f	file:
addlenmod	lua/src/lstrlib.c	/^static void addlenmod (char *form, const char *lenmod) {$/;"	f	file:
addliteral	lua/src/lstrlib.c	/^static void addliteral (lua_State *L, luaL_Buffer *b, int arg) {$/;"	f	file:
addprototype	lua/src/lparser.c	/^static Proto *addprototype (LexState *ls) {$/;"	f	file:
addquoted	lua/src/lstrlib.c	/^static void addquoted (luaL_Buffer *b, const char *s, size_t len) {$/;"	f	file:
addreturn	lua/src/lua.c	/^static int addreturn (lua_State *L) {$/;"	f	file:
addstr	lua/src/lobject.c	484;"	d	file:
addtoclib	lua/src/loadlib.c	/^static void addtoclib (lua_State *L, const char *path, void *plib) {$/;"	f	file:
adjust_assign	lua/src/lparser.c	/^static void adjust_assign (LexState *ls, int nvars, int nexps, expdesc *e) {$/;"	f	file:
adjust_varargs	lua/src/ldo.c	/^static StkId adjust_varargs (lua_State *L, Proto *p, int actual) {$/;"	f	file:
adjustlocalvars	lua/src/lparser.c	/^static void adjustlocalvars (LexState *ls, int nvars) {$/;"	f	file:
adjustresults	lua/src/lapi.h	17;"	d
allgc	lua/src/lstate.h	/^  GCObject *allgc;  \/* list of all collectable objects *\/$/;"	m	struct:global_State
allowhook	lua/src/lstate.h	/^  lu_byte allowhook;$/;"	m	struct:lua_State
allweak	lua/src/lstate.h	/^  GCObject *allweak;  \/* list of all-weak tables *\/$/;"	m	struct:global_State
andaux	lua/src/lbitlib.c	/^static lua_Unsigned andaux (lua_State *L) {$/;"	f	file:
api	lua/doc/contents.html	/^<H3><A NAME="api">C API<\/A><\/H3>$/;"	a
api_check	lua/src/llimits.h	101;"	d
api_checknelems	lua/src/lapi.h	20;"	d
api_checkstackindex	lua/src/lapi.c	56;"	d	file:
api_checkvalidindex	lua/src/lapi.c	54;"	d	file:
api_incr_top	lua/src/lapi.h	14;"	d
argc	lsh.h	/^	int argc;$/;"	m	struct:lsh_cmd
argv	lsh.h	/^	char *argv[ARGC_MAX];$/;"	m	struct:lsh_cmd
arr	lua/src/lparser.h	/^    Vardesc *arr;$/;"	m	struct:Dyndata::__anon16
arr	lua/src/lparser.h	/^  Labeldesc *arr;  \/* array *\/$/;"	m	struct:Labellist
array	lua/src/lobject.h	/^  TValue *array;  \/* array part *\/$/;"	m	struct:Table
arrayindex	lua/src/ltable.c	/^static unsigned int arrayindex (const TValue *key) {$/;"	f	file:
asrt	vi.h	9;"	d
assignment	lua/src/lparser.c	/^static void assignment (LexState *ls, struct LHS_assign *lh, int nvars) {$/;"	f	file:
atomic	lua/src/lgc.c	/^static l_mem atomic (lua_State *L) {$/;"	f	file:
attrdir	lfs/doc/us/examples.html	/^function attrdir (path)$/;"	f
attrdir 	lfs/tests/test.lua	/^function attrdir (path)$/;"	f
attributes	lfs/doc/us/manual.html	/^    <dt><a name="attributes"><\/a><strong><code>lfs.attributes (filepath [, aname | atable])<\/code><\/strong><\/dt>$/;"	a
aux_close	lua/src/liolib.c	/^static int aux_close (lua_State *L) {$/;"	f	file:
aux_getn	lua/src/ltablib.c	33;"	d	file:
aux_lines	lua/src/liolib.c	/^static void aux_lines (lua_State *L, int toclose) {$/;"	f	file:
aux_upvalue	lua/src/lapi.c	/^static const char *aux_upvalue (StkId fi, int n, TValue **val,$/;"	f	file:
auxgetinfo	lua/src/ldebug.c	/^static int auxgetinfo (lua_State *L, const char *what, lua_Debug *ar,$/;"	f	file:
auxgetstr	lua/src/lapi.c	/^static int auxgetstr (lua_State *L, const TValue *t, const char *k) {$/;"	f	file:
auxlib	lua/doc/contents.html	/^<H3><A NAME="auxlib">auxiliary library<\/A><\/H3>$/;"	a
auxresume	lua/src/lcorolib.c	/^static int auxresume (lua_State *L, lua_State *co, int narg) {$/;"	f	file:
auxsetstr	lua/src/lapi.c	/^static void auxsetstr (lua_State *L, const TValue *t, const char *k) {$/;"	f	file:
auxsort	lua/src/ltablib.c	/^static void auxsort (lua_State *L, IdxT lo, IdxT up,$/;"	f	file:
auxupvalue	lua/src/ldblib.c	/^static int auxupvalue (lua_State *L, int get) {$/;"	f	file:
b	lua/src/lauxlib.h	/^  char *b;  \/* buffer address *\/$/;"	m	struct:luaL_Buffer
b	lua/src/ldo.c	/^  luai_jmpbuf b;$/;"	m	struct:lua_longjmp	file:
b	lua/src/lobject.h	/^  int b;           \/* booleans *\/$/;"	m	union:Value
b_and	lua/src/lbitlib.c	/^static int b_and (lua_State *L) {$/;"	f	file:
b_arshift	lua/src/lbitlib.c	/^static int b_arshift (lua_State *L) {$/;"	f	file:
b_extract	lua/src/lbitlib.c	/^static int b_extract (lua_State *L) {$/;"	f	file:
b_lrot	lua/src/lbitlib.c	/^static int b_lrot (lua_State *L) {$/;"	f	file:
b_lshift	lua/src/lbitlib.c	/^static int b_lshift (lua_State *L) {$/;"	f	file:
b_not	lua/src/lbitlib.c	/^static int b_not (lua_State *L) {$/;"	f	file:
b_or	lua/src/lbitlib.c	/^static int b_or (lua_State *L) {$/;"	f	file:
b_replace	lua/src/lbitlib.c	/^static int b_replace (lua_State *L) {$/;"	f	file:
b_rot	lua/src/lbitlib.c	/^static int b_rot (lua_State *L, lua_Integer d) {$/;"	f	file:
b_rrot	lua/src/lbitlib.c	/^static int b_rrot (lua_State *L) {$/;"	f	file:
b_rshift	lua/src/lbitlib.c	/^static int b_rshift (lua_State *L) {$/;"	f	file:
b_shift	lua/src/lbitlib.c	/^static int b_shift (lua_State *L, lua_Unsigned r, lua_Integer i) {$/;"	f	file:
b_str2int	lua/src/lbaselib.c	/^static const char *b_str2int (const char *s, int base, lua_Integer *pn) {$/;"	f	file:
b_test	lua/src/lbitlib.c	/^static int b_test (lua_State *L) {$/;"	f	file:
b_xor	lua/src/lbitlib.c	/^static int b_xor (lua_State *L) {$/;"	f	file:
base	lua/src/lstate.h	/^      StkId base;  \/* base for this function *\/$/;"	m	struct:CallInfo::__anon10::__anon11
base_ci	lua/src/lstate.h	/^  CallInfo base_ci;  \/* CallInfo for first level (C calling Lua) *\/$/;"	m	struct:lua_State
base_funcs	lua/src/lbaselib.c	/^static const luaL_Reg base_funcs[] = {$/;"	v	file:
basehookcount	lua/src/lstate.h	/^  int basehookcount;$/;"	m	struct:lua_State
bit2mask	lua/src/lgc.h	71;"	d
bitlib	lua/src/lbitlib.c	/^static const luaL_Reg bitlib[] = {$/;"	v	file:
bitmask	lua/src/lgc.h	70;"	d
bl	lua/src/lparser.h	/^  struct BlockCnt *bl;  \/* chain of current blocks *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::BlockCnt
black2gray	lua/src/lgc.c	71;"	d	file:
block	lua/src/lparser.c	/^static void block (LexState *ls) {$/;"	f	file:
block_follow	lua/src/lparser.c	/^static int block_follow (LexState *ls, int withuntil) {$/;"	f	file:
body	lua/src/lparser.c	/^static void body (LexState *ls, expdesc *e, int ismethod, int line) {$/;"	f	file:
bool	file.h	4;"	d
bool	han2pinyin.c	20;"	d	file:
bool	utils.h	3;"	d
bool	utils.h	4;"	d
boolK	lua/src/lcode.c	/^static int boolK (FuncState *fs, int b) {$/;"	f	file:
box	lua/src/lauxlib.c	/^  void *box;$/;"	m	struct:UBox	file:
boxgc	lua/src/lauxlib.c	/^static int boxgc (lua_State *L) {$/;"	f	file:
breaklabel	lua/src/lparser.c	/^static void breaklabel (LexState *ls) {$/;"	f	file:
bsize	lua/src/lauxlib.c	/^  size_t bsize;$/;"	m	struct:UBox	file:
buff	lua/src/lauxlib.c	/^  char buff[BUFSIZ];  \/* area for reading file *\/$/;"	m	struct:LoadF	file:
buff	lua/src/ldo.c	/^  Mbuffer buff;  \/* dynamic structure used by the scanner *\/$/;"	m	struct:SParser	file:
buff	lua/src/liolib.c	/^  char buff[L_MAXLENNUM + 1];  \/* +1 for ending '\\0' *\/$/;"	m	struct:__anon25	file:
buff	lua/src/llex.h	/^  Mbuffer *buff;  \/* buffer for tokens *\/$/;"	m	struct:LexState
buff	lua/src/lstrlib.c	/^  char buff[5 * sizeof(lua_Number)];  \/* enough for any float type *\/$/;"	m	union:Ftypes	file:
buffer	lua/src/lzio.h	/^  char *buffer;$/;"	m	struct:Mbuffer
buffonstack	lua/src/lauxlib.c	500;"	d	file:
buffsize	lua/src/lzio.h	/^  size_t buffsize;$/;"	m	struct:Mbuffer
build_lsh_cmd	lsh.c	/^int  build_lsh_cmd(\/\/struct vi *vi,$/;"	f
build_lsh_cmds	lsh.c	/^int build_lsh_cmds(char *input, struct lsh_cmd *lsh_cmds){$/;"	f
building	lfs/doc/us/manual.html	/^<h2><a name="building"><\/a>Building<\/h2>$/;"	a
bvalue	lua/src/lobject.h	176;"	d
byte	vi.c	/^		char byte[4];		\/\/so, big endian machine is not supported here$/;"	m	union:opseq::__anon2	file:
byteoffset	lua/src/lutf8lib.c	/^static int byteoffset (lua_State *L) {$/;"	f	file:
c	lua/src/liolib.c	/^  int c;  \/* current character (look ahead) *\/$/;"	m	struct:__anon25	file:
c	lua/src/lobject.h	/^  CClosure c;$/;"	m	union:Closure
c	lua/src/lstate.h	/^    } c;$/;"	m	union:CallInfo::__anon10	typeref:struct:CallInfo::__anon10::__anon12
c	lua/src/lstrlib.c	/^  char c;$/;"	m	struct:cD	file:
cD	lua/src/lstrlib.c	/^struct cD {$/;"	s	file:
cache	lua/src/lobject.h	/^  struct LClosure *cache;  \/* last-created closure with this prototype *\/$/;"	m	struct:Proto	typeref:struct:Proto::LClosure
callallpendingfinalizers	lua/src/lgc.c	/^static void callallpendingfinalizers (lua_State *L) {$/;"	f	file:
callhook	lua/src/ldo.c	/^static void callhook (lua_State *L, CallInfo *ci) {$/;"	f	file:
callstatus	lua/src/lstate.h	/^  lu_byte callstatus;$/;"	m	struct:CallInfo
cannot	lua/src/luac.c	/^static void cannot(const char* what)$/;"	f	file:
capture	lua/src/lstrlib.c	/^  } capture[LUA_MAXCAPTURES];$/;"	m	struct:MatchState	typeref:struct:MatchState::__anon19	file:
capture_to_close	lua/src/lstrlib.c	/^static int capture_to_close (MatchState *ms) {$/;"	f	file:
cast	lua/src/llimits.h	111;"	d
cast_byte	lua/src/llimits.h	114;"	d
cast_func	lua/src/loadlib.c	145;"	d	file:
cast_func	lua/src/loadlib.c	147;"	d	file:
cast_int	lua/src/llimits.h	116;"	d
cast_num	lua/src/llimits.h	115;"	d
cast_u	lua/src/lstate.h	203;"	d
cast_uchar	lua/src/llimits.h	117;"	d
cast_void	lua/src/llimits.h	113;"	d
change_dir	lfs/src/lfs.c	/^static int change_dir (lua_State *L) {$/;"	f	file:
changes	lua/doc/readme.html	/^<H2><A NAME="changes">Changes since Lua 5.2<\/A><\/H2>$/;"	a
changewhite	lua/src/lgc.h	98;"	d
char_arr_a	utils.c	/^int char_arr_a(char *arr, int N, int at, char *snippet, int snippet_len){$/;"	f
char_arr_aN	utils.h	/^static inline int char_arr_aN(char *arr, int N, int at, char *snippet, int snippet_len){$/;"	f
char_arr_del2N	utils.h	/^static inline int char_arr_del2N(char *arr, int N, int m, int n){$/;"	f
char_arr_delN	utils.h	/^static inline int char_arr_delN(char *arr, int N, int at, int len){$/;"	f
char_arr_i	utils.c	/^int char_arr_i(char *arr, int N, int at, char *snippet, int snippet_len){$/;"	f
char_arr_iN	utils.h	/^static inline int char_arr_iN(char *arr, int N, int at, char *snippet, int snippet_len){$/;"	f
chdir	lfs/doc/us/manual.html	/^    <dt><a name="chdir"><\/a><strong><code>lfs.chdir (path)<\/code><\/strong><\/dt>$/;"	a
chdir	lfs/src/lfs.h	15;"	d
chdir	lfs/src/lfs.h	8;"	d
chdir_error	lfs/src/lfs.h	11;"	d
chdir_error	lfs/src/lfs.h	9;"	d
check	lua/src/lparser.c	/^static void check (LexState *ls, int c) {$/;"	f	file:
checkGC	lua/src/lvm.c	749;"	d	file:
checkHeader	lua/src/lundump.c	/^static void checkHeader (LoadState *S) {$/;"	f	file:
checkSizes	lua/src/lgc.c	/^static void checkSizes (lua_State *L, global_State *g) {$/;"	f	file:
check_capture	lua/src/lstrlib.c	/^static int check_capture (MatchState *ms, int l) {$/;"	f	file:
check_condition	lua/src/lparser.c	118;"	d	file:
check_conflict	lua/src/lparser.c	/^static void check_conflict (LexState *ls, struct LHS_assign *lh, expdesc *v) {$/;"	f	file:
check_exp	lua/src/llimits.h	85;"	d
check_exp	lua/src/llimits.h	90;"	d
check_file	lfs/src/lfs.c	/^static FILE *check_file (lua_State *L, int idx, const char *funcname) {$/;"	f	file:
check_match	lua/src/lparser.c	/^static void check_match (LexState *ls, int what, int who, int where) {$/;"	f	file:
check_next1	lua/src/llex.c	/^static int check_next1 (LexState *ls, int c) {$/;"	f	file:
check_next2	lua/src/llex.c	/^static int check_next2 (LexState *ls, const char *set) {$/;"	f	file:
checkclib	lua/src/loadlib.c	/^static void *checkclib (lua_State *L, const char *path) {$/;"	f	file:
checkconsistency	lua/src/lgc.c	79;"	d	file:
checkdeadkey	lua/src/lgc.c	76;"	d	file:
checkdp	lua/src/lstrlib.c	/^static void checkdp (char *buff, int nb) {$/;"	f	file:
checkfield	lua/src/ltablib.c	/^static int checkfield (lua_State *L, const char *key, int n) {$/;"	f	file:
checklimit	lua/src/lparser.c	/^static void checklimit (FuncState *fs, int v, int l, const char *what) {$/;"	f	file:
checkliteral	lua/src/lundump.c	/^static void checkliteral (LoadState *S, const char *s, const char *msg) {$/;"	f	file:
checkliveness	lua/src/lobject.h	190;"	d
checkload	lua/src/loadlib.c	/^static int checkload (lua_State *L, int stat, const char *filename) {$/;"	f	file:
checkmode	lua/src/ldo.c	/^static void checkmode (lua_State *L, const char *mode, const char *x) {$/;"	f	file:
checkname	lua/src/lparser.c	/^static void checkname (LexState *ls, expdesc *e) {$/;"	f	file:
checknext	lua/src/lparser.c	/^static void checknext (LexState *ls, int c) {$/;"	f	file:
checkoption	lua/src/loslib.c	/^static const char *checkoption (lua_State *L, const char *conv, char *buff) {$/;"	f	file:
checkrepeated	lua/src/lparser.c	/^static void checkrepeated (FuncState *fs, Labellist *ll, TString *label) {$/;"	f	file:
checkresults	lua/src/lapi.c	903;"	d	file:
checksize	lua/src/lundump.c	234;"	d	file:
checkstack	lua/src/ldblib.c	/^static void checkstack (lua_State *L, lua_State *L1, int n) {$/;"	f	file:
checkstackp	lua/src/ldo.c	330;"	d	file:
checktab	lua/src/ltablib.c	/^static void checktab (lua_State *L, int arg, int what) {$/;"	f	file:
checktag	lua/src/lobject.h	140;"	d
checktype	lua/src/lobject.h	141;"	d
checkunsigned	lua/src/lbitlib.c	23;"	d	file:
checkupval	lua/src/ldblib.c	/^static int checkupval (lua_State *L, int argf, int argnup) {$/;"	f	file:
chgfltvalue	lua/src/lobject.h	201;"	d
chgivalue	lua/src/lobject.h	207;"	d
chinese	word.h	/^	char *chinese;$/;"	m	struct:interp_item
choosePivot	lua/src/ltablib.c	/^static IdxT choosePivot (IdxT lo, IdxT up, unsigned int rnd) {$/;"	f	file:
ci	lua/src/lstate.h	/^  CallInfo *ci;  \/* call info for current function *\/$/;"	m	struct:lua_State
ci_func	lua/src/ldebug.c	38;"	d	file:
cl	lua/src/lstate.h	/^  union Closure cl;$/;"	m	union:GCUnion	typeref:union:GCUnion::Closure
clCvalue	lua/src/lobject.h	173;"	d
clLvalue	lua/src/lobject.h	172;"	d
classend	lua/src/lstrlib.c	/^static const char *classend (MatchState *ms, const char *p) {$/;"	f	file:
clearkeys	lua/src/lgc.c	/^static void clearkeys (global_State *g, GCObject *l, GCObject *f) {$/;"	f	file:
clearvalues	lua/src/lgc.c	/^static void clearvalues (global_State *g, GCObject *l, GCObject *f) {$/;"	f	file:
clipboard_buf	vi.h	/^	char *clipboard_buf;$/;"	m	struct:vi
clipinfo	vi.h	/^	struct vi_clipinfo * clipinfo;$/;"	m	struct:vi	typeref:struct:vi::vi_clipinfo
clipinfo_fix	vi.h	/^	struct vi_clipinfo *clipinfo_fix;$/;"	m	struct:vi	typeref:struct:vi::vi_clipinfo
close_func	lua/src/lparser.c	/^static void close_func (LexState *ls) {$/;"	f	file:
close_state	lua/src/lstate.c	/^static void close_state (lua_State *L) {$/;"	f	file:
closed	lfs/src/lfs.c	/^        int  closed;$/;"	m	struct:dir_data	file:
closef	lua/src/lauxlib.h	/^  lua_CFunction closef;  \/* to close stream (NULL for closed streams) *\/$/;"	m	struct:luaL_Stream
closegoto	lua/src/lparser.c	/^static void closegoto (LexState *ls, int g, Labeldesc *label) {$/;"	f	file:
closelistfield	lua/src/lparser.c	/^static void closelistfield (FuncState *fs, struct ConsControl *cc) {$/;"	f	file:
clvalue	lua/src/lobject.h	171;"	d
co_funcs	lua/src/lcorolib.c	/^static const luaL_Reg co_funcs[] = {$/;"	v	file:
code	lua/src/lobject.h	/^  Instruction *code;  \/* opcodes *\/$/;"	m	struct:Proto
code_loadbool	lua/src/lcode.c	/^static int code_loadbool (FuncState *fs, int A, int b, int jump) {$/;"	f	file:
codebinexpval	lua/src/lcode.c	/^static void codebinexpval (FuncState *fs, OpCode op,$/;"	f	file:
codeclosure	lua/src/lparser.c	/^static void codeclosure (LexState *ls, expdesc *v) {$/;"	f	file:
codecomp	lua/src/lcode.c	/^static void codecomp (FuncState *fs, BinOpr opr, expdesc *e1, expdesc *e2) {$/;"	f	file:
codeextraarg	lua/src/lcode.c	/^static int codeextraarg (FuncState *fs, int a) {$/;"	f	file:
codenot	lua/src/lcode.c	/^static void codenot (FuncState *fs, expdesc *e) {$/;"	f	file:
codepoint	lua/src/lutf8lib.c	/^static int codepoint (lua_State *L) {$/;"	f	file:
codestring	lua/src/lparser.c	/^static void codestring (LexState *ls, expdesc *e, TString *s) {$/;"	f	file:
codeunexpval	lua/src/lcode.c	/^static void codeunexpval (FuncState *fs, OpCode op, expdesc *e, int line) {$/;"	f	file:
collectargs	lua/src/lua.c	/^static int collectargs (char **argv, int *first) {$/;"	f	file:
collectvalidlines	lua/src/ldebug.c	/^static void collectvalidlines (lua_State *L, Closure *f) {$/;"	f	file:
combine	lua/src/luac.c	/^static const Proto* combine(lua_State* L, int n)$/;"	f	file:
computesizes	lua/src/ltable.c	/^static unsigned int computesizes (unsigned int nums[], unsigned int *pna) {$/;"	f	file:
cond	lua/src/lparser.c	/^static int cond (LexState *ls) {$/;"	f	file:
condchangemem	lua/src/llimits.h	317;"	d
condchangemem	lua/src/llimits.h	319;"	d
condjump	lua/src/lcode.c	/^static int condjump (FuncState *fs, OpCode op, int A, int B, int C) {$/;"	f	file:
condmovestack	lua/src/llimits.h	309;"	d
condmovestack	lua/src/llimits.h	312;"	d
const_vi_blankchars	vi.h	/^static char *const_vi_blankchars = "\\t \\n";$/;"	v
constants	lua/doc/contents.html	/^<H3><A NAME="constants">constants<\/A><\/H3>$/;"	a
constfolding	lua/src/lcode.c	/^static int constfolding (FuncState *fs, int op, expdesc *e1, expdesc *e2) {$/;"	f	file:
constructor	lua/src/lparser.c	/^static void constructor (LexState *ls, expdesc *t) {$/;"	f	file:
contents	lua/doc/contents.html	/^<H2><A NAME="contents">Contents<\/A><\/H2>$/;"	a
convergeephemerons	lua/src/lgc.c	/^static void convergeephemerons (global_State *g) {$/;"	f	file:
convert_line	han2pinyin.c	/^static void convert_line(void){$/;"	f	file:
convert_seg	han2pinyin.c	/^static void convert_seg(void){								assert( VI_CURR_LENR(vim)  >= 3   &&$/;"	f	file:
copy2buff	lua/src/lvm.c	/^static void copy2buff (StkId top, int n, char *buff) {$/;"	f	file:
copywithendian	lua/src/lstrlib.c	/^static void copywithendian (volatile char *dest, volatile const char *src,$/;"	f	file:
correctstack	lua/src/ldo.c	/^static void correctstack (lua_State *L, TValue *oldstack) {$/;"	f	file:
countint	lua/src/ltable.c	/^static int countint (const TValue *key, unsigned int *nums) {$/;"	f	file:
createargtable	lua/src/lua.c	/^static void createargtable (lua_State *L, char **argv, int argc, int script) {$/;"	f	file:
createclibstable	lua/src/loadlib.c	/^static void createclibstable (lua_State *L) {$/;"	f	file:
createmeta	lua/src/liolib.c	/^static void createmeta (lua_State *L) {$/;"	f	file:
createmetatable	lua/src/lstrlib.c	/^static void createmetatable (lua_State *L) {$/;"	f	file:
createsearcherstable	lua/src/loadlib.c	/^static void createsearcherstable (lua_State *L) {$/;"	f	file:
createstdfile	lua/src/liolib.c	/^static void createstdfile (lua_State *L, FILE *f, const char *k,$/;"	f	file:
createstrobj	lua/src/lstring.c	/^static TString *createstrobj (lua_State *L, size_t l, int tag, unsigned int h) {$/;"	f	file:
credits	lfs/doc/us/index.html	/^<h2><a name="credits"><\/a>Credits<\/h2>$/;"	a
ctb	lua/src/lobject.h	66;"	d
ctx	lua/src/lstate.h	/^      lua_KContext ctx;  \/* context info. in case of yields *\/$/;"	m	struct:CallInfo::__anon10::__anon12
curr	vi.h	/^	char *curr;$/;"	m	struct:vi
curr	vim.c	/^	char *curr;$/;"	m	struct:vi	file:
currIsNewline	lua/src/llex.c	36;"	d	file:
current	lua/src/llex.h	/^  int current;  \/* current character (charint) *\/$/;"	m	struct:LexState
currentdir	lfs/doc/us/manual.html	/^    <dt><a name="currentdir"><\/a><strong><code>lfs.currentdir ()<\/code><\/strong><\/dt>$/;"	a
currentline	lua/src/ldebug.c	/^static int currentline (CallInfo *ci) {$/;"	f	file:
currentline	lua/src/lua.h	/^  int currentline;	\/* (l) *\/$/;"	m	struct:lua_Debug
currentpc	lua/src/ldebug.c	/^static int currentpc (CallInfo *ci) {$/;"	f	file:
currentwhite	lua/src/lstate.h	/^  lu_byte currentwhite;$/;"	m	struct:global_State
currl	vi.h	/^	int currl;$/;"	m	struct:mark_register
currl	vi.h	/^	int currl;$/;"	m	struct:vi
curroff	vi.h	/^	int curroff;$/;"	m	struct:mark_register
customization	lua/doc/readme.html	/^<H3><A NAME="customization">Customization<\/A><\/H3>$/;"	a
cvt2num	lua/src/lvm.h	24;"	d
cvt2num	lua/src/lvm.h	26;"	d
cvt2str	lua/src/lvm.h	17;"	d
cvt2str	lua/src/lvm.h	19;"	d
d	lua/src/lstrlib.c	/^  double d;$/;"	m	union:Ftypes	file:
d	lua/src/lstrlib.c	/^  union { double d; void *p; lua_Integer i; lua_Number n; } u;$/;"	m	union:cD::__anon21	file:
data	lua/src/ldump.c	/^  void *data;$/;"	m	struct:__anon17	file:
data	lua/src/lzio.h	/^  void *data;			\/* additional data *\/$/;"	m	struct:Zio
db_debug	lua/src/ldblib.c	/^static int db_debug (lua_State *L) {$/;"	f	file:
db_gethook	lua/src/ldblib.c	/^static int db_gethook (lua_State *L) {$/;"	f	file:
db_getinfo	lua/src/ldblib.c	/^static int db_getinfo (lua_State *L) {$/;"	f	file:
db_getlocal	lua/src/ldblib.c	/^static int db_getlocal (lua_State *L) {$/;"	f	file:
db_getmetatable	lua/src/ldblib.c	/^static int db_getmetatable (lua_State *L) {$/;"	f	file:
db_getregistry	lua/src/ldblib.c	/^static int db_getregistry (lua_State *L) {$/;"	f	file:
db_getupvalue	lua/src/ldblib.c	/^static int db_getupvalue (lua_State *L) {$/;"	f	file:
db_getuservalue	lua/src/ldblib.c	/^static int db_getuservalue (lua_State *L) {$/;"	f	file:
db_sethook	lua/src/ldblib.c	/^static int db_sethook (lua_State *L) {$/;"	f	file:
db_setlocal	lua/src/ldblib.c	/^static int db_setlocal (lua_State *L) {$/;"	f	file:
db_setmetatable	lua/src/ldblib.c	/^static int db_setmetatable (lua_State *L) {$/;"	f	file:
db_setupvalue	lua/src/ldblib.c	/^static int db_setupvalue (lua_State *L) {$/;"	f	file:
db_setuservalue	lua/src/ldblib.c	/^static int db_setuservalue (lua_State *L) {$/;"	f	file:
db_traceback	lua/src/ldblib.c	/^static int db_traceback (lua_State *L) {$/;"	f	file:
db_upvalueid	lua/src/ldblib.c	/^static int db_upvalueid (lua_State *L) {$/;"	f	file:
db_upvaluejoin	lua/src/ldblib.c	/^static int db_upvaluejoin (lua_State *L) {$/;"	f	file:
dblib	lua/src/ldblib.c	/^static const luaL_Reg dblib[] = {$/;"	v	file:
deadvalue	lua/src/lobject.h	179;"	d
digit	lua/src/lstrlib.c	/^static int digit (int c) { return '0' <= c && c <= '9'; }$/;"	f	file:
dir	lfs/doc/us/manual.html	/^    <dt><a name="dir"><\/a><strong><code>iter, dir_obj = lfs.dir (path)<\/code><\/strong><\/dt>$/;"	a
dir	lfs/src/lfs.c	/^        DIR *dir;$/;"	m	struct:dir_data	file:
dir_close	lfs/src/lfs.c	/^static int dir_close (lua_State *L) {$/;"	f	file:
dir_create_meta	lfs/src/lfs.c	/^static int dir_create_meta (lua_State *L) {$/;"	f	file:
dir_data	lfs/src/lfs.c	/^typedef struct dir_data {$/;"	s	file:
dir_data	lfs/src/lfs.c	/^} dir_data;$/;"	t	typeref:struct:dir_data	file:
dir_iter	lfs/src/lfs.c	/^static int dir_iter (lua_State *L) {$/;"	f	file:
dir_iter_factory	lfs/src/lfs.c	/^static int dir_iter_factory (lua_State *L) {$/;"	f	file:
discharge2anyreg	lua/src/lcode.c	/^static void discharge2anyreg (FuncState *fs, expdesc *e) {$/;"	f	file:
discharge2reg	lua/src/lcode.c	/^static void discharge2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	file:
dischargejpc	lua/src/lcode.c	/^static void dischargejpc (FuncState *fs) {$/;"	f	file:
doREPL	lua/src/lua.c	/^static void doREPL (lua_State *L) {$/;"	f	file:
doargs	lua/src/luac.c	/^static int doargs(int argc, char* argv[])$/;"	f	file:
docall	lua/src/lua.c	/^static int docall (lua_State *L, int narg, int nres) {$/;"	f	file:
dochunk	lua/src/lua.c	/^static int dochunk (lua_State *L, int status) {$/;"	f	file:
dofile	lua/src/lua.c	/^static int dofile (lua_State *L, const char *name) {$/;"	f	file:
dofilecont	lua/src/lbaselib.c	/^static int dofilecont (lua_State *L, int d1, lua_KContext d2) {$/;"	f	file:
dojump	lua/src/lvm.c	738;"	d	file:
dolibrary	lua/src/lua.c	/^static int dolibrary (lua_State *L, const char *name) {$/;"	f	file:
donextjump	lua/src/lvm.c	744;"	d	file:
dooptions	lua/src/loadlib.c	/^static void dooptions (lua_State *L, int n) {$/;"	f	file:
dostring	lua/src/lua.c	/^static int dostring (lua_State *L, const char *s, const char *name) {$/;"	f	file:
dothecall	lua/src/lgc.c	/^static void dothecall (lua_State *L, void *ud) {$/;"	f	file:
download	lfs/doc/us/index.html	/^<h2><a name="download"><\/a>Download<\/h2>$/;"	a
dummy	lua/src/lobject.h	/^  L_Umaxalign dummy;  \/* ensures maximum alignment for 'local' udata *\/$/;"	m	union:UUdata
dummy	lua/src/lobject.h	/^  L_Umaxalign dummy;  \/* ensures maximum alignment for strings *\/$/;"	m	union:UTString
dummy	lua/src/lstrlib.c	/^  int dummy;$/;"	m	union:__anon20	file:
dummynode	lua/src/ltable.c	75;"	d	file:
dummynode_	lua/src/ltable.c	/^static const Node dummynode_ = {$/;"	v	file:
dumping	lua/src/luac.c	/^static int dumping=1;			\/* dump bytecodes? *\/$/;"	v	file:
dyd	lua/src/ldo.c	/^  Dyndata dyd;  \/* dynamic structures used by the parser *\/$/;"	m	struct:SParser	file:
dyd	lua/src/llex.h	/^  struct Dyndata *dyd;  \/* dynamic structures used by the parser *\/$/;"	m	struct:LexState	typeref:struct:LexState::Dyndata
end_capture	lua/src/lstrlib.c	/^static const char *end_capture (MatchState *ms, const char *s,$/;"	f	file:
endpc	lua/src/lobject.h	/^  int endpc;    \/* first point where variable is dead *\/$/;"	m	struct:LocVar
english	word.h	/^	char *english;$/;"	m	struct:interp_item
enterblock	lua/src/lparser.c	/^static void enterblock (FuncState *fs, BlockCnt *bl, lu_byte isloop) {$/;"	f	file:
enterlevel	lua/src/lparser.c	/^static void enterlevel (LexState *ls) {$/;"	f	file:
entersweep	lua/src/lgc.c	/^static void entersweep (lua_State *L) {$/;"	f	file:
env	lua/doc/contents.html	/^<H3><A NAME="env">environment<BR>variables<\/A><\/H3>$/;"	a
envn	lua/src/llex.h	/^  TString *envn;  \/* environment variable name *\/$/;"	m	struct:LexState
ephemeron	lua/src/lstate.h	/^  GCObject *ephemeron;  \/* list of ephemeron tables (weak keys) *\/$/;"	m	struct:global_State
eqshrstr	lua/src/lstring.h	33;"	d
eqstr	lua/src/lparser.c	42;"	d	file:
errfile	lua/src/lauxlib.c	/^static int errfile (lua_State *L, const char *what, int fnameindex) {$/;"	f	file:
errfunc	lua/src/lstate.h	/^  ptrdiff_t errfunc;  \/* current error handling function (stack index) *\/$/;"	m	struct:lua_State
error	lua/src/lundump.c	/^static l_noret error(LoadState *S, const char *why) {$/;"	f	file:
errorJmp	lua/src/lstate.h	/^  struct lua_longjmp *errorJmp;  \/* current error recover point *\/$/;"	m	struct:lua_State	typeref:struct:lua_State::lua_longjmp
error_expected	lua/src/lparser.c	/^static l_noret error_expected (LexState *ls, int token) {$/;"	f	file:
errorlimit	lua/src/lparser.c	/^static l_noret errorlimit (FuncState *fs, int limit, const char *what) {$/;"	f	file:
errorstatus	lua/src/ldo.c	38;"	d	file:
esccheck	lua/src/llex.c	/^static void esccheck (LexState *ls, int c, const char *msg) {$/;"	f	file:
event	lua/src/lua.h	/^  int event;$/;"	m	struct:lua_Debug
example	lfs/doc/us/examples.html	/^<h2><a name="example"><\/a>Examples<\/h2>$/;"	a
exp1	lua/src/lparser.c	/^static int exp1 (LexState *ls) {$/;"	f	file:
exp2reg	lua/src/lcode.c	/^static void exp2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	file:
expdesc	lua/src/lparser.h	/^typedef struct expdesc {$/;"	s
expdesc	lua/src/lparser.h	/^} expdesc;$/;"	t	typeref:struct:expdesc
expkind	lua/src/lparser.h	/^} expkind;$/;"	t	typeref:enum:__anon13
explist	lua/src/lparser.c	/^static int explist (LexState *ls, expdesc *v) {$/;"	f	file:
export_vi	lsh.c	/^void export_vi(lua_State *L){$/;"	f
expr	lua/src/lparser.c	/^static void expr (LexState *ls, expdesc *v) {$/;"	f	file:
exprstat	lua/src/lparser.c	/^static void exprstat (LexState *ls) {$/;"	f	file:
extra	lua/src/lobject.h	/^  lu_byte extra;  \/* reserved words for short strings; "has hash" for longs *\/$/;"	m	struct:TString
extra	lua/src/lstate.h	/^  ptrdiff_t extra;$/;"	m	struct:CallInfo
extra_	lua/src/lstate.c	/^  lu_byte extra_[LUA_EXTRASPACE];$/;"	m	struct:LX	file:
f	lua/doc/manual.html	/^     function f () <em>body<\/em> end$/;"	f
f	lua/doc/manual.html	/^     function f(a, b) end$/;"	f
f	lua/src/lauxlib.c	/^  FILE *f;  \/* file being read *\/$/;"	m	struct:LoadF	file:
f	lua/src/lauxlib.h	/^  FILE *f;  \/* stream (NULL for incompletely created streams) *\/$/;"	m	struct:luaL_Stream
f	lua/src/liolib.c	/^  FILE *f;  \/* file being read *\/$/;"	m	struct:__anon25	file:
f	lua/src/lobject.h	/^  lua_CFunction f; \/* light C functions *\/$/;"	m	union:Value
f	lua/src/lobject.h	/^  lua_CFunction f;$/;"	m	struct:CClosure
f	lua/src/lparser.h	/^  Proto *f;  \/* current function header *\/$/;"	m	struct:FuncState
f	lua/src/lparser.h	/^  int f;  \/* patch list of 'exit when false' *\/$/;"	m	struct:expdesc
f	lua/src/lstrlib.c	/^  float f;$/;"	m	union:Ftypes	file:
f_call	lua/src/lapi.c	/^static void f_call (lua_State *L, void *ud) {$/;"	f	file:
f_flush	lua/src/liolib.c	/^static int f_flush (lua_State *L) {$/;"	f	file:
f_gc	lua/src/liolib.c	/^static int f_gc (lua_State *L) {$/;"	f	file:
f_lines	lua/src/liolib.c	/^static int f_lines (lua_State *L) {$/;"	f	file:
f_luaopen	lua/src/lstate.c	/^static void f_luaopen (lua_State *L, void *ud) {$/;"	f	file:
f_parser	lua/src/ldo.c	/^static void f_parser (lua_State *L, void *ud) {$/;"	f	file:
f_read	lua/src/liolib.c	/^static int f_read (lua_State *L) {$/;"	f	file:
f_seek	lua/src/liolib.c	/^static int f_seek (lua_State *L) {$/;"	f	file:
f_setvbuf	lua/src/liolib.c	/^static int f_setvbuf (lua_State *L) {$/;"	f	file:
f_tostring	lua/src/liolib.c	/^static int f_tostring (lua_State *L) {$/;"	f	file:
f_write	lua/src/liolib.c	/^static int f_write (lua_State *L) {$/;"	f	file:
false	file.h	6;"	d
false	utils.h	5;"	d
fasttm	lua/src/ltm.h	51;"	d
fatal	lua/src/luac.c	/^static void fatal(const char* message)$/;"	f	file:
fchecksize	lua/src/lundump.c	/^static void fchecksize (LoadState *S, size_t size, const char *tname) {$/;"	f	file:
fd	lfs/src/lfs.c	/^  HANDLE fd;$/;"	m	struct:lfs_Lock	file:
fds	lsh.c	/^	int fds[2];$/;"	m	struct:__anon35	file:
fdsize	file.c	/^int fdsize(int fd){$/;"	f
field	lua/src/lparser.c	/^static void field (LexState *ls, struct ConsControl *cc) {$/;"	f	file:
fieldargs	lua/src/lbitlib.c	/^static int fieldargs (lua_State *L, int farg, int *width) {$/;"	f	file:
fieldsel	lua/src/lparser.c	/^static void fieldsel (LexState *ls, expdesc *v) {$/;"	f	file:
file_exists	file.h	/^static inline bool file_exists(char *filepath){$/;"	f
file_info	lfs/src/lfs.c	/^static int file_info (lua_State *L) {$/;"	f	file:
file_lock	lfs/src/lfs.c	/^static int file_lock (lua_State *L) {$/;"	f	file:
file_unlock	lfs/src/lfs.c	/^static int file_unlock (lua_State *L) {$/;"	f	file:
file_utime	lfs/src/lfs.c	/^static int file_utime (lua_State *L) {$/;"	f	file:
fileno	lfs/src/lfs.h	20;"	d
filepath	vi.h	/^	char *filepath;$/;"	m	struct:vi
filesize	file.c	/^int filesize(char *name){$/;"	f
filterpc	lua/src/ldebug.c	/^static int filterpc (int pc, int jmptarget) {$/;"	f	file:
find_interp_item	han2pinyin.c	/^find_interp_item(char *words, int wordnum, u32 hash){			assert(hash < UTF8_HASHTBL_LEN);$/;"	f	file:
findfield	lua/src/lauxlib.c	/^static int findfield (lua_State *L, int objidx, int level) {$/;"	f	file:
findfile	lua/src/loadlib.c	/^static const char *findfile (lua_State *L, const char *name,$/;"	f	file:
findgotos	lua/src/lparser.c	/^static void findgotos (LexState *ls, Labeldesc *lb) {$/;"	f	file:
findindex	lua/src/ltable.c	/^static unsigned int findindex (lua_State *L, Table *t, StkId key) {$/;"	f	file:
findlabel	lua/src/lparser.c	/^static int findlabel (LexState *ls, int g) {$/;"	f	file:
findlast	lua/src/lgc.c	/^static GCObject **findlast (GCObject **p) {$/;"	f	file:
findloader	lua/src/loadlib.c	/^static void findloader (lua_State *L, const char *name) {$/;"	f	file:
findlocal	lua/src/ldebug.c	/^static const char *findlocal (lua_State *L, CallInfo *ci, int n,$/;"	f	file:
findpcall	lua/src/ldo.c	/^static CallInfo *findpcall (lua_State *L) {$/;"	f	file:
findsetreg	lua/src/ldebug.c	/^static int findsetreg (Proto *p, int lastpc, int reg) {$/;"	f	file:
findvararg	lua/src/ldebug.c	/^static const char *findvararg (CallInfo *ci, int n, StkId *pos) {$/;"	f	file:
finishCcall	lua/src/ldo.c	/^static void finishCcall (lua_State *L, int status) {$/;"	f	file:
finishpcall	lua/src/lbaselib.c	/^static int finishpcall (lua_State *L, int status, lua_KContext extra) {$/;"	f	file:
finobj	lua/src/lstate.h	/^  GCObject *finobj;  \/* list of collectable objects with finalizers *\/$/;"	m	struct:global_State
firstgoto	lua/src/lparser.c	/^  int firstgoto;  \/* index of first pending goto in this block *\/$/;"	m	struct:BlockCnt	file:
firstlabel	lua/src/lparser.c	/^  int firstlabel;  \/* index of first label in this block *\/$/;"	m	struct:BlockCnt	file:
firstlocal	lua/src/lparser.h	/^  int firstlocal;  \/* index of first local var (in Dyndata array) *\/$/;"	m	struct:FuncState
fixedgc	lua/src/lstate.h	/^  GCObject *fixedgc;  \/* list of objects not to be collected *\/$/;"	m	struct:global_State
fixjump	lua/src/lcode.c	/^static void fixjump (FuncState *fs, int pc, int dest) {$/;"	f	file:
flags	lua/src/lobject.h	/^  lu_byte flags;  \/* 1<<p means tagmethod(p) is not present *\/$/;"	m	struct:Table
flags	vi.h	/^	unsigned flags;$/;"	m	struct:vi
flib	lua/src/liolib.c	/^static const luaL_Reg flib[] = {$/;"	v	file:
fltvalue	lua/src/lobject.h	164;"	d
foo	lua/doc/manual.html	/^     function foo (a)$/;"	f
forbody	lua/src/lparser.c	/^static void forbody (LexState *ls, int base, int line, int nvars, int isnum) {$/;"	f	file:
forlimit	lua/src/lvm.c	/^static int forlimit (const TValue *obj, lua_Integer *p, lua_Integer step,$/;"	f	file:
forlist	lua/src/lparser.c	/^static void forlist (LexState *ls, TString *indexname) {$/;"	f	file:
fornum	lua/src/lparser.c	/^static void fornum (LexState *ls, TString *varname, int line) {$/;"	f	file:
forstat	lua/src/lparser.c	/^static void forstat (LexState *ls, int line) {$/;"	f	file:
frealloc	lua/src/lstate.h	/^  lua_Alloc frealloc;  \/* function to reallocate memory *\/$/;"	m	struct:global_State
freeLclosure	lua/src/lgc.c	/^static void freeLclosure (lua_State *L, LClosure *cl) {$/;"	f	file:
freeexp	lua/src/lcode.c	/^static void freeexp (FuncState *fs, expdesc *e) {$/;"	f	file:
freeexps	lua/src/lcode.c	/^static void freeexps (FuncState *fs, expdesc *e1, expdesc *e2) {$/;"	f	file:
freelist	lua/src/lauxlib.c	593;"	d	file:
freeobj	lua/src/lgc.c	/^static void freeobj (lua_State *L, GCObject *o) {$/;"	f	file:
freereg	lua/src/lcode.c	/^static void freereg (FuncState *fs, int reg) {$/;"	f	file:
freereg	lua/src/lparser.h	/^  lu_byte freereg;  \/* first free register *\/$/;"	m	struct:FuncState
freestack	lua/src/lstate.c	/^static void freestack (lua_State *L) {$/;"	f	file:
fromstate	lua/src/lstate.c	70;"	d	file:
fs	lua/src/llex.h	/^  struct FuncState *fs;  \/* current function (parser) *\/$/;"	m	struct:LexState	typeref:struct:LexState::FuncState
fslib	lfs/src/lfs.c	/^static const struct luaL_Reg fslib[] = {$/;"	v	typeref:struct:luaL_Reg	file:
func	lua/src/lapi.c	/^  StkId func;$/;"	m	struct:CallS	file:
func	lua/src/lauxlib.h	/^  lua_CFunction func;$/;"	m	struct:luaL_Reg
func	lua/src/lstate.h	/^  StkId func;  \/* function index in the stack *\/$/;"	m	struct:CallInfo
funcargs	lua/src/lparser.c	/^static void funcargs (LexState *ls, expdesc *f, int line) {$/;"	f	file:
funcinfo	lua/src/ldebug.c	/^static void funcinfo (lua_Debug *ar, Closure *cl) {$/;"	f	file:
funcname	lua/src/lparser.c	/^static int funcname (LexState *ls, expdesc *v) {$/;"	f	file:
funcs	lua/src/lutf8lib.c	/^static const luaL_Reg funcs[] = {$/;"	v	file:
funcstat	lua/src/lparser.c	/^static void funcstat (LexState *ls, int line) {$/;"	f	file:
functions	lua/doc/contents.html	/^<H3><A NAME="functions">Lua functions<\/A><\/H3>$/;"	a
fvalue	lua/src/lobject.h	174;"	d
g	lua/doc/manual.html	/^     function g(a, b, ...) end$/;"	f
g	lua/src/lstate.c	/^  global_State g;$/;"	m	struct:LG	file:
g_iofile	lua/src/liolib.c	/^static int g_iofile (lua_State *L, const char *f, const char *mode) {$/;"	f	file:
g_read	lua/src/liolib.c	/^static int g_read (lua_State *L, FILE *f, int first) {$/;"	f	file:
g_write	lua/src/liolib.c	/^static int g_write (lua_State *L, FILE *f, int arg) {$/;"	f	file:
gc	lua/src/lobject.h	/^  GCObject *gc;    \/* collectable objects *\/$/;"	m	union:Value
gc	lua/src/lstate.h	/^  GCObject gc;  \/* common header *\/$/;"	m	union:GCUnion
gcfinnum	lua/src/lstate.h	/^  unsigned int gcfinnum;  \/* number of finalizers to call in each GC step *\/$/;"	m	struct:global_State
gckind	lua/src/lstate.h	/^  lu_byte gckind;  \/* kind of GC running *\/$/;"	m	struct:global_State
gclist	lua/src/lobject.h	/^  GCObject *gclist;$/;"	m	struct:Proto
gclist	lua/src/lobject.h	/^  GCObject *gclist;$/;"	m	struct:Table
gclist	lua/src/lstate.h	/^  GCObject *gclist;$/;"	m	struct:lua_State
gco2ccl	lua/src/lstate.h	210;"	d
gco2cl	lua/src/lstate.h	211;"	d
gco2lcl	lua/src/lstate.h	209;"	d
gco2p	lua/src/lstate.h	214;"	d
gco2t	lua/src/lstate.h	213;"	d
gco2th	lua/src/lstate.h	215;"	d
gco2ts	lua/src/lstate.h	206;"	d
gco2u	lua/src/lstate.h	208;"	d
gcpause	lua/src/lstate.h	/^  int gcpause;  \/* size of pause between successive GCs *\/$/;"	m	struct:global_State
gcrunning	lua/src/lstate.h	/^  lu_byte gcrunning;  \/* true if GC is running *\/$/;"	m	struct:global_State
gcstate	lua/src/lstate.h	/^  lu_byte gcstate;  \/* state of garbage collector *\/$/;"	m	struct:global_State
gcstepmul	lua/src/lstate.h	/^  int gcstepmul;  \/* GC 'granularity' *\/$/;"	m	struct:global_State
gctm	lua/src/loadlib.c	/^static int gctm (lua_State *L) {$/;"	f	file:
gcvalue	lua/src/lobject.h	167;"	d
generic_reader	lua/src/lbaselib.c	/^static const char *generic_reader (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
getBMode	lua/src/lopcodes.h	282;"	d
getCMode	lua/src/lopcodes.h	283;"	d
getF	lua/src/lauxlib.c	/^static const char *getF (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
getOpMode	lua/src/lopcodes.h	281;"	d
getS	lua/src/lauxlib.c	/^static const char *getS (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
get_cmd_fullpath	lsh.c	/^bool get_cmd_fullpath(char *fullpath, char *cmd){$/;"	f
get_dir	lfs/src/lfs.c	/^static int get_dir (lua_State *L) {$/;"	f	file:
get_dirfile	file.c	/^char *get_dirfile(char *dir, char *filename, char *fullpath){$/;"	f
get_dirfile_danger	lsh.c	/^static char *get_dirfile_danger(char *dir, char *filename){$/;"	f	file:
get_homefile	lsh.c	/^static char *get_homefile(){$/;"	f	file:
get_left_sister	utils.c	/^void * get_left_sister(unsigned *arr, unsigned x, int len){$/;"	f
get_lshfile	lsh.c	/^static char *get_lshfile(char *filename){$/;"	f	file:
get_prompt	lua/src/lua.c	/^static const char *get_prompt (lua_State *L, int firstline) {$/;"	f	file:
getarg	lua/src/lopcodes.h	93;"	d
getbinopr	lua/src/lparser.c	/^static BinOpr getbinopr (int op) {$/;"	f	file:
getboolfield	lua/src/loslib.c	/^static int getboolfield (lua_State *L, const char *key) {$/;"	f	file:
getcached	lua/src/lvm.c	/^static LClosure *getcached (Proto *p, UpVal **encup, StkId base) {$/;"	f	file:
getco	lua/src/lcorolib.c	/^static lua_State *getco (lua_State *L) {$/;"	f	file:
getcwd	lfs/src/lfs.c	90;"	d	file:
getcwd	lfs/src/lfs.h	16;"	d
getcwd_error	lfs/src/lfs.c	91;"	d	file:
getcwd_error	lfs/src/lfs.c	93;"	d	file:
getdebt	lua/src/lgc.c	/^static l_mem getdebt (global_State *g) {$/;"	f	file:
getdetails	lua/src/lstrlib.c	/^static KOption getdetails (Header *h, size_t totalsize,$/;"	f	file:
getfield	lua/src/loslib.c	/^static int getfield (lua_State *L, const char *key, int d, int delta) {$/;"	f	file:
getfreepos	lua/src/ltable.c	/^static Node *getfreepos (Table *t) {$/;"	f	file:
getfuncline	lua/src/ldebug.h	16;"	d
getfuncname	lua/src/ldebug.c	/^static const char *getfuncname (lua_State *L, CallInfo *ci, const char **name) {$/;"	f	file:
getgeneric	lua/src/ltable.c	/^static const TValue *getgeneric (Table *t, const TValue *key) {$/;"	f	file:
gethexa	lua/src/llex.c	/^static int gethexa (LexState *ls) {$/;"	f	file:
getinstruction	lua/src/lcode.h	44;"	d
getiofile	lua/src/liolib.c	/^static FILE *getiofile (lua_State *L, const char *findex) {$/;"	f	file:
getjump	lua/src/lcode.c	/^static int getjump (FuncState *fs, int pc) {$/;"	f	file:
getjumpcontrol	lua/src/lcode.c	/^static Instruction *getjumpcontrol (FuncState *fs, int pc) {$/;"	f	file:
getlocvar	lua/src/lparser.c	/^static LocVar *getlocvar (FuncState *fs, int i) {$/;"	f	file:
getnum	lua/src/lstrlib.c	/^static int getnum (const char **fmt, int df) {$/;"	f	file:
getnumlimit	lua/src/lstrlib.c	/^static int getnumlimit (Header *h, const char **fmt, int df) {$/;"	f	file:
getoah	lua/src/lstate.h	112;"	d
getobjname	lua/src/ldebug.c	/^static const char *getobjname (Proto *p, int lastpc, int reg,$/;"	f	file:
getoption	lua/src/lstrlib.c	/^static KOption getoption (Header *h, const char **fmt, int *size) {$/;"	f	file:
getproto	lua/src/lobject.h	468;"	d
getstr	lua/src/lobject.h	328;"	d
gettableProtected	lua/src/lvm.c	774;"	d	file:
getthread	lua/src/ldblib.c	/^static lua_State *getthread (lua_State *L, int *arg) {$/;"	f	file:
gettotalbytes	lua/src/lstate.h	224;"	d
getudatamem	lua/src/lobject.h	368;"	d
getunopr	lua/src/lparser.c	/^static UnOpr getunopr (int op) {$/;"	f	file:
getupvalname	lua/src/ldebug.c	/^static const char *getupvalname (CallInfo *ci, const TValue *o,$/;"	f	file:
getupvalref	lua/src/lapi.c	/^static UpVal **getupvalref (lua_State *L, int fidx, int n, LClosure **pf) {$/;"	f	file:
getuservalue	lua/src/lobject.h	377;"	d
gfasttm	lua/src/ltm.h	48;"	d
gkey	lua/src/ltable.h	19;"	d
globalL	lua/src/lua.c	/^static lua_State *globalL = NULL;$/;"	v	file:
global_State	lua/src/lstate.h	/^typedef struct global_State {$/;"	s
global_State	lua/src/lstate.h	/^} global_State;$/;"	t	typeref:struct:global_State
gmatch	lua/src/lstrlib.c	/^static int gmatch (lua_State *L) {$/;"	f	file:
gmatch_aux	lua/src/lstrlib.c	/^static int gmatch_aux (lua_State *L) {$/;"	f	file:
gnext	lua/src/ltable.h	15;"	d
gnode	lua/src/ltable.h	13;"	d
gnodelast	lua/src/lgc.c	107;"	d	file:
goto_control_pair	lsh.c	/^static bool goto_control_pair(char *control){$/;"	f	file:
gotostat	lua/src/lparser.c	/^static void gotostat (LexState *ls, int pc) {$/;"	f	file:
gpath	lsh.h	/^char gpath[PATH_ITEM_MAX][PATH_MAX];$/;"	v
gray	lua/src/lstate.h	/^  GCObject *gray;  \/* list of gray objects *\/$/;"	m	struct:global_State
gray2black	lua/src/lgc.h	99;"	d
grayagain	lua/src/lstate.h	/^  GCObject *grayagain;  \/* list of objects to be traversed atomically *\/$/;"	m	struct:global_State
growstack	lua/src/lapi.c	/^static void growstack (lua_State *L, void *ud) {$/;"	f	file:
gt	lua/src/lparser.h	/^  Labellist gt;  \/* list of pending gotos *\/$/;"	m	struct:Dyndata
gval	lua/src/ltable.h	14;"	d
h	lua/src/llex.h	/^  Table *h;  \/* to avoid collection\/reuse strings *\/$/;"	m	struct:LexState
h	lua/src/lstate.h	/^  struct Table h;$/;"	m	union:GCUnion	typeref:struct:GCUnion::Table
hFile	lfs/src/lfs.c	/^        intptr_t hFile;$/;"	m	struct:dir_data	file:
handle_luainit	lua/src/lua.c	/^static int handle_luainit (lua_State *L) {$/;"	f	file:
handle_script	lua/src/lua.c	/^static int handle_script (lua_State *L, char **argv) {$/;"	f	file:
has_E	lua/src/lua.c	455;"	d	file:
has_e	lua/src/lua.c	454;"	d	file:
has_error	lua/src/lua.c	451;"	d	file:
has_i	lua/src/lua.c	452;"	d	file:
has_v	lua/src/lua.c	453;"	d	file:
hash	lua/src/lobject.h	/^  unsigned int hash;$/;"	m	struct:TString
hash	lua/src/lstate.h	/^  TString **hash;$/;"	m	struct:stringtable
hash_one	han2pinyin.c	/^static inline u32 hash_one(u32 hash, u8 c){$/;"	f	file:
hashboolean	lua/src/ltable.c	61;"	d	file:
hashint	lua/src/ltable.c	62;"	d	file:
hashmod	lua/src/ltable.c	69;"	d	file:
hashpointer	lua/src/ltable.c	72;"	d	file:
hashpow2	lua/src/ltable.c	58;"	d	file:
hashstr	lua/src/ltable.c	60;"	d	file:
hashutf8	han2pinyin.c	/^u32 hashutf8(char *words){									assert( is_utf8_leader( words[0]) );$/;"	f
hasjumps	lua/src/lcode.c	36;"	d	file:
hasmultret	lua/src/lparser.c	37;"	d	file:
history	lfs/doc/us/index.html	/^<h2><a name="history"><\/a>History<\/h2>$/;"	a
history_file	lsh.c	/^const char const  *history_file  = ".lsh.history";$/;"	v
hnext	lua/src/lobject.h	/^    struct TString *hnext;  \/* linked list for hash table *\/$/;"	m	union:TString::__anon7	typeref:struct:TString::__anon7::TString
homedir	lsh.c	/^static char *homedir;$/;"	v	file:
hook	lua/src/lstate.h	/^  volatile lua_Hook hook;$/;"	m	struct:lua_State
hookcount	lua/src/lstate.h	/^  int hookcount;$/;"	m	struct:lua_State
hookf	lua/src/ldblib.c	/^static void hookf (lua_State *L, lua_Debug *ar) {$/;"	f	file:
hookmask	lua/src/lstate.h	/^  l_signalT hookmask;$/;"	m	struct:lua_State
hvalue	lua/src/lobject.h	175;"	d
i	lua/src/llex.h	/^  lua_Integer i;$/;"	m	union:__anon5
i	lua/src/llimits.h	/^  lua_Integer i;$/;"	m	union:__anon22
i	lua/src/lobject.h	/^  lua_Integer i;   \/* integer numbers *\/$/;"	m	union:Value
i	lua/src/lstrlib.c	/^  union { double d; void *p; lua_Integer i; lua_Number n; } u;$/;"	m	union:cD::__anon21	file:
iABC	lua/src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
iABx	lua/src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
iAsBx	lua/src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
iAx	lua/src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
i_ci	lua/src/lua.h	/^  struct CallInfo *i_ci;  \/* active function *\/$/;"	m	struct:lua_Debug	typeref:struct:lua_Debug::CallInfo
i_key	lua/src/lobject.h	/^  TKey i_key;$/;"	m	struct:Node
i_val	lua/src/lobject.h	/^  TValue i_val;$/;"	m	struct:Node
idx	lua/src/lobject.h	/^  lu_byte idx;  \/* index of upvalue (in stack or in outer function's list) *\/$/;"	m	struct:Upvaldesc
idx	lua/src/lparser.h	/^      short idx;  \/* index (R\/K) *\/$/;"	m	struct:expdesc::__anon14::__anon15
idx	lua/src/lparser.h	/^  short idx;  \/* variable index in stack *\/$/;"	m	struct:Vardesc
ifstat	lua/src/lparser.c	/^static void ifstat (LexState *ls, int line) {$/;"	f	file:
inclinenumber	lua/src/llex.c	/^static void inclinenumber (LexState *ls) {$/;"	f	file:
incomplete	lua/src/lua.c	/^static int incomplete (lua_State *L, int status) {$/;"	f	file:
ind	lua/src/lparser.h	/^    } ind;$/;"	m	union:expdesc::__anon14	typeref:struct:expdesc::__anon14::__anon15
index	lua/doc/contents.html	/^<H2><A NAME="index">Index<\/A><\/H2>$/;"	a
index2addr	lua/src/lapi.c	/^static TValue *index2addr (lua_State *L, int idx) {$/;"	f	file:
info	lua/src/lparser.h	/^    int info;  \/* for generic use *\/$/;"	m	union:expdesc::__anon14
init	lua/src/lstrlib.c	/^    const char *init;$/;"	m	struct:MatchState::__anon19	file:
init_exp	lua/src/lparser.c	/^static void init_exp (expdesc *e, expkind k, int i) {$/;"	f	file:
init_registry	lua/src/lstate.c	/^static void init_registry (lua_State *L, global_State *g) {$/;"	f	file:
init_utf8_hashtbl	han2pinyin.c	/^static void init_utf8_hashtbl(void){$/;"	f	file:
initb	lua/src/lauxlib.h	/^  char initb[LUAL_BUFFERSIZE];  \/* initial buffer *\/$/;"	m	struct:luaL_Buffer
initheader	lua/src/lstrlib.c	/^static void initheader (lua_State *L, Header *h) {$/;"	f	file:
input_head	lsh.c	/^char input_head[64];$/;"	v
instack	lua/src/lobject.h	/^  lu_byte instack;  \/* whether it is in stack (register) *\/$/;"	m	struct:Upvaldesc
install	lua/doc/readme.html	/^<H2><A NAME="install">Installing Lua<\/A><\/H2>$/;"	a
installation	lfs/doc/us/manual.html	/^<h2><a name="installation"><\/a>Installation<\/h2>$/;"	a
int_arr_a	utils.c	/^int int_arr_a(int *arr, int N, int at, int len){$/;"	f
intarith	lua/src/lobject.c	/^static lua_Integer intarith (lua_State *L, int op, lua_Integer v1,$/;"	f	file:
internshrstr	lua/src/lstring.c	/^static TString *internshrstr (lua_State *L, const char *str, size_t l) {$/;"	f	file:
interp	word.h	/^const struct interp_item interp[] ={$/;"	v	typeref:struct:interp_item
interp_item	word.h	/^struct interp_item{$/;"	s
interror	lua/src/lauxlib.c	/^static void interror (lua_State *L, int arg) {$/;"	f	file:
intop	lua/src/lvm.h	46;"	d
introduction	lfs/doc/us/manual.html	/^<h2><a name="introduction"><\/a>Introduction<\/h2>$/;"	a
invalidateTMcache	lua/src/ltable.h	27;"	d
io_close	lua/src/liolib.c	/^static int io_close (lua_State *L) {$/;"	f	file:
io_fclose	lua/src/liolib.c	/^static int io_fclose (lua_State *L) {$/;"	f	file:
io_flush	lua/src/liolib.c	/^static int io_flush (lua_State *L) {$/;"	f	file:
io_input	lua/src/liolib.c	/^static int io_input (lua_State *L) {$/;"	f	file:
io_lines	lua/src/liolib.c	/^static int io_lines (lua_State *L) {$/;"	f	file:
io_noclose	lua/src/liolib.c	/^static int io_noclose (lua_State *L) {$/;"	f	file:
io_open	lua/src/liolib.c	/^static int io_open (lua_State *L) {$/;"	f	file:
io_output	lua/src/liolib.c	/^static int io_output (lua_State *L) {$/;"	f	file:
io_pclose	lua/src/liolib.c	/^static int io_pclose (lua_State *L) {$/;"	f	file:
io_popen	lua/src/liolib.c	/^static int io_popen (lua_State *L) {$/;"	f	file:
io_read	lua/src/liolib.c	/^static int io_read (lua_State *L) {$/;"	f	file:
io_readline	lua/src/liolib.c	/^static int io_readline (lua_State *L) {$/;"	f	file:
io_tmpfile	lua/src/liolib.c	/^static int io_tmpfile (lua_State *L) {$/;"	f	file:
io_type	lua/src/liolib.c	/^static int io_type (lua_State *L) {$/;"	f	file:
io_write	lua/src/liolib.c	/^static int io_write (lua_State *L) {$/;"	f	file:
iolib	lua/src/liolib.c	/^static const luaL_Reg iolib[] = {$/;"	v	file:
ipairsaux	lua/src/lbaselib.c	/^static int ipairsaux (lua_State *L) {$/;"	f	file:
isLfunction	lua/src/lobject.h	466;"	d
isLua	lua/src/lstate.h	108;"	d
is_lsh_option	lsh.c	/^static bool is_lsh_option(char *name){$/;"	f	file:
is_utf8_leader	han2pinyin.c	/^static bool is_utf8_leader(char c){$/;"	f	file:
is_vararg	lua/src/lobject.h	/^  lu_byte is_vararg;  \/* 2: declared vararg; 1: uses vararg *\/$/;"	m	struct:Proto
isblack	lua/src/lgc.h	88;"	d
iscleared	lua/src/lgc.c	/^static int iscleared (global_State *g, const TValue *o) {$/;"	f	file:
isclosed	lua/src/liolib.c	146;"	d	file:
iscollectable	lua/src/lobject.h	184;"	d
iscont	lua/src/lutf8lib.c	25;"	d	file:
isdead	lua/src/lgc.h	96;"	d
isdeadm	lua/src/lgc.h	95;"	d
isdummy	lua/src/ltable.c	77;"	d	file:
isemptystr	lua/src/lvm.c	457;"	d	file:
isgray	lua/src/lgc.h	89;"	d
isinstack	lua/src/ldebug.c	/^static int isinstack (CallInfo *ci, const TValue *o) {$/;"	f	file:
isintwups	lua/src/lfunc.h	22;"	d
islittle	lua/src/lstrlib.c	/^  int islittle;$/;"	m	struct:Header	file:
isloop	lua/src/lparser.c	/^  lu_byte isloop;  \/* true if 'block' is a loop *\/$/;"	m	struct:BlockCnt	file:
isneg	lua/src/lobject.c	/^static int isneg (const char **s) {$/;"	f	file:
ispseudo	lua/src/lapi.c	46;"	d	file:
isreserved	lua/src/lstring.h	27;"	d
isstackindex	lua/src/lapi.c	52;"	d	file:
issweepphase	lua/src/lgc.h	49;"	d
istailcall	lua/src/lua.h	/^  char istailcall;	\/* (t) *\/$/;"	m	struct:lua_Debug
isupvalue	lua/src/lapi.c	49;"	d	file:
isvalid	lua/src/lapi.c	43;"	d	file:
isvararg	lua/src/lua.h	/^  char isvararg;        \/* (u) *\/$/;"	m	struct:lua_Debug
iswhite	lua/src/lgc.h	87;"	d
iter_aux	lua/src/lutf8lib.c	/^static int iter_aux (lua_State *L) {$/;"	f	file:
iter_codes	lua/src/lutf8lib.c	/^static int iter_codes (lua_State *L) {$/;"	f	file:
ival	lua/src/lparser.h	/^    lua_Integer ival;    \/* for VKINT *\/$/;"	m	union:expdesc::__anon14
ivalue	lua/src/lobject.h	163;"	d
jmp_space	vi.c	/^char *jmp_space( char *str ){$/;"	f
jpc	lua/src/lparser.h	/^  int jpc;  \/* list of pending jumps to 'pc' *\/$/;"	m	struct:FuncState
jumponcond	lua/src/lcode.c	/^static int jumponcond (FuncState *fs, expdesc *e, int cond) {$/;"	f	file:
k	lua/src/lobject.h	/^  TValue *k;  \/* constants used by the function *\/$/;"	m	struct:Proto
k	lua/src/lparser.h	/^  expkind k;$/;"	m	struct:expdesc
k	lua/src/lstate.h	/^      lua_KFunction k;  \/* continuation in case of yields *\/$/;"	m	struct:CallInfo::__anon10::__anon12
keepinvariant	lua/src/lgc.h	61;"	d
keyfromval	lua/src/ltable.h	31;"	d
kname	lua/src/ldebug.c	/^static void kname (Proto *p, int pc, int c, const char **name) {$/;"	f	file:
l	lua/src/llimits.h	/^  long l;$/;"	m	union:__anon22
l	lua/src/lobject.h	/^  LClosure l;$/;"	m	union:Closure
l	lua/src/lstate.c	/^  LX l;$/;"	m	struct:LG	file:
l	lua/src/lstate.c	/^  lua_State l;$/;"	m	struct:LX	file:
l	lua/src/lstate.h	/^    } l;$/;"	m	union:CallInfo::__anon10	typeref:struct:CallInfo::__anon10::__anon11
l_G	lua/src/lstate.h	/^  global_State *l_G;$/;"	m	struct:lua_State
l_alloc	lua/src/lauxlib.c	/^static void *l_alloc (void *ud, void *ptr, size_t osize, size_t nsize) {$/;"	f	file:
l_castS2U	lua/src/llimits.h	122;"	d
l_castU2S	lua/src/llimits.h	131;"	d
l_checkmode	lua/src/liolib.c	40;"	d	file:
l_checktime	lua/src/loslib.c	/^static time_t l_checktime (lua_State *L, int arg) {$/;"	f	file:
l_floor	lua/src/luaconf.h	422;"	d
l_fseek	lua/src/liolib.c	109;"	d	file:
l_fseek	lua/src/liolib.c	117;"	d	file:
l_fseek	lua/src/liolib.c	124;"	d	file:
l_ftell	lua/src/liolib.c	110;"	d	file:
l_ftell	lua/src/liolib.c	118;"	d	file:
l_ftell	lua/src/liolib.c	125;"	d	file:
l_getc	lua/src/liolib.c	85;"	d	file:
l_getc	lua/src/liolib.c	89;"	d	file:
l_gmtime	lua/src/loslib.c	86;"	d	file:
l_gmtime	lua/src/loslib.c	92;"	d	file:
l_hashfloat	lua/src/ltable.c	/^static int l_hashfloat (lua_Number n) {$/;"	f	file:
l_inspectstat	lua/src/lauxlib.c	262;"	d	file:
l_inspectstat	lua/src/lauxlib.c	268;"	d	file:
l_intfitsf	lua/src/lvm.c	59;"	d	file:
l_isfalse	lua/src/lobject.h	181;"	d
l_localtime	lua/src/loslib.c	87;"	d	file:
l_localtime	lua/src/loslib.c	93;"	d	file:
l_lockfile	lua/src/liolib.c	86;"	d	file:
l_lockfile	lua/src/liolib.c	90;"	d	file:
l_mathlim	lua/src/luaconf.h	446;"	d
l_mathlim	lua/src/luaconf.h	462;"	d
l_mathlim	lua/src/luaconf.h	477;"	d
l_mathop	lua/src/luaconf.h	453;"	d
l_mathop	lua/src/luaconf.h	469;"	d
l_mathop	lua/src/luaconf.h	484;"	d
l_mathop	lua/src/luaconf.h	626;"	d
l_mathop	lua/src/luaconf.h	628;"	d
l_mem	lua/src/llimits.h	/^typedef LUAI_MEM l_mem;$/;"	t
l_mem	lua/src/llimits.h	/^typedef long l_mem;$/;"	t
l_mem	lua/src/llimits.h	/^typedef ptrdiff_t l_mem;$/;"	t
l_message	lua/src/lua.c	/^static void l_message (const char *pname, const char *msg) {$/;"	f	file:
l_noret	lua/src/llimits.h	139;"	d
l_noret	lua/src/llimits.h	141;"	d
l_noret	lua/src/llimits.h	143;"	d
l_pclose	lua/src/liolib.c	59;"	d	file:
l_pclose	lua/src/liolib.c	64;"	d	file:
l_pclose	lua/src/liolib.c	73;"	d	file:
l_popen	lua/src/liolib.c	58;"	d	file:
l_popen	lua/src/liolib.c	63;"	d	file:
l_popen	lua/src/liolib.c	69;"	d	file:
l_print	lua/src/lua.c	/^static void l_print (lua_State *L) {$/;"	f	file:
l_pushtime	lua/src/loslib.c	67;"	d	file:
l_rand	lua/src/lmathlib.c	28;"	d	file:
l_rand	lua/src/lmathlib.c	32;"	d	file:
l_randomizePivot	lua/src/ltablib.c	/^static unsigned int l_randomizePivot (void) {$/;"	f	file:
l_registry	lua/src/lstate.h	/^  TValue l_registry;$/;"	m	struct:global_State
l_seeknum	lua/src/liolib.c	111;"	d	file:
l_seeknum	lua/src/liolib.c	119;"	d	file:
l_seeknum	lua/src/liolib.c	126;"	d	file:
l_setbit	lua/src/lgc.h	72;"	d
l_signalT	lua/src/lstate.h	42;"	d
l_sprintf	lua/src/luaconf.h	591;"	d
l_sprintf	lua/src/luaconf.h	593;"	d
l_srand	lua/src/lmathlib.c	29;"	d	file:
l_srand	lua/src/lmathlib.c	33;"	d	file:
l_str2d	lua/src/lobject.c	/^static const char *l_str2d (const char *s, lua_Number *result) {$/;"	f	file:
l_str2dloc	lua/src/lobject.c	/^static const char *l_str2dloc (const char *s, lua_Number *result, int mode) {$/;"	f	file:
l_str2int	lua/src/lobject.c	/^static const char *l_str2int (const char *s, lua_Integer *result) {$/;"	f	file:
l_strcmp	lua/src/lvm.c	/^static int l_strcmp (const TString *ls, const TString *rs) {$/;"	f	file:
l_timet	lua/src/loslib.c	66;"	d	file:
l_uacInt	lua/src/llimits.h	/^typedef LUAI_UACINT l_uacInt;$/;"	t
l_uacNumber	lua/src/llimits.h	/^typedef LUAI_UACNUMBER l_uacNumber;$/;"	t
l_unlockfile	lua/src/liolib.c	87;"	d	file:
l_unlockfile	lua/src/liolib.c	91;"	d	file:
label	lua/src/lparser.h	/^  Labellist label;   \/* list of active labels *\/$/;"	m	struct:Dyndata
labelstat	lua/src/lparser.c	/^static void labelstat (LexState *ls, TString *label, int line) {$/;"	f	file:
laction	lua/src/lua.c	/^static void laction (int i) {$/;"	f	file:
lapi_c	lua/src/lapi.c	7;"	d	file:
lapi_h	lua/src/lapi.h	8;"	d
last_search	vi.h	/^	char last_search[VI_REGEX_LEN];$/;"	m	struct:vi
lastfree	lua/src/lobject.h	/^  Node *lastfree;  \/* any free position is before this position *\/$/;"	m	struct:Table
lastlevel	lua/src/lauxlib.c	/^static int lastlevel (lua_State *L) {$/;"	f	file:
lastline	lua/src/llex.h	/^  int lastline;  \/* line of last token 'consumed' *\/$/;"	m	struct:LexState
lastlinedefined	lua/src/lobject.h	/^  int lastlinedefined;  \/* debug information  *\/$/;"	m	struct:Proto
lastlinedefined	lua/src/lua.h	/^  int lastlinedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug
lastlistfield	lua/src/lparser.c	/^static void lastlistfield (FuncState *fs, struct ConsControl *cc) {$/;"	f	file:
lastmatch	lua/src/lstrlib.c	/^  const char *lastmatch;  \/* end of last match *\/$/;"	m	struct:GMatchState	file:
lasttarget	lua/src/lparser.h	/^  int lasttarget;   \/* 'label' of last 'jump label' *\/$/;"	m	struct:FuncState
lauxlib_c	lua/src/lauxlib.c	7;"	d	file:
lauxlib_h	lua/src/lauxlib.h	9;"	d
lbaselib_c	lua/src/lbaselib.c	7;"	d	file:
lbitlib_c	lua/src/lbitlib.c	7;"	d	file:
lcode_c	lua/src/lcode.c	7;"	d	file:
lcode_h	lua/src/lcode.h	8;"	d
lcorolib_c	lua/src/lcorolib.c	7;"	d	file:
lctype_c	lua/src/lctype.c	7;"	d	file:
lctype_h	lua/src/lctype.h	8;"	d
ldblib_c	lua/src/ldblib.c	7;"	d	file:
ldebug_c	lua/src/ldebug.c	7;"	d	file:
ldebug_h	lua/src/ldebug.h	8;"	d
ldo_c	lua/src/ldo.c	7;"	d	file:
ldo_h	lua/src/ldo.h	8;"	d
ldump_c	lua/src/ldump.c	7;"	d	file:
leaveblock	lua/src/lparser.c	/^static void leaveblock (FuncState *fs) {$/;"	f	file:
leavelevel	lua/src/lparser.c	336;"	d	file:
left	lua/src/lparser.c	/^  lu_byte left;  \/* left priority for each binary operator *\/$/;"	m	struct:__anon6	file:
len	lua/src/lobject.h	/^  size_t len;  \/* number of bytes *\/$/;"	m	struct:Udata
len	lua/src/lstrlib.c	/^    ptrdiff_t len;$/;"	m	struct:MatchState::__anon19	file:
len_of_line	vi.h	/^	union{int *len_of_line; int *len_of_lines;};$/;"	m	union:vi::__anon31
len_of_lines	vi.h	/^	union{int *len_of_line; int *len_of_lines;};$/;"	m	union:vi::__anon31
len_of_yline	vi.h	/^	union{int *len_of_yline;int *len_of_ylines;};	$/;"	m	union:vi::__anon34
len_of_yline_fix	vi.h	/^	int *len_of_yline_fix;$/;"	m	struct:vi
len_of_ylines	vi.h	/^	union{int *len_of_yline;int *len_of_ylines;};	$/;"	m	union:vi::__anon34
level	lua/src/lstrlib.c	/^  unsigned char level;  \/* total number of captures (finished or unfinished) *\/$/;"	m	struct:MatchState	file:
lexerror	lua/src/llex.c	/^static l_noret lexerror (LexState *ls, const char *msg, int token) {$/;"	f	file:
lfs.collect	init.lua	/^function lfs.collect(path)$/;"	f
lfs.rmdir	init.lua	/^function lfs.rmdir(path)$/;"	f
lfs_Lock	lfs/src/lfs.c	/^typedef struct lfs_Lock {$/;"	s	file:
lfs_Lock	lfs/src/lfs.c	/^} lfs_Lock;$/;"	t	typeref:struct:lfs_Lock	file:
lfs_f_setmode	lfs/src/lfs.c	/^static int lfs_f_setmode(lua_State *L) {$/;"	f	file:
lfs_g_setmode	lfs/src/lfs.c	/^static int lfs_g_setmode (lua_State *L, FILE *f, int arg) {$/;"	f	file:
lfs_lock_dir	lfs/src/lfs.c	/^static int lfs_lock_dir(lua_State *L) {$/;"	f	file:
lfs_setmode	lfs/src/lfs.c	119;"	d	file:
lfs_setmode	lfs/src/lfs.c	122;"	d	file:
lfs_setmode	lfs/src/lfs.c	130;"	d	file:
lfs_unlock_dir	lfs/src/lfs.c	/^static int lfs_unlock_dir(lua_State *L) {$/;"	f	file:
lfunc_c	lua/src/lfunc.c	7;"	d	file:
lfunc_h	lua/src/lfunc.h	8;"	d
lgc_c	lua/src/lgc.c	7;"	d	file:
lgc_h	lua/src/lgc.h	8;"	d
library	lua/doc/contents.html	/^<H3><A NAME="library">standard library<\/A><\/H3>$/;"	a
libsize	lua/src/lauxlib.c	/^static int libsize (const luaL_Reg *l) {$/;"	f	file:
license	lua/doc/readme.html	/^<H2><A NAME="license">License<\/A><\/H2>$/;"	a
line	lua/src/lparser.h	/^  int line;  \/* line where it appeared *\/$/;"	m	struct:Labeldesc
linedefined	lua/src/lobject.h	/^  int linedefined;  \/* debug information  *\/$/;"	m	struct:Proto
linedefined	lua/src/lua.h	/^  int linedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug
lineinfo	lua/src/lobject.h	/^  int *lineinfo;  \/* map from opcodes to source lines (debug information) *\/$/;"	m	struct:Proto
linenumber	lua/src/llex.h	/^  int linenumber;  \/* input line counter *\/$/;"	m	struct:LexState
lines	vi.h	/^	char **lines;$/;"	m	struct:vi
linit_c	lua/src/linit.c	8;"	d	file:
link	lfs/doc/us/manual.html	/^    <dt><a name="link"><\/a><strong><code>lfs.link (old, new[, symlink])<\/code><\/strong><\/dt>$/;"	a
link_info	lfs/src/lfs.c	/^static int link_info (lua_State *L) {$/;"	f	file:
linkgclist	lua/src/lgc.c	113;"	d	file:
liolib_c	lua/src/liolib.c	7;"	d	file:
lisdigit	lua/src/lctype.h	59;"	d
lisdigit	lua/src/lctype.h	85;"	d
lislalnum	lua/src/lctype.h	58;"	d
lislalnum	lua/src/lctype.h	84;"	d
lislalpha	lua/src/lctype.h	57;"	d
lislalpha	lua/src/lctype.h	83;"	d
lisprint	lua/src/lctype.h	61;"	d
lisprint	lua/src/lctype.h	87;"	d
lisspace	lua/src/lctype.h	60;"	d
lisspace	lua/src/lctype.h	86;"	d
listfield	lua/src/lparser.c	/^static void listfield (LexState *ls, struct ConsControl *cc) {$/;"	f	file:
listing	lua/src/luac.c	/^static int listing=0;			\/* list bytecodes? *\/$/;"	v	file:
lisxdigit	lua/src/lctype.h	62;"	d
lisxdigit	lua/src/lctype.h	88;"	d
little	lua/src/lstrlib.c	/^  char little;  \/* true iff machine is little endian *\/$/;"	m	union:__anon20	file:
ll_funcs	lua/src/loadlib.c	/^static const luaL_Reg ll_funcs[] = {$/;"	v	file:
ll_loadlib	lua/src/loadlib.c	/^static int ll_loadlib (lua_State *L) {$/;"	f	file:
ll_module	lua/src/loadlib.c	/^static int ll_module (lua_State *L) {$/;"	f	file:
ll_require	lua/src/loadlib.c	/^static int ll_require (lua_State *L) {$/;"	f	file:
ll_searchpath	lua/src/loadlib.c	/^static int ll_searchpath (lua_State *L) {$/;"	f	file:
ll_seeall	lua/src/loadlib.c	/^static int ll_seeall (lua_State *L) {$/;"	f	file:
llex	lua/src/llex.c	/^static int llex (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
llex_c	lua/src/llex.c	7;"	d	file:
llex_h	lua/src/llex.h	8;"	d
llimits_h	lua/src/llimits.h	8;"	d
lmathlib_c	lua/src/lmathlib.c	7;"	d	file:
lmax	vi.h	/^	int lmax;		\/*index of the last line*\/$/;"	m	struct:vi
lmem_c	lua/src/lmem.c	7;"	d	file:
lmem_h	lua/src/lmem.h	8;"	d
lmemfind	lua/src/lstrlib.c	/^static const char *lmemfind (const char *s1, size_t l1,$/;"	f	file:
lmod	lua/src/lobject.h	514;"	d
ln	lfs/src/lfs.c	/^  char *ln;$/;"	m	struct:lfs_Lock	file:
lnglen	lua/src/lobject.h	/^    size_t lnglen;  \/* length for long strings *\/$/;"	m	union:TString::__anon7
load_aux	lua/src/lbaselib.c	/^static int load_aux (lua_State *L, int status, int envidx) {$/;"	f	file:
loadedlibs	lua/src/linit.c	/^static const luaL_Reg loadedlibs[] = {$/;"	v	file:
loadfunc	lua/src/loadlib.c	/^static int loadfunc (lua_State *L, const char *filename, const char *modname) {$/;"	f	file:
loadlib_c	lua/src/loadlib.c	11;"	d	file:
loadline	lua/src/lua.c	/^static int loadline (lua_State *L) {$/;"	f	file:
lobject_c	lua/src/lobject.c	7;"	d	file:
lobject_h	lua/src/lobject.h	9;"	d
localfunc	lua/src/lparser.c	/^static void localfunc (LexState *ls) {$/;"	f	file:
localstat	lua/src/lparser.c	/^static void localstat (LexState *ls) {$/;"	f	file:
lock	lfs/doc/us/manual.html	/^    <dt><a name="lock"><\/a><strong><code>lfs.lock (filehandle, mode[, start[, length]])<\/code><\/strong><\/dt>$/;"	a
lock_create_meta	lfs/src/lfs.c	/^static int lock_create_meta (lua_State *L) {$/;"	f	file:
lock_dir	lfs/doc/us/manual.html	/^    <dt><a name="lock_dir"><\/a><strong><code>lfs.lock_dir(path, [seconds_stale])<\/code><\/strong><\/dt>$/;"	a
locvars	lua/src/lobject.h	/^  LocVar *locvars;  \/* information about local variables (debug information) *\/$/;"	m	struct:Proto
lookahead	lua/src/llex.h	/^  Token lookahead;  \/* look ahead token *\/$/;"	m	struct:LexState
lookforfunc	lua/src/loadlib.c	/^static int lookforfunc (lua_State *L, const char *path, const char *sym) {$/;"	f	file:
lopcodes_c	lua/src/lopcodes.c	7;"	d	file:
lopcodes_h	lua/src/lopcodes.h	8;"	d
loslib_c	lua/src/loslib.c	7;"	d	file:
lparser_c	lua/src/lparser.c	7;"	d	file:
lparser_h	lua/src/lparser.h	8;"	d
lprefix_h	lua/src/lprefix.h	8;"	d
ls	lua/src/lparser.h	/^  struct LexState *ls;  \/* lexical state *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::LexState
lsh_cd	lsh.c	/^static bool lsh_cd(char *path){$/;"	f	file:
lsh_cmd	lsh.h	/^struct lsh_cmd{$/;"	s
lsh_run_cmd	lsh.c	/^int lsh_run_cmd( lua_State *L ){	$/;"	f
lsh_sync_env	lsh.c	/^static bool lsh_sync_env(){$/;"	f	file:
lshcmds	lsh.h	/^struct lsh_cmd lshcmds[LSH_CMD_MAX];$/;"	v	typeref:struct:lsh_cmd
lshdir	lsh.c	/^char lshdir[128];$/;"	v
lshopt	makefile	/^lshopt=-I.\/lua -lm -ldl -lreadline $/;"	m
lsizenode	lua/src/lobject.h	/^  lu_byte lsizenode;  \/* log2 of size of 'node' array *\/$/;"	m	struct:Table
lstate_c	lua/src/lstate.c	7;"	d	file:
lstate_h	lua/src/lstate.h	8;"	d
lstop	lua/src/lua.c	/^static void lstop (lua_State *L, lua_Debug *ar) {$/;"	f	file:
lstring_c	lua/src/lstring.c	7;"	d	file:
lstring_h	lua/src/lstring.h	8;"	d
lstrlib_c	lua/src/lstrlib.c	7;"	d	file:
lsys_load	lua/src/loadlib.c	/^static void *lsys_load (lua_State *L, const char *path, int seeglb) {$/;"	f	file:
lsys_sym	lua/src/loadlib.c	/^static lua_CFunction lsys_sym (lua_State *L, void *lib, const char *sym) {$/;"	f	file:
lsys_unloadlib	lua/src/loadlib.c	/^static void lsys_unloadlib (void *lib) {$/;"	f	file:
ltable_c	lua/src/ltable.c	7;"	d	file:
ltable_h	lua/src/ltable.h	8;"	d
ltablib_c	lua/src/ltablib.c	7;"	d	file:
ltm_c	lua/src/ltm.c	7;"	d	file:
ltm_h	lua/src/ltm.h	8;"	d
ltolower	lua/src/lctype.h	67;"	d
ltolower	lua/src/lctype.h	90;"	d
lu_byte	lua/src/llimits.h	/^typedef unsigned char lu_byte;$/;"	t
lu_mem	lua/src/llimits.h	/^typedef LUAI_UMEM lu_mem;$/;"	t
lu_mem	lua/src/llimits.h	/^typedef size_t lu_mem;$/;"	t
lu_mem	lua/src/llimits.h	/^typedef unsigned long lu_mem;$/;"	t
luaB_assert	lua/src/lbaselib.c	/^static int luaB_assert (lua_State *L) {$/;"	f	file:
luaB_auxwrap	lua/src/lcorolib.c	/^static int luaB_auxwrap (lua_State *L) {$/;"	f	file:
luaB_cocreate	lua/src/lcorolib.c	/^static int luaB_cocreate (lua_State *L) {$/;"	f	file:
luaB_collectgarbage	lua/src/lbaselib.c	/^static int luaB_collectgarbage (lua_State *L) {$/;"	f	file:
luaB_coresume	lua/src/lcorolib.c	/^static int luaB_coresume (lua_State *L) {$/;"	f	file:
luaB_corunning	lua/src/lcorolib.c	/^static int luaB_corunning (lua_State *L) {$/;"	f	file:
luaB_costatus	lua/src/lcorolib.c	/^static int luaB_costatus (lua_State *L) {$/;"	f	file:
luaB_cowrap	lua/src/lcorolib.c	/^static int luaB_cowrap (lua_State *L) {$/;"	f	file:
luaB_dofile	lua/src/lbaselib.c	/^static int luaB_dofile (lua_State *L) {$/;"	f	file:
luaB_error	lua/src/lbaselib.c	/^static int luaB_error (lua_State *L) {$/;"	f	file:
luaB_getmetatable	lua/src/lbaselib.c	/^static int luaB_getmetatable (lua_State *L) {$/;"	f	file:
luaB_ipairs	lua/src/lbaselib.c	/^static int luaB_ipairs (lua_State *L) {$/;"	f	file:
luaB_load	lua/src/lbaselib.c	/^static int luaB_load (lua_State *L) {$/;"	f	file:
luaB_loadfile	lua/src/lbaselib.c	/^static int luaB_loadfile (lua_State *L) {$/;"	f	file:
luaB_next	lua/src/lbaselib.c	/^static int luaB_next (lua_State *L) {$/;"	f	file:
luaB_pairs	lua/src/lbaselib.c	/^static int luaB_pairs (lua_State *L) {$/;"	f	file:
luaB_pcall	lua/src/lbaselib.c	/^static int luaB_pcall (lua_State *L) {$/;"	f	file:
luaB_print	lua/src/lbaselib.c	/^static int luaB_print (lua_State *L) {$/;"	f	file:
luaB_rawequal	lua/src/lbaselib.c	/^static int luaB_rawequal (lua_State *L) {$/;"	f	file:
luaB_rawget	lua/src/lbaselib.c	/^static int luaB_rawget (lua_State *L) {$/;"	f	file:
luaB_rawlen	lua/src/lbaselib.c	/^static int luaB_rawlen (lua_State *L) {$/;"	f	file:
luaB_rawset	lua/src/lbaselib.c	/^static int luaB_rawset (lua_State *L) {$/;"	f	file:
luaB_select	lua/src/lbaselib.c	/^static int luaB_select (lua_State *L) {$/;"	f	file:
luaB_setmetatable	lua/src/lbaselib.c	/^static int luaB_setmetatable (lua_State *L) {$/;"	f	file:
luaB_tonumber	lua/src/lbaselib.c	/^static int luaB_tonumber (lua_State *L) {$/;"	f	file:
luaB_tostring	lua/src/lbaselib.c	/^static int luaB_tostring (lua_State *L) {$/;"	f	file:
luaB_type	lua/src/lbaselib.c	/^static int luaB_type (lua_State *L) {$/;"	f	file:
luaB_xpcall	lua/src/lbaselib.c	/^static int luaB_xpcall (lua_State *L) {$/;"	f	file:
luaB_yield	lua/src/lcorolib.c	/^static int luaB_yield (lua_State *L) {$/;"	f	file:
luaB_yieldable	lua/src/lcorolib.c	/^static int luaB_yieldable (lua_State *L) {$/;"	f	file:
luaC_barrier	lua/src/lgc.h	118;"	d
luaC_barrier_	lua/src/lgc.c	/^void luaC_barrier_ (lua_State *L, GCObject *o, GCObject *v) {$/;"	f
luaC_barrierback	lua/src/lgc.h	122;"	d
luaC_barrierback_	lua/src/lgc.c	/^void luaC_barrierback_ (lua_State *L, Table *t) {$/;"	f
luaC_checkGC	lua/src/lgc.h	115;"	d
luaC_checkfinalizer	lua/src/lgc.c	/^void luaC_checkfinalizer (lua_State *L, GCObject *o, Table *mt) {$/;"	f
luaC_condGC	lua/src/lgc.h	110;"	d
luaC_fix	lua/src/lgc.c	/^void luaC_fix (lua_State *L, GCObject *o) {$/;"	f
luaC_freeallobjects	lua/src/lgc.c	/^void luaC_freeallobjects (lua_State *L) {$/;"	f
luaC_fullgc	lua/src/lgc.c	/^void luaC_fullgc (lua_State *L, int isemergency) {$/;"	f
luaC_newobj	lua/src/lgc.c	/^GCObject *luaC_newobj (lua_State *L, int tt, size_t sz) {$/;"	f
luaC_objbarrier	lua/src/lgc.h	126;"	d
luaC_runtilstate	lua/src/lgc.c	/^void luaC_runtilstate (lua_State *L, int statesmask) {$/;"	f
luaC_step	lua/src/lgc.c	/^void luaC_step (lua_State *L) {$/;"	f
luaC_upvalbarrier	lua/src/lgc.h	130;"	d
luaC_upvalbarrier_	lua/src/lgc.c	/^void luaC_upvalbarrier_ (lua_State *L, UpVal *uv) {$/;"	f
luaC_upvdeccount	lua/src/lgc.c	/^void luaC_upvdeccount (lua_State *L, UpVal *uv) {$/;"	f
luaC_white	lua/src/lgc.h	101;"	d
luaD_call	lua/src/ldo.c	/^void luaD_call (lua_State *L, StkId func, int nResults) {$/;"	f
luaD_callnoyield	lua/src/ldo.c	/^void luaD_callnoyield (lua_State *L, StkId func, int nResults) {$/;"	f
luaD_checkstack	lua/src/ldo.h	28;"	d
luaD_checkstackaux	lua/src/ldo.h	23;"	d
luaD_growstack	lua/src/ldo.c	/^void luaD_growstack (lua_State *L, int n) {$/;"	f
luaD_hook	lua/src/ldo.c	/^void luaD_hook (lua_State *L, int event, int line) {$/;"	f
luaD_inctop	lua/src/ldo.c	/^void luaD_inctop (lua_State *L) {$/;"	f
luaD_pcall	lua/src/ldo.c	/^int luaD_pcall (lua_State *L, Pfunc func, void *u,$/;"	f
luaD_poscall	lua/src/ldo.c	/^int luaD_poscall (lua_State *L, CallInfo *ci, StkId firstResult, int nres) {$/;"	f
luaD_precall	lua/src/ldo.c	/^int luaD_precall (lua_State *L, StkId func, int nresults) {$/;"	f
luaD_protectedparser	lua/src/ldo.c	/^int luaD_protectedparser (lua_State *L, ZIO *z, const char *name,$/;"	f
luaD_rawrunprotected	lua/src/ldo.c	/^int luaD_rawrunprotected (lua_State *L, Pfunc f, void *ud) {$/;"	f
luaD_reallocstack	lua/src/ldo.c	/^void luaD_reallocstack (lua_State *L, int newsize) {$/;"	f
luaD_shrinkstack	lua/src/ldo.c	/^void luaD_shrinkstack (lua_State *L) {$/;"	f
luaD_throw	lua/src/ldo.c	/^l_noret luaD_throw (lua_State *L, int errcode) {$/;"	f
luaE_extendCI	lua/src/lstate.c	/^CallInfo *luaE_extendCI (lua_State *L) {$/;"	f
luaE_freeCI	lua/src/lstate.c	/^void luaE_freeCI (lua_State *L) {$/;"	f
luaE_freethread	lua/src/lstate.c	/^void luaE_freethread (lua_State *L, lua_State *L1) {$/;"	f
luaE_setdebt	lua/src/lstate.c	/^void luaE_setdebt (global_State *g, l_mem debt) {$/;"	f
luaE_shrinkCI	lua/src/lstate.c	/^void luaE_shrinkCI (lua_State *L) {$/;"	f
luaF_close	lua/src/lfunc.c	/^void luaF_close (lua_State *L, StkId level) {$/;"	f
luaF_findupval	lua/src/lfunc.c	/^UpVal *luaF_findupval (lua_State *L, StkId level) {$/;"	f
luaF_freeproto	lua/src/lfunc.c	/^void luaF_freeproto (lua_State *L, Proto *f) {$/;"	f
luaF_getlocalname	lua/src/lfunc.c	/^const char *luaF_getlocalname (const Proto *f, int local_number, int pc) {$/;"	f
luaF_initupvals	lua/src/lfunc.c	/^void luaF_initupvals (lua_State *L, LClosure *cl) {$/;"	f
luaF_newCclosure	lua/src/lfunc.c	/^CClosure *luaF_newCclosure (lua_State *L, int n) {$/;"	f
luaF_newLclosure	lua/src/lfunc.c	/^LClosure *luaF_newLclosure (lua_State *L, int n) {$/;"	f
luaF_newproto	lua/src/lfunc.c	/^Proto *luaF_newproto (lua_State *L) {$/;"	f
luaG_addinfo	lua/src/ldebug.c	/^const char *luaG_addinfo (lua_State *L, const char *msg, TString *src,$/;"	f
luaG_concaterror	lua/src/ldebug.c	/^l_noret luaG_concaterror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_errormsg	lua/src/ldebug.c	/^l_noret luaG_errormsg (lua_State *L) {$/;"	f
luaG_opinterror	lua/src/ldebug.c	/^l_noret luaG_opinterror (lua_State *L, const TValue *p1,$/;"	f
luaG_ordererror	lua/src/ldebug.c	/^l_noret luaG_ordererror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_runerror	lua/src/ldebug.c	/^l_noret luaG_runerror (lua_State *L, const char *fmt, ...) {$/;"	f
luaG_tointerror	lua/src/ldebug.c	/^l_noret luaG_tointerror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_traceexec	lua/src/ldebug.c	/^void luaG_traceexec (lua_State *L) {$/;"	f
luaG_typeerror	lua/src/ldebug.c	/^l_noret luaG_typeerror (lua_State *L, const TValue *o, const char *op) {$/;"	f
luaH_free	lua/src/ltable.c	/^void luaH_free (lua_State *L, Table *t) {$/;"	f
luaH_get	lua/src/ltable.c	/^const TValue *luaH_get (Table *t, const TValue *key) {$/;"	f
luaH_getint	lua/src/ltable.c	/^const TValue *luaH_getint (Table *t, lua_Integer key) {$/;"	f
luaH_getn	lua/src/ltable.c	/^int luaH_getn (Table *t) {$/;"	f
luaH_getshortstr	lua/src/ltable.c	/^const TValue *luaH_getshortstr (Table *t, TString *key) {$/;"	f
luaH_getstr	lua/src/ltable.c	/^const TValue *luaH_getstr (Table *t, TString *key) {$/;"	f
luaH_isdummy	lua/src/ltable.c	/^int luaH_isdummy (Node *n) { return isdummy(n); }$/;"	f
luaH_mainposition	lua/src/ltable.c	/^Node *luaH_mainposition (const Table *t, const TValue *key) {$/;"	f
luaH_new	lua/src/ltable.c	/^Table *luaH_new (lua_State *L) {$/;"	f
luaH_newkey	lua/src/ltable.c	/^TValue *luaH_newkey (lua_State *L, Table *t, const TValue *key) {$/;"	f
luaH_next	lua/src/ltable.c	/^int luaH_next (lua_State *L, Table *t, StkId key) {$/;"	f
luaH_resize	lua/src/ltable.c	/^void luaH_resize (lua_State *L, Table *t, unsigned int nasize,$/;"	f
luaH_resizearray	lua/src/ltable.c	/^void luaH_resizearray (lua_State *L, Table *t, unsigned int nasize) {$/;"	f
luaH_set	lua/src/ltable.c	/^TValue *luaH_set (lua_State *L, Table *t, const TValue *key) {$/;"	f
luaH_setint	lua/src/ltable.c	/^void luaH_setint (lua_State *L, Table *t, lua_Integer key, TValue *value) {$/;"	f
luaK_checkstack	lua/src/lcode.c	/^void luaK_checkstack (FuncState *fs, int n) {$/;"	f
luaK_code	lua/src/lcode.c	/^static int luaK_code (FuncState *fs, Instruction i) {$/;"	f	file:
luaK_codeABC	lua/src/lcode.c	/^int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {$/;"	f
luaK_codeABx	lua/src/lcode.c	/^int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {$/;"	f
luaK_codeAsBx	lua/src/lcode.h	46;"	d
luaK_codek	lua/src/lcode.c	/^int luaK_codek (FuncState *fs, int reg, int k) {$/;"	f
luaK_concat	lua/src/lcode.c	/^void luaK_concat (FuncState *fs, int *l1, int l2) {$/;"	f
luaK_dischargevars	lua/src/lcode.c	/^void luaK_dischargevars (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2RK	lua/src/lcode.c	/^int luaK_exp2RK (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2anyreg	lua/src/lcode.c	/^int luaK_exp2anyreg (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2anyregup	lua/src/lcode.c	/^void luaK_exp2anyregup (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2nextreg	lua/src/lcode.c	/^void luaK_exp2nextreg (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2val	lua/src/lcode.c	/^void luaK_exp2val (FuncState *fs, expdesc *e) {$/;"	f
luaK_fixline	lua/src/lcode.c	/^void luaK_fixline (FuncState *fs, int line) {$/;"	f
luaK_getlabel	lua/src/lcode.c	/^int luaK_getlabel (FuncState *fs) {$/;"	f
luaK_goiffalse	lua/src/lcode.c	/^void luaK_goiffalse (FuncState *fs, expdesc *e) {$/;"	f
luaK_goiftrue	lua/src/lcode.c	/^void luaK_goiftrue (FuncState *fs, expdesc *e) {$/;"	f
luaK_indexed	lua/src/lcode.c	/^void luaK_indexed (FuncState *fs, expdesc *t, expdesc *k) {$/;"	f
luaK_infix	lua/src/lcode.c	/^void luaK_infix (FuncState *fs, BinOpr op, expdesc *v) {$/;"	f
luaK_intK	lua/src/lcode.c	/^int luaK_intK (FuncState *fs, lua_Integer n) {$/;"	f
luaK_jump	lua/src/lcode.c	/^int luaK_jump (FuncState *fs) {$/;"	f
luaK_jumpto	lua/src/lcode.h	50;"	d
luaK_nil	lua/src/lcode.c	/^void luaK_nil (FuncState *fs, int from, int n) {$/;"	f
luaK_numberK	lua/src/lcode.c	/^static int luaK_numberK (FuncState *fs, lua_Number r) {$/;"	f	file:
luaK_patchclose	lua/src/lcode.c	/^void luaK_patchclose (FuncState *fs, int list, int level) {$/;"	f
luaK_patchlist	lua/src/lcode.c	/^void luaK_patchlist (FuncState *fs, int list, int target) {$/;"	f
luaK_patchtohere	lua/src/lcode.c	/^void luaK_patchtohere (FuncState *fs, int list) {$/;"	f
luaK_posfix	lua/src/lcode.c	/^void luaK_posfix (FuncState *fs, BinOpr op,$/;"	f
luaK_prefix	lua/src/lcode.c	/^void luaK_prefix (FuncState *fs, UnOpr op, expdesc *e, int line) {$/;"	f
luaK_reserveregs	lua/src/lcode.c	/^void luaK_reserveregs (FuncState *fs, int n) {$/;"	f
luaK_ret	lua/src/lcode.c	/^void luaK_ret (FuncState *fs, int first, int nret) {$/;"	f
luaK_self	lua/src/lcode.c	/^void luaK_self (FuncState *fs, expdesc *e, expdesc *key) {$/;"	f
luaK_setlist	lua/src/lcode.c	/^void luaK_setlist (FuncState *fs, int base, int nelems, int tostore) {$/;"	f
luaK_setmultret	lua/src/lcode.h	48;"	d
luaK_setoneret	lua/src/lcode.c	/^void luaK_setoneret (FuncState *fs, expdesc *e) {$/;"	f
luaK_setreturns	lua/src/lcode.c	/^void luaK_setreturns (FuncState *fs, expdesc *e, int nresults) {$/;"	f
luaK_storevar	lua/src/lcode.c	/^void luaK_storevar (FuncState *fs, expdesc *var, expdesc *ex) {$/;"	f
luaK_stringK	lua/src/lcode.c	/^int luaK_stringK (FuncState *fs, TString *s) {$/;"	f
luaL_Buffer	lua/doc/manual.html	/^<hr><h3><a name="luaL_Buffer"><code>luaL_Buffer<\/code><\/a><\/h3>$/;"	a
luaL_Buffer	lua/src/lauxlib.h	/^typedef struct luaL_Buffer {$/;"	s
luaL_Buffer	lua/src/lauxlib.h	/^} luaL_Buffer;$/;"	t	typeref:struct:luaL_Buffer
luaL_Reg	lua/doc/manual.html	/^<hr><h3><a name="luaL_Reg"><code>luaL_Reg<\/code><\/a><\/h3>$/;"	a
luaL_Reg	lua/src/lauxlib.h	/^typedef struct luaL_Reg {$/;"	s
luaL_Reg	lua/src/lauxlib.h	/^} luaL_Reg;$/;"	t	typeref:struct:luaL_Reg
luaL_Stream	lua/doc/manual.html	/^<hr><h3><a name="luaL_Stream"><code>luaL_Stream<\/code><\/a><\/h3>$/;"	a
luaL_Stream	lua/src/lauxlib.h	/^typedef struct luaL_Stream {$/;"	s
luaL_Stream	lua/src/lauxlib.h	/^} luaL_Stream;$/;"	t	typeref:struct:luaL_Stream
luaL_addchar	lua/doc/manual.html	/^<hr><h3><a name="luaL_addchar"><code>luaL_addchar<\/code><\/a><\/h3><p>$/;"	a
luaL_addchar	lua/src/lauxlib.h	149;"	d
luaL_addlstring	lua/doc/manual.html	/^<hr><h3><a name="luaL_addlstring"><code>luaL_addlstring<\/code><\/a><\/h3><p>$/;"	a
luaL_addlstring	lua/src/lauxlib.c	/^LUALIB_API void luaL_addlstring (luaL_Buffer *B, const char *s, size_t l) {$/;"	f
luaL_addsize	lua/doc/manual.html	/^<hr><h3><a name="luaL_addsize"><code>luaL_addsize<\/code><\/a><\/h3><p>$/;"	a
luaL_addsize	lua/src/lauxlib.h	153;"	d
luaL_addstring	lua/doc/manual.html	/^<hr><h3><a name="luaL_addstring"><code>luaL_addstring<\/code><\/a><\/h3><p>$/;"	a
luaL_addstring	lua/src/lauxlib.c	/^LUALIB_API void luaL_addstring (luaL_Buffer *B, const char *s) {$/;"	f
luaL_addvalue	lua/doc/manual.html	/^<hr><h3><a name="luaL_addvalue"><code>luaL_addvalue<\/code><\/a><\/h3><p>$/;"	a
luaL_addvalue	lua/src/lauxlib.c	/^LUALIB_API void luaL_addvalue (luaL_Buffer *B) {$/;"	f
luaL_argcheck	lua/doc/manual.html	/^<hr><h3><a name="luaL_argcheck"><code>luaL_argcheck<\/code><\/a><\/h3><p>$/;"	a
luaL_argcheck	lua/src/lauxlib.h	114;"	d
luaL_argerror	lua/doc/manual.html	/^<hr><h3><a name="luaL_argerror"><code>luaL_argerror<\/code><\/a><\/h3><p>$/;"	a
luaL_argerror	lua/src/lauxlib.c	/^LUALIB_API int luaL_argerror (lua_State *L, int arg, const char *extramsg) {$/;"	f
luaL_buffinit	lua/doc/manual.html	/^<hr><h3><a name="luaL_buffinit"><code>luaL_buffinit<\/code><\/a><\/h3><p>$/;"	a
luaL_buffinit	lua/src/lauxlib.c	/^LUALIB_API void luaL_buffinit (lua_State *L, luaL_Buffer *B) {$/;"	f
luaL_buffinitsize	lua/doc/manual.html	/^<hr><h3><a name="luaL_buffinitsize"><code>luaL_buffinitsize<\/code><\/a><\/h3><p>$/;"	a
luaL_buffinitsize	lua/src/lauxlib.c	/^LUALIB_API char *luaL_buffinitsize (lua_State *L, luaL_Buffer *B, size_t sz) {$/;"	f
luaL_callmeta	lua/doc/manual.html	/^<hr><h3><a name="luaL_callmeta"><code>luaL_callmeta<\/code><\/a><\/h3><p>$/;"	a
luaL_callmeta	lua/src/lauxlib.c	/^LUALIB_API int luaL_callmeta (lua_State *L, int obj, const char *event) {$/;"	f
luaL_checkany	lua/doc/manual.html	/^<hr><h3><a name="luaL_checkany"><code>luaL_checkany<\/code><\/a><\/h3><p>$/;"	a
luaL_checkany	lua/src/lauxlib.c	/^LUALIB_API void luaL_checkany (lua_State *L, int arg) {$/;"	f
luaL_checkint	lua/src/lauxlib.h	243;"	d
luaL_checkinteger	lua/doc/manual.html	/^<hr><h3><a name="luaL_checkinteger"><code>luaL_checkinteger<\/code><\/a><\/h3><p>$/;"	a
luaL_checkinteger	lua/src/lauxlib.c	/^LUALIB_API lua_Integer luaL_checkinteger (lua_State *L, int arg) {$/;"	f
luaL_checklong	lua/src/lauxlib.h	246;"	d
luaL_checklstring	lua/doc/manual.html	/^<hr><h3><a name="luaL_checklstring"><code>luaL_checklstring<\/code><\/a><\/h3><p>$/;"	a
luaL_checklstring	lua/src/lauxlib.c	/^LUALIB_API const char *luaL_checklstring (lua_State *L, int arg, size_t *len) {$/;"	f
luaL_checknumber	lua/doc/manual.html	/^<hr><h3><a name="luaL_checknumber"><code>luaL_checknumber<\/code><\/a><\/h3><p>$/;"	a
luaL_checknumber	lua/src/lauxlib.c	/^LUALIB_API lua_Number luaL_checknumber (lua_State *L, int arg) {$/;"	f
luaL_checkoption	lua/doc/manual.html	/^<hr><h3><a name="luaL_checkoption"><code>luaL_checkoption<\/code><\/a><\/h3><p>$/;"	a
luaL_checkoption	lua/src/lauxlib.c	/^LUALIB_API int luaL_checkoption (lua_State *L, int arg, const char *def,$/;"	f
luaL_checkstack	lua/doc/manual.html	/^<hr><h3><a name="luaL_checkstack"><code>luaL_checkstack<\/code><\/a><\/h3><p>$/;"	a
luaL_checkstack	lua/src/lauxlib.c	/^LUALIB_API void luaL_checkstack (lua_State *L, int space, const char *msg) {$/;"	f
luaL_checkstring	lua/doc/manual.html	/^<hr><h3><a name="luaL_checkstring"><code>luaL_checkstring<\/code><\/a><\/h3><p>$/;"	a
luaL_checkstring	lua/src/lauxlib.h	116;"	d
luaL_checktype	lua/doc/manual.html	/^<hr><h3><a name="luaL_checktype"><code>luaL_checktype<\/code><\/a><\/h3><p>$/;"	a
luaL_checktype	lua/src/lauxlib.c	/^LUALIB_API void luaL_checktype (lua_State *L, int arg, int t) {$/;"	f
luaL_checkudata	lua/doc/manual.html	/^<hr><h3><a name="luaL_checkudata"><code>luaL_checkudata<\/code><\/a><\/h3><p>$/;"	a
luaL_checkudata	lua/src/lauxlib.c	/^LUALIB_API void *luaL_checkudata (lua_State *L, int ud, const char *tname) {$/;"	f
luaL_checkunsigned	lua/src/lauxlib.h	239;"	d
luaL_checkversion	lua/doc/manual.html	/^<hr><h3><a name="luaL_checkversion"><code>luaL_checkversion<\/code><\/a><\/h3><p>$/;"	a
luaL_checkversion	lua/src/lauxlib.h	32;"	d
luaL_checkversion_	lua/src/lauxlib.c	/^LUALIB_API void luaL_checkversion_ (lua_State *L, lua_Number ver, size_t sz) {$/;"	f
luaL_dofile	lua/doc/manual.html	/^<hr><h3><a name="luaL_dofile"><code>luaL_dofile<\/code><\/a><\/h3><p>$/;"	a
luaL_dofile	lua/src/lauxlib.h	121;"	d
luaL_dostring	lua/doc/manual.html	/^<hr><h3><a name="luaL_dostring"><code>luaL_dostring<\/code><\/a><\/h3><p>$/;"	a
luaL_dostring	lua/src/lauxlib.h	124;"	d
luaL_error	lua/doc/manual.html	/^<hr><h3><a name="luaL_error"><code>luaL_error<\/code><\/a><\/h3><p>$/;"	a
luaL_error	lua/src/lauxlib.c	/^LUALIB_API int luaL_error (lua_State *L, const char *fmt, ...) {$/;"	f
luaL_execresult	lua/doc/manual.html	/^<hr><h3><a name="luaL_execresult"><code>luaL_execresult<\/code><\/a><\/h3><p>$/;"	a
luaL_execresult	lua/src/lauxlib.c	/^LUALIB_API int luaL_execresult (lua_State *L, int stat) {$/;"	f
luaL_fileresult	lua/doc/manual.html	/^<hr><h3><a name="luaL_fileresult"><code>luaL_fileresult<\/code><\/a><\/h3><p>$/;"	a
luaL_fileresult	lua/src/lauxlib.c	/^LUALIB_API int luaL_fileresult (lua_State *L, int stat, const char *fname) {$/;"	f
luaL_findtable	lua/src/lauxlib.c	/^static const char *luaL_findtable (lua_State *L, int idx,$/;"	f	file:
luaL_getmetafield	lua/doc/manual.html	/^<hr><h3><a name="luaL_getmetafield"><code>luaL_getmetafield<\/code><\/a><\/h3><p>$/;"	a
luaL_getmetafield	lua/src/lauxlib.c	/^LUALIB_API int luaL_getmetafield (lua_State *L, int obj, const char *event) {$/;"	f
luaL_getmetatable	lua/doc/manual.html	/^<hr><h3><a name="luaL_getmetatable"><code>luaL_getmetatable<\/code><\/a><\/h3><p>$/;"	a
luaL_getmetatable	lua/src/lauxlib.h	127;"	d
luaL_getsubtable	lua/doc/manual.html	/^<hr><h3><a name="luaL_getsubtable"><code>luaL_getsubtable<\/code><\/a><\/h3><p>$/;"	a
luaL_getsubtable	lua/src/lauxlib.c	/^LUALIB_API int luaL_getsubtable (lua_State *L, int idx, const char *fname) {$/;"	f
luaL_gsub	lua/doc/manual.html	/^<hr><h3><a name="luaL_gsub"><code>luaL_gsub<\/code><\/a><\/h3><p>$/;"	a
luaL_gsub	lua/src/lauxlib.c	/^LUALIB_API const char *luaL_gsub (lua_State *L, const char *s, const char *p,$/;"	f
luaL_len	lua/doc/manual.html	/^<hr><h3><a name="luaL_len"><code>luaL_len<\/code><\/a><\/h3><p>$/;"	a
luaL_len	lua/src/lauxlib.c	/^LUALIB_API lua_Integer luaL_len (lua_State *L, int idx) {$/;"	f
luaL_loadbuffer	lua/doc/manual.html	/^<hr><h3><a name="luaL_loadbuffer"><code>luaL_loadbuffer<\/code><\/a><\/h3><p>$/;"	a
luaL_loadbuffer	lua/src/lauxlib.h	131;"	d
luaL_loadbufferx	lua/doc/manual.html	/^<hr><h3><a name="luaL_loadbufferx"><code>luaL_loadbufferx<\/code><\/a><\/h3><p>$/;"	a
luaL_loadbufferx	lua/src/lauxlib.c	/^LUALIB_API int luaL_loadbufferx (lua_State *L, const char *buff, size_t size,$/;"	f
luaL_loadfile	lua/doc/manual.html	/^<hr><h3><a name="luaL_loadfile"><code>luaL_loadfile<\/code><\/a><\/h3><p>$/;"	a
luaL_loadfile	lua/src/lauxlib.h	78;"	d
luaL_loadfilex	lua/doc/manual.html	/^<hr><h3><a name="luaL_loadfilex"><code>luaL_loadfilex<\/code><\/a><\/h3><p>$/;"	a
luaL_loadfilex	lua/src/lauxlib.c	/^LUALIB_API int luaL_loadfilex (lua_State *L, const char *filename,$/;"	f
luaL_loadstring	lua/doc/manual.html	/^<hr><h3><a name="luaL_loadstring"><code>luaL_loadstring<\/code><\/a><\/h3><p>$/;"	a
luaL_loadstring	lua/src/lauxlib.c	/^LUALIB_API int luaL_loadstring (lua_State *L, const char *s) {$/;"	f
luaL_newlib	lfs/src/lfs.c	80;"	d	file:
luaL_newlib	lua/doc/manual.html	/^<hr><h3><a name="luaL_newlib"><code>luaL_newlib<\/code><\/a><\/h3><p>$/;"	a
luaL_newlib	lua/src/lauxlib.h	111;"	d
luaL_newlibtable	lua/doc/manual.html	/^<hr><h3><a name="luaL_newlibtable"><code>luaL_newlibtable<\/code><\/a><\/h3><p>$/;"	a
luaL_newlibtable	lua/src/lauxlib.h	108;"	d
luaL_newmetatable	lua/doc/manual.html	/^<hr><h3><a name="luaL_newmetatable"><code>luaL_newmetatable<\/code><\/a><\/h3><p>$/;"	a
luaL_newmetatable	lua/src/lauxlib.c	/^LUALIB_API int luaL_newmetatable (lua_State *L, const char *tname) {$/;"	f
luaL_newstate	lua/doc/manual.html	/^<hr><h3><a name="luaL_newstate"><code>luaL_newstate<\/code><\/a><\/h3><p>$/;"	a
luaL_newstate	lua/src/lauxlib.c	/^LUALIB_API lua_State *luaL_newstate (void) {$/;"	f
luaL_openlib	lua/src/lauxlib.c	/^LUALIB_API void luaL_openlib (lua_State *L, const char *libname,$/;"	f
luaL_openlibs	lua/doc/manual.html	/^<hr><h3><a name="luaL_openlibs"><code>luaL_openlibs<\/code><\/a><\/h3><p>$/;"	a
luaL_openlibs	lua/src/linit.c	/^LUALIB_API void luaL_openlibs (lua_State *L) {$/;"	f
luaL_opt	lua/doc/manual.html	/^<hr><h3><a name="luaL_opt"><code>luaL_opt<\/code><\/a><\/h3><p>$/;"	a
luaL_opt	lua/src/lauxlib.h	129;"	d
luaL_optint	lua/src/lauxlib.h	244;"	d
luaL_optinteger	lua/doc/manual.html	/^<hr><h3><a name="luaL_optinteger"><code>luaL_optinteger<\/code><\/a><\/h3><p>$/;"	a
luaL_optinteger	lua/src/lauxlib.c	/^LUALIB_API lua_Integer luaL_optinteger (lua_State *L, int arg,$/;"	f
luaL_optlong	lfs/src/lfs.c	74;"	d	file:
luaL_optlong	lua/src/lauxlib.h	247;"	d
luaL_optlstring	lua/doc/manual.html	/^<hr><h3><a name="luaL_optlstring"><code>luaL_optlstring<\/code><\/a><\/h3><p>$/;"	a
luaL_optlstring	lua/src/lauxlib.c	/^LUALIB_API const char *luaL_optlstring (lua_State *L, int arg,$/;"	f
luaL_optnumber	lua/doc/manual.html	/^<hr><h3><a name="luaL_optnumber"><code>luaL_optnumber<\/code><\/a><\/h3><p>$/;"	a
luaL_optnumber	lua/src/lauxlib.c	/^LUALIB_API lua_Number luaL_optnumber (lua_State *L, int arg, lua_Number def) {$/;"	f
luaL_optstring	lua/doc/manual.html	/^<hr><h3><a name="luaL_optstring"><code>luaL_optstring<\/code><\/a><\/h3><p>$/;"	a
luaL_optstring	lua/src/lauxlib.h	117;"	d
luaL_optunsigned	lua/src/lauxlib.h	240;"	d
luaL_prepbuffer	lua/doc/manual.html	/^<hr><h3><a name="luaL_prepbuffer"><code>luaL_prepbuffer<\/code><\/a><\/h3><p>$/;"	a
luaL_prepbuffer	lua/src/lauxlib.h	164;"	d
luaL_prepbuffsize	lua/doc/manual.html	/^<hr><h3><a name="luaL_prepbuffsize"><code>luaL_prepbuffsize<\/code><\/a><\/h3><p>$/;"	a
luaL_prepbuffsize	lua/src/lauxlib.c	/^LUALIB_API char *luaL_prepbuffsize (luaL_Buffer *B, size_t sz) {$/;"	f
luaL_pushmodule	lua/src/lauxlib.c	/^LUALIB_API void luaL_pushmodule (lua_State *L, const char *modname,$/;"	f
luaL_pushresult	lua/doc/manual.html	/^<hr><h3><a name="luaL_pushresult"><code>luaL_pushresult<\/code><\/a><\/h3><p>$/;"	a
luaL_pushresult	lua/src/lauxlib.c	/^LUALIB_API void luaL_pushresult (luaL_Buffer *B) {$/;"	f
luaL_pushresultsize	lua/doc/manual.html	/^<hr><h3><a name="luaL_pushresultsize"><code>luaL_pushresultsize<\/code><\/a><\/h3><p>$/;"	a
luaL_pushresultsize	lua/src/lauxlib.c	/^LUALIB_API void luaL_pushresultsize (luaL_Buffer *B, size_t sz) {$/;"	f
luaL_ref	lua/doc/manual.html	/^<hr><h3><a name="luaL_ref"><code>luaL_ref<\/code><\/a><\/h3><p>$/;"	a
luaL_ref	lua/src/lauxlib.c	/^LUALIB_API int luaL_ref (lua_State *L, int t) {$/;"	f
luaL_register	lua/src/lauxlib.h	202;"	d
luaL_requiref	lua/doc/manual.html	/^<hr><h3><a name="luaL_requiref"><code>luaL_requiref<\/code><\/a><\/h3><p>$/;"	a
luaL_requiref	lua/src/lauxlib.c	/^LUALIB_API void luaL_requiref (lua_State *L, const char *modname,$/;"	f
luaL_setfuncs	lua/doc/manual.html	/^<hr><h3><a name="luaL_setfuncs"><code>luaL_setfuncs<\/code><\/a><\/h3><p>$/;"	a
luaL_setfuncs	lua/src/lauxlib.c	/^LUALIB_API void luaL_setfuncs (lua_State *L, const luaL_Reg *l, int nup) {$/;"	f
luaL_setmetatable	lua/doc/manual.html	/^<hr><h3><a name="luaL_setmetatable"><code>luaL_setmetatable<\/code><\/a><\/h3><p>$/;"	a
luaL_setmetatable	lua/src/lauxlib.c	/^LUALIB_API void luaL_setmetatable (lua_State *L, const char *tname) {$/;"	f
luaL_testudata	lua/doc/manual.html	/^<hr><h3><a name="luaL_testudata"><code>luaL_testudata<\/code><\/a><\/h3><p>$/;"	a
luaL_testudata	lua/src/lauxlib.c	/^LUALIB_API void *luaL_testudata (lua_State *L, int ud, const char *tname) {$/;"	f
luaL_tolstring	lua/doc/manual.html	/^<hr><h3><a name="luaL_tolstring"><code>luaL_tolstring<\/code><\/a><\/h3><p>$/;"	a
luaL_tolstring	lua/src/lauxlib.c	/^LUALIB_API const char *luaL_tolstring (lua_State *L, int idx, size_t *len) {$/;"	f
luaL_traceback	lua/doc/manual.html	/^<hr><h3><a name="luaL_traceback"><code>luaL_traceback<\/code><\/a><\/h3><p>$/;"	a
luaL_traceback	lua/src/lauxlib.c	/^LUALIB_API void luaL_traceback (lua_State *L, lua_State *L1,$/;"	f
luaL_typename	lua/doc/manual.html	/^<hr><h3><a name="luaL_typename"><code>luaL_typename<\/code><\/a><\/h3><p>$/;"	a
luaL_typename	lua/src/lauxlib.h	119;"	d
luaL_unref	lua/doc/manual.html	/^<hr><h3><a name="luaL_unref"><code>luaL_unref<\/code><\/a><\/h3><p>$/;"	a
luaL_unref	lua/src/lauxlib.c	/^LUALIB_API void luaL_unref (lua_State *L, int t, int ref) {$/;"	f
luaL_where	lua/doc/manual.html	/^<hr><h3><a name="luaL_where"><code>luaL_where<\/code><\/a><\/h3><p>$/;"	a
luaL_where	lua/src/lauxlib.c	/^LUALIB_API void luaL_where (lua_State *L, int level) {$/;"	f
luaM_free	lua/src/lmem.h	42;"	d
luaM_freearray	lua/src/lmem.h	43;"	d
luaM_freemem	lua/src/lmem.h	41;"	d
luaM_growaux_	lua/src/lmem.c	/^void *luaM_growaux_ (lua_State *L, void *block, int *size, size_t size_elems,$/;"	f
luaM_growvector	lua/src/lmem.h	52;"	d
luaM_malloc	lua/src/lmem.h	45;"	d
luaM_new	lua/src/lmem.h	46;"	d
luaM_newobject	lua/src/lmem.h	50;"	d
luaM_newvector	lua/src/lmem.h	47;"	d
luaM_realloc_	lua/src/lmem.c	/^void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {$/;"	f
luaM_reallocv	lua/src/lmem.h	30;"	d
luaM_reallocvchar	lua/src/lmem.h	38;"	d
luaM_reallocvector	lua/src/lmem.h	56;"	d
luaM_toobig	lua/src/lmem.c	/^l_noret luaM_toobig (lua_State *L) {$/;"	f
luaO_arith	lua/src/lobject.c	/^void luaO_arith (lua_State *L, int op, const TValue *p1, const TValue *p2,$/;"	f
luaO_ceillog2	lua/src/lobject.c	/^int luaO_ceillog2 (unsigned int x) {$/;"	f
luaO_chunkid	lua/src/lobject.c	/^void luaO_chunkid (char *out, const char *source, size_t bufflen) {$/;"	f
luaO_fb2int	lua/src/lobject.c	/^int luaO_fb2int (int x) {$/;"	f
luaO_hexavalue	lua/src/lobject.c	/^int luaO_hexavalue (int c) {$/;"	f
luaO_int2fb	lua/src/lobject.c	/^int luaO_int2fb (unsigned int x) {$/;"	f
luaO_nilobject	lua/src/lobject.h	525;"	d
luaO_nilobject_	lua/src/lobject.c	/^LUAI_DDEF const TValue luaO_nilobject_ = {NILCONSTANT};$/;"	v
luaO_nilobject_	lua/src/lobject.h	/^LUAI_DDEC const TValue luaO_nilobject_;$/;"	v
luaO_pushfstring	lua/src/lobject.c	/^const char *luaO_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f
luaO_pushvfstring	lua/src/lobject.c	/^const char *luaO_pushvfstring (lua_State *L, const char *fmt, va_list argp) {$/;"	f
luaO_str2num	lua/src/lobject.c	/^size_t luaO_str2num (const char *s, TValue *o) {$/;"	f
luaO_tostring	lua/src/lobject.c	/^void luaO_tostring (lua_State *L, StkId obj) {$/;"	f
luaO_utf8esc	lua/src/lobject.c	/^int luaO_utf8esc (char *buff, unsigned long x) {$/;"	f
luaP_opmodes	lua/src/lopcodes.c	/^LUAI_DDEF const lu_byte luaP_opmodes[NUM_OPCODES] = {$/;"	v
luaP_opmodes	lua/src/lopcodes.h	/^LUAI_DDEC const lu_byte luaP_opmodes[NUM_OPCODES];$/;"	v
luaP_opnames	lua/src/lopcodes.c	/^LUAI_DDEF const char *const luaP_opnames[NUM_OPCODES+1] = {$/;"	v
luaP_opnames	lua/src/lopcodes.h	/^LUAI_DDEC const char *const luaP_opnames[NUM_OPCODES+1];  \/* opcode names *\/$/;"	v
luaS_clearcache	lua/src/lstring.c	/^void luaS_clearcache (global_State *g) {$/;"	f
luaS_createlngstrobj	lua/src/lstring.c	/^TString *luaS_createlngstrobj (lua_State *L, size_t l) {$/;"	f
luaS_eqlngstr	lua/src/lstring.c	/^int luaS_eqlngstr (TString *a, TString *b) {$/;"	f
luaS_hash	lua/src/lstring.c	/^unsigned int luaS_hash (const char *str, size_t l, unsigned int seed) {$/;"	f
luaS_hashlongstr	lua/src/lstring.c	/^unsigned int luaS_hashlongstr (TString *ts) {$/;"	f
luaS_init	lua/src/lstring.c	/^void luaS_init (lua_State *L) {$/;"	f
luaS_new	lua/src/lstring.c	/^TString *luaS_new (lua_State *L, const char *str) {$/;"	f
luaS_newliteral	lua/src/lstring.h	20;"	d
luaS_newlstr	lua/src/lstring.c	/^TString *luaS_newlstr (lua_State *L, const char *str, size_t l) {$/;"	f
luaS_newudata	lua/src/lstring.c	/^Udata *luaS_newudata (lua_State *L, size_t s) {$/;"	f
luaS_remove	lua/src/lstring.c	/^void luaS_remove (lua_State *L, TString *ts) {$/;"	f
luaS_resize	lua/src/lstring.c	/^void luaS_resize (lua_State *L, int newsize) {$/;"	f
luaT_callTM	lua/src/ltm.c	/^void luaT_callTM (lua_State *L, const TValue *f, const TValue *p1,$/;"	f
luaT_callbinTM	lua/src/ltm.c	/^int luaT_callbinTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f
luaT_callorderTM	lua/src/ltm.c	/^int luaT_callorderTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f
luaT_gettm	lua/src/ltm.c	/^const TValue *luaT_gettm (Table *events, TMS event, TString *ename) {$/;"	f
luaT_gettmbyobj	lua/src/ltm.c	/^const TValue *luaT_gettmbyobj (lua_State *L, const TValue *o, TMS event) {$/;"	f
luaT_init	lua/src/ltm.c	/^void luaT_init (lua_State *L) {$/;"	f
luaT_objtypename	lua/src/ltm.c	/^const char *luaT_objtypename (lua_State *L, const TValue *o) {$/;"	f
luaT_trybinTM	lua/src/ltm.c	/^void luaT_trybinTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f
luaT_typenames_	lua/src/ltm.c	/^LUAI_DDEF const char *const luaT_typenames_[LUA_TOTALTAGS] = {$/;"	v
luaT_typenames_	lua/src/ltm.h	/^LUAI_DDEC const char *const luaT_typenames_[LUA_TOTALTAGS];$/;"	v
luaU_dump	lua/src/ldump.c	/^int luaU_dump(lua_State *L, const Proto *f, lua_Writer w, void *data,$/;"	f
luaU_print	lua/src/luac.c	26;"	d	file:
luaU_undump	lua/src/lundump.c	/^LClosure *luaU_undump(lua_State *L, ZIO *Z, const char *name) {$/;"	f
luaV_concat	lua/src/lvm.c	/^void luaV_concat (lua_State *L, int total) {$/;"	f
luaV_div	lua/src/lvm.c	/^lua_Integer luaV_div (lua_State *L, lua_Integer m, lua_Integer n) {$/;"	f
luaV_equalobj	lua/src/lvm.c	/^int luaV_equalobj (lua_State *L, const TValue *t1, const TValue *t2) {$/;"	f
luaV_execute	lua/src/lvm.c	/^void luaV_execute (lua_State *L) {$/;"	f
luaV_fastget	lua/src/lvm.h	58;"	d
luaV_fastset	lua/src/lvm.h	80;"	d
luaV_finishOp	lua/src/lvm.c	/^void luaV_finishOp (lua_State *L) {$/;"	f
luaV_finishget	lua/src/lvm.c	/^void luaV_finishget (lua_State *L, const TValue *t, TValue *key, StkId val,$/;"	f
luaV_finishset	lua/src/lvm.c	/^void luaV_finishset (lua_State *L, const TValue *t, TValue *key,$/;"	f
luaV_gettable	lua/src/lvm.h	67;"	d
luaV_lessequal	lua/src/lvm.c	/^int luaV_lessequal (lua_State *L, const TValue *l, const TValue *r) {$/;"	f
luaV_lessthan	lua/src/lvm.c	/^int luaV_lessthan (lua_State *L, const TValue *l, const TValue *r) {$/;"	f
luaV_mod	lua/src/lvm.c	/^lua_Integer luaV_mod (lua_State *L, lua_Integer m, lua_Integer n) {$/;"	f
luaV_objlen	lua/src/lvm.c	/^void luaV_objlen (lua_State *L, StkId ra, const TValue *rb) {$/;"	f
luaV_rawequalobj	lua/src/lvm.h	48;"	d
luaV_settable	lua/src/lvm.h	90;"	d
luaV_shiftl	lua/src/lvm.c	/^lua_Integer luaV_shiftl (lua_Integer x, lua_Integer y) {$/;"	f
luaV_tointeger	lua/src/lvm.c	/^int luaV_tointeger (const TValue *obj, lua_Integer *p, int mode) {$/;"	f
luaV_tonumber_	lua/src/lvm.c	/^int luaV_tonumber_ (const TValue *obj, lua_Number *n) {$/;"	f
luaX_init	lua/src/llex.c	/^void luaX_init (lua_State *L) {$/;"	f
luaX_lookahead	lua/src/llex.c	/^int luaX_lookahead (LexState *ls) {$/;"	f
luaX_newstring	lua/src/llex.c	/^TString *luaX_newstring (LexState *ls, const char *str, size_t l) {$/;"	f
luaX_next	lua/src/llex.c	/^void luaX_next (LexState *ls) {$/;"	f
luaX_setinput	lua/src/llex.c	/^void luaX_setinput (lua_State *L, LexState *ls, ZIO *z, TString *source,$/;"	f
luaX_syntaxerror	lua/src/llex.c	/^l_noret luaX_syntaxerror (LexState *ls, const char *msg) {$/;"	f
luaX_token2str	lua/src/llex.c	/^const char *luaX_token2str (LexState *ls, int token) {$/;"	f
luaX_tokens	lua/src/llex.c	/^static const char *const luaX_tokens [] = {$/;"	v	file:
luaY_parser	lua/src/lparser.c	/^LClosure *luaY_parser (lua_State *L, ZIO *z, Mbuffer *buff,$/;"	f
luaZ_buffer	lua/src/lzio.h	31;"	d
luaZ_bufflen	lua/src/lzio.h	33;"	d
luaZ_buffremove	lua/src/lzio.h	35;"	d
luaZ_fill	lua/src/lzio.c	/^int luaZ_fill (ZIO *z) {$/;"	f
luaZ_freebuffer	lua/src/lzio.h	44;"	d
luaZ_init	lua/src/lzio.c	/^void luaZ_init (lua_State *L, ZIO *z, lua_Reader reader, void *data) {$/;"	f
luaZ_initbuffer	lua/src/lzio.h	29;"	d
luaZ_read	lua/src/lzio.c	/^size_t luaZ_read (ZIO *z, void *b, size_t n) {$/;"	f
luaZ_resetbuffer	lua/src/lzio.h	36;"	d
luaZ_resizebuffer	lua/src/lzio.h	39;"	d
luaZ_sizebuffer	lua/src/lzio.h	32;"	d
lua_Alloc	lua/doc/manual.html	/^<hr><h3><a name="lua_Alloc"><code>lua_Alloc<\/code><\/a><\/h3>$/;"	a
lua_Alloc	lua/src/lua.h	/^typedef void * (*lua_Alloc) (void *ud, void *ptr, size_t osize, size_t nsize);$/;"	t
lua_CFunction	lua/doc/manual.html	/^<hr><h3><a name="lua_CFunction"><code>lua_CFunction<\/code><\/a><\/h3>$/;"	a
lua_CFunction	lua/src/lua.h	/^typedef int (*lua_CFunction) (lua_State *L);$/;"	t
lua_Debug	lua/doc/manual.html	/^<hr><h3><a name="lua_Debug"><code>lua_Debug<\/code><\/a><\/h3>$/;"	a
lua_Debug	lua/src/lua.h	/^struct lua_Debug {$/;"	s
lua_Debug	lua/src/lua.h	/^typedef struct lua_Debug lua_Debug;  \/* activation record *\/$/;"	t	typeref:struct:lua_Debug
lua_Hook	lua/doc/manual.html	/^<hr><h3><a name="lua_Hook"><code>lua_Hook<\/code><\/a><\/h3>$/;"	a
lua_Hook	lua/src/lua.h	/^typedef void (*lua_Hook) (lua_State *L, lua_Debug *ar);$/;"	t
lua_Integer	lua/doc/manual.html	/^<hr><h3><a name="lua_Integer"><code>lua_Integer<\/code><\/a><\/h3>$/;"	a
lua_Integer	lua/src/lua.h	/^typedef LUA_INTEGER lua_Integer;$/;"	t
lua_KContext	lua/doc/manual.html	/^<hr><h3><a name="lua_KContext"><code>lua_KContext<\/code><\/a><\/h3>$/;"	a
lua_KContext	lua/src/lua.h	/^typedef LUA_KCONTEXT lua_KContext;$/;"	t
lua_KFunction	lua/doc/manual.html	/^<hr><h3><a name="lua_KFunction"><code>lua_KFunction<\/code><\/a><\/h3>$/;"	a
lua_KFunction	lua/src/lua.h	/^typedef int (*lua_KFunction) (lua_State *L, int status, lua_KContext ctx);$/;"	t
lua_Number	lua/doc/manual.html	/^<hr><h3><a name="lua_Number"><code>lua_Number<\/code><\/a><\/h3>$/;"	a
lua_Number	lua/src/lua.h	/^typedef LUA_NUMBER lua_Number;$/;"	t
lua_Reader	lua/doc/manual.html	/^<hr><h3><a name="lua_Reader"><code>lua_Reader<\/code><\/a><\/h3>$/;"	a
lua_Reader	lua/src/lua.h	/^typedef const char * (*lua_Reader) (lua_State *L, void *ud, size_t *sz);$/;"	t
lua_State	lua/doc/manual.html	/^<hr><h3><a name="lua_State"><code>lua_State<\/code><\/a><\/h3>$/;"	a
lua_State	lua/src/lstate.h	/^struct lua_State {$/;"	s
lua_State	lua/src/lua.h	/^typedef struct lua_State lua_State;$/;"	t	typeref:struct:lua_State
lua_TValue	lua/src/lobject.h	/^typedef struct lua_TValue {$/;"	s
lua_Unsigned	lua/doc/manual.html	/^<hr><h3><a name="lua_Unsigned"><code>lua_Unsigned<\/code><\/a><\/h3>$/;"	a
lua_Unsigned	lua/src/lua.h	/^typedef LUA_UNSIGNED lua_Unsigned;$/;"	t
lua_Writer	lua/doc/manual.html	/^<hr><h3><a name="lua_Writer"><code>lua_Writer<\/code><\/a><\/h3>$/;"	a
lua_Writer	lua/src/lua.h	/^typedef int (*lua_Writer) (lua_State *L, const void *p, size_t sz, void *ud);$/;"	t
lua_absindex	lua/doc/manual.html	/^<hr><h3><a name="lua_absindex"><code>lua_absindex<\/code><\/a><\/h3><p>$/;"	a
lua_absindex	lua/src/lapi.c	/^LUA_API int lua_absindex (lua_State *L, int idx) {$/;"	f
lua_arith	lua/doc/manual.html	/^<hr><h3><a name="lua_arith"><code>lua_arith<\/code><\/a><\/h3><p>$/;"	a
lua_arith	lua/src/lapi.c	/^LUA_API void lua_arith (lua_State *L, int op) {$/;"	f
lua_assert	lua/src/llimits.h	89;"	d
lua_assert	lua/src/lualib.h	54;"	d
lua_atpanic	lua/doc/manual.html	/^<hr><h3><a name="lua_atpanic"><code>lua_atpanic<\/code><\/a><\/h3><p>$/;"	a
lua_atpanic	lua/src/lapi.c	/^LUA_API lua_CFunction lua_atpanic (lua_State *L, lua_CFunction panicf) {$/;"	f
lua_c	lua/src/lua.c	7;"	d	file:
lua_call	lua/doc/manual.html	/^<hr><h3><a name="lua_call"><code>lua_call<\/code><\/a><\/h3><p>$/;"	a
lua_call	lua/src/lua.h	274;"	d
lua_callk	lua/doc/manual.html	/^<hr><h3><a name="lua_callk"><code>lua_callk<\/code><\/a><\/h3><p>$/;"	a
lua_callk	lua/src/lapi.c	/^LUA_API void lua_callk (lua_State *L, int nargs, int nresults,$/;"	f
lua_checkstack	lua/doc/manual.html	/^<hr><h3><a name="lua_checkstack"><code>lua_checkstack<\/code><\/a><\/h3><p>$/;"	a
lua_checkstack	lua/src/lapi.c	/^LUA_API int lua_checkstack (lua_State *L, int n) {$/;"	f
lua_close	lua/doc/manual.html	/^<hr><h3><a name="lua_close"><code>lua_close<\/code><\/a><\/h3><p>$/;"	a
lua_close	lua/src/lstate.c	/^LUA_API void lua_close (lua_State *L) {$/;"	f
lua_compare	lua/doc/manual.html	/^<hr><h3><a name="lua_compare"><code>lua_compare<\/code><\/a><\/h3><p>$/;"	a
lua_compare	lua/src/lapi.c	/^LUA_API int lua_compare (lua_State *L, int index1, int index2, int op) {$/;"	f
lua_concat	lua/doc/manual.html	/^<hr><h3><a name="lua_concat"><code>lua_concat<\/code><\/a><\/h3><p>$/;"	a
lua_concat	lua/src/lapi.c	/^LUA_API void lua_concat (lua_State *L, int n) {$/;"	f
lua_copy	lua/doc/manual.html	/^<hr><h3><a name="lua_copy"><code>lua_copy<\/code><\/a><\/h3><p>$/;"	a
lua_copy	lua/src/lapi.c	/^LUA_API void lua_copy (lua_State *L, int fromidx, int toidx) {$/;"	f
lua_cpcall	lua/src/luaconf.h	341;"	d
lua_createtable	lua/doc/manual.html	/^<hr><h3><a name="lua_createtable"><code>lua_createtable<\/code><\/a><\/h3><p>$/;"	a
lua_createtable	lua/src/lapi.c	/^LUA_API void lua_createtable (lua_State *L, int narray, int nrec) {$/;"	f
lua_dump	lua/doc/manual.html	/^<hr><h3><a name="lua_dump"><code>lua_dump<\/code><\/a><\/h3><p>$/;"	a
lua_dump	lua/src/lapi.c	/^LUA_API int lua_dump (lua_State *L, lua_Writer writer, void *data, int strip) {$/;"	f
lua_equal	lua/src/luaconf.h	373;"	d
lua_error	lua/doc/manual.html	/^<hr><h3><a name="lua_error"><code>lua_error<\/code><\/a><\/h3><p>$/;"	a
lua_error	lua/src/lapi.c	/^LUA_API int lua_error (lua_State *L) {$/;"	f
lua_freeline	lua/src/lua.c	84;"	d	file:
lua_freeline	lua/src/lua.c	92;"	d	file:
lua_gc	lua/doc/manual.html	/^<hr><h3><a name="lua_gc"><code>lua_gc<\/code><\/a><\/h3><p>$/;"	a
lua_gc	lua/src/lapi.c	/^LUA_API int lua_gc (lua_State *L, int what, int data) {$/;"	f
lua_getallocf	lua/doc/manual.html	/^<hr><h3><a name="lua_getallocf"><code>lua_getallocf<\/code><\/a><\/h3><p>$/;"	a
lua_getallocf	lua/src/lapi.c	/^LUA_API lua_Alloc lua_getallocf (lua_State *L, void **ud) {$/;"	f
lua_getextraspace	lua/doc/manual.html	/^<hr><h3><a name="lua_getextraspace"><code>lua_getextraspace<\/code><\/a><\/h3><p>$/;"	a
lua_getextraspace	lua/src/lua.h	339;"	d
lua_getfield	lua/doc/manual.html	/^<hr><h3><a name="lua_getfield"><code>lua_getfield<\/code><\/a><\/h3><p>$/;"	a
lua_getfield	lua/src/lapi.c	/^LUA_API int lua_getfield (lua_State *L, int idx, const char *k) {$/;"	f
lua_getglobal	lua/doc/manual.html	/^<hr><h3><a name="lua_getglobal"><code>lua_getglobal<\/code><\/a><\/h3><p>$/;"	a
lua_getglobal	lua/src/lapi.c	/^LUA_API int lua_getglobal (lua_State *L, const char *name) {$/;"	f
lua_gethook	lua/doc/manual.html	/^<hr><h3><a name="lua_gethook"><code>lua_gethook<\/code><\/a><\/h3><p>$/;"	a
lua_gethook	lua/src/ldebug.c	/^LUA_API lua_Hook lua_gethook (lua_State *L) {$/;"	f
lua_gethookcount	lua/doc/manual.html	/^<hr><h3><a name="lua_gethookcount"><code>lua_gethookcount<\/code><\/a><\/h3><p>$/;"	a
lua_gethookcount	lua/src/ldebug.c	/^LUA_API int lua_gethookcount (lua_State *L) {$/;"	f
lua_gethookmask	lua/doc/manual.html	/^<hr><h3><a name="lua_gethookmask"><code>lua_gethookmask<\/code><\/a><\/h3><p>$/;"	a
lua_gethookmask	lua/src/ldebug.c	/^LUA_API int lua_gethookmask (lua_State *L) {$/;"	f
lua_geti	lua/doc/manual.html	/^<hr><h3><a name="lua_geti"><code>lua_geti<\/code><\/a><\/h3><p>$/;"	a
lua_geti	lua/src/lapi.c	/^LUA_API int lua_geti (lua_State *L, int idx, lua_Integer n) {$/;"	f
lua_getinfo	lua/doc/manual.html	/^<hr><h3><a name="lua_getinfo"><code>lua_getinfo<\/code><\/a><\/h3><p>$/;"	a
lua_getinfo	lua/src/ldebug.c	/^LUA_API int lua_getinfo (lua_State *L, const char *what, lua_Debug *ar) {$/;"	f
lua_getlocal	lua/doc/manual.html	/^<hr><h3><a name="lua_getlocal"><code>lua_getlocal<\/code><\/a><\/h3><p>$/;"	a
lua_getlocal	lua/src/ldebug.c	/^LUA_API const char *lua_getlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f
lua_getlocaledecpoint	lua/src/luaconf.h	657;"	d
lua_getmetatable	lua/doc/manual.html	/^<hr><h3><a name="lua_getmetatable"><code>lua_getmetatable<\/code><\/a><\/h3><p>$/;"	a
lua_getmetatable	lua/src/lapi.c	/^LUA_API int lua_getmetatable (lua_State *L, int objindex) {$/;"	f
lua_getstack	lua/doc/manual.html	/^<hr><h3><a name="lua_getstack"><code>lua_getstack<\/code><\/a><\/h3><p>$/;"	a
lua_getstack	lua/src/ldebug.c	/^LUA_API int lua_getstack (lua_State *L, int level, lua_Debug *ar) {$/;"	f
lua_gettable	lua/doc/manual.html	/^<hr><h3><a name="lua_gettable"><code>lua_gettable<\/code><\/a><\/h3><p>$/;"	a
lua_gettable	lua/src/lapi.c	/^LUA_API int lua_gettable (lua_State *L, int idx) {$/;"	f
lua_gettop	lua/doc/manual.html	/^<hr><h3><a name="lua_gettop"><code>lua_gettop<\/code><\/a><\/h3><p>$/;"	a
lua_gettop	lua/src/lapi.c	/^LUA_API int lua_gettop (lua_State *L) {$/;"	f
lua_getupvalue	lua/doc/manual.html	/^<hr><h3><a name="lua_getupvalue"><code>lua_getupvalue<\/code><\/a><\/h3><p>$/;"	a
lua_getupvalue	lua/src/lapi.c	/^LUA_API const char *lua_getupvalue (lua_State *L, int funcindex, int n) {$/;"	f
lua_getuservalue	lua/doc/manual.html	/^<hr><h3><a name="lua_getuservalue"><code>lua_getuservalue<\/code><\/a><\/h3><p>$/;"	a
lua_getuservalue	lua/src/lapi.c	/^LUA_API int lua_getuservalue (lua_State *L, int idx) {$/;"	f
lua_h	lua/src/lua.h	10;"	d
lua_ident	lua/src/lapi.c	/^const char lua_ident[] =$/;"	v
lua_insert	lua/doc/manual.html	/^<hr><h3><a name="lua_insert"><code>lua_insert<\/code><\/a><\/h3><p>$/;"	a
lua_insert	lua/src/lua.h	369;"	d
lua_integer2str	lua/src/luaconf.h	514;"	d
lua_isboolean	lua/doc/manual.html	/^<hr><h3><a name="lua_isboolean"><code>lua_isboolean<\/code><\/a><\/h3><p>$/;"	a
lua_isboolean	lua/src/lua.h	356;"	d
lua_iscfunction	lua/doc/manual.html	/^<hr><h3><a name="lua_iscfunction"><code>lua_iscfunction<\/code><\/a><\/h3><p>$/;"	a
lua_iscfunction	lua/src/lapi.c	/^LUA_API int lua_iscfunction (lua_State *L, int idx) {$/;"	f
lua_isfunction	lua/doc/manual.html	/^<hr><h3><a name="lua_isfunction"><code>lua_isfunction<\/code><\/a><\/h3><p>$/;"	a
lua_isfunction	lua/src/lua.h	352;"	d
lua_isinteger	lua/doc/manual.html	/^<hr><h3><a name="lua_isinteger"><code>lua_isinteger<\/code><\/a><\/h3><p>$/;"	a
lua_isinteger	lua/src/lapi.c	/^LUA_API int lua_isinteger (lua_State *L, int idx) {$/;"	f
lua_islightuserdata	lua/doc/manual.html	/^<hr><h3><a name="lua_islightuserdata"><code>lua_islightuserdata<\/code><\/a><\/h3><p>$/;"	a
lua_islightuserdata	lua/src/lua.h	354;"	d
lua_isnil	lua/doc/manual.html	/^<hr><h3><a name="lua_isnil"><code>lua_isnil<\/code><\/a><\/h3><p>$/;"	a
lua_isnil	lua/src/lua.h	355;"	d
lua_isnone	lua/doc/manual.html	/^<hr><h3><a name="lua_isnone"><code>lua_isnone<\/code><\/a><\/h3><p>$/;"	a
lua_isnone	lua/src/lua.h	358;"	d
lua_isnoneornil	lua/doc/manual.html	/^<hr><h3><a name="lua_isnoneornil"><code>lua_isnoneornil<\/code><\/a><\/h3><p>$/;"	a
lua_isnoneornil	lua/src/lua.h	359;"	d
lua_isnumber	lua/doc/manual.html	/^<hr><h3><a name="lua_isnumber"><code>lua_isnumber<\/code><\/a><\/h3><p>$/;"	a
lua_isnumber	lua/src/lapi.c	/^LUA_API int lua_isnumber (lua_State *L, int idx) {$/;"	f
lua_isstring	lua/doc/manual.html	/^<hr><h3><a name="lua_isstring"><code>lua_isstring<\/code><\/a><\/h3><p>$/;"	a
lua_isstring	lua/src/lapi.c	/^LUA_API int lua_isstring (lua_State *L, int idx) {$/;"	f
lua_istable	lua/doc/manual.html	/^<hr><h3><a name="lua_istable"><code>lua_istable<\/code><\/a><\/h3><p>$/;"	a
lua_istable	lua/src/lua.h	353;"	d
lua_isthread	lua/doc/manual.html	/^<hr><h3><a name="lua_isthread"><code>lua_isthread<\/code><\/a><\/h3><p>$/;"	a
lua_isthread	lua/src/lua.h	357;"	d
lua_isuserdata	lua/doc/manual.html	/^<hr><h3><a name="lua_isuserdata"><code>lua_isuserdata<\/code><\/a><\/h3><p>$/;"	a
lua_isuserdata	lua/src/lapi.c	/^LUA_API int lua_isuserdata (lua_State *L, int idx) {$/;"	f
lua_isyieldable	lua/doc/manual.html	/^<hr><h3><a name="lua_isyieldable"><code>lua_isyieldable<\/code><\/a><\/h3><p>$/;"	a
lua_isyieldable	lua/src/ldo.c	/^LUA_API int lua_isyieldable (lua_State *L) {$/;"	f
lua_len	lua/doc/manual.html	/^<hr><h3><a name="lua_len"><code>lua_len<\/code><\/a><\/h3><p>$/;"	a
lua_len	lua/src/lapi.c	/^LUA_API void lua_len (lua_State *L, int idx) {$/;"	f
lua_lessthan	lua/src/luaconf.h	374;"	d
lua_load	lua/doc/manual.html	/^<hr><h3><a name="lua_load"><code>lua_load<\/code><\/a><\/h3><p>$/;"	a
lua_load	lua/src/lapi.c	/^LUA_API int lua_load (lua_State *L, lua_Reader reader, void *data,$/;"	f
lua_lock	lua/src/llimits.h	214;"	d
lua_longassert	lua/src/llimits.h	87;"	d
lua_longassert	lua/src/llimits.h	91;"	d
lua_longjmp	lua/src/ldo.c	/^struct lua_longjmp {$/;"	s	file:
lua_newstate	lua/doc/manual.html	/^<hr><h3><a name="lua_newstate"><code>lua_newstate<\/code><\/a><\/h3><p>$/;"	a
lua_newstate	lua/src/lstate.c	/^LUA_API lua_State *lua_newstate (lua_Alloc f, void *ud) {$/;"	f
lua_newtable	lua/doc/manual.html	/^<hr><h3><a name="lua_newtable"><code>lua_newtable<\/code><\/a><\/h3><p>$/;"	a
lua_newtable	lua/src/lua.h	346;"	d
lua_newthread	lua/doc/manual.html	/^<hr><h3><a name="lua_newthread"><code>lua_newthread<\/code><\/a><\/h3><p>$/;"	a
lua_newthread	lua/src/lstate.c	/^LUA_API lua_State *lua_newthread (lua_State *L) {$/;"	f
lua_newuserdata	lua/doc/manual.html	/^<hr><h3><a name="lua_newuserdata"><code>lua_newuserdata<\/code><\/a><\/h3><p>$/;"	a
lua_newuserdata	lua/src/lapi.c	/^LUA_API void *lua_newuserdata (lua_State *L, size_t size) {$/;"	f
lua_next	lua/doc/manual.html	/^<hr><h3><a name="lua_next"><code>lua_next<\/code><\/a><\/h3><p>$/;"	a
lua_next	lua/src/lapi.c	/^LUA_API int lua_next (lua_State *L, int idx) {$/;"	f
lua_number2str	lua/src/luaconf.h	424;"	d
lua_number2strx	lua/src/lstrlib.c	/^static int lua_number2strx (lua_State *L, char *buff, int sz,$/;"	f	file:
lua_number2strx	lua/src/luaconf.h	615;"	d
lua_numbertointeger	lua/doc/manual.html	/^<hr><h3><a name="lua_numbertointeger"><code>lua_numbertointeger<\/code><\/a><\/h3>$/;"	a
lua_numbertointeger	lua/src/luaconf.h	434;"	d
lua_objlen	lua/src/luaconf.h	371;"	d
lua_pcall	lua/doc/manual.html	/^<hr><h3><a name="lua_pcall"><code>lua_pcall<\/code><\/a><\/h3><p>$/;"	a
lua_pcall	lua/src/lua.h	278;"	d
lua_pcallk	lua/doc/manual.html	/^<hr><h3><a name="lua_pcallk"><code>lua_pcallk<\/code><\/a><\/h3><p>$/;"	a
lua_pcallk	lua/src/lapi.c	/^LUA_API int lua_pcallk (lua_State *L, int nargs, int nresults, int errfunc,$/;"	f
lua_pop	lua/doc/manual.html	/^<hr><h3><a name="lua_pop"><code>lua_pop<\/code><\/a><\/h3><p>$/;"	a
lua_pop	lua/src/lua.h	344;"	d
lua_pushboolean	lua/doc/manual.html	/^<hr><h3><a name="lua_pushboolean"><code>lua_pushboolean<\/code><\/a><\/h3><p>$/;"	a
lua_pushboolean	lua/src/lapi.c	/^LUA_API void lua_pushboolean (lua_State *L, int b) {$/;"	f
lua_pushcclosure	lua/doc/manual.html	/^<hr><h3><a name="lua_pushcclosure"><code>lua_pushcclosure<\/code><\/a><\/h3><p>$/;"	a
lua_pushcclosure	lua/src/lapi.c	/^LUA_API void lua_pushcclosure (lua_State *L, lua_CFunction fn, int n) {$/;"	f
lua_pushcfunction	lua/doc/manual.html	/^<hr><h3><a name="lua_pushcfunction"><code>lua_pushcfunction<\/code><\/a><\/h3><p>$/;"	a
lua_pushcfunction	lua/src/lua.h	350;"	d
lua_pushfstring	lua/doc/manual.html	/^<hr><h3><a name="lua_pushfstring"><code>lua_pushfstring<\/code><\/a><\/h3><p>$/;"	a
lua_pushfstring	lua/src/lapi.c	/^LUA_API const char *lua_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f
lua_pushglobaltable	lua/doc/manual.html	/^<hr><h3><a name="lua_pushglobaltable"><code>lua_pushglobaltable<\/code><\/a><\/h3><p>$/;"	a
lua_pushglobaltable	lua/src/lua.h	363;"	d
lua_pushinteger	lua/doc/manual.html	/^<hr><h3><a name="lua_pushinteger"><code>lua_pushinteger<\/code><\/a><\/h3><p>$/;"	a
lua_pushinteger	lua/src/lapi.c	/^LUA_API void lua_pushinteger (lua_State *L, lua_Integer n) {$/;"	f
lua_pushlightuserdata	lua/doc/manual.html	/^<hr><h3><a name="lua_pushlightuserdata"><code>lua_pushlightuserdata<\/code><\/a><\/h3><p>$/;"	a
lua_pushlightuserdata	lua/src/lapi.c	/^LUA_API void lua_pushlightuserdata (lua_State *L, void *p) {$/;"	f
lua_pushliteral	lua/doc/manual.html	/^<hr><h3><a name="lua_pushliteral"><code>lua_pushliteral<\/code><\/a><\/h3><p>$/;"	a
lua_pushliteral	lua/src/lua.h	361;"	d
lua_pushlstring	lua/doc/manual.html	/^<hr><h3><a name="lua_pushlstring"><code>lua_pushlstring<\/code><\/a><\/h3><p>$/;"	a
lua_pushlstring	lua/src/lapi.c	/^LUA_API const char *lua_pushlstring (lua_State *L, const char *s, size_t len) {$/;"	f
lua_pushnil	lua/doc/manual.html	/^<hr><h3><a name="lua_pushnil"><code>lua_pushnil<\/code><\/a><\/h3><p>$/;"	a
lua_pushnil	lua/src/lapi.c	/^LUA_API void lua_pushnil (lua_State *L) {$/;"	f
lua_pushnumber	lua/doc/manual.html	/^<hr><h3><a name="lua_pushnumber"><code>lua_pushnumber<\/code><\/a><\/h3><p>$/;"	a
lua_pushnumber	lua/src/lapi.c	/^LUA_API void lua_pushnumber (lua_State *L, lua_Number n) {$/;"	f
lua_pushstring	lua/doc/manual.html	/^<hr><h3><a name="lua_pushstring"><code>lua_pushstring<\/code><\/a><\/h3><p>$/;"	a
lua_pushstring	lua/src/lapi.c	/^LUA_API const char *lua_pushstring (lua_State *L, const char *s) {$/;"	f
lua_pushthread	lua/doc/manual.html	/^<hr><h3><a name="lua_pushthread"><code>lua_pushthread<\/code><\/a><\/h3><p>$/;"	a
lua_pushthread	lua/src/lapi.c	/^LUA_API int lua_pushthread (lua_State *L) {$/;"	f
lua_pushunsigned	lua/src/lua.h	385;"	d
lua_pushvalue	lua/doc/manual.html	/^<hr><h3><a name="lua_pushvalue"><code>lua_pushvalue<\/code><\/a><\/h3><p>$/;"	a
lua_pushvalue	lua/src/lapi.c	/^LUA_API void lua_pushvalue (lua_State *L, int idx) {$/;"	f
lua_pushvfstring	lua/doc/manual.html	/^<hr><h3><a name="lua_pushvfstring"><code>lua_pushvfstring<\/code><\/a><\/h3><p>$/;"	a
lua_pushvfstring	lua/src/lapi.c	/^LUA_API const char *lua_pushvfstring (lua_State *L, const char *fmt,$/;"	f
lua_rawequal	lua/doc/manual.html	/^<hr><h3><a name="lua_rawequal"><code>lua_rawequal<\/code><\/a><\/h3><p>$/;"	a
lua_rawequal	lua/src/lapi.c	/^LUA_API int lua_rawequal (lua_State *L, int index1, int index2) {$/;"	f
lua_rawget	lua/doc/manual.html	/^<hr><h3><a name="lua_rawget"><code>lua_rawget<\/code><\/a><\/h3><p>$/;"	a
lua_rawget	lua/src/lapi.c	/^LUA_API int lua_rawget (lua_State *L, int idx) {$/;"	f
lua_rawgeti	lua/doc/manual.html	/^<hr><h3><a name="lua_rawgeti"><code>lua_rawgeti<\/code><\/a><\/h3><p>$/;"	a
lua_rawgeti	lua/src/lapi.c	/^LUA_API int lua_rawgeti (lua_State *L, int idx, lua_Integer n) {$/;"	f
lua_rawgetp	lua/doc/manual.html	/^<hr><h3><a name="lua_rawgetp"><code>lua_rawgetp<\/code><\/a><\/h3><p>$/;"	a
lua_rawgetp	lua/src/lapi.c	/^LUA_API int lua_rawgetp (lua_State *L, int idx, const void *p) {$/;"	f
lua_rawlen	lua/doc/manual.html	/^<hr><h3><a name="lua_rawlen"><code>lua_rawlen<\/code><\/a><\/h3><p>$/;"	a
lua_rawlen	lua/src/lapi.c	/^LUA_API size_t lua_rawlen (lua_State *L, int idx) {$/;"	f
lua_rawset	lua/doc/manual.html	/^<hr><h3><a name="lua_rawset"><code>lua_rawset<\/code><\/a><\/h3><p>$/;"	a
lua_rawset	lua/src/lapi.c	/^LUA_API void lua_rawset (lua_State *L, int idx) {$/;"	f
lua_rawseti	lua/doc/manual.html	/^<hr><h3><a name="lua_rawseti"><code>lua_rawseti<\/code><\/a><\/h3><p>$/;"	a
lua_rawseti	lua/src/lapi.c	/^LUA_API void lua_rawseti (lua_State *L, int idx, lua_Integer n) {$/;"	f
lua_rawsetp	lua/doc/manual.html	/^<hr><h3><a name="lua_rawsetp"><code>lua_rawsetp<\/code><\/a><\/h3><p>$/;"	a
lua_rawsetp	lua/src/lapi.c	/^LUA_API void lua_rawsetp (lua_State *L, int idx, const void *p) {$/;"	f
lua_readline	lua/src/lua.c	82;"	d	file:
lua_readline	lua/src/lua.c	88;"	d	file:
lua_register	lua/doc/manual.html	/^<hr><h3><a name="lua_register"><code>lua_register<\/code><\/a><\/h3><p>$/;"	a
lua_register	lua/src/lua.h	348;"	d
lua_remove	lua/doc/manual.html	/^<hr><h3><a name="lua_remove"><code>lua_remove<\/code><\/a><\/h3><p>$/;"	a
lua_remove	lua/src/lua.h	371;"	d
lua_replace	lua/doc/manual.html	/^<hr><h3><a name="lua_replace"><code>lua_replace<\/code><\/a><\/h3><p>$/;"	a
lua_replace	lua/src/lua.h	373;"	d
lua_resume	lua/doc/manual.html	/^<hr><h3><a name="lua_resume"><code>lua_resume<\/code><\/a><\/h3><p>$/;"	a
lua_resume	lua/src/ldo.c	/^LUA_API int lua_resume (lua_State *L, lua_State *from, int nargs) {$/;"	f
lua_rotate	lua/doc/manual.html	/^<hr><h3><a name="lua_rotate"><code>lua_rotate<\/code><\/a><\/h3><p>$/;"	a
lua_rotate	lua/src/lapi.c	/^LUA_API void lua_rotate (lua_State *L, int idx, int n) {$/;"	f
lua_saveline	lua/src/lua.c	83;"	d	file:
lua_saveline	lua/src/lua.c	91;"	d	file:
lua_setallocf	lua/doc/manual.html	/^<hr><h3><a name="lua_setallocf"><code>lua_setallocf<\/code><\/a><\/h3><p>$/;"	a
lua_setallocf	lua/src/lapi.c	/^LUA_API void lua_setallocf (lua_State *L, lua_Alloc f, void *ud) {$/;"	f
lua_setfield	lua/doc/manual.html	/^<hr><h3><a name="lua_setfield"><code>lua_setfield<\/code><\/a><\/h3><p>$/;"	a
lua_setfield	lua/src/lapi.c	/^LUA_API void lua_setfield (lua_State *L, int idx, const char *k) {$/;"	f
lua_setglobal	lua/doc/manual.html	/^<hr><h3><a name="lua_setglobal"><code>lua_setglobal<\/code><\/a><\/h3><p>$/;"	a
lua_setglobal	lua/src/lapi.c	/^LUA_API void lua_setglobal (lua_State *L, const char *name) {$/;"	f
lua_sethook	lua/doc/manual.html	/^<hr><h3><a name="lua_sethook"><code>lua_sethook<\/code><\/a><\/h3><p>$/;"	a
lua_sethook	lua/src/ldebug.c	/^LUA_API void lua_sethook (lua_State *L, lua_Hook func, int mask, int count) {$/;"	f
lua_seti	lua/doc/manual.html	/^<hr><h3><a name="lua_seti"><code>lua_seti<\/code><\/a><\/h3><p>$/;"	a
lua_seti	lua/src/lapi.c	/^LUA_API void lua_seti (lua_State *L, int idx, lua_Integer n) {$/;"	f
lua_setlocal	lua/doc/manual.html	/^<hr><h3><a name="lua_setlocal"><code>lua_setlocal<\/code><\/a><\/h3><p>$/;"	a
lua_setlocal	lua/src/ldebug.c	/^LUA_API const char *lua_setlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f
lua_setmetatable	lua/doc/manual.html	/^<hr><h3><a name="lua_setmetatable"><code>lua_setmetatable<\/code><\/a><\/h3><p>$/;"	a
lua_setmetatable	lua/src/lapi.c	/^LUA_API int lua_setmetatable (lua_State *L, int objindex) {$/;"	f
lua_settable	lua/doc/manual.html	/^<hr><h3><a name="lua_settable"><code>lua_settable<\/code><\/a><\/h3><p>$/;"	a
lua_settable	lua/src/lapi.c	/^LUA_API void lua_settable (lua_State *L, int idx) {$/;"	f
lua_settop	lua/doc/manual.html	/^<hr><h3><a name="lua_settop"><code>lua_settop<\/code><\/a><\/h3><p>$/;"	a
lua_settop	lua/src/lapi.c	/^LUA_API void lua_settop (lua_State *L, int idx) {$/;"	f
lua_setupvalue	lua/doc/manual.html	/^<hr><h3><a name="lua_setupvalue"><code>lua_setupvalue<\/code><\/a><\/h3><p>$/;"	a
lua_setupvalue	lua/src/lapi.c	/^LUA_API const char *lua_setupvalue (lua_State *L, int funcindex, int n) {$/;"	f
lua_setuservalue	lua/doc/manual.html	/^<hr><h3><a name="lua_setuservalue"><code>lua_setuservalue<\/code><\/a><\/h3><p>$/;"	a
lua_setuservalue	lua/src/lapi.c	/^LUA_API void lua_setuservalue (lua_State *L, int idx) {$/;"	f
lua_status	lua/doc/manual.html	/^<hr><h3><a name="lua_status"><code>lua_status<\/code><\/a><\/h3><p>$/;"	a
lua_status	lua/src/lapi.c	/^LUA_API int lua_status (lua_State *L) {$/;"	f
lua_stdin_is_tty	lua/src/lua.c	53;"	d	file:
lua_stdin_is_tty	lua/src/lua.c	58;"	d	file:
lua_stdin_is_tty	lua/src/lua.c	63;"	d	file:
lua_str2number	lua/src/luaconf.h	455;"	d
lua_str2number	lua/src/luaconf.h	471;"	d
lua_str2number	lua/src/luaconf.h	486;"	d
lua_str2number	lua/src/luaconf.h	627;"	d
lua_str2number	lua/src/luaconf.h	629;"	d
lua_stringtonumber	lua/doc/manual.html	/^<hr><h3><a name="lua_stringtonumber"><code>lua_stringtonumber<\/code><\/a><\/h3><p>$/;"	a
lua_stringtonumber	lua/src/lapi.c	/^LUA_API size_t lua_stringtonumber (lua_State *L, const char *s) {$/;"	f
lua_strlen	lua/src/luaconf.h	369;"	d
lua_strx2number	lua/src/lobject.c	/^static lua_Number lua_strx2number (const char *s, char **endptr) {$/;"	f	file:
lua_strx2number	lua/src/luaconf.h	604;"	d
lua_tmpnam	lua/src/loslib.c	121;"	d	file:
lua_tmpnam	lua/src/loslib.c	131;"	d	file:
lua_toboolean	lua/doc/manual.html	/^<hr><h3><a name="lua_toboolean"><code>lua_toboolean<\/code><\/a><\/h3><p>$/;"	a
lua_toboolean	lua/src/lapi.c	/^LUA_API int lua_toboolean (lua_State *L, int idx) {$/;"	f
lua_tocfunction	lua/doc/manual.html	/^<hr><h3><a name="lua_tocfunction"><code>lua_tocfunction<\/code><\/a><\/h3><p>$/;"	a
lua_tocfunction	lua/src/lapi.c	/^LUA_API lua_CFunction lua_tocfunction (lua_State *L, int idx) {$/;"	f
lua_tointeger	lua/doc/manual.html	/^<hr><h3><a name="lua_tointeger"><code>lua_tointeger<\/code><\/a><\/h3><p>$/;"	a
lua_tointeger	lua/src/lua.h	342;"	d
lua_tointegerx	lua/doc/manual.html	/^<hr><h3><a name="lua_tointegerx"><code>lua_tointegerx<\/code><\/a><\/h3><p>$/;"	a
lua_tointegerx	lua/src/lapi.c	/^LUA_API lua_Integer lua_tointegerx (lua_State *L, int idx, int *pisnum) {$/;"	f
lua_tolstring	lua/doc/manual.html	/^<hr><h3><a name="lua_tolstring"><code>lua_tolstring<\/code><\/a><\/h3><p>$/;"	a
lua_tolstring	lua/src/lapi.c	/^LUA_API const char *lua_tolstring (lua_State *L, int idx, size_t *len) {$/;"	f
lua_tonumber	lua/doc/manual.html	/^<hr><h3><a name="lua_tonumber"><code>lua_tonumber<\/code><\/a><\/h3><p>$/;"	a
lua_tonumber	lua/src/lua.h	341;"	d
lua_tonumberx	lua/doc/manual.html	/^<hr><h3><a name="lua_tonumberx"><code>lua_tonumberx<\/code><\/a><\/h3><p>$/;"	a
lua_tonumberx	lua/src/lapi.c	/^LUA_API lua_Number lua_tonumberx (lua_State *L, int idx, int *pisnum) {$/;"	f
lua_topointer	lua/doc/manual.html	/^<hr><h3><a name="lua_topointer"><code>lua_topointer<\/code><\/a><\/h3><p>$/;"	a
lua_topointer	lua/src/lapi.c	/^LUA_API const void *lua_topointer (lua_State *L, int idx) {$/;"	f
lua_tostring	lua/doc/manual.html	/^<hr><h3><a name="lua_tostring"><code>lua_tostring<\/code><\/a><\/h3><p>$/;"	a
lua_tostring	lua/src/lua.h	366;"	d
lua_tothread	lua/doc/manual.html	/^<hr><h3><a name="lua_tothread"><code>lua_tothread<\/code><\/a><\/h3><p>$/;"	a
lua_tothread	lua/src/lapi.c	/^LUA_API lua_State *lua_tothread (lua_State *L, int idx) {$/;"	f
lua_tounsigned	lua/src/lua.h	387;"	d
lua_tounsignedx	lua/src/lua.h	386;"	d
lua_touserdata	lua/doc/manual.html	/^<hr><h3><a name="lua_touserdata"><code>lua_touserdata<\/code><\/a><\/h3><p>$/;"	a
lua_touserdata	lua/src/lapi.c	/^LUA_API void *lua_touserdata (lua_State *L, int idx) {$/;"	f
lua_type	lua/doc/manual.html	/^<hr><h3><a name="lua_type"><code>lua_type<\/code><\/a><\/h3><p>$/;"	a
lua_type	lua/src/lapi.c	/^LUA_API int lua_type (lua_State *L, int idx) {$/;"	f
lua_typename	lua/doc/manual.html	/^<hr><h3><a name="lua_typename"><code>lua_typename<\/code><\/a><\/h3><p>$/;"	a
lua_typename	lua/src/lapi.c	/^LUA_API const char *lua_typename (lua_State *L, int t) {$/;"	f
lua_unlock	lua/src/llimits.h	215;"	d
lua_upvalueid	lua/doc/manual.html	/^<hr><h3><a name="lua_upvalueid"><code>lua_upvalueid<\/code><\/a><\/h3><p>$/;"	a
lua_upvalueid	lua/src/lapi.c	/^LUA_API void *lua_upvalueid (lua_State *L, int fidx, int n) {$/;"	f
lua_upvalueindex	lua/doc/manual.html	/^<hr><h3><a name="lua_upvalueindex"><code>lua_upvalueindex<\/code><\/a><\/h3><p>$/;"	a
lua_upvalueindex	lua/src/lua.h	43;"	d
lua_upvaluejoin	lua/doc/manual.html	/^<hr><h3><a name="lua_upvaluejoin"><code>lua_upvaluejoin<\/code><\/a><\/h3><p>$/;"	a
lua_upvaluejoin	lua/src/lapi.c	/^LUA_API void lua_upvaluejoin (lua_State *L, int fidx1, int n1,$/;"	f
lua_version	lua/doc/manual.html	/^<hr><h3><a name="lua_version"><code>lua_version<\/code><\/a><\/h3><p>$/;"	a
lua_version	lua/src/lapi.c	/^LUA_API const lua_Number *lua_version (lua_State *L) {$/;"	f
lua_writeline	lua/src/lauxlib.h	220;"	d
lua_writestring	lua/src/lauxlib.h	215;"	d
lua_writestringerror	lua/src/lauxlib.h	225;"	d
lua_xmove	lua/doc/manual.html	/^<hr><h3><a name="lua_xmove"><code>lua_xmove<\/code><\/a><\/h3><p>$/;"	a
lua_xmove	lua/src/lapi.c	/^LUA_API void lua_xmove (lua_State *from, lua_State *to, int n) {$/;"	f
lua_yield	lua/doc/manual.html	/^<hr><h3><a name="lua_yield"><code>lua_yield<\/code><\/a><\/h3><p>$/;"	a
lua_yield	lua/src/lua.h	295;"	d
lua_yieldk	lua/doc/manual.html	/^<hr><h3><a name="lua_yieldk"><code>lua_yieldk<\/code><\/a><\/h3><p>$/;"	a
lua_yieldk	lua/src/ldo.c	/^LUA_API int lua_yieldk (lua_State *L, int nresults, lua_KContext ctx,$/;"	f
luac_c	lua/src/luac.c	217;"	d	file:
luac_c	lua/src/luac.c	7;"	d	file:
luaconf_h	lua/src/luaconf.h	9;"	d
luai_apicheck	lua/src/llimits.h	98;"	d
luai_apicheck	lua/src/luaconf.h	685;"	d
luai_ctype_	lua/src/lctype.c	/^LUAI_DDEF const lu_byte luai_ctype_[UCHAR_MAX + 2] = {$/;"	v
luai_ctype_	lua/src/lctype.h	/^LUAI_DDEC const lu_byte luai_ctype_[UCHAR_MAX + 2];$/;"	v
luai_jmpbuf	lua/src/ldo.c	61;"	d	file:
luai_jmpbuf	lua/src/ldo.c	68;"	d	file:
luai_jmpbuf	lua/src/ldo.c	75;"	d	file:
luai_makeseed	lua/src/lstate.c	46;"	d	file:
luai_numadd	lua/src/llimits.h	291;"	d
luai_numdiv	lua/src/llimits.h	269;"	d
luai_numeq	lua/src/llimits.h	295;"	d
luai_numidiv	lua/src/llimits.h	264;"	d
luai_numisnan	lua/src/llimits.h	298;"	d
luai_numle	lua/src/llimits.h	297;"	d
luai_numlt	lua/src/llimits.h	296;"	d
luai_nummod	lua/src/llimits.h	280;"	d
luai_nummul	lua/src/llimits.h	293;"	d
luai_numpow	lua/src/llimits.h	286;"	d
luai_numsub	lua/src/llimits.h	292;"	d
luai_numunm	lua/src/llimits.h	294;"	d
luai_threadyield	lua/src/llimits.h	223;"	d
luai_userstateclose	lua/src/llimits.h	237;"	d
luai_userstatefree	lua/src/llimits.h	245;"	d
luai_userstateopen	lua/src/llimits.h	233;"	d
luai_userstateresume	lua/src/llimits.h	249;"	d
luai_userstatethread	lua/src/llimits.h	241;"	d
luai_userstateyield	lua/src/llimits.h	253;"	d
luai_verifycode	lua/src/lundump.c	28;"	d	file:
lualib_h	lua/src/lualib.h	9;"	d
luaopen_base	lua/src/lbaselib.c	/^LUAMOD_API int luaopen_base (lua_State *L) {$/;"	f
luaopen_bit32	lua/src/lbitlib.c	/^LUAMOD_API int luaopen_bit32 (lua_State *L) {$/;"	f
luaopen_coroutine	lua/src/lcorolib.c	/^LUAMOD_API int luaopen_coroutine (lua_State *L) {$/;"	f
luaopen_debug	lua/src/ldblib.c	/^LUAMOD_API int luaopen_debug (lua_State *L) {$/;"	f
luaopen_io	lua/src/liolib.c	/^LUAMOD_API int luaopen_io (lua_State *L) {$/;"	f
luaopen_lfs	lfs/src/lfs.c	/^LFS_EXPORT int luaopen_lfs (lua_State *L) {$/;"	f
luaopen_math	lua/src/lmathlib.c	/^LUAMOD_API int luaopen_math (lua_State *L) {$/;"	f
luaopen_os	lua/src/loslib.c	/^LUAMOD_API int luaopen_os (lua_State *L) {$/;"	f
luaopen_package	lua/src/loadlib.c	/^LUAMOD_API int luaopen_package (lua_State *L) {$/;"	f
luaopen_string	lua/src/lstrlib.c	/^LUAMOD_API int luaopen_string (lua_State *L) {$/;"	f
luaopen_table	lua/src/ltablib.c	/^LUAMOD_API int luaopen_table (lua_State *L) {$/;"	f
luaopen_utf8	lua/src/lutf8lib.c	/^LUAMOD_API int luaopen_utf8 (lua_State *L) {$/;"	f
luasrc	makefile	/^luasrc=.\/lua\/src$/;"	m
luavi	lsh.c	/^struct vi *luavi = &__luavi;$/;"	v	typeref:struct:vi
lundump_c	lua/src/lundump.c	7;"	d	file:
lundump_h	lua/src/lundump.h	8;"	d
lutf8lib_c	lua/src/lutf8lib.c	7;"	d	file:
lvm_c	lua/src/lvm.c	7;"	d	file:
lvm_h	lua/src/lvm.h	8;"	d
lzio_c	lua/src/lzio.c	7;"	d	file:
lzio_h	lua/src/lzio.h	9;"	d
m_regs	vi.h	/^	struct mark_register *m_regs;$/;"	m	struct:vi	typeref:struct:vi::mark_register
main	han2pinyin.c	/^int main(int argc, char *argv[]){$/;"	f
main	lsh.c	/^int main(int argc, char *argv[]){$/;"	f
main	lua/src/lua.c	/^int main (int argc, char **argv) {$/;"	f
main	lua/src/luac.c	/^int main(int argc, char* argv[])$/;"	f
main	pipe_demo.c	/^int main(){$/;"	f
main	t.c	/^int main(void){$/;"	f
mainfunc	lua/src/lparser.c	/^static void mainfunc (LexState *ls, FuncState *fs) {$/;"	f	file:
mainposition	lua/src/ltable.c	/^static Node *mainposition (const Table *t, const TValue *key) {$/;"	f	file:
mainthread	lua/src/lstate.h	/^  struct lua_State *mainthread;$/;"	m	struct:global_State	typeref:struct:global_State::lua_State
make_dir	lfs/src/lfs.c	/^static int make_dir (lua_State *L) {$/;"	f	file:
make_link	lfs/src/lfs.c	/^static int make_link(lua_State *L)$/;"	f	file:
makemask	lua/src/ldblib.c	/^static int makemask (const char *smask, int count) {$/;"	f	file:
makeseed	lua/src/lstate.c	/^static unsigned int makeseed (lua_State *L) {$/;"	f	file:
makewhite	lua/src/lgc.c	67;"	d	file:
malloc0	utils.c	/^void *malloc0(int size){$/;"	f
mark_register	vi.h	/^struct mark_register{$/;"	s
markbeingfnz	lua/src/lgc.c	/^static void markbeingfnz (global_State *g) {$/;"	f	file:
marklen	lua/src/lua.c	281;"	d	file:
markmt	lua/src/lgc.c	/^static void markmt (global_State *g) {$/;"	f	file:
markobject	lua/src/lgc.c	86;"	d	file:
markobjectN	lua/src/lgc.c	92;"	d	file:
markupval	lua/src/lparser.c	/^static void markupval (FuncState *fs, int level) {$/;"	f	file:
markvalue	lua/src/lgc.c	83;"	d	file:
mask	lua/src/lbitlib.c	45;"	d	file:
maskcolors	lua/src/lgc.c	66;"	d	file:
match	lua/src/lstrlib.c	/^static const char *match (MatchState *ms, const char *s, const char *p) {$/;"	f	file:
match_capture	lua/src/lstrlib.c	/^static const char *match_capture (MatchState *ms, const char *s, int l) {$/;"	f	file:
match_class	lua/src/lstrlib.c	/^static int match_class (int c, int cl) {$/;"	f	file:
matchbalance	lua/src/lstrlib.c	/^static const char *matchbalance (MatchState *ms, const char *s,$/;"	f	file:
matchbracketclass	lua/src/lstrlib.c	/^static int matchbracketclass (int c, const char *p, const char *ec) {$/;"	f	file:
matchdepth	lua/src/lstrlib.c	/^  int matchdepth;  \/* control for recursive depth (to avoid C stack overflow) *\/$/;"	m	struct:MatchState	file:
math_abs	lua/src/lmathlib.c	/^static int math_abs (lua_State *L) {$/;"	f	file:
math_acos	lua/src/lmathlib.c	/^static int math_acos (lua_State *L) {$/;"	f	file:
math_asin	lua/src/lmathlib.c	/^static int math_asin (lua_State *L) {$/;"	f	file:
math_atan	lua/src/lmathlib.c	/^static int math_atan (lua_State *L) {$/;"	f	file:
math_ceil	lua/src/lmathlib.c	/^static int math_ceil (lua_State *L) {$/;"	f	file:
math_cos	lua/src/lmathlib.c	/^static int math_cos (lua_State *L) {$/;"	f	file:
math_cosh	lua/src/lmathlib.c	/^static int math_cosh (lua_State *L) {$/;"	f	file:
math_deg	lua/src/lmathlib.c	/^static int math_deg (lua_State *L) {$/;"	f	file:
math_exp	lua/src/lmathlib.c	/^static int math_exp (lua_State *L) {$/;"	f	file:
math_floor	lua/src/lmathlib.c	/^static int math_floor (lua_State *L) {$/;"	f	file:
math_fmod	lua/src/lmathlib.c	/^static int math_fmod (lua_State *L) {$/;"	f	file:
math_frexp	lua/src/lmathlib.c	/^static int math_frexp (lua_State *L) {$/;"	f	file:
math_ldexp	lua/src/lmathlib.c	/^static int math_ldexp (lua_State *L) {$/;"	f	file:
math_log	lua/src/lmathlib.c	/^static int math_log (lua_State *L) {$/;"	f	file:
math_log10	lua/src/lmathlib.c	/^static int math_log10 (lua_State *L) {$/;"	f	file:
math_max	lua/src/lmathlib.c	/^static int math_max (lua_State *L) {$/;"	f	file:
math_min	lua/src/lmathlib.c	/^static int math_min (lua_State *L) {$/;"	f	file:
math_modf	lua/src/lmathlib.c	/^static int math_modf (lua_State *L) {$/;"	f	file:
math_pow	lua/src/lmathlib.c	/^static int math_pow (lua_State *L) {$/;"	f	file:
math_rad	lua/src/lmathlib.c	/^static int math_rad (lua_State *L) {$/;"	f	file:
math_random	lua/src/lmathlib.c	/^static int math_random (lua_State *L) {$/;"	f	file:
math_randomseed	lua/src/lmathlib.c	/^static int math_randomseed (lua_State *L) {$/;"	f	file:
math_sin	lua/src/lmathlib.c	/^static int math_sin (lua_State *L) {$/;"	f	file:
math_sinh	lua/src/lmathlib.c	/^static int math_sinh (lua_State *L) {$/;"	f	file:
math_sqrt	lua/src/lmathlib.c	/^static int math_sqrt (lua_State *L) {$/;"	f	file:
math_tan	lua/src/lmathlib.c	/^static int math_tan (lua_State *L) {$/;"	f	file:
math_tanh	lua/src/lmathlib.c	/^static int math_tanh (lua_State *L) {$/;"	f	file:
math_toint	lua/src/lmathlib.c	/^static int math_toint (lua_State *L) {$/;"	f	file:
math_type	lua/src/lmathlib.c	/^static int math_type (lua_State *L) {$/;"	f	file:
math_ult	lua/src/lmathlib.c	/^static int math_ult (lua_State *L) {$/;"	f	file:
mathlib	lua/src/lmathlib.c	/^static const luaL_Reg mathlib[] = {$/;"	v	file:
max_expand	lua/src/lstrlib.c	/^static const char *max_expand (MatchState *ms, const char *s,$/;"	f	file:
maxalign	lua/src/lstrlib.c	/^  int maxalign;$/;"	m	struct:Header	file:
maxn	lua/src/ltablib.c	/^static int maxn (lua_State *L) {$/;"	f	file:
maxstacksize	lua/src/lobject.h	/^  lu_byte maxstacksize;  \/* number of registers needed by this function *\/$/;"	m	struct:Proto
members	lfs/src/lfs.c	/^struct _stat_members members[] = {$/;"	v	typeref:struct:_stat_members
memerrmsg	lua/src/lstate.h	/^  TString *memerrmsg;  \/* memory-error message *\/$/;"	m	struct:global_State
metatable	lua/src/lobject.h	/^  struct Table *metatable;$/;"	m	struct:Table	typeref:struct:Table::Table
metatable	lua/src/lobject.h	/^  struct Table *metatable;$/;"	m	struct:Udata	typeref:struct:Udata::Table
min_expand	lua/src/lstrlib.c	/^static const char *min_expand (MatchState *ms, const char *s,$/;"	f	file:
mix2lua	lsh.c	/^int mix2lua(char *mixbuf, char *luabuf){$/;"	f
mk_pinyin	han2pinyin.c	/^static bool mk_pinyin(char pinyin[], u32 *uarray){$/;"	f	file:
mkdir	lfs/doc/us/manual.html	/^    <dt><a name="mkdir"><\/a><strong><code>lfs.mkdir (dirname)<\/code><\/strong><\/dt>$/;"	a
mkstr	pipe_demo.c	4;"	d	file:
mod	vi.h	/^	char mod;		\/*free=0, busy=1*\/$/;"	m	struct:vi
mode	lua/src/ldo.c	/^  const char *mode;$/;"	m	struct:SParser	file:
mode2string	lfs/src/lfs.c	/^static const char *mode2string (unsigned short mode) {$/;"	f	file:
modinit	lua/src/loadlib.c	/^static void modinit (lua_State *L, const char *modname) {$/;"	f	file:
movegotosout	lua/src/lparser.c	/^static void movegotosout (FuncState *fs, BlockCnt *bl) {$/;"	f	file:
moveresults	lua/src/ldo.c	/^static int moveresults (lua_State *L, const TValue *firstResult, StkId res,$/;"	f	file:
ms	lua/src/lstrlib.c	/^  MatchState ms;  \/* match state *\/$/;"	m	struct:GMatchState	file:
msghandler	lua/src/lua.c	/^static int msghandler (lua_State *L) {$/;"	f	file:
mt	lua/src/lstate.h	/^  struct Table *mt[LUA_NUMTAGS];  \/* metatables for basic types *\/$/;"	m	struct:global_State	typeref:struct:global_State::Table
multiline	lua/src/lua.c	/^static int multiline (lua_State *L) {$/;"	f	file:
n	lua/src/lauxlib.c	/^  int n;  \/* number of pre-read characters *\/$/;"	m	struct:LoadF	file:
n	lua/src/lauxlib.h	/^  size_t n;  \/* number of characters in buffer *\/$/;"	m	struct:luaL_Buffer
n	lua/src/liolib.c	/^  int n;  \/* number of elements in buffer 'buff' *\/$/;"	m	struct:__anon25	file:
n	lua/src/llimits.h	/^  lua_Number n;$/;"	m	union:__anon22
n	lua/src/lobject.h	/^  lua_Number n;    \/* float numbers *\/$/;"	m	union:Value
n	lua/src/lparser.h	/^    int n;$/;"	m	struct:Dyndata::__anon16
n	lua/src/lparser.h	/^  int n;  \/* number of entries in use *\/$/;"	m	struct:Labellist
n	lua/src/lstrlib.c	/^  lua_Number n;$/;"	m	union:Ftypes	file:
n	lua/src/lstrlib.c	/^  union { double d; void *p; lua_Integer i; lua_Number n; } u;$/;"	m	union:cD::__anon21	file:
n	lua/src/lzio.h	/^  size_t n;			\/* bytes still unread *\/$/;"	m	struct:Zio
n	lua/src/lzio.h	/^  size_t n;$/;"	m	struct:Mbuffer
nCcalls	lua/src/lstate.h	/^  unsigned short nCcalls;  \/* number of nested C calls *\/$/;"	m	struct:lua_State
na	lua/src/lparser.c	/^  int na;  \/* total number of array elements *\/$/;"	m	struct:ConsControl	file:
nactvar	lua/src/lparser.c	/^  lu_byte nactvar;  \/* # active locals outside the block *\/$/;"	m	struct:BlockCnt	file:
nactvar	lua/src/lparser.h	/^  lu_byte nactvar;  \/* local level where it appears in current block *\/$/;"	m	struct:Labeldesc
nactvar	lua/src/lparser.h	/^  lu_byte nactvar;  \/* number of active local variables *\/$/;"	m	struct:FuncState
name	lfs/src/lfs.c	/^        const char *name;$/;"	m	struct:_stat_members	file:
name	lua/src/lauxlib.h	/^  const char *name;$/;"	m	struct:luaL_Reg
name	lua/src/ldo.c	/^  const char *name;$/;"	m	struct:SParser	file:
name	lua/src/lobject.h	/^  TString *name;  \/* upvalue name (for debug information) *\/$/;"	m	struct:Upvaldesc
name	lua/src/lparser.h	/^  TString *name;  \/* label identifier *\/$/;"	m	struct:Labeldesc
name	lua/src/lua.h	/^  const char *name;	\/* (n) *\/$/;"	m	struct:lua_Debug
name	lua/src/lundump.c	/^  const char *name;$/;"	m	struct:__anon4	file:
namewhat	lua/src/lua.h	/^  const char *namewhat;	\/* (n) 'global', 'local', 'field', 'method' *\/$/;"	m	struct:lua_Debug
nativeendian	lua/src/lstrlib.c	/^} nativeendian = {1};$/;"	v	typeref:union:__anon20	file:
nci	lua/src/lstate.h	/^  unsigned short nci;  \/* number of items in 'ci' list *\/$/;"	m	struct:lua_State
need_value	lua/src/lcode.c	/^static int need_value (FuncState *fs, int list) {$/;"	f	file:
negatecondition	lua/src/lcode.c	/^static void negatecondition (FuncState *fs, expdesc *e) {$/;"	f	file:
new	init.lua	/^function new(...)$/;"	f
new_localvar	lua/src/lparser.c	/^static void new_localvar (LexState *ls, TString *name) {$/;"	f	file:
new_localvarliteral	lua/src/lparser.c	191;"	d	file:
new_localvarliteral_	lua/src/lparser.c	/^static void new_localvarliteral_ (LexState *ls, const char *name, size_t sz) {$/;"	f	file:
new_prompt	lsh.c	/^sigjmp_buf new_prompt;$/;"	v
newbox	lua/src/lauxlib.c	/^static void *newbox (lua_State *L, size_t newsize) {$/;"	f	file:
newfile	lua/src/liolib.c	/^static LStream *newfile (lua_State *L) {$/;"	f	file:
newlabelentry	lua/src/lparser.c	/^static int newlabelentry (LexState *ls, Labellist *l, TString *name,$/;"	f	file:
newprefile	lua/src/liolib.c	/^static LStream *newprefile (lua_State *L) {$/;"	f	file:
newupvalue	lua/src/lparser.c	/^static int newupvalue (FuncState *fs, TString *name, expdesc *v) {$/;"	f	file:
next	lua/src/lfunc.h	/^      UpVal *next;  \/* linked list *\/$/;"	m	struct:UpVal::__anon23::__anon24
next	lua/src/llex.c	32;"	d	file:
next	lua/src/lobject.h	/^    int next;  \/* for chaining (offset for next node) *\/$/;"	m	struct:TKey::__anon8
next	lua/src/lstate.h	/^  struct CallInfo *previous, *next;  \/* dynamic call link *\/$/;"	m	struct:CallInfo	typeref:struct:CallInfo::
next_ci	lua/src/ldo.c	326;"	d	file:
nextc	lua/src/liolib.c	/^static int nextc (RN *rn) {$/;"	f	file:
nh	lua/src/lparser.c	/^  int nh;  \/* total number of 'record' elements *\/$/;"	m	struct:ConsControl	file:
nice_ascii_serial	utils.c	/^char *nice_ascii_serial(char *str, char replacer){$/;"	f
nilK	lua/src/lcode.c	/^static int nilK (FuncState *fs) {$/;"	f	file:
nk	lua/src/lobject.h	/^  } nk;$/;"	m	union:TKey	typeref:struct:TKey::__anon8
nk	lua/src/lparser.h	/^  int nk;  \/* number of elements in 'k' *\/$/;"	m	struct:FuncState
nlocvars	lua/src/lparser.h	/^  short nlocvars;  \/* number of elements in 'f->locvars' *\/$/;"	m	struct:FuncState
nny	lua/src/lstate.h	/^  unsigned short nny;  \/* number of non-yieldable calls in stack *\/$/;"	m	struct:lua_State
noLuaClosure	lua/src/ldebug.c	34;"	d	file:
node	lua/src/lobject.h	/^  Node *node;$/;"	m	struct:Table
noenv	lua/src/loadlib.c	/^static int noenv (lua_State *L) {$/;"	f	file:
nospecials	lua/src/lstrlib.c	/^static int nospecials (const char *p, size_t l) {$/;"	f	file:
novariant	lua/src/lobject.h	130;"	d
np	lua/src/lparser.h	/^  int np;  \/* number of elements in 'p' *\/$/;"	m	struct:FuncState
nparams	lua/src/lua.h	/^  unsigned char nparams;\/* (u) number of parameters *\/$/;"	m	struct:lua_Debug
nresults	lua/src/lapi.c	/^  int nresults;$/;"	m	struct:CallS	file:
nresults	lua/src/lstate.h	/^  short nresults;  \/* expected number of results from this function *\/$/;"	m	struct:CallInfo
num2straux	lua/src/lstrlib.c	/^static int num2straux (char *buff, int sz, lua_Number x) {$/;"	f	file:
numarith	lua/src/lobject.c	/^static lua_Number numarith (lua_State *L, int op, lua_Number v1,$/;"	f	file:
numparams	lua/src/lobject.h	/^  lu_byte numparams;  \/* number of fixed parameters *\/$/;"	m	struct:Proto
numusearray	lua/src/ltable.c	/^static unsigned int numusearray (const Table *t, unsigned int *nums) {$/;"	f	file:
numusehash	lua/src/ltable.c	/^static int numusehash (const Table *t, unsigned int *nums, unsigned int *pna) {$/;"	f	file:
nups	lua/src/lparser.h	/^  lu_byte nups;  \/* number of upvalues *\/$/;"	m	struct:FuncState
nups	lua/src/lua.h	/^  unsigned char nups;	\/* (u) number of upvalues *\/$/;"	m	struct:lua_Debug
nuse	lua/src/lstate.h	/^  int nuse;  \/* number of elements *\/$/;"	m	struct:stringtable
nval	lua/src/lparser.h	/^    lua_Number nval;  \/* for VKFLT *\/$/;"	m	union:expdesc::__anon14
nvalue	lua/src/lobject.h	165;"	d
obj2gco	lua/src/lstate.h	219;"	d
old_errfunc	lua/src/lstate.h	/^      ptrdiff_t old_errfunc;$/;"	m	struct:CallInfo::__anon10::__anon12
oldpc	lua/src/lstate.h	/^  const Instruction *oldpc;  \/* last pc traced *\/$/;"	m	struct:lua_State
op_id	vi.h	/^	unsigned char op_id;			\/*when processing, current hot op offset *\/$/;"	m	struct:vi
open	lua/src/lfunc.h	/^    } open;$/;"	m	union:UpVal::__anon23	typeref:struct:UpVal::__anon23::__anon24
open_editor	lsh.c	/^int open_editor(int a, int b){$/;"	f
open_func	lua/src/lparser.c	/^static void open_func (LexState *ls, FuncState *fs, BlockCnt *bl) {$/;"	f	file:
opencheck	lua/src/liolib.c	/^static void opencheck (lua_State *L, const char *fname, const char *mode) {$/;"	f	file:
openupval	lua/src/lstate.h	/^  UpVal *openupval;  \/* list of open upvalues in this stack *\/$/;"	m	struct:lua_State
opmode	lua/src/lopcodes.c	72;"	d	file:
ops	vi.h	/^	char *ops;	\/*op serial buffer for normal operation*\/$/;"	m	struct:vi
opseq	vi.c	/^struct opseq{$/;"	s	file:
options	makefile	/^options=-std=c99 -g -Wall -Wno-char-subscripts -Wno-unused-function  -funsigned-char -I\/usr\/include\/i386-linux-gnu\/ -I\/usr\/include\/　-g3 -gdwarf-2$/;"	m
os_clock	lua/src/loslib.c	/^static int os_clock (lua_State *L) {$/;"	f	file:
os_date	lua/src/loslib.c	/^static int os_date (lua_State *L) {$/;"	f	file:
os_difftime	lua/src/loslib.c	/^static int os_difftime (lua_State *L) {$/;"	f	file:
os_execute	lua/src/loslib.c	/^static int os_execute (lua_State *L) {$/;"	f	file:
os_exit	lua/src/loslib.c	/^static int os_exit (lua_State *L) {$/;"	f	file:
os_getenv	lua/src/loslib.c	/^static int os_getenv (lua_State *L) {$/;"	f	file:
os_remove	lua/src/loslib.c	/^static int os_remove (lua_State *L) {$/;"	f	file:
os_rename	lua/src/loslib.c	/^static int os_rename (lua_State *L) {$/;"	f	file:
os_setlocale	lua/src/loslib.c	/^static int os_setlocale (lua_State *L) {$/;"	f	file:
os_time	lua/src/loslib.c	/^static int os_time (lua_State *L) {$/;"	f	file:
os_tmpname	lua/src/loslib.c	/^static int os_tmpname (lua_State *L) {$/;"	f	file:
other	lua/doc/readme.html	/^<H3><A NAME="other">Building Lua on other systems<\/A><\/H3>$/;"	a
otherwhite	lua/src/lgc.h	94;"	d
output	lua/src/luac.c	/^static const char* output=Output;	\/* actual output file name *\/$/;"	v	file:
overview	lfs/doc/us/index.html	/^<h2><a name="overview"><\/a>Overview<\/h2>$/;"	a
p	lua/src/lobject.h	/^  struct Proto **p;  \/* functions defined inside the function *\/$/;"	m	struct:Proto	typeref:struct:Proto::Proto
p	lua/src/lobject.h	/^  struct Proto *p;$/;"	m	struct:LClosure	typeref:struct:LClosure::Proto
p	lua/src/lobject.h	/^  void *p;         \/* light userdata *\/$/;"	m	union:Value
p	lua/src/lstate.h	/^  struct Proto p;$/;"	m	union:GCUnion	typeref:struct:GCUnion::Proto
p	lua/src/lstrlib.c	/^  const char *p;  \/* pattern *\/$/;"	m	struct:GMatchState	file:
p	lua/src/lstrlib.c	/^  union { double d; void *p; lua_Integer i; lua_Number n; } u;$/;"	m	union:cD::__anon21	file:
p	lua/src/lzio.h	/^  const char *p;		\/* current position in buffer *\/$/;"	m	struct:Zio
p_end	lua/src/lstrlib.c	/^  const char *p_end;  \/* end ('\\0') of pattern *\/$/;"	m	struct:MatchState	file:
pack	lua/src/ltablib.c	/^static int pack (lua_State *L) {$/;"	f	file:
packint	lua/src/lstrlib.c	/^static void packint (luaL_Buffer *b, lua_Unsigned n,$/;"	f	file:
pairsmeta	lua/src/lbaselib.c	/^static int pairsmeta (lua_State *L, const char *method, int iszero,$/;"	f	file:
panic	lua/src/lauxlib.c	/^static int panic (lua_State *L) {$/;"	f	file:
panic	lua/src/lstate.h	/^  lua_CFunction panic;  \/* to be called in unprotected errors *\/$/;"	m	struct:global_State
parlist	lua/src/lparser.c	/^static void parlist (LexState *ls) {$/;"	f	file:
partition	lua/src/ltablib.c	/^static IdxT partition (lua_State *L, IdxT lo, IdxT up) {$/;"	f	file:
patchlistaux	lua/src/lcode.c	/^static void patchlistaux (FuncState *fs, int list, int vtarget, int reg,$/;"	f	file:
patchtestreg	lua/src/lcode.c	/^static int patchtestreg (FuncState *fs, int node, int reg) {$/;"	f	file:
pattern	lfs/src/lfs.c	/^        char pattern[MAX_PATH+1];$/;"	m	struct:dir_data	file:
pc	lua/src/lparser.h	/^  int pc;  \/* next position to code (equivalent to 'ncode') *\/$/;"	m	struct:FuncState
pc	lua/src/lparser.h	/^  int pc;  \/* position in code *\/$/;"	m	struct:Labeldesc
pcRel	lua/src/ldebug.h	14;"	d
pchar_arr_a	utils.h	/^static inline int pchar_arr_a(char **arr, int N, int at, int len)$/;"	f
pchar_arr_del	utils.h	/^static inline int pchar_arr_del(char **arr, int N, int at, int len){$/;"	f
pchar_arr_del2	utils.h	/^static inline int pchar_arr_del2(char **arr, int N, int m, int n)$/;"	f
pdf-LUAL_BUFFERSIZE	lua/doc/manual.html	/^with the predefined size <a name="pdf-LUAL_BUFFERSIZE"><code>LUAL_BUFFERSIZE<\/code><\/a>.$/;"	a
pdf-LUA_CPATH	lua/doc/manual.html	/^or the environment variable <a name="pdf-LUA_CPATH"><code>LUA_CPATH<\/code><\/a>$/;"	a
pdf-LUA_CPATH_5_3	lua/doc/manual.html	/^using the environment variable <a name="pdf-LUA_CPATH_5_3"><code>LUA_CPATH_5_3<\/code><\/a>$/;"	a
pdf-LUA_ERRERR	lua/doc/manual.html	/^<li><b><a name="pdf-LUA_ERRERR"><code>LUA_ERRERR<\/code><\/a>: <\/b>$/;"	a
pdf-LUA_ERRFILE	lua/doc/manual.html	/^but it has an extra error code <a name="pdf-LUA_ERRFILE"><code>LUA_ERRFILE<\/code><\/a>$/;"	a
pdf-LUA_ERRGCMM	lua/doc/manual.html	/^<li><b><a name="pdf-LUA_ERRGCMM"><code>LUA_ERRGCMM<\/code><\/a>: <\/b>$/;"	a
pdf-LUA_ERRMEM	lua/doc/manual.html	/^<li><b><a name="pdf-LUA_ERRMEM"><code>LUA_ERRMEM<\/code><\/a>: <\/b>$/;"	a
pdf-LUA_ERRRUN	lua/doc/manual.html	/^<li><b><a name="pdf-LUA_ERRRUN"><code>LUA_ERRRUN<\/code><\/a>: <\/b>$/;"	a
pdf-LUA_ERRSYNTAX	lua/doc/manual.html	/^<li><b><a name="pdf-LUA_ERRSYNTAX"><code>LUA_ERRSYNTAX<\/code><\/a>: <\/b>$/;"	a
pdf-LUA_HOOKCALL	lua/doc/manual.html	/^<a name="pdf-LUA_HOOKCALL"><code>LUA_HOOKCALL<\/code><\/a>, <a name="pdf-LUA_HOOKRET"><code>LUA_HOOKRET<\/code><\/a>,$/;"	a
pdf-LUA_HOOKCOUNT	lua/doc/manual.html	/^and <a name="pdf-LUA_HOOKCOUNT"><code>LUA_HOOKCOUNT<\/code><\/a>.$/;"	a
pdf-LUA_HOOKTAILCALL	lua/doc/manual.html	/^<a name="pdf-LUA_HOOKTAILCALL"><code>LUA_HOOKTAILCALL<\/code><\/a>, <a name="pdf-LUA_HOOKLINE"><code>LUA_HOOKLINE<\/code><\/a>,$/;"	a
pdf-LUA_INIT	lua/doc/manual.html	/^(or <a name="pdf-LUA_INIT"><code>LUA_INIT<\/code><\/a> if the versioned name is not defined)$/;"	a
pdf-LUA_INIT_5_3	lua/doc/manual.html	/^the interpreter checks for an environment variable <a name="pdf-LUA_INIT_5_3"><code>LUA_INIT_5_3<\/code><\/a>$/;"	a
pdf-LUA_MASKCALL	lua/doc/manual.html	/^<a name="pdf-LUA_MASKCALL"><code>LUA_MASKCALL<\/code><\/a>,$/;"	a
pdf-LUA_MASKCOUNT	lua/doc/manual.html	/^and <a name="pdf-LUA_MASKCOUNT"><code>LUA_MASKCOUNT<\/code><\/a>.$/;"	a
pdf-LUA_MASKLINE	lua/doc/manual.html	/^<a name="pdf-LUA_MASKLINE"><code>LUA_MASKLINE<\/code><\/a>,$/;"	a
pdf-LUA_MASKRET	lua/doc/manual.html	/^<a name="pdf-LUA_MASKRET"><code>LUA_MASKRET<\/code><\/a>,$/;"	a
pdf-LUA_MININTEGER	lua/doc/manual.html	/^<a name="pdf-LUA_MININTEGER"><code>LUA_MININTEGER<\/code><\/a> and <a name="pdf-LUA_MAXINTEGER"><code>LUA_MAXINTEGER<\/code><\/a>,$/;"	a
pdf-LUA_MINSTACK	lua/doc/manual.html	/^at least <a name="pdf-LUA_MINSTACK"><code>LUA_MINSTACK<\/code><\/a> extra slots.$/;"	a
pdf-LUA_MULTRET	lua/doc/manual.html	/^unless <code>nresults<\/code> is <a name="pdf-LUA_MULTRET"><code>LUA_MULTRET<\/code><\/a>.$/;"	a
pdf-LUA_NOREF	lua/doc/manual.html	/^The constant <a name="pdf-LUA_NOREF"><code>LUA_NOREF<\/code><\/a> is guaranteed to be different$/;"	a
pdf-LUA_OK	lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OK"><code>LUA_OK<\/code><\/a> (0): <\/b>$/;"	a
pdf-LUA_OPADD	lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPADD"><code>LUA_OPADD<\/code><\/a>: <\/b> performs addition (<code>+<\/code>)<\/li>$/;"	a
pdf-LUA_OPBAND	lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPBAND"><code>LUA_OPBAND<\/code><\/a>: <\/b> performs bitwise AND (<code>&amp;<\/code>)<\/li>$/;"	a
pdf-LUA_OPBNOT	lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPBNOT"><code>LUA_OPBNOT<\/code><\/a>: <\/b> performs bitwise NOT (<code>~<\/code>)<\/li>$/;"	a
pdf-LUA_OPBOR	lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPBOR"><code>LUA_OPBOR<\/code><\/a>: <\/b> performs bitwise OR (<code>|<\/code>)<\/li>$/;"	a
pdf-LUA_OPBXOR	lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPBXOR"><code>LUA_OPBXOR<\/code><\/a>: <\/b> performs bitwise exclusive OR (<code>~<\/code>)<\/li>$/;"	a
pdf-LUA_OPDIV	lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPDIV"><code>LUA_OPDIV<\/code><\/a>: <\/b> performs float division (<code>\/<\/code>)<\/li>$/;"	a
pdf-LUA_OPEQ	lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPEQ"><code>LUA_OPEQ<\/code><\/a>: <\/b> compares for equality (<code>==<\/code>)<\/li>$/;"	a
pdf-LUA_OPIDIV	lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPIDIV"><code>LUA_OPIDIV<\/code><\/a>: <\/b> performs floor division (<code>\/\/<\/code>)<\/li>$/;"	a
pdf-LUA_OPLE	lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPLE"><code>LUA_OPLE<\/code><\/a>: <\/b> compares for less or equal (<code>&lt;=<\/code>)<\/li>$/;"	a
pdf-LUA_OPLT	lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPLT"><code>LUA_OPLT<\/code><\/a>: <\/b> compares for less than (<code>&lt;<\/code>)<\/li>$/;"	a
pdf-LUA_OPMOD	lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPMOD"><code>LUA_OPMOD<\/code><\/a>: <\/b> performs modulo (<code>%<\/code>)<\/li>$/;"	a
pdf-LUA_OPMUL	lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPMUL"><code>LUA_OPMUL<\/code><\/a>: <\/b> performs multiplication (<code>*<\/code>)<\/li>$/;"	a
pdf-LUA_OPPOW	lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPPOW"><code>LUA_OPPOW<\/code><\/a>: <\/b> performs exponentiation (<code>^<\/code>)<\/li>$/;"	a
pdf-LUA_OPSHL	lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPSHL"><code>LUA_OPSHL<\/code><\/a>: <\/b> performs left shift (<code>&lt;&lt;<\/code>)<\/li>$/;"	a
pdf-LUA_OPSHR	lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPSHR"><code>LUA_OPSHR<\/code><\/a>: <\/b> performs right shift (<code>&gt;&gt;<\/code>)<\/li>$/;"	a
pdf-LUA_OPSUB	lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPSUB"><code>LUA_OPSUB<\/code><\/a>: <\/b> performs subtraction (<code>-<\/code>)<\/li>$/;"	a
pdf-LUA_OPUNM	lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPUNM"><code>LUA_OPUNM<\/code><\/a>: <\/b> performs mathematical negation (unary <code>-<\/code>)<\/li>$/;"	a
pdf-LUA_PATH	lua/doc/manual.html	/^the environment variable <a name="pdf-LUA_PATH"><code>LUA_PATH<\/code><\/a> or$/;"	a
pdf-LUA_PATH_5_3	lua/doc/manual.html	/^the value of the environment variable <a name="pdf-LUA_PATH_5_3"><code>LUA_PATH_5_3<\/code><\/a> or$/;"	a
pdf-LUA_REFNIL	lua/doc/manual.html	/^<a href="#luaL_ref"><code>luaL_ref<\/code><\/a> returns the constant <a name="pdf-LUA_REFNIL"><code>LUA_REFNIL<\/code><\/a>.$/;"	a
pdf-LUA_REGISTRYINDEX	lua/doc/manual.html	/^<a name="pdf-LUA_REGISTRYINDEX"><code>LUA_REGISTRYINDEX<\/code><\/a>.$/;"	a
pdf-LUA_RIDX_GLOBALS	lua/doc/manual.html	/^<li><b><a name="pdf-LUA_RIDX_GLOBALS"><code>LUA_RIDX_GLOBALS<\/code><\/a>: <\/b> At this index the registry has$/;"	a
pdf-LUA_RIDX_MAINTHREAD	lua/doc/manual.html	/^<li><b><a name="pdf-LUA_RIDX_MAINTHREAD"><code>LUA_RIDX_MAINTHREAD<\/code><\/a>: <\/b> At this index the registry has$/;"	a
pdf-LUA_TBOOLEAN	lua/doc/manual.html	/^<a name="pdf-LUA_TBOOLEAN"><code>LUA_TBOOLEAN<\/code><\/a>,$/;"	a
pdf-LUA_TFUNCTION	lua/doc/manual.html	/^<a name="pdf-LUA_TFUNCTION"><code>LUA_TFUNCTION<\/code><\/a>,$/;"	a
pdf-LUA_TLIGHTUSERDATA	lua/doc/manual.html	/^<a name="pdf-LUA_TLIGHTUSERDATA"><code>LUA_TLIGHTUSERDATA<\/code><\/a>.$/;"	a
pdf-LUA_TNIL	lua/doc/manual.html	/^<a name="pdf-LUA_TNIL"><code>LUA_TNIL<\/code><\/a> (0),$/;"	a
pdf-LUA_TNONE	lua/doc/manual.html	/^contains a value of a virtual type <a name="pdf-LUA_TNONE"><code>LUA_TNONE<\/code><\/a>,$/;"	a
pdf-LUA_TNUMBER	lua/doc/manual.html	/^<a name="pdf-LUA_TNUMBER"><code>LUA_TNUMBER<\/code><\/a>,$/;"	a
pdf-LUA_TSTRING	lua/doc/manual.html	/^<a name="pdf-LUA_TSTRING"><code>LUA_TSTRING<\/code><\/a>,$/;"	a
pdf-LUA_TTABLE	lua/doc/manual.html	/^<a name="pdf-LUA_TTABLE"><code>LUA_TTABLE<\/code><\/a>,$/;"	a
pdf-LUA_TTHREAD	lua/doc/manual.html	/^<a name="pdf-LUA_TTHREAD"><code>LUA_TTHREAD<\/code><\/a>,$/;"	a
pdf-LUA_TUSERDATA	lua/doc/manual.html	/^<a name="pdf-LUA_TUSERDATA"><code>LUA_TUSERDATA<\/code><\/a>,$/;"	a
pdf-LUA_USE_APICHECK	lua/doc/manual.html	/^with the macro <a name="pdf-LUA_USE_APICHECK"><code>LUA_USE_APICHECK<\/code><\/a> defined.$/;"	a
pdf-LUA_YIELD	lua/doc/manual.html	/^or <a name="pdf-LUA_YIELD"><code>LUA_YIELD<\/code><\/a> if the thread is suspended.$/;"	a
pdf-_G	lua/doc/manual.html	/^<hr><h3><a name="pdf-_G"><code>_G<\/code><\/a><\/h3>$/;"	a
pdf-_PROMPT	lua/doc/manual.html	/^If the global variable <a name="pdf-_PROMPT"><code>_PROMPT<\/code><\/a> contains a string,$/;"	a
pdf-_PROMPT2	lua/doc/manual.html	/^Similarly, if the global variable <a name="pdf-_PROMPT2"><code>_PROMPT2<\/code><\/a> contains a string,$/;"	a
pdf-_VERSION	lua/doc/manual.html	/^<hr><h3><a name="pdf-_VERSION"><code>_VERSION<\/code><\/a><\/h3>$/;"	a
pdf-assert	lua/doc/manual.html	/^<hr><h3><a name="pdf-assert"><code>assert (v [, message])<\/code><\/a><\/h3>$/;"	a
pdf-collectgarbage	lua/doc/manual.html	/^<hr><h3><a name="pdf-collectgarbage"><code>collectgarbage ([opt [, arg]])<\/code><\/a><\/h3>$/;"	a
pdf-coroutine	lua/doc/manual.html	/^which come inside the table <a name="pdf-coroutine"><code>coroutine<\/code><\/a>.$/;"	a
pdf-coroutine.create	lua/doc/manual.html	/^<hr><h3><a name="pdf-coroutine.create"><code>coroutine.create (f)<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.isyieldable	lua/doc/manual.html	/^<hr><h3><a name="pdf-coroutine.isyieldable"><code>coroutine.isyieldable ()<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.resume	lua/doc/manual.html	/^<hr><h3><a name="pdf-coroutine.resume"><code>coroutine.resume (co [, val1, &middot;&middot;&middot;])<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.running	lua/doc/manual.html	/^<hr><h3><a name="pdf-coroutine.running"><code>coroutine.running ()<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.status	lua/doc/manual.html	/^<hr><h3><a name="pdf-coroutine.status"><code>coroutine.status (co)<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.wrap	lua/doc/manual.html	/^<hr><h3><a name="pdf-coroutine.wrap"><code>coroutine.wrap (f)<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.yield	lua/doc/manual.html	/^<hr><h3><a name="pdf-coroutine.yield"><code>coroutine.yield (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-debug	lua/doc/manual.html	/^inside the <a name="pdf-debug"><code>debug<\/code><\/a> table.$/;"	a
pdf-debug.debug	lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.debug"><code>debug.debug ()<\/code><\/a><\/h3>$/;"	a
pdf-debug.gethook	lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.gethook"><code>debug.gethook ([thread])<\/code><\/a><\/h3>$/;"	a
pdf-debug.getinfo	lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.getinfo"><code>debug.getinfo ([thread,] f [, what])<\/code><\/a><\/h3>$/;"	a
pdf-debug.getlocal	lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.getlocal"><code>debug.getlocal ([thread,] f, local)<\/code><\/a><\/h3>$/;"	a
pdf-debug.getmetatable	lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.getmetatable"><code>debug.getmetatable (value)<\/code><\/a><\/h3>$/;"	a
pdf-debug.getregistry	lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.getregistry"><code>debug.getregistry ()<\/code><\/a><\/h3>$/;"	a
pdf-debug.getupvalue	lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.getupvalue"><code>debug.getupvalue (f, up)<\/code><\/a><\/h3>$/;"	a
pdf-debug.getuservalue	lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.getuservalue"><code>debug.getuservalue (u)<\/code><\/a><\/h3>$/;"	a
pdf-debug.sethook	lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.sethook"><code>debug.sethook ([thread,] hook, mask [, count])<\/code><\/a><\/h3>$/;"	a
pdf-debug.setlocal	lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.setlocal"><code>debug.setlocal ([thread,] level, local, value)<\/code><\/a><\/h3>$/;"	a
pdf-debug.setmetatable	lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.setmetatable"><code>debug.setmetatable (value, table)<\/code><\/a><\/h3>$/;"	a
pdf-debug.setupvalue	lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.setupvalue"><code>debug.setupvalue (f, up, value)<\/code><\/a><\/h3>$/;"	a
pdf-debug.setuservalue	lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.setuservalue"><code>debug.setuservalue (udata, value)<\/code><\/a><\/h3>$/;"	a
pdf-debug.traceback	lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.traceback"><code>debug.traceback ([thread,] [message [, level]])<\/code><\/a><\/h3>$/;"	a
pdf-debug.upvalueid	lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.upvalueid"><code>debug.upvalueid (f, n)<\/code><\/a><\/h3>$/;"	a
pdf-debug.upvaluejoin	lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.upvaluejoin"><code>debug.upvaluejoin (f1, n1, f2, n2)<\/code><\/a><\/h3>$/;"	a
pdf-dofile	lua/doc/manual.html	/^<hr><h3><a name="pdf-dofile"><code>dofile ([filename])<\/code><\/a><\/h3>$/;"	a
pdf-error	lua/doc/manual.html	/^<hr><h3><a name="pdf-error"><code>error (message [, level])<\/code><\/a><\/h3>$/;"	a
pdf-file:close	lua/doc/manual.html	/^<hr><h3><a name="pdf-file:close"><code>file:close ()<\/code><\/a><\/h3>$/;"	a
pdf-file:flush	lua/doc/manual.html	/^<hr><h3><a name="pdf-file:flush"><code>file:flush ()<\/code><\/a><\/h3>$/;"	a
pdf-file:lines	lua/doc/manual.html	/^<hr><h3><a name="pdf-file:lines"><code>file:lines (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-file:read	lua/doc/manual.html	/^<hr><h3><a name="pdf-file:read"><code>file:read (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-file:seek	lua/doc/manual.html	/^<hr><h3><a name="pdf-file:seek"><code>file:seek ([whence [, offset]])<\/code><\/a><\/h3>$/;"	a
pdf-file:setvbuf	lua/doc/manual.html	/^<hr><h3><a name="pdf-file:setvbuf"><code>file:setvbuf (mode [, size])<\/code><\/a><\/h3>$/;"	a
pdf-file:write	lua/doc/manual.html	/^<hr><h3><a name="pdf-file:write"><code>file:write (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-getmetatable	lua/doc/manual.html	/^<hr><h3><a name="pdf-getmetatable"><code>getmetatable (object)<\/code><\/a><\/h3>$/;"	a
pdf-io	lua/doc/manual.html	/^all operations are supplied by table <a name="pdf-io"><code>io<\/code><\/a>.$/;"	a
pdf-io.close	lua/doc/manual.html	/^<hr><h3><a name="pdf-io.close"><code>io.close ([file])<\/code><\/a><\/h3>$/;"	a
pdf-io.flush	lua/doc/manual.html	/^<hr><h3><a name="pdf-io.flush"><code>io.flush ()<\/code><\/a><\/h3>$/;"	a
pdf-io.input	lua/doc/manual.html	/^<hr><h3><a name="pdf-io.input"><code>io.input ([file])<\/code><\/a><\/h3>$/;"	a
pdf-io.lines	lua/doc/manual.html	/^<hr><h3><a name="pdf-io.lines"><code>io.lines ([filename, &middot;&middot;&middot;])<\/code><\/a><\/h3>$/;"	a
pdf-io.open	lua/doc/manual.html	/^<hr><h3><a name="pdf-io.open"><code>io.open (filename [, mode])<\/code><\/a><\/h3>$/;"	a
pdf-io.output	lua/doc/manual.html	/^<hr><h3><a name="pdf-io.output"><code>io.output ([file])<\/code><\/a><\/h3>$/;"	a
pdf-io.popen	lua/doc/manual.html	/^<hr><h3><a name="pdf-io.popen"><code>io.popen (prog [, mode])<\/code><\/a><\/h3>$/;"	a
pdf-io.read	lua/doc/manual.html	/^<hr><h3><a name="pdf-io.read"><code>io.read (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-io.stdin	lua/doc/manual.html	/^<a name="pdf-io.stdin"><code>io.stdin<\/code><\/a>, <a name="pdf-io.stdout"><code>io.stdout<\/code><\/a>, and <a name="pdf-io.stderr"><code>io.stderr<\/code><\/a>.$/;"	a
pdf-io.tmpfile	lua/doc/manual.html	/^<hr><h3><a name="pdf-io.tmpfile"><code>io.tmpfile ()<\/code><\/a><\/h3>$/;"	a
pdf-io.type	lua/doc/manual.html	/^<hr><h3><a name="pdf-io.type"><code>io.type (obj)<\/code><\/a><\/h3>$/;"	a
pdf-io.write	lua/doc/manual.html	/^<hr><h3><a name="pdf-io.write"><code>io.write (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-ipairs	lua/doc/manual.html	/^<hr><h3><a name="pdf-ipairs"><code>ipairs (t)<\/code><\/a><\/h3>$/;"	a
pdf-load	lua/doc/manual.html	/^<hr><h3><a name="pdf-load"><code>load (chunk [, chunkname [, mode [, env]]])<\/code><\/a><\/h3>$/;"	a
pdf-loadfile	lua/doc/manual.html	/^<hr><h3><a name="pdf-loadfile"><code>loadfile ([filename [, mode [, env]]])<\/code><\/a><\/h3>$/;"	a
pdf-lua.h	lua/doc/manual.html	/^are declared in the header file <a name="pdf-lua.h"><code>lua.h<\/code><\/a>.$/;"	a
pdf-lualib.h	lua/doc/manual.html	/^These functions are declared in <a name="pdf-lualib.h"><code>lualib.h<\/code><\/a>.$/;"	a
pdf-luaopen_base	lua/doc/manual.html	/^<a name="pdf-luaopen_base"><code>luaopen_base<\/code><\/a> (for the basic library),$/;"	a
pdf-luaopen_coroutine	lua/doc/manual.html	/^<a name="pdf-luaopen_coroutine"><code>luaopen_coroutine<\/code><\/a> (for the coroutine library),$/;"	a
pdf-luaopen_debug	lua/doc/manual.html	/^and <a name="pdf-luaopen_debug"><code>luaopen_debug<\/code><\/a> (for the debug library).$/;"	a
pdf-luaopen_io	lua/doc/manual.html	/^<a name="pdf-luaopen_io"><code>luaopen_io<\/code><\/a> (for the I\/O library),$/;"	a
pdf-luaopen_math	lua/doc/manual.html	/^<a name="pdf-luaopen_math"><code>luaopen_math<\/code><\/a> (for the mathematical library),$/;"	a
pdf-luaopen_os	lua/doc/manual.html	/^<a name="pdf-luaopen_os"><code>luaopen_os<\/code><\/a> (for the operating system library),$/;"	a
pdf-luaopen_package	lua/doc/manual.html	/^<a name="pdf-luaopen_package"><code>luaopen_package<\/code><\/a> (for the package library),$/;"	a
pdf-luaopen_string	lua/doc/manual.html	/^<a name="pdf-luaopen_string"><code>luaopen_string<\/code><\/a> (for the string library),$/;"	a
pdf-luaopen_table	lua/doc/manual.html	/^<a name="pdf-luaopen_table"><code>luaopen_table<\/code><\/a> (for the table library),$/;"	a
pdf-luaopen_utf8	lua/doc/manual.html	/^<a name="pdf-luaopen_utf8"><code>luaopen_utf8<\/code><\/a> (for the UTF8 library),$/;"	a
pdf-math	lua/doc/manual.html	/^It provides all its functions and constants inside the table <a name="pdf-math"><code>math<\/code><\/a>.$/;"	a
pdf-math.abs	lua/doc/manual.html	/^<hr><h3><a name="pdf-math.abs"><code>math.abs (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.acos	lua/doc/manual.html	/^<hr><h3><a name="pdf-math.acos"><code>math.acos (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.asin	lua/doc/manual.html	/^<hr><h3><a name="pdf-math.asin"><code>math.asin (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.atan	lua/doc/manual.html	/^<hr><h3><a name="pdf-math.atan"><code>math.atan (y [, x])<\/code><\/a><\/h3>$/;"	a
pdf-math.ceil	lua/doc/manual.html	/^<hr><h3><a name="pdf-math.ceil"><code>math.ceil (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.cos	lua/doc/manual.html	/^<hr><h3><a name="pdf-math.cos"><code>math.cos (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.deg	lua/doc/manual.html	/^<hr><h3><a name="pdf-math.deg"><code>math.deg (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.exp	lua/doc/manual.html	/^<hr><h3><a name="pdf-math.exp"><code>math.exp (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.floor	lua/doc/manual.html	/^<hr><h3><a name="pdf-math.floor"><code>math.floor (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.fmod	lua/doc/manual.html	/^<hr><h3><a name="pdf-math.fmod"><code>math.fmod (x, y)<\/code><\/a><\/h3>$/;"	a
pdf-math.huge	lua/doc/manual.html	/^<hr><h3><a name="pdf-math.huge"><code>math.huge<\/code><\/a><\/h3>$/;"	a
pdf-math.log	lua/doc/manual.html	/^<hr><h3><a name="pdf-math.log"><code>math.log (x [, base])<\/code><\/a><\/h3>$/;"	a
pdf-math.max	lua/doc/manual.html	/^<hr><h3><a name="pdf-math.max"><code>math.max (x, &middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-math.maxinteger	lua/doc/manual.html	/^<hr><h3><a name="pdf-math.maxinteger"><code>math.maxinteger<\/code><\/a><\/h3>$/;"	a
pdf-math.min	lua/doc/manual.html	/^<hr><h3><a name="pdf-math.min"><code>math.min (x, &middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-math.mininteger	lua/doc/manual.html	/^<hr><h3><a name="pdf-math.mininteger"><code>math.mininteger<\/code><\/a><\/h3>$/;"	a
pdf-math.modf	lua/doc/manual.html	/^<hr><h3><a name="pdf-math.modf"><code>math.modf (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.pi	lua/doc/manual.html	/^<hr><h3><a name="pdf-math.pi"><code>math.pi<\/code><\/a><\/h3>$/;"	a
pdf-math.rad	lua/doc/manual.html	/^<hr><h3><a name="pdf-math.rad"><code>math.rad (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.random	lua/doc/manual.html	/^<hr><h3><a name="pdf-math.random"><code>math.random ([m [, n]])<\/code><\/a><\/h3>$/;"	a
pdf-math.randomseed	lua/doc/manual.html	/^<hr><h3><a name="pdf-math.randomseed"><code>math.randomseed (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.sin	lua/doc/manual.html	/^<hr><h3><a name="pdf-math.sin"><code>math.sin (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.sqrt	lua/doc/manual.html	/^<hr><h3><a name="pdf-math.sqrt"><code>math.sqrt (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.tan	lua/doc/manual.html	/^<hr><h3><a name="pdf-math.tan"><code>math.tan (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.tointeger	lua/doc/manual.html	/^<hr><h3><a name="pdf-math.tointeger"><code>math.tointeger (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.type	lua/doc/manual.html	/^<hr><h3><a name="pdf-math.type"><code>math.type (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.ult	lua/doc/manual.html	/^<hr><h3><a name="pdf-math.ult"><code>math.ult (m, n)<\/code><\/a><\/h3>$/;"	a
pdf-next	lua/doc/manual.html	/^<hr><h3><a name="pdf-next"><code>next (table [, index])<\/code><\/a><\/h3>$/;"	a
pdf-os	lua/doc/manual.html	/^This library is implemented through table <a name="pdf-os"><code>os<\/code><\/a>.$/;"	a
pdf-os.clock	lua/doc/manual.html	/^<hr><h3><a name="pdf-os.clock"><code>os.clock ()<\/code><\/a><\/h3>$/;"	a
pdf-os.date	lua/doc/manual.html	/^<hr><h3><a name="pdf-os.date"><code>os.date ([format [, time]])<\/code><\/a><\/h3>$/;"	a
pdf-os.difftime	lua/doc/manual.html	/^<hr><h3><a name="pdf-os.difftime"><code>os.difftime (t2, t1)<\/code><\/a><\/h3>$/;"	a
pdf-os.execute	lua/doc/manual.html	/^<hr><h3><a name="pdf-os.execute"><code>os.execute ([command])<\/code><\/a><\/h3>$/;"	a
pdf-os.exit	lua/doc/manual.html	/^<hr><h3><a name="pdf-os.exit"><code>os.exit ([code [, close]])<\/code><\/a><\/h3>$/;"	a
pdf-os.getenv	lua/doc/manual.html	/^<hr><h3><a name="pdf-os.getenv"><code>os.getenv (varname)<\/code><\/a><\/h3>$/;"	a
pdf-os.remove	lua/doc/manual.html	/^<hr><h3><a name="pdf-os.remove"><code>os.remove (filename)<\/code><\/a><\/h3>$/;"	a
pdf-os.rename	lua/doc/manual.html	/^<hr><h3><a name="pdf-os.rename"><code>os.rename (oldname, newname)<\/code><\/a><\/h3>$/;"	a
pdf-os.setlocale	lua/doc/manual.html	/^<hr><h3><a name="pdf-os.setlocale"><code>os.setlocale (locale [, category])<\/code><\/a><\/h3>$/;"	a
pdf-os.time	lua/doc/manual.html	/^<hr><h3><a name="pdf-os.time"><code>os.time ([table])<\/code><\/a><\/h3>$/;"	a
pdf-os.tmpname	lua/doc/manual.html	/^<hr><h3><a name="pdf-os.tmpname"><code>os.tmpname ()<\/code><\/a><\/h3>$/;"	a
pdf-package	lua/doc/manual.html	/^Everything else is exported in a table <a name="pdf-package"><code>package<\/code><\/a>.$/;"	a
pdf-package.config	lua/doc/manual.html	/^<hr><h3><a name="pdf-package.config"><code>package.config<\/code><\/a><\/h3>$/;"	a
pdf-package.cpath	lua/doc/manual.html	/^<hr><h3><a name="pdf-package.cpath"><code>package.cpath<\/code><\/a><\/h3>$/;"	a
pdf-package.loaded	lua/doc/manual.html	/^<hr><h3><a name="pdf-package.loaded"><code>package.loaded<\/code><\/a><\/h3>$/;"	a
pdf-package.loadlib	lua/doc/manual.html	/^<hr><h3><a name="pdf-package.loadlib"><code>package.loadlib (libname, funcname)<\/code><\/a><\/h3>$/;"	a
pdf-package.path	lua/doc/manual.html	/^<hr><h3><a name="pdf-package.path"><code>package.path<\/code><\/a><\/h3>$/;"	a
pdf-package.preload	lua/doc/manual.html	/^<hr><h3><a name="pdf-package.preload"><code>package.preload<\/code><\/a><\/h3>$/;"	a
pdf-package.searchers	lua/doc/manual.html	/^<hr><h3><a name="pdf-package.searchers"><code>package.searchers<\/code><\/a><\/h3>$/;"	a
pdf-package.searchpath	lua/doc/manual.html	/^<hr><h3><a name="pdf-package.searchpath"><code>package.searchpath (name, path [, sep [, rep]])<\/code><\/a><\/h3>$/;"	a
pdf-pairs	lua/doc/manual.html	/^<hr><h3><a name="pdf-pairs"><code>pairs (t)<\/code><\/a><\/h3>$/;"	a
pdf-pcall	lua/doc/manual.html	/^<hr><h3><a name="pdf-pcall"><code>pcall (f [, arg1, &middot;&middot;&middot;])<\/code><\/a><\/h3>$/;"	a
pdf-print	lua/doc/manual.html	/^<hr><h3><a name="pdf-print"><code>print (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-rawequal	lua/doc/manual.html	/^<hr><h3><a name="pdf-rawequal"><code>rawequal (v1, v2)<\/code><\/a><\/h3>$/;"	a
pdf-rawget	lua/doc/manual.html	/^<hr><h3><a name="pdf-rawget"><code>rawget (table, index)<\/code><\/a><\/h3>$/;"	a
pdf-rawlen	lua/doc/manual.html	/^<hr><h3><a name="pdf-rawlen"><code>rawlen (v)<\/code><\/a><\/h3>$/;"	a
pdf-rawset	lua/doc/manual.html	/^<hr><h3><a name="pdf-rawset"><code>rawset (table, index, value)<\/code><\/a><\/h3>$/;"	a
pdf-require	lua/doc/manual.html	/^<hr><h3><a name="pdf-require"><code>require (modname)<\/code><\/a><\/h3>$/;"	a
pdf-select	lua/doc/manual.html	/^<hr><h3><a name="pdf-select"><code>select (index, &middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-setmetatable	lua/doc/manual.html	/^<hr><h3><a name="pdf-setmetatable"><code>setmetatable (table, metatable)<\/code><\/a><\/h3>$/;"	a
pdf-string	lua/doc/manual.html	/^<a name="pdf-string"><code>string<\/code><\/a>.$/;"	a
pdf-string.byte	lua/doc/manual.html	/^<hr><h3><a name="pdf-string.byte"><code>string.byte (s [, i [, j]])<\/code><\/a><\/h3>$/;"	a
pdf-string.char	lua/doc/manual.html	/^<hr><h3><a name="pdf-string.char"><code>string.char (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-string.dump	lua/doc/manual.html	/^<hr><h3><a name="pdf-string.dump"><code>string.dump (function [, strip])<\/code><\/a><\/h3>$/;"	a
pdf-string.find	lua/doc/manual.html	/^<hr><h3><a name="pdf-string.find"><code>string.find (s, pattern [, init [, plain]])<\/code><\/a><\/h3>$/;"	a
pdf-string.format	lua/doc/manual.html	/^<hr><h3><a name="pdf-string.format"><code>string.format (formatstring, &middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-string.gmatch	lua/doc/manual.html	/^<hr><h3><a name="pdf-string.gmatch"><code>string.gmatch (s, pattern)<\/code><\/a><\/h3>$/;"	a
pdf-string.gsub	lua/doc/manual.html	/^<hr><h3><a name="pdf-string.gsub"><code>string.gsub (s, pattern, repl [, n])<\/code><\/a><\/h3>$/;"	a
pdf-string.len	lua/doc/manual.html	/^<hr><h3><a name="pdf-string.len"><code>string.len (s)<\/code><\/a><\/h3>$/;"	a
pdf-string.lower	lua/doc/manual.html	/^<hr><h3><a name="pdf-string.lower"><code>string.lower (s)<\/code><\/a><\/h3>$/;"	a
pdf-string.match	lua/doc/manual.html	/^<hr><h3><a name="pdf-string.match"><code>string.match (s, pattern [, init])<\/code><\/a><\/h3>$/;"	a
pdf-string.pack	lua/doc/manual.html	/^<hr><h3><a name="pdf-string.pack"><code>string.pack (fmt, v1, v2, &middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-string.packsize	lua/doc/manual.html	/^<hr><h3><a name="pdf-string.packsize"><code>string.packsize (fmt)<\/code><\/a><\/h3>$/;"	a
pdf-string.rep	lua/doc/manual.html	/^<hr><h3><a name="pdf-string.rep"><code>string.rep (s, n [, sep])<\/code><\/a><\/h3>$/;"	a
pdf-string.reverse	lua/doc/manual.html	/^<hr><h3><a name="pdf-string.reverse"><code>string.reverse (s)<\/code><\/a><\/h3>$/;"	a
pdf-string.sub	lua/doc/manual.html	/^<hr><h3><a name="pdf-string.sub"><code>string.sub (s, i [, j])<\/code><\/a><\/h3>$/;"	a
pdf-string.unpack	lua/doc/manual.html	/^<hr><h3><a name="pdf-string.unpack"><code>string.unpack (fmt, s [, pos])<\/code><\/a><\/h3>$/;"	a
pdf-string.upper	lua/doc/manual.html	/^<hr><h3><a name="pdf-string.upper"><code>string.upper (s)<\/code><\/a><\/h3>$/;"	a
pdf-table	lua/doc/manual.html	/^It provides all its functions inside the table <a name="pdf-table"><code>table<\/code><\/a>.$/;"	a
pdf-table.concat	lua/doc/manual.html	/^<hr><h3><a name="pdf-table.concat"><code>table.concat (list [, sep [, i [, j]]])<\/code><\/a><\/h3>$/;"	a
pdf-table.insert	lua/doc/manual.html	/^<hr><h3><a name="pdf-table.insert"><code>table.insert (list, [pos,] value)<\/code><\/a><\/h3>$/;"	a
pdf-table.move	lua/doc/manual.html	/^<hr><h3><a name="pdf-table.move"><code>table.move (a1, f, e, t [,a2])<\/code><\/a><\/h3>$/;"	a
pdf-table.pack	lua/doc/manual.html	/^<hr><h3><a name="pdf-table.pack"><code>table.pack (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-table.remove	lua/doc/manual.html	/^<hr><h3><a name="pdf-table.remove"><code>table.remove (list [, pos])<\/code><\/a><\/h3>$/;"	a
pdf-table.sort	lua/doc/manual.html	/^<hr><h3><a name="pdf-table.sort"><code>table.sort (list [, comp])<\/code><\/a><\/h3>$/;"	a
pdf-table.unpack	lua/doc/manual.html	/^<hr><h3><a name="pdf-table.unpack"><code>table.unpack (list [, i [, j]])<\/code><\/a><\/h3>$/;"	a
pdf-tonumber	lua/doc/manual.html	/^<hr><h3><a name="pdf-tonumber"><code>tonumber (e [, base])<\/code><\/a><\/h3>$/;"	a
pdf-tostring	lua/doc/manual.html	/^<hr><h3><a name="pdf-tostring"><code>tostring (v)<\/code><\/a><\/h3>$/;"	a
pdf-type	lua/doc/manual.html	/^<hr><h3><a name="pdf-type"><code>type (v)<\/code><\/a><\/h3>$/;"	a
pdf-utf8	lua/doc/manual.html	/^It provides all its functions inside the table <a name="pdf-utf8"><code>utf8<\/code><\/a>.$/;"	a
pdf-utf8.char	lua/doc/manual.html	/^<hr><h3><a name="pdf-utf8.char"><code>utf8.char (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-utf8.charpattern	lua/doc/manual.html	/^<hr><h3><a name="pdf-utf8.charpattern"><code>utf8.charpattern<\/code><\/a><\/h3>$/;"	a
pdf-utf8.codepoint	lua/doc/manual.html	/^<hr><h3><a name="pdf-utf8.codepoint"><code>utf8.codepoint (s [, i [, j]])<\/code><\/a><\/h3>$/;"	a
pdf-utf8.codes	lua/doc/manual.html	/^<hr><h3><a name="pdf-utf8.codes"><code>utf8.codes (s)<\/code><\/a><\/h3>$/;"	a
pdf-utf8.len	lua/doc/manual.html	/^<hr><h3><a name="pdf-utf8.len"><code>utf8.len (s [, i [, j]])<\/code><\/a><\/h3>$/;"	a
pdf-utf8.offset	lua/doc/manual.html	/^<hr><h3><a name="pdf-utf8.offset"><code>utf8.offset (s, n [, i])<\/code><\/a><\/h3>$/;"	a
pdf-xpcall	lua/doc/manual.html	/^<hr><h3><a name="pdf-xpcall"><code>xpcall (f, msgh [, arg1, &middot;&middot;&middot;])<\/code><\/a><\/h3>$/;"	a
perm2string	lfs/src/lfs.c	/^static const char *perm2string (mode_t mode) {$/;"	f	file:
perm2string	lfs/src/lfs.c	/^static const char *perm2string (unsigned short mode) {$/;"	f	file:
pinyin_of	word.h	/^const char *pinyin_of[] = { $/;"	v
pk_funcs	lua/src/loadlib.c	/^static const luaL_Reg pk_funcs[] = {$/;"	v	file:
pmain	lua/src/lua.c	/^static int pmain (lua_State *L) {$/;"	f	file:
pmain	lua/src/luac.c	/^static int pmain(lua_State* L)$/;"	f	file:
point2uint	lua/src/llimits.h	59;"	d
posrelat	lua/src/lstrlib.c	/^static lua_Integer posrelat (lua_Integer pos, size_t len) {$/;"	f	file:
preinit_thread	lua/src/lstate.c	/^static void preinit_thread (lua_State *L, global_State *g) {$/;"	f	file:
prepare_lua_args	lsh.c	/^static void prepare_lua_args(struct lua_State *L, int argc, char *argv[]){$/;"	f	file:
preprocess	vi.c	/^void preprocess(char *ops){$/;"	f
prepstate	lua/src/lstrlib.c	/^static void prepstate (MatchState *ms, lua_State *L,$/;"	f	file:
prev	lua/src/lparser.c	/^  struct LHS_assign *prev;$/;"	m	struct:LHS_assign	typeref:struct:LHS_assign::LHS_assign	file:
prev	lua/src/lparser.h	/^  struct FuncState *prev;  \/* enclosing function *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::FuncState
previous	lua/src/ldo.c	/^  struct lua_longjmp *previous;$/;"	m	struct:lua_longjmp	typeref:struct:lua_longjmp::lua_longjmp	file:
previous	lua/src/lparser.c	/^  struct BlockCnt *previous;  \/* chain *\/$/;"	m	struct:BlockCnt	typeref:struct:BlockCnt::BlockCnt	file:
previous	lua/src/lstate.h	/^  struct CallInfo *previous, *next;  \/* dynamic call link *\/$/;"	m	struct:CallInfo	typeref:struct:CallInfo::CallInfo
primaryexp	lua/src/lparser.c	/^static void primaryexp (LexState *ls, expdesc *v) {$/;"	f	file:
print_ink_nstr	utils.c	/^void print_ink_nstr(char *str, int colorat){$/;"	f
print_usage	lua/src/lua.c	/^static void print_usage (const char *badoption) {$/;"	f	file:
print_version	lua/src/lua.c	/^static void print_version (void) {$/;"	f	file:
priority	lua/src/lparser.c	/^} priority[] = {  \/* ORDER OPR *\/$/;"	v	typeref:struct:__anon6	file:
process$	lsh.c	/^void process$(char lineflag){$/;"	f
process_if	lsh.c	/^static int process_if(){$/;"	f	file:
progname	lua/src/lua.c	/^static const char *progname = LUA_PROGNAME;$/;"	v	file:
progname	lua/src/luac.c	/^static const char* progname=PROGNAME;	\/* actual program name *\/$/;"	v	file:
propagateall	lua/src/lgc.c	/^static void propagateall (global_State *g) {$/;"	f	file:
propagatemark	lua/src/lgc.c	/^static void propagatemark (global_State *g) {$/;"	f	file:
push	lfs/src/lfs.c	/^        _push_function push;$/;"	m	struct:_stat_members	file:
push_captures	lua/src/lstrlib.c	/^static int push_captures (MatchState *ms, const char *s, const char *e) {$/;"	f	file:
push_link_target	lfs/src/lfs.c	/^static int push_link_target(lua_State *L) {$/;"	f	file:
push_onecapture	lua/src/lstrlib.c	/^static void push_onecapture (MatchState *ms, int i, const char *s,$/;"	f	file:
push_st_atime	lfs/src/lfs.c	/^static void push_st_atime (lua_State *L, STAT_STRUCT *info) {$/;"	f	file:
push_st_blksize	lfs/src/lfs.c	/^static void push_st_blksize (lua_State *L, STAT_STRUCT *info) {$/;"	f	file:
push_st_blocks	lfs/src/lfs.c	/^static void push_st_blocks (lua_State *L, STAT_STRUCT *info) {$/;"	f	file:
push_st_ctime	lfs/src/lfs.c	/^static void push_st_ctime (lua_State *L, STAT_STRUCT *info) {$/;"	f	file:
push_st_dev	lfs/src/lfs.c	/^static void push_st_dev (lua_State *L, STAT_STRUCT *info) {$/;"	f	file:
push_st_gid	lfs/src/lfs.c	/^static void push_st_gid (lua_State *L, STAT_STRUCT *info) {$/;"	f	file:
push_st_ino	lfs/src/lfs.c	/^static void push_st_ino (lua_State *L, STAT_STRUCT *info) {$/;"	f	file:
push_st_mode	lfs/src/lfs.c	/^static void push_st_mode (lua_State *L, STAT_STRUCT *info) {$/;"	f	file:
push_st_mtime	lfs/src/lfs.c	/^static void push_st_mtime (lua_State *L, STAT_STRUCT *info) {$/;"	f	file:
push_st_nlink	lfs/src/lfs.c	/^static void push_st_nlink (lua_State *L, STAT_STRUCT *info) {$/;"	f	file:
push_st_perm	lfs/src/lfs.c	/^static void push_st_perm (lua_State *L, STAT_STRUCT *info) {$/;"	f	file:
push_st_rdev	lfs/src/lfs.c	/^static void push_st_rdev (lua_State *L, STAT_STRUCT *info) {$/;"	f	file:
push_st_size	lfs/src/lfs.c	/^static void push_st_size (lua_State *L, STAT_STRUCT *info) {$/;"	f	file:
push_st_uid	lfs/src/lfs.c	/^static void push_st_uid (lua_State *L, STAT_STRUCT *info) {$/;"	f	file:
pushargs	lua/src/lua.c	/^static int pushargs (lua_State *L) {$/;"	f	file:
pushclosure	lua/src/lvm.c	/^static void pushclosure (lua_State *L, Proto *p, UpVal **encup, StkId base,$/;"	f	file:
pusherror	lfs/src/lfs.c	/^static int pusherror(lua_State *L, const char *info)$/;"	f	file:
pusherror	lua/src/loadlib.c	/^static void pusherror (lua_State *L) {$/;"	f	file:
pushfuncname	lua/src/lauxlib.c	/^static void pushfuncname (lua_State *L, lua_Debug *ar) {$/;"	f	file:
pushglobalfuncname	lua/src/lauxlib.c	/^static int pushglobalfuncname (lua_State *L, lua_Debug *ar) {$/;"	f	file:
pushline	lua/src/lua.c	/^static int pushline (lua_State *L, int firstline) {$/;"	f	file:
pushnexttemplate	lua/src/loadlib.c	/^static const char *pushnexttemplate (lua_State *L, const char *path) {$/;"	f	file:
pushnumint	lua/src/lmathlib.c	/^static void pushnumint (lua_State *L, lua_Number d) {$/;"	f	file:
pushresult	lfs/src/lfs.c	/^static int pushresult(lua_State *L, int i, const char *info)$/;"	f	file:
pushstr	lua/src/lobject.c	/^static void pushstr (lua_State *L, const char *str, size_t l) {$/;"	f	file:
pushunsigned	lua/src/lbitlib.c	22;"	d	file:
pushutfchar	lua/src/lutf8lib.c	/^static void pushutfchar (lua_State *L, int arg) {$/;"	f	file:
pvalue	lua/src/lobject.h	168;"	d
r	lua/doc/manual.html	/^     function r() return 1,2,3 end$/;"	f
r	lua/src/llex.h	/^  lua_Number r;$/;"	m	union:__anon5
read_all	lua/src/liolib.c	/^static void read_all (lua_State *L, FILE *f) {$/;"	f	file:
read_chars	lua/src/liolib.c	/^static int read_chars (lua_State *L, FILE *f, size_t n) {$/;"	f	file:
read_line	lua/src/liolib.c	/^static int read_line (lua_State *L, FILE *f, int chop) {$/;"	f	file:
read_long_string	lua/src/llex.c	/^static void read_long_string (LexState *ls, SemInfo *seminfo, int sep) {$/;"	f	file:
read_number	lua/src/liolib.c	/^static int read_number (lua_State *L, FILE *f) {$/;"	f	file:
read_numeral	lua/src/llex.c	/^static int read_numeral (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
read_string	lua/src/llex.c	/^static void read_string (LexState *ls, int del, SemInfo *seminfo) {$/;"	f	file:
readable	lua/src/loadlib.c	/^static int readable (const char *filename) {$/;"	f	file:
readdecesc	lua/src/llex.c	/^static int readdecesc (LexState *ls) {$/;"	f	file:
readdigits	lua/src/liolib.c	/^static int readdigits (RN *rn, int hex) {$/;"	f	file:
reader	lua/src/luac.c	/^static const char* reader(lua_State *L, void *ud, size_t *size)$/;"	f	file:
reader	lua/src/lzio.h	/^  lua_Reader reader;		\/* reader function *\/$/;"	m	struct:Zio
readhexaesc	lua/src/llex.c	/^static int readhexaesc (LexState *ls) {$/;"	f	file:
readline_buf	lsh.c	/^char *readline_buf = 0;\/*write to key-buffer of 'readline ' is dangerous*\/$/;"	v
readutf8esc	lua/src/llex.c	/^static unsigned long readutf8esc (LexState *ls) {$/;"	f	file:
reallymarkobject	lua/src/lgc.c	/^static void reallymarkobject (global_State *g, GCObject *o) {$/;"	f	file:
recfield	lua/src/lparser.c	/^static void recfield (LexState *ls, struct ConsControl *cc) {$/;"	f	file:
recover	lua/src/ldo.c	/^static int recover (lua_State *L, int status) {$/;"	f	file:
refcount	lua/src/lfunc.h	/^  lu_mem refcount;  \/* reference counter *\/$/;"	m	struct:UpVal
reference	lfs/doc/us/manual.html	/^<h2><a name="reference"><\/a>Reference<\/h2>$/;"	a
register_vi	lsh.c	/^void register_vi(lua_State *L){$/;"	f
registerlocalvar	lua/src/lparser.c	/^static int registerlocalvar (LexState *ls, TString *varname) {$/;"	f	file:
rehash	lua/src/ltable.c	/^static void rehash (lua_State *L, Table *t, const TValue *ek) {$/;"	f	file:
remarkupvals	lua/src/lgc.c	/^static void remarkupvals (global_State *g) {$/;"	f	file:
remove_dir	lfs/src/lfs.c	/^static int remove_dir (lua_State *L) {$/;"	f	file:
removeentry	lua/src/lgc.c	/^static void removeentry (Node *n) {$/;"	f	file:
removevalues	lua/src/lcode.c	/^static void removevalues (FuncState *fs, int list) {$/;"	f	file:
removevars	lua/src/lparser.c	/^static void removevars (FuncState *fs, int tolevel) {$/;"	f	file:
rep	vi.h	/^	int rep;$/;"	m	struct:vi
repeatstat	lua/src/lparser.c	/^static void repeatstat (LexState *ls, int line) {$/;"	f	file:
report	lua/src/lua.c	/^static int report (lua_State *L, int status) {$/;"	f	file:
reprepstate	lua/src/lstrlib.c	/^static void reprepstate (MatchState *ms) {$/;"	f	file:
resetbit	lua/src/lgc.h	73;"	d
resetbits	lua/src/lgc.h	67;"	d
resethookcount	lua/src/ldebug.h	18;"	d
resizebox	lua/src/lauxlib.c	/^static void *resizebox (lua_State *L, int idx, size_t newsize) {$/;"	f	file:
restartcollection	lua/src/lgc.c	/^static void restartcollection (global_State *g) {$/;"	f	file:
restorestack	lua/src/ldo.h	33;"	d
resume	lua/src/ldo.c	/^static void resume (lua_State *L, void *ud) {$/;"	f	file:
resume_error	lua/src/ldo.c	/^static l_noret resume_error (lua_State *L, const char *msg, StkId firstArg) {$/;"	f	file:
retstat	lua/src/lparser.c	/^static void retstat (LexState *ls) {$/;"	f	file:
reverse	lua/src/lapi.c	/^static void reverse (lua_State *L, StkId from, StkId to) {$/;"	f	file:
right	lua/src/lparser.c	/^  lu_byte right; \/* right priority *\/$/;"	m	struct:__anon6	file:
righttt	lua/src/lobject.h	188;"	d
rmdir	lfs/doc/us/manual.html	/^    <dt><a name="rmdir"><\/a><strong><code>lfs.rmdir (dirname)<\/code><\/strong><\/dt>$/;"	a
rmdir	lfs/src/lfs.h	17;"	d
rttype	lua/src/lobject.h	127;"	d
run_cmdline	lsh.c	/^int run_cmdline(char *input){$/;"	f
runafewfinalizers	lua/src/lgc.c	/^static int runafewfinalizers (lua_State *L) {$/;"	f	file:
runargs	lua/src/lua.c	/^static int runargs (lua_State *L, char **argv, int n) {$/;"	f	file:
s	lua/src/lauxlib.c	/^  const char *s;$/;"	m	struct:LoadS	file:
s	lua/src/llimits.h	/^  void *s;$/;"	m	union:__anon22
save	lua/src/llex.c	/^static void save (LexState *ls, int c) {$/;"	f	file:
save_and_next	lua/src/llex.c	51;"	d	file:
savedpc	lua/src/lstate.h	/^      const Instruction *savedpc;$/;"	m	struct:CallInfo::__anon10::__anon11
savestack	lua/src/ldo.h	32;"	d
scanformat	lua/src/lstrlib.c	/^static const char *scanformat (lua_State *L, const char *strfrmt, char *form) {$/;"	f	file:
searcher_C	lua/src/loadlib.c	/^static int searcher_C (lua_State *L) {$/;"	f	file:
searcher_Croot	lua/src/loadlib.c	/^static int searcher_Croot (lua_State *L) {$/;"	f	file:
searcher_Lua	lua/src/loadlib.c	/^static int searcher_Lua (lua_State *L) {$/;"	f	file:
searcher_preload	lua/src/loadlib.c	/^static int searcher_preload (lua_State *L) {$/;"	f	file:
searchpath	lua/src/loadlib.c	/^static const char *searchpath (lua_State *L, const char *name,$/;"	f	file:
searchupvalue	lua/src/lparser.c	/^static int searchupvalue (FuncState *fs, TString *name) {$/;"	f	file:
searchvar	lua/src/lparser.c	/^static int searchvar (FuncState *fs, TString *n) {$/;"	f	file:
seed	lua/src/lstate.h	/^  unsigned int seed;  \/* randomized seed for hashes *\/$/;"	m	struct:global_State
semerror	lua/src/lparser.c	/^static l_noret semerror (LexState *ls, const char *msg) {$/;"	f	file:
seminfo	lua/src/llex.h	/^  SemInfo seminfo;$/;"	m	struct:Token
separatetobefnz	lua/src/lgc.c	/^static void separatetobefnz (global_State *g, int all) {$/;"	f	file:
set2	lua/src/ltablib.c	/^static void set2 (lua_State *L, IdxT i, IdxT j) {$/;"	f	file:
set_env	lua/src/loadlib.c	/^static void set_env (lua_State *L) {$/;"	f	file:
set_info	lfs/src/lfs.c	/^static void set_info (lua_State *L) {$/;"	f	file:
setallfields	lua/src/loslib.c	/^static void setallfields (lua_State *L, struct tm *stm) {$/;"	f	file:
setarg	lua/src/lopcodes.h	94;"	d
setarrayvector	lua/src/ltable.c	/^static void setarrayvector (lua_State *L, Table *t, unsigned int size) {$/;"	f	file:
setbits	lua/src/lgc.h	68;"	d
setboolfield	lua/src/loslib.c	/^static void setboolfield (lua_State *L, const char *key, int value) {$/;"	f	file:
setbvalue	lua/src/lobject.h	218;"	d
setclCvalue	lua/src/lobject.h	245;"	d
setclLvalue	lua/src/lobject.h	240;"	d
setdeadvalue	lua/src/lobject.h	255;"	d
seterrorobj	lua/src/ldo.c	/^static void seterrorobj (lua_State *L, int errcode, StkId oldtop) {$/;"	f	file:
setfield	lua/src/loslib.c	/^static void setfield (lua_State *L, const char *key, int value) {$/;"	f	file:
setfltvalue	lua/src/lobject.h	198;"	d
setfvalue	lua/src/lobject.h	212;"	d
setgcovalue	lua/src/lobject.h	221;"	d
sethvalue	lua/src/lobject.h	250;"	d
sethvalue2s	lua/src/lobject.h	273;"	d
setivalue	lua/src/lobject.h	204;"	d
setmode	lfs/doc/us/manual.html	/^    <dt><a name="setmode"><\/a><strong><code>lfs.setmode (file, mode)<\/code><\/strong><\/dt>$/;"	a
setnilvalue	lua/src/lobject.h	210;"	d
setnodekey	lua/src/lobject.h	485;"	d
setnodevector	lua/src/ltable.c	/^static void setnodevector (lua_State *L, Table *t, unsigned int size) {$/;"	f	file:
setoah	lua/src/lstate.h	111;"	d
setobj	lua/src/lobject.h	259;"	d
setobj2n	lua/src/lobject.h	278;"	d
setobj2s	lua/src/lobject.h	271;"	d
setobj2t	lua/src/lobject.h	282;"	d
setobjs2s	lua/src/lobject.h	269;"	d
setobjt2t	lua/src/lobject.h	276;"	d
setpath	lua/src/loadlib.c	/^static void setpath (lua_State *L, const char *fieldname, const char *envname1,$/;"	f	file:
setpause	lua/src/lgc.c	/^static void setpause (global_State *g) {$/;"	f	file:
setprogdir	lua/src/loadlib.c	/^static void setprogdir (lua_State *L) {$/;"	f	file:
setprogdir	lua/src/loadlib.c	182;"	d	file:
setprogdir	lua/src/loadlib.c	97;"	d	file:
setptvalue2s	lua/src/lobject.h	274;"	d
setpvalue	lua/src/lobject.h	215;"	d
setsvalue	lua/src/lobject.h	225;"	d
setsvalue2n	lua/src/lobject.h	279;"	d
setsvalue2s	lua/src/lobject.h	272;"	d
settableProtected	lua/src/lvm.c	780;"	d	file:
settabsb	lua/src/ldblib.c	/^static void settabsb (lua_State *L, const char *k, int v) {$/;"	f	file:
settabsi	lua/src/ldblib.c	/^static void settabsi (lua_State *L, const char *k, int v) {$/;"	f	file:
settabss	lua/src/ldblib.c	/^static void settabss (lua_State *L, const char *k, const char *v) {$/;"	f	file:
setthvalue	lua/src/lobject.h	235;"	d
settt_	lua/src/lobject.h	196;"	d
setuservalue	lua/src/lobject.h	371;"	d
setuvalue	lua/src/lobject.h	230;"	d
short_src	lua/src/lua.h	/^  char short_src[LUA_IDSIZE]; \/* (S) *\/$/;"	m	struct:lua_Debug
shrlen	lua/src/lobject.h	/^  lu_byte shrlen;  \/* length for short strings *\/$/;"	m	struct:TString
sighandler_ctrl	lsh.c	/^void  sighandler_ctrl(int x){$/;"	f
simpleexp	lua/src/lparser.c	/^static void simpleexp (LexState *ls, expdesc *v) {$/;"	f	file:
singlematch	lua/src/lstrlib.c	/^static int singlematch (MatchState *ms, const char *s, const char *p,$/;"	f	file:
singlestep	lua/src/lgc.c	/^static lu_mem singlestep (lua_State *L) {$/;"	f	file:
singlevar	lua/src/lparser.c	/^static void singlevar (LexState *ls, expdesc *var) {$/;"	f	file:
singlevaraux	lua/src/lparser.c	/^static void singlevaraux (FuncState *fs, TString *n, expdesc *var, int base) {$/;"	f	file:
size	lua/src/lauxlib.c	/^  size_t size;$/;"	m	struct:LoadS	file:
size	lua/src/lauxlib.h	/^  size_t size;  \/* buffer size *\/$/;"	m	struct:luaL_Buffer
size	lua/src/lparser.h	/^    int size;$/;"	m	struct:Dyndata::__anon16
size	lua/src/lparser.h	/^  int size;  \/* array size *\/$/;"	m	struct:Labellist
size	lua/src/lstate.h	/^  int size;$/;"	m	struct:stringtable
sizeCclosure	lua/src/lfunc.h	14;"	d
sizeLclosure	lua/src/lfunc.h	17;"	d
size_of_line	vi.h	/^	union{int *size_of_line;int *size_of_lines;};$/;"	m	union:vi::__anon32
size_of_lines	vi.h	/^	union{int *size_of_line;int *size_of_lines;};$/;"	m	union:vi::__anon32
size_of_yline	vi.h	/^	union{int *size_of_yline;int *size_of_ylines;};$/;"	m	union:vi::__anon33
size_of_yline_fix	vi.h	/^	int *size_of_yline_fix;$/;"	m	struct:vi
size_of_ylines	vi.h	/^	union{int *size_of_yline;int *size_of_ylines;};$/;"	m	union:vi::__anon33
sizearray	lua/src/lobject.h	/^  unsigned int sizearray;  \/* size of 'array' array *\/$/;"	m	struct:Table
sizecode	lua/src/lobject.h	/^  int sizecode;$/;"	m	struct:Proto
sizek	lua/src/lobject.h	/^  int sizek;  \/* size of 'k' *\/$/;"	m	struct:Proto
sizelineinfo	lua/src/lobject.h	/^  int sizelineinfo;$/;"	m	struct:Proto
sizelocvars	lua/src/lobject.h	/^  int sizelocvars;$/;"	m	struct:Proto
sizelstring	lua/src/lstring.h	15;"	d
sizeludata	lua/src/lstring.h	17;"	d
sizenode	lua/src/lobject.h	519;"	d
sizep	lua/src/lobject.h	/^  int sizep;  \/* size of 'p' *\/$/;"	m	struct:Proto
sizeudata	lua/src/lstring.h	18;"	d
sizeupvalues	lua/src/lobject.h	/^  int sizeupvalues;  \/* size of 'upvalues' *\/$/;"	m	struct:Proto
skipBOM	lua/src/lauxlib.c	/^static int skipBOM (LoadF *lf) {$/;"	f	file:
skip_sep	lua/src/llex.c	/^static int skip_sep (LexState *ls) {$/;"	f	file:
skipcomment	lua/src/lauxlib.c	/^static int skipcomment (LoadF *lf, int *cp) {$/;"	f	file:
skipnoopstat	lua/src/lparser.c	/^static void skipnoopstat (LexState *ls) {$/;"	f	file:
sof	lua/src/ltablib.c	250;"	d	file:
sort	lua/src/ltablib.c	/^static int sort (lua_State *L) {$/;"	f	file:
sort_comp	lua/src/ltablib.c	/^static int sort_comp (lua_State *L, int a, int b) {$/;"	f	file:
source	lua/src/llex.h	/^  TString *source;  \/* current source name *\/$/;"	m	struct:LexState
source	lua/src/lobject.h	/^  TString  *source;  \/* used for debug information *\/$/;"	m	struct:Proto
source	lua/src/lua.h	/^  const char *source;	\/* (S) *\/$/;"	m	struct:lua_Debug
src	lua/src/lstrlib.c	/^  const char *src;  \/* current position *\/$/;"	m	struct:GMatchState	file:
src_end	lua/src/lstrlib.c	/^  const char *src_end;  \/* end ('\\0') of source string *\/$/;"	m	struct:MatchState	file:
src_init	lua/src/lstrlib.c	/^  const char *src_init;  \/* init of source string *\/$/;"	m	struct:MatchState	file:
stack	lua/src/lstate.h	/^  StkId stack;  \/* stack base *\/$/;"	m	struct:lua_State
stack_init	lua/src/lstate.c	/^static void stack_init (lua_State *L1, lua_State *L) {$/;"	f	file:
stack_last	lua/src/lstate.h	/^  StkId stack_last;  \/* last free slot in the stack *\/$/;"	m	struct:lua_State
stackerror	lua/src/ldo.c	/^static void stackerror (lua_State *L) {$/;"	f	file:
stackinuse	lua/src/ldo.c	/^static int stackinuse (lua_State *L) {$/;"	f	file:
stacksize	lua/src/lstate.h	/^  int stacksize;$/;"	m	struct:lua_State
start_capture	lua/src/lstrlib.c	/^static const char *start_capture (MatchState *ms, const char *s,$/;"	f	file:
startpc	lua/src/lobject.h	/^  int startpc;  \/* first point where variable is active *\/$/;"	m	struct:LocVar
statement	lua/src/lparser.c	/^static void statement (LexState *ls) {$/;"	f	file:
statlist	lua/src/lparser.c	/^static void statlist (LexState *ls) {$/;"	f	file:
status	lfs/doc/us/index.html	/^<h2><a name="status"><\/a>Status<\/h2>$/;"	a
status	lua/src/ldo.c	/^  volatile int status;  \/* error code *\/$/;"	m	struct:lua_longjmp	file:
status	lua/src/ldump.c	/^  int status;$/;"	m	struct:__anon17	file:
status	lua/src/lstate.h	/^  lu_byte status;$/;"	m	struct:lua_State
str	vi.h	/^	const char *str;$/;"	m	struct:vi
str	vim.c	/^	char *str;$/;"	m	struct:vi	file:
str_byte	lua/src/lstrlib.c	/^static int str_byte (lua_State *L) {$/;"	f	file:
str_char	lua/src/lstrlib.c	/^static int str_char (lua_State *L) {$/;"	f	file:
str_checkname	lua/src/lparser.c	/^static TString *str_checkname (LexState *ls) {$/;"	f	file:
str_dump	lua/src/lstrlib.c	/^static int str_dump (lua_State *L) {$/;"	f	file:
str_find	lua/src/lstrlib.c	/^static int str_find (lua_State *L) {$/;"	f	file:
str_find_aux	lua/src/lstrlib.c	/^static int str_find_aux (lua_State *L, int find) {$/;"	f	file:
str_format	lua/src/lstrlib.c	/^static int str_format (lua_State *L) {$/;"	f	file:
str_gsub	lua/src/lstrlib.c	/^static int str_gsub (lua_State *L) {$/;"	f	file:
str_len	lua/src/lstrlib.c	/^static int str_len (lua_State *L) {$/;"	f	file:
str_lower	lua/src/lstrlib.c	/^static int str_lower (lua_State *L) {$/;"	f	file:
str_match	lua/src/lstrlib.c	/^static int str_match (lua_State *L) {$/;"	f	file:
str_pack	lua/src/lstrlib.c	/^static int str_pack (lua_State *L) {$/;"	f	file:
str_packsize	lua/src/lstrlib.c	/^static int str_packsize (lua_State *L) {$/;"	f	file:
str_rep	lua/src/lstrlib.c	/^static int str_rep (lua_State *L) {$/;"	f	file:
str_reverse	lua/src/lstrlib.c	/^static int str_reverse (lua_State *L) {$/;"	f	file:
str_sub	lua/src/lstrlib.c	/^static int str_sub (lua_State *L) {$/;"	f	file:
str_unpack	lua/src/lstrlib.c	/^static int str_unpack (lua_State *L) {$/;"	f	file:
str_upper	lua/src/lstrlib.c	/^static int str_upper (lua_State *L) {$/;"	f	file:
strcache	lua/src/lstate.h	/^  TString *strcache[STRCACHE_N][STRCACHE_M];  \/* cache for strings in API *\/$/;"	m	struct:global_State
strchar	utils.c	/^char *strchar( char *haystack, char needle){$/;"	f
strerror	lfs/src/lfs.c	85;"	d	file:
stringtable	lua/src/lstate.h	/^typedef struct stringtable {$/;"	s
stringtable	lua/src/lstate.h	/^} stringtable;$/;"	t	typeref:struct:stringtable
strip	lua/src/ldump.c	/^  int strip;$/;"	m	struct:__anon17	file:
stripping	lua/src/luac.c	/^static int stripping=0;			\/* strip debug information? *\/$/;"	v	file:
strit	pipe_demo.c	5;"	d	file:
strlen_ex	utils.c	/^int strlen_ex(char *str, char *group){$/;"	f
strlib	lua/src/lstrlib.c	/^static const luaL_Reg strlib[] = {$/;"	v	file:
strnchar	utils.c	/^char *strnchar( char *haystack, char needle){$/;"	f
strnstr	utils.c	/^char *strnstr(char* s1, char* s2, int n)  $/;"	f
strt	lua/src/lstate.h	/^  stringtable strt;  \/* hash table for strings *\/$/;"	m	struct:global_State
subexpr	lua/src/lparser.c	/^static BinOpr subexpr (LexState *ls, expdesc *v, int limit) {$/;"	f	file:
suffixedexp	lua/src/lparser.c	/^static void suffixedexp (LexState *ls, expdesc *v) {$/;"	f	file:
svalue	lua/src/lobject.h	333;"	d
swapextra	lua/src/ldebug.c	/^static void swapextra (lua_State *L) {$/;"	f	file:
sweepgc	lua/src/lstate.h	/^  GCObject **sweepgc;  \/* current position of sweep in list *\/$/;"	m	struct:global_State
sweeplist	lua/src/lgc.c	/^static GCObject **sweeplist (lua_State *L, GCObject **p, lu_mem count) {$/;"	f	file:
sweepstep	lua/src/lgc.c	/^static lu_mem sweepstep (lua_State *L, global_State *g,$/;"	f	file:
sweeptolive	lua/src/lgc.c	/^static GCObject **sweeptolive (lua_State *L, GCObject **p) {$/;"	f	file:
sweepwholelist	lua/src/lgc.c	723;"	d	file:
symlinkattributes	lfs/doc/us/manual.html	/^    <dt><a name="symlinkattributes"><\/a><strong><code>lfs.symlinkattributes (filepath [, aname])<\/code><\/strong><\/dt>$/;"	a
syslib	lua/src/loslib.c	/^static const luaL_Reg syslib[] = {$/;"	v	file:
t	lua/src/llex.h	/^  Token t;  \/* current token *\/$/;"	m	struct:LexState
t	lua/src/lparser.c	/^  expdesc *t;  \/* table descriptor *\/$/;"	m	struct:ConsControl	file:
t	lua/src/lparser.h	/^      lu_byte t;  \/* table (register or upvalue) *\/$/;"	m	struct:expdesc::__anon14::__anon15
t	lua/src/lparser.h	/^  int t;  \/* patch list of 'exit when true' *\/$/;"	m	struct:expdesc
tab_funcs	lua/src/ltablib.c	/^static const luaL_Reg tab_funcs[] = {$/;"	v	file:
table.print	init.lua	/^function table.print(tbl)$/;"	f
table:push	init.lua	/^function table:push(value)$/;"	f
tag_error	lua/src/lauxlib.c	/^static void tag_error (lua_State *L, int arg, int tag) {$/;"	f	file:
tail_pipe	lsh.c	/^}tail_pipe;$/;"	v	typeref:struct:__anon35	file:
taste_count	vi.c	/^static int taste_count(char *opseq, char **endptr){$/;"	f	file:
taste_digit	utils.c	/^int taste_digit(char *at){$/;"	f
taste_opseq	vi.c	/^static struct opseq taste_opseq(struct vi *vi){$/;"	f	file:
tconcat	lua/src/ltablib.c	/^static int tconcat (lua_State *L) {$/;"	f	file:
test2	lua/src/liolib.c	/^static int test2 (RN *rn, const char *set) {$/;"	f	file:
testAMode	lua/src/lopcodes.h	284;"	d
testTMode	lua/src/lopcodes.h	285;"	d
test_eof	lua/src/liolib.c	/^static int test_eof (lua_State *L, FILE *f) {$/;"	f	file:
test_then_block	lua/src/lparser.c	/^static void test_then_block (LexState *ls, int *escapelist) {$/;"	f	file:
testbit	lua/src/lgc.h	74;"	d
testbits	lua/src/lgc.h	69;"	d
testnext	lua/src/lparser.c	/^static int testnext (LexState *ls, int c) {$/;"	f	file:
testprop	lua/src/lctype.h	52;"	d
text	lsh.c	/^	char *text;$/;"	m	struct:__anon35	file:
textlen	lsh.c	/^	int textlen;$/;"	m	struct:__anon35	file:
th	lua/src/lstate.h	/^  struct lua_State th;  \/* thread *\/$/;"	m	union:GCUnion	typeref:struct:GCUnion::lua_State
thvalue	lua/src/lobject.h	177;"	d
tinsert	lua/src/ltablib.c	/^static int tinsert (lua_State *L) {$/;"	f	file:
tmname	lua/src/lstate.h	/^  TString *tmname[TM_N];  \/* array with tag-method names *\/$/;"	m	struct:global_State
tmove	lua/src/ltablib.c	/^static int tmove (lua_State *L) {$/;"	f	file:
tobefnz	lua/src/lstate.h	/^  GCObject *tobefnz;  \/* list of userdata to be GC *\/$/;"	m	struct:global_State
tochar	tochar.h	69;"	d
tofile	lua/src/liolib.c	/^static FILE *tofile (lua_State *L) {$/;"	f	file:
tofinalize	lua/src/lgc.h	92;"	d
tointeger	lua/src/lvm.h	43;"	d
token	lua/src/llex.h	/^  int token;$/;"	m	struct:Token
tolstream	lua/src/liolib.c	144;"	d	file:
tonumber	lua/src/lvm.h	40;"	d
tonumeral	lua/src/lcode.c	/^static int tonumeral(expdesc *e, TValue *v) {$/;"	f	file:
top	lua/src/lstate.h	/^  StkId	top;  \/* top for this function *\/$/;"	m	struct:CallInfo
top	lua/src/lstate.h	/^  StkId top;  \/* first free slot in the stack *\/$/;"	m	struct:lua_State
toproto	lua/src/luac.c	137;"	d	file:
tostore	lua/src/lparser.c	/^  int tostore;  \/* number of array elements pending to be stored *\/$/;"	m	struct:ConsControl	file:
tostring	lua/src/lvm.c	454;"	d	file:
totalbytes	lua/src/lstate.h	/^  l_mem totalbytes;  \/* number of bytes currently allocated - GCdebt *\/$/;"	m	struct:global_State
totlen	vi.c	/^	int totlen;$/;"	m	struct:opseq	file:
touch	lfs/doc/us/manual.html	/^    <dt><a name="touch"><\/a><strong><code>lfs.touch (filepath [, atime [, mtime]])<\/code><\/strong><\/dt>$/;"	a
touched	lua/src/lfunc.h	/^      int touched;  \/* mark to avoid cycles with dead threads *\/$/;"	m	struct:UpVal::__anon23::__anon24
traverseCclosure	lua/src/lgc.c	/^static lu_mem traverseCclosure (global_State *g, CClosure *cl) {$/;"	f	file:
traverseLclosure	lua/src/lgc.c	/^static lu_mem traverseLclosure (global_State *g, LClosure *cl) {$/;"	f	file:
traverseephemeron	lua/src/lgc.c	/^static int traverseephemeron (global_State *g, Table *h) {$/;"	f	file:
traverseproto	lua/src/lgc.c	/^static int traverseproto (global_State *g, Proto *f) {$/;"	f	file:
traversestrongtable	lua/src/lgc.c	/^static void traversestrongtable (global_State *g, Table *h) {$/;"	f	file:
traversetable	lua/src/lgc.c	/^static lu_mem traversetable (global_State *g, Table *h) {$/;"	f	file:
traversethread	lua/src/lgc.c	/^static lu_mem traversethread (global_State *g, lua_State *th) {$/;"	f	file:
traverseweakvalue	lua/src/lgc.c	/^static void traverseweakvalue (global_State *g, Table *h) {$/;"	f	file:
treatstackoption	lua/src/ldblib.c	/^static void treatstackoption (lua_State *L, lua_State *L1, const char *fname) {$/;"	f	file:
tremove	lua/src/ltablib.c	/^static int tremove (lua_State *L) {$/;"	f	file:
trim	lua/src/lbitlib.c	41;"	d	file:
trip_pairs_core	lsh.c	/^static int trip_pairs_core(char *replacer){$/;"	f	file:
true	file.h	5;"	d
true	utils.h	6;"	d
tryfuncTM	lua/src/ldo.c	/^static void tryfuncTM (lua_State *L, StkId func) {$/;"	f	file:
ts	lua/src/llex.h	/^  TString *ts;$/;"	m	union:__anon5
ts	lua/src/lstate.h	/^  struct TString ts;$/;"	m	union:GCUnion	typeref:struct:GCUnion::TString
tsslen	lua/src/lobject.h	336;"	d
tsv	lua/src/lobject.h	/^  TString tsv;$/;"	m	union:UTString
tsvalue	lua/src/lobject.h	169;"	d
ttisCclosure	lua/src/lobject.h	154;"	d
ttisLclosure	lua/src/lobject.h	155;"	d
ttisboolean	lua/src/lobject.h	146;"	d
ttisclosure	lua/src/lobject.h	153;"	d
ttisdeadkey	lua/src/lobject.h	159;"	d
ttisfloat	lua/src/lobject.h	143;"	d
ttisfulluserdata	lua/src/lobject.h	157;"	d
ttisfunction	lua/src/lobject.h	152;"	d
ttisinteger	lua/src/lobject.h	144;"	d
ttislcf	lua/src/lobject.h	156;"	d
ttislightuserdata	lua/src/lobject.h	147;"	d
ttislngstring	lua/src/lobject.h	150;"	d
ttisnil	lua/src/lobject.h	145;"	d
ttisnumber	lua/src/lobject.h	142;"	d
ttisshrstring	lua/src/lobject.h	149;"	d
ttisstring	lua/src/lobject.h	148;"	d
ttistable	lua/src/lobject.h	151;"	d
ttisthread	lua/src/lobject.h	158;"	d
ttnov	lua/src/lobject.h	136;"	d
ttuv_	lua/src/lobject.h	/^  lu_byte ttuv_;  \/* user value's tag *\/$/;"	m	struct:Udata
ttype	lua/src/lobject.h	133;"	d
ttypename	lua/src/ltm.h	53;"	d
tvk	lua/src/lobject.h	/^  TValue tvk;$/;"	m	union:TKey
twoto	lua/src/lobject.h	518;"	d
twups	lua/src/lstate.h	/^  struct lua_State *twups;  \/* list of threads with open upvalues *\/$/;"	m	struct:global_State	typeref:struct:global_State::lua_State
twups	lua/src/lstate.h	/^  struct lua_State *twups;  \/* list of threads with open upvalues *\/$/;"	m	struct:lua_State	typeref:struct:lua_State::lua_State
txtToken	lua/src/llex.c	/^static const char *txtToken (LexState *ls, int token) {$/;"	f	file:
typeerror	lua/src/lauxlib.c	/^static int typeerror (lua_State *L, int arg, const char *tname) {$/;"	f	file:
u	lua/src/lfunc.h	/^  } u;$/;"	m	struct:UpVal	typeref:union:UpVal::__anon23
u	lua/src/llimits.h	/^  double u;$/;"	m	union:__anon22
u	lua/src/lobject.h	/^  } u;$/;"	m	struct:TString	typeref:union:TString::__anon7
u	lua/src/lparser.h	/^  } u;$/;"	m	struct:expdesc	typeref:union:expdesc::__anon14
u	lua/src/lstate.h	/^  struct Udata u;$/;"	m	union:GCUnion	typeref:struct:GCUnion::Udata
u	lua/src/lstate.h	/^  } u;$/;"	m	struct:CallInfo	typeref:union:CallInfo::__anon10
u	lua/src/lstrlib.c	/^  union { double d; void *p; lua_Integer i; lua_Number n; } u;$/;"	m	struct:cD	typeref:union:cD::__anon21	file:
u32	han2pinyin.c	/^typedef unsigned int u32;$/;"	t	file:
u8	han2pinyin.c	/^typedef unsigned char u8;$/;"	t	file:
u_posrelat	lua/src/lutf8lib.c	/^static lua_Integer u_posrelat (lua_Integer pos, size_t len) {$/;"	f	file:
uchar	lua/src/lstrlib.c	39;"	d	file:
ud	lua/src/lstate.h	/^  void *ud;         \/* auxiliary data to 'frealloc' *\/$/;"	m	struct:global_State
udata2finalize	lua/src/lgc.c	/^static GCObject *udata2finalize (global_State *g) {$/;"	f	file:
udatatypename	lua/src/ltm.c	/^static const char udatatypename[] = "userdata";$/;"	v	file:
unbound_search	lua/src/ltable.c	/^static int unbound_search (Table *t, unsigned int j) {$/;"	f	file:
undefgoto	lua/src/lparser.c	/^static l_noret undefgoto (LexState *ls, Labeldesc *gt) {$/;"	f	file:
unlock	lfs/doc/us/manual.html	/^    <dt><a name="unlock"><\/a><strong><code>lfs.unlock (filehandle[, start[, length]])<\/code><\/strong><\/dt>$/;"	a
unmakemask	lua/src/ldblib.c	/^static char *unmakemask (int mask, char *smask) {$/;"	f	file:
unpack	lua/src/ltablib.c	/^static int unpack (lua_State *L) {$/;"	f	file:
unpackint	lua/src/lstrlib.c	/^static lua_Integer unpackint (lua_State *L, const char *str,$/;"	f	file:
unroll	lua/src/ldo.c	/^static void unroll (lua_State *L, void *ud) {$/;"	f	file:
upisopen	lua/src/lfunc.h	47;"	d
upval	lua/src/lparser.c	/^  lu_byte upval;  \/* true if some variable in the block is an upvalue *\/$/;"	m	struct:BlockCnt	file:
upvalname	lua/src/ldebug.c	/^static const char *upvalname (Proto *p, int uv) {$/;"	f	file:
upvals	lua/src/lobject.h	/^  UpVal *upvals[1];  \/* list of upvalues *\/$/;"	m	struct:LClosure
upvalue	lua/src/lobject.h	/^  TValue upvalue[1];  \/* list of upvalues *\/$/;"	m	struct:CClosure
upvalues	lua/src/lobject.h	/^  Upvaldesc *upvalues;  \/* upvalue information *\/$/;"	m	struct:Proto
usage	lua/src/luac.c	/^static void usage(const char* message)$/;"	f	file:
user_	lua/src/lobject.h	/^  union Value user_;  \/* user value *\/$/;"	m	struct:Udata	typeref:union:Udata::Value
utf8_decode	lua/src/lutf8lib.c	/^static const char *utf8_decode (const char *o, int *val) {$/;"	f	file:
utf8_hashtbl	word.h	/^int utf8_hashtbl[ UTF8_HASHTBL_LEN ][ UTF8_HASHTBL_LEN2 ];$/;"	v
utf8_hashtbl_store	han2pinyin.c	/^static bool utf8_hashtbl_store(int value, int hash){$/;"	f	file:
utf8esc	lua/src/llex.c	/^static void utf8esc (LexState *ls) {$/;"	f	file:
utfchar	lua/src/lutf8lib.c	/^static int utfchar (lua_State *L) {$/;"	f	file:
utflen	lua/src/lutf8lib.c	/^static int utflen (lua_State *L) {$/;"	f	file:
uv	lua/src/lobject.h	/^  Udata uv;$/;"	m	union:UUdata
uvalue	lua/src/lobject.h	170;"	d
v	lua/src/lfunc.h	/^  TValue *v;  \/* points to stack or to its own value *\/$/;"	m	struct:UpVal
v	lua/src/lparser.c	/^  expdesc v;  \/* last list item read *\/$/;"	m	struct:ConsControl	file:
v	lua/src/lparser.c	/^  expdesc v;  \/* variable (global, local, upvalue, or indexed) *\/$/;"	m	struct:LHS_assign	file:
v_begin	vi.h	/^	char *v_begin;	\/* 0 on reset *\/$/;"	m	struct:vi
v_beginl	vi.h	/^	int v_beginl;	\/* -1 on reset*\/$/;"	m	struct:vi
v_head	vi.h	/^	union{char *v_head; char *v_start;};$/;"	m	union:vi::__anon30
v_m	vi.h	/^	int v_m; int v_n;	\/*buffer smaller\/bigger line for mod 'v'*\/$/;"	m	struct:vi
v_n	vi.h	/^	int v_m; int v_n;	\/*buffer smaller\/bigger line for mod 'v'*\/$/;"	m	struct:vi
v_start	vi.h	/^	union{char *v_head; char *v_start;};$/;"	m	union:vi::__anon30
v_tail	vi.h	/^	char *v_tail;	\/*buffer smaller\/bigger anchor for mod 'v',$/;"	m	struct:vi
val_	lua/src/lobject.h	123;"	d
validop	lua/src/lcode.c	/^static int validop (int op, TValue *v1, TValue *v2) {$/;"	f	file:
valiswhite	lua/src/lgc.c	74;"	d	file:
value	lua/src/lfunc.h	/^    TValue value;  \/* the value (when closed) *\/$/;"	m	union:UpVal::__anon23
value	vi.c	/^		int value;$/;"	m	union:opseq::__anon2	file:
varinfo	lua/src/ldebug.c	/^static const char *varinfo (lua_State *L, const TValue *o) {$/;"	f	file:
varname	lua/src/lobject.h	/^  TString *varname;$/;"	m	struct:LocVar
version	lua/src/lstate.h	/^  const lua_Number *version;  \/* pointer to version number *\/$/;"	m	struct:global_State
vi	vi.h	/^struct vi{$/;"	s
vi	vim.c	/^struct vi{$/;"	s	file:
vi_$	vi.c	/^void vi_$(struct vi * vi){$/;"	f
vi_$0	vi.h	/^static inline void vi_$0(struct vi *vi){$/;"	f
vi_0	vi.c	/^void vi_0(struct vi *vi){$/;"	f
vi_B	vi.c	/^bool vi_B(struct vi *vi){$/;"	f
vi_B_	vi.c	/^bool vi_B_(struct vi *vi){$/;"	f
vi_E	vi.c	/^int vi_E(struct vi *vi){$/;"	f
vi_E_	vi.c	/^bool vi_E_(struct vi *vi){$/;"	f
vi_F	vi.c	/^bool vi_F(struct vi *vi, char c){$/;"	f
vi_G	vi.c	/^void vi_G(struct vi *vi){$/;"	f
vi_Gn	vi.c	/^bool vi_Gn(struct vi *vi, unsigned destl){$/;"	f
vi_H_	vi.h	/^static inline bool vi_H_(struct vi *vi){$/;"	f
vi_L_	vi.h	/^static inline bool vi_L_(struct vi *vi){$/;"	f
vi_N	vi.c	/^bool vi_N(struct vi *vi){$/;"	f
vi_W	vi.c	/^bool vi_W(struct vi *vi){$/;"	f
vi_W_	vi.c	/^bool vi_W_(struct vi *vi){$/;"	f
vi_a	vi.h	/^static inline int vi_a(struct vi *vi, char *content){$/;"	f
vi_active	vi.c	/^bool vi_active(struct vi *v){$/;"	f
vi_append_at	vi.c	/^static void vi_append_at(struct vi *vi, int l, char *at, char *src, int srclen){$/;"	f	file:
vi_append_at_safe	vi.c	/^void vi_append_at_safe(struct vi *vi, int l, char *at, char *src, int srclen){$/;"	f
vi_append_safe	vi.c	/^void vi_append_safe(struct vi*vi, char *src, int srclen){$/;"	f
vi_b	vi.c	/^bool vi_b(struct vi*vi){$/;"	f
vi_b_	vi.c	/^bool vi_b_(struct vi *vi){$/;"	f
vi_cc	vi.c	/^void vi_cc(struct vi *vi){$/;"	f
vi_clipboard	vi.c	/^char *vi_clipboard(struct vi *vi, char *buf){$/;"	f
vi_clipinfo	vi.h	/^struct vi_clipinfo{$/;"	s
vi_cw	vi.c	/^void vi_cw(struct vi *vi){$/;"	f
vi_d	vi.c	/^bool vi_d(struct vi *vi){$/;"	f
vi_d$	vi.c	/^void vi_d$(struct vi *vi){$/;"	f
vi_d0	vi.c	/^void vi_d0(struct vi *vi){$/;"	f
vi_dW	vi.c	/^bool vi_dW(struct vi *vi){		$/;"	f
vi_dd	vi.c	/^void vi_dd(struct vi *vi){$/;"	f
vi_del_across	vi.c	/^void vi_del_across(struct vi *vi){$/;"	f
vi_del_lines	vi.c	/^void vi_del_lines(struct vi * vi){$/;"	f
vi_del_within	vi.c	/^void vi_del_within(struct vi *vi){	$/;"	f
vi_df	vi.c	/^bool vi_df(struct vi *vi, char target){$/;"	f
vi_drop	vi.c	/^bool vi_drop(struct vi *v){$/;"	f
vi_e	vi.c	/^bool vi_e(struct vi *vi){$/;"	f
vi_e_	vi.c	/^bool vi_e_(struct vi *vi){$/;"	f
vi_endv	vi.c	/^void vi_endv(struct vi *vi){$/;"	f
vi_expand_yline	vi.c	/^static inline void vi_expand_yline(struct vi *vi, int l, int size){$/;"	f	file:
vi_f	vi.c	/^int vi_f( struct vi *vi, char to, ... ){$/;"	f
vi_f_ex	vi.c	/^bool vi_f_ex(struct vi *vi, char *group, unsigned flags){$/;"	f
vi_filesize	vi.c	/^int vi_filesize(struct vi* vi){$/;"	f
vi_find	vi.c	/^bool vi_find(struct vi *vi, char* str, unsigned flags){$/;"	f
vi_gg	vi.c	/^void vi_gg(struct vi *vi){$/;"	f
vi_h	vi.h	/^static inline bool vi_h(struct vi *vi){$/;"	f
vi_i	vi.h	/^static inline int vi_i(struct vi*vi, char *content){$/;"	f
vi_init	vi.c	/^struct vi * vi_init(struct vi *vi){$/;"	f
vi_init	vim.c	/^int vi_init( struct vi *v ){$/;"	f
vi_inquote	vi.c	/^bool vi_inquote(struct vi *vi){$/;"	f
vi_insert	vi.c	/^static void vi_insert(struct vi*vi, char *src, int srclen){$/;"	f	file:
vi_insert_at	vi.c	/^void vi_insert_at(struct vi *vi, int l, char *at, char *src, int srclen){$/;"	f
vi_insert_at_safe	vi.c	/^void vi_insert_at_safe(struct vi *vi, int l, char *at, char *src, int srclen){$/;"	f
vi_insert_safe	vi.c	/^void vi_insert_safe(struct vi*vi, char *src, int srclen){$/;"	f
vi_is_at_blank	vi.h	/^static inline bool vi_is_at_blank(struct vi *vi){$/;"	f
vi_j	vi.h	/^static inline bool vi_j(struct vi *vi){$/;"	f
vi_jmpspace	vi.c	/^int vi_jmpspace(struct vi *vi){$/;"	f
vi_jmpspace_ex	vi.c	/^int vi_jmpspace_ex(struct vi *vi, int control){$/;"	f
vi_jmpspace_r	vi.c	/^bool vi_jmpspace_r(struct vi *vi){$/;"	f
vi_k	vi.h	/^static inline bool vi_k(struct vi *vi){$/;"	f
vi_l	vi.h	/^static inline bool vi_l(struct vi *vi){$/;"	f
vi_lg	vi.h	/^static inline bool vi_lg(struct vi *vi){$/;"	f
vi_library_init	vi.c	/^void vi_library_init(void){$/;"	f
vi_m	vi.c	/^bool vi_m(struct vi *vi, char rid){$/;"	f
vi_mcurr	vi.h	/^static inline char *vi_mcurr(struct vi *vi, char rid){$/;"	f
vi_meet_emptyline	vi.c	/^bool vi_meet_emptyline(struct vi *vi){$/;"	f
vi_meet_spaceline	vi.c	/^bool vi_meet_spaceline(struct vi *vi){$/;"	f
vi_mk_head_tail	vi.c	/^void vi_mk_head_tail(struct  vi *vi){$/;"	f
vi_mk_mn	vi.c	/^void vi_mk_mn(struct vi *vi){$/;"	f
vi_move_ops	vi.c	/^char*  vi_move_ops = "hjkl0$^W%";$/;"	v
vi_move_ops	vi.h	/^char*  vi_move_ops;$/;"	v
vi_mvalid	vi.h	/^static inline bool vi_mvalid(struct vi *vi, char rid){$/;"	f
vi_n	vi.c	/^bool vi_n(struct vi *vi){$/;"	f
vi_new	vi.c	/^struct vi* vi_new( char *str){$/;"	f
vi_normal	vi.c	/^bool vi_normal(struct vi *vi, char *ops){$/;"	f
vi_o	vi.h	/^static inline void vi_o(struct vi*vi){$/;"	f
vi_open	vi.c	/^bool vi_open(struct vi *vi, char *filepath){$/;"	f
vi_ops1_9	vi.c	/^char *vi_ops1_9 = "123456789";$/;"	v
vi_ops1_9	vi.h	/^char *vi_ops1_9 ;$/;"	v
vi_orx	vi.h	/^static inline bool vi_orx(struct vi*vi){$/;"	f
vi_out	vi.c	/^char *vi_out(struct vi * vi, char *buf){$/;"	f
vi_p	vi.c	/^int vi_p(struct vi *vi){$/;"	f
vi_pair_str	vi.c	/^char*  vi_pair_str = "()[]{}<>";$/;"	v
vi_pair_str	vi.h	/^char*  vi_pair_str;$/;"	v
vi_pair_str2	vi.c	/^char*  vi_pair_str2 = ")(][}{><";$/;"	v
vi_pair_str2	vi.h	/^char*  vi_pair_str2 ;$/;"	v
vi_paste_line	vi.c	/^void vi_paste_line(struct vi *vi){$/;"	f
vi_paste_lines	vi.c	/^void vi_paste_lines(struct vi *vi){$/;"	f
vi_paste_yy	vi.c	/^void vi_paste_yy(struct vi *vi){$/;"	f
vi_percent	vi.c	/^bool vi_percent(struct vi*vi){$/;"	f
vi_print	vi.c	/^void vi_print(struct vi*vi, int normal_ret){$/;"	f
vi_print2	vi.c	/^void vi_print2(struct vi*vi){$/;"	f
vi_r	vi.h	/^static inline void vi_r(struct vi *vi, char new){$/;"	f
vi_require_llen	vi.c	/^void vi_require_llen(struct vi *vi, int l, int size){$/;"	f
vi_reset_m_regs	vi.c	/^void vi_reset_m_regs(struct vi *vi){$/;"	f
vi_search_backward	vi.c	/^bool vi_search_backward(struct vi *vi, char *pattern){$/;"	f
vi_search_foward	vi.c	/^bool vi_search_foward(struct vi *vi, char *pattern){$/;"	f
vi_set	vi.c	/^void  vi_set( struct vi* vi, const char *str ){$/;"	f
vi_set	vim.c	/^int vi_set( struct vi *v, char *str ){$/;"	f
vi_share_clipboard	vi.c	/^void vi_share_clipboard(struct vi *vi, struct vi *vi2){$/;"	f
vi_smelll	vi.c	/^int vi_smelll(struct vi *vi){$/;"	f
vi_smellr	vi.c	/^int vi_smellr(struct vi *vi){$/;"	f
vi_taste_digit	vi.c	/^int vi_taste_digit(struct vi*vi){$/;"	f
vi_tom	vi.c	/^bool vi_tom(struct vi *vi, char rid){$/;"	f
vi_v	vi.c	/^void vi_v(struct vi * vi){$/;"	f
vi_w	vi.c	/^bool vi_w(struct vi *vi){$/;"	f
vi_w	vim.c	/^int vi_w( struct vi *v ){$/;"	f
vi_w_	vi.c	/^bool vi_w_(struct vi *vi){$/;"	f
vi_write	vi.c	/^bool vi_write(struct vi*vi, char *filepath){$/;"	f
vi_x	vi.c	/^bool vi_x(struct vi *vi){$/;"	f
vi_xor	vi.h	/^static inline bool vi_xor(struct vi*vi){$/;"	f
vi_y	vi.c	/^int vi_y(struct vi *vi){$/;"	f
vi_y$	vi.c	/^void vi_y$(struct vi *vi){$/;"	f
vi_y0	vi.c	/^void vi_y0(struct vi *vi){$/;"	f
vi_yW	vi.c	/^int vi_yW(struct vi *vi){$/;"	f
vi_y_across	vi.c	/^void vi_y_across(struct vi* vi){$/;"	f
vi_y_within	vi.c	/^void vi_y_within(struct vi *vi){$/;"	f
vi_yf	vi.c	/^bool vi_yf(struct vi *vi, char target){$/;"	f
vi_yy	vi.c	/^void vi_yy(struct vi*vi){$/;"	f
vim	vi.h	/^struct vi *vim;$/;"	v	typeref:struct:vi
vim_$	vim.h	/^static inline void vim_$(void){$/;"	f
vim_0	vim.h	/^static inline void vim_0(void){$/;"	f
vim_G	vim.h	/^static inline void vim_G(){$/;"	f
vim_Gn	vim.h	/^static inline bool vim_Gn(unsigned destl){$/;"	f
vim_W	vim.h	/^static inline bool vim_W(void){$/;"	f
vim_a	vim.h	/^static inline void vim_a(char *str){$/;"	f
vim_d	vim.h	/^static inline bool vim_d(){$/;"	f
vim_f	vim.h	/^static inline int vim_f( char target){$/;"	f
vim_f_ex	vim.h	/^static inline int vim_f_ex(char *group, unsigned flags){$/;"	f
vim_find	vim.h	/^static inline int vim_find(char *str, unsigned flags){$/;"	f
vim_gg	vim.h	/^static inline void vim_gg(void){$/;"	f
vim_h	vim.h	/^static inline bool vim_h(void){$/;"	f
vim_i	vim.h	/^static inline void vim_i(char *str){$/;"	f
vim_j	vim.h	/^static inline bool vim_j(void){$/;"	f
vim_jmpspace	vim.h	/^static inline bool vim_jmpspace(void){$/;"	f
vim_jmpspace_ex	vim.h	/^static inline int vim_jmpspace_ex( int control){$/;"	f
vim_l	vim.h	/^static inline bool vim_l(void){$/;"	f
vim_m	vim.h	/^static inline bool vim_m( char rid){$/;"	f
vim_meet_emptyline	vim.h	/^static inline bool vim_meet_emptyline(){$/;"	f
vim_meet_spaceline	vim.h	/^static inline bool vim_meet_spaceline(){$/;"	f
vim_normal	vim.h	/^static inline void vim_normal(char *ops){$/;"	f
vim_open	vim.h	/^static inline bool vim_open(char *filepath){$/;"	f
vim_orx	vim.h	/^static inline bool vim_orx(void){$/;"	f
vim_out	vim.h	/^static inline void vim_out(char *buf){$/;"	f
vim_p	vim.h	/^static inline bool vim_p(){$/;"	f
vim_percent	vim.h	/^static inline bool vim_percent(void){$/;"	f
vim_r	vim.h	/^static inline void vim_r( char new){$/;"	f
vim_set	vim.h	/^static inline void  vim_set(char *str ){$/;"	f
vim_tom	vim.h	/^static inline void vim_tom(char rid){$/;"	f
vim_v	vim.h	/^static inline void vim_v(){$/;"	f
vim_w	vim.h	/^static inline bool vim_w(void){$/;"	f
vim_write	vim.h	/^static inline bool vim_write(char *filename){$/;"	f
vim_x	vim.h	/^static inline void vim_x(){$/;"	f
vim_xor	vim.h	/^static inline bool vim_xor(void){$/;"	f
vim_y	vim.h	/^static inline bool vim_y(){$/;"	f
vkisinreg	lua/src/lparser.h	52;"	d
vkisvar	lua/src/lparser.h	51;"	d
vmbreak	lua/src/lvm.c	767;"	d	file:
vmcase	lua/src/lvm.c	766;"	d	file:
vmdispatch	lua/src/lvm.c	765;"	d	file:
vmfetch	lua/src/lvm.c	756;"	d	file:
vslen	lua/src/lobject.h	339;"	d
vt	lua/src/lparser.h	/^      lu_byte vt;  \/* whether 't' is register (VLOCAL) or upvalue (VUPVAL) *\/$/;"	m	struct:expdesc::__anon14::__anon15
weak	lua/src/lstate.h	/^  GCObject *weak;  \/* list of tables with weak values *\/$/;"	m	struct:global_State
wgkey	lua/src/ltable.h	25;"	d
what	lua/src/lua.h	/^  const char *what;	\/* (S) 'Lua', 'C', 'main', 'tail' *\/$/;"	m	struct:lua_Debug
whilestat	lua/src/lparser.c	/^static void whilestat (LexState *ls, int line) {$/;"	f	file:
white2gray	lua/src/lgc.c	70;"	d	file:
words2unicodes	han2pinyin.c	/^static void words2unicodes(u32 *uarray, char *words, int wordnum){$/;"	f	file:
writer	lua/src/ldump.c	/^  lua_Writer writer;$/;"	m	struct:__anon17	file:
writer	lua/src/lstrlib.c	/^static int writer (lua_State *L, const void *b, size_t size, void *B) {$/;"	f	file:
writer	lua/src/luac.c	/^static int writer(lua_State* L, const void* p, size_t size, void* u)$/;"	f	file:
yindex	lua/src/lparser.c	/^static void yindex (LexState *ls, expdesc *v) {$/;"	f	file:
ylines	vi.h	/^	char **ylines;$/;"	m	struct:vi
ylines_fix	vi.h	/^	char **ylines_fix;$/;"	m	struct:vi
ylmax	vi.h	/^	int ylmax;$/;"	m	struct:vi_clipinfo
you_throw_me_a_script	lsh.c	/^static bool you_throw_me_a_script(int argc, char **argv){$/;"	f	file:
yy	vi.h	/^	char yy;$/;"	m	struct:vi_clipinfo
z	lua/src/ldo.c	/^  ZIO *z;$/;"	m	struct:SParser	file:
z	lua/src/llex.h	/^  ZIO *z;  \/* input stream *\/$/;"	m	struct:LexState
zgetc	lua/src/lzio.h	20;"	d

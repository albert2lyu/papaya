lua shell简介 1

  这个shell的主体是在去年10月份写的。前段时间比较闲，就又翻出来鼓捣了一阵子。
  我现在对这shell有点儿爱不释手了。单单给它编程都觉得很快乐。

  lua shell起初的设计意图，是想解决两个问题。
  第一是bash script太弱了。它的语法错误提示常常跟真实位置距离很远。
  眼睛瞪着屏幕，望眼欲穿，是很让人抓狂的。
  它也不只弱在这儿，还有别的地方，就不细说了。因为我发现有一些程序员对bash script适应的还挺好的。我对这样的人总是怀有一种敬意，但丝毫不羡慕。其实是智力上的性格不同。
  我现在的bash script的水平，是连一个if条件句都写不出来的。我就觉得它那个中括号好可怕呀。

  lua shell采用lua作为脚本语言。也没有经过什么选择，着手写它的时候，刚结束了半年lua程序员的的生涯，就是觉得lua合适，也就没考虑ruby和python。（其实也不会）
  现在看来，lua作为shell script似乎是最好的选择了。它没有过多的oop之类的语言成分，体积小巧，跟C贴合的又好。


  在写lua shell的过程中，逐渐知道bash的语法检查为什么那么弱了。它没办法。
  因为bash script其实是一门混合语言，它混合了命令行成分和if,else这样的语言成分。而用户写一句命令时是想怎么写就怎么写，bash该怎么区分一条语句是语言成分还是命令行？所以它经常报一些稀奇古怪的错误。而且离题万里。
  但这怪不到别人。是它自己的设计。

  
  设计lua shell的第二个原因，是我想把我心爱的vimsed发扬光大。vimsed也是我自己写的小程序，用来处理文本。
  它基本是这样工作的:
  假如现在有一个文件abc.txt，里面只有两行话
hello world
ni hao
  我们想删掉第二行的 hao　。用vimsed是这样的:
  vimsed -c "j^wdw" -f abc.txt
  使用vim的读者应该能看出来这个工具是怎么回事了。
  我自己是不愿意去学awk,sed，　而且我觉得vimsed这种处理方式更优秀。像是搭积木。

  原先这个vimsed的实现，我都是通过调用linux系统里的vim程序，让它在silent, ex模式下运行，缺点是整个过程很绕。
  现在我给lua shell手写了一个vim parser，大概两千行代码。作为C模块注册到lua的虚拟机里，调用起来就清爽多了。
    




